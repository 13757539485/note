{"config": {"lang": ["en"], "separator": "[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+", "pipeline": ["stemmer"]}, "docs": [{"location": "", "title": "Home", "text": ""}, {"location": "#_1", "title": "\u73af\u5883\u8981\u6c42", "text": "<p>\u5b89\u88c5python</p>"}, {"location": "#mkdocs", "title": "mkdocs\u5b98\u7f51", "text": "<p>https://www.mkdocs.org/user-guide/configuration/#build-directories</p>"}, {"location": "#mkdocs_1", "title": "\u5b89\u88c5mkdocs", "text": "<p>window\uff1a <pre><code>pip install mkdocs\n</code></pre> linux\uff1a <pre><code>sudo pip install mkdocs\n</code></pre></p>"}, {"location": "#_2", "title": "\u5347\u7ea7\u548c\u67e5\u770b\u7248\u672c", "text": "<pre><code>pip install --upgrade mkdocs\n\nmkdocs --version\n</code></pre>"}, {"location": "#_3", "title": "\u521b\u5efa\u9879\u76ee", "text": "<pre><code>mkdocs new xxx\n</code></pre>"}, {"location": "#_4", "title": "\u67e5\u770b\u9884\u89c8", "text": "<p><pre><code>cd xxx\nmkdocs serve\n</code></pre> \u5728http://127.0.0.1:8000\u8fdb\u884c\u67e5\u770b</p>"}, {"location": "#_5", "title": "\u751f\u6210\u7f51\u9875", "text": "<pre><code>mkdocs build\n</code></pre>"}, {"location": "#_6", "title": "\u53d1\u5e03", "text": "<ol> <li>github\u914d\u7f6e</li> </ol> <p>\u914d\u7f6egit\u57fa\u672c\u4fe1\u606f <pre><code>git config --global user.name \"yuli\" // \u968f\u610f\u586b\u5199\ngit config --global user.email \"1875287386@qq.com\" // \u548cgithub\u7ed1\u5b9a\u90ae\u7bb1\u4e00\u81f4\ngit config --global credential.helper store\n</code></pre> \u751f\u6210ssh\uff0c\u6267\u884c\u5e76\u4e00\u8def\u56de\u8f66 <pre><code>ssh-keygen -t rsa -C '1875287386@qq.com'\n</code></pre> \u5c06id_rsa.pub\u5185\u5bb9\u7c98\u8d34\u5230\u7f51\u7ad9\u4e2d https://github.com/settings/keys</p> <ol> <li>github\u521b\u5efa\u9879\u76ee\u540d\u4e3anote\uff0c\u4ed3\u5e93\u5fc5\u987b\u662fpublic\uff0c\u8fdb\u5165\u5230mkdocs\u521b\u5efa\u7684\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\uff0c\u6839\u636egithub\u4e0a\u63d0\u793a\u547d\u4ee4\u6267\u884c <pre><code>git init\ngit add .\ngit commit -m \"\u521d\u59cb\u5316mkdocs\u9879\u76ee\"\ngit remote add origin git@github.com:13757539485/note.git\ngit branch -M main // \u7528\u6765\u5b58\u653e\u6e90\u7801\u4f7f\u7528\ngit push -u origin main\n</code></pre></li> <li>\u6267\u884c\u4e00\u4e0b\u547d\u4ee4\uff0c\u5de5\u5177\u5c31\u4f1a\u81ea\u52a8\u5c06\u76f8\u5e94\u5185\u5bb9\u63a8\u9001\u5230\u9879\u76ee\u7684 gh-pages \u5206\u652f\u4e0a <pre><code>mkdocs gh-deploy // \u4f1a\u81ea\u52a8\u521b\u5efa\u5206\u652f\u540d\u4e3agh-deploy\u5e76\u5b58\u653e\u7f51\u9875\u6e90\u7801\n</code></pre></li> <li> <p>\u5728github\u9879\u76ee\u4e2d\u6309\u7167\u56fe\u4e2d\u914d\u7f6e\u5373\u53ef </p> </li> <li> <p>\u6d4f\u89c8https://username.github.io/project-name</p> </li> </ol> <p>https://13757539485.github.io/note</p> <ol> <li>\u5982\u679c\u7f51\u9875\u6ca1\u5237\u65b0\uff0c\u53ef\u4ee5\u624b\u52a8\u91cd\u65b0\u89e6\u53d1\u6784\u5efa\u53d1\u5e03</li> </ol> <p>https://github.com/13757539485/note/actions</p> <p>\u627e\u5230\u5931\u8d25\u7684job\u6216\u8005\u6700\u65b0\u7684</p> <p></p> <p>\u6253\u5f00\u540e\u91cd\u65b0\u89e6\u53d1</p> <p></p>"}, {"location": "#yaml", "title": "yaml\u76f8\u5173\u6ce8\u610f\u4e8b\u9879", "text": ""}, {"location": "#material", "title": "\u5b89\u88c5material\u4e3b\u9898", "text": "<p><pre><code>pip install mkdocs-material\n</code></pre> linux\u9700\u8981\u4f7f\u7528sudo</p>"}, {"location": "#_7", "title": "\u914d\u7f6e\u4e3b\u9898", "text": "<pre><code>theme: \n  name: material\n  language: zh\n  palette:\n    primary: 'Light Blue'\n    accent: 'Light Blue'\n  features:\n    - navigation.tabs\n  font:\n    text: Microsoft YaHei\n    code: Courier New\n</code></pre>"}, {"location": "#_8", "title": "\u7f51\u9875\u52a0\u5bc6\u63d2\u4ef6", "text": "<p><pre><code>sudo pip install mkdocs-encryptcontent-plugin\n</code></pre> \u5b98\u65b9\u6587\u6863</p> <p>\u5728mkdocs.yml\u4e2d\u914d\u7f6e\u63d2\u4ef6 <pre><code>plugins:\n  - encryptcontent:\n        password_file: 'xxx.yml'\n</code></pre> \u5176\u4e2dxxx.yml\u4f7f\u7528\u6765\u914d\u7f6e\u5404\u79cd\u5bc6\u7801\uff0c\u5982 <pre><code>classified: '000'\nconfidential:\n    - '111'\n    - '222'\nsecret:\n    user1: '333'\n    user2: '444'\n</code></pre> \u67d0\u4e2amd\u6587\u4ef6\u4e2d\u8c03\u7528</p> <ol> <li>classified <pre><code>---\nlevel: classified\n---\n</code></pre> \u5219\u6253\u5f00\u9875\u9762\u662f\u9700\u8981\u8f93\u5165classified\u5bf9\u5e94\u7684\u5bc6\u7801</li> <li>confidential <pre><code>---\nlevel: confidential\nuser: 0\n---\n</code></pre> \u5219\u6253\u5f00\u9875\u9762\u662f\u9700\u8981\u8f93\u5165\u7b2c\u4e00\u4e2a\u5bc6\u7801\u5373111</li> <li>secret <pre><code>---\nlevel: secret\nuser: user1\n---\n</code></pre> \u5219\u6253\u5f00\u9875\u9762\u662f\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bf9\u5e94\u5bc6\u7801</li> </ol>"}, {"location": "#_9", "title": "\u5176\u4ed6\u914d\u7f6e(\u53ef\u5ffd\u7565)", "text": "<p><pre><code>markdown_extensions:\n  - admonition\n  - codehilite:\n      guess_lang: false\n      linenums: false\n  - toc:\n      permalink: true\n  - footnotes\n  - meta\n  - def_list\n  - pymdownx.arithmatex\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.critic\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_generator: !!python/name:pymdownx.emoji.to_png\n      #emoji_generator: !!python/name:pymdownx.emoji.to_svg\n      #emoji_generator: !!python/name:pymdownx.emoji.to_png_sprite\n      #emoji_generator: !!python/name:pymdownx.emoji.to_svg_sprite\n      #emoji_generator: !!python/name:pymdownx.emoji.to_awesome\n      #emoji_generator: !!python/name:pymdownx.emoji.to_alt\n  - pymdownx.inlinehilite\n  - pymdownx.magiclink\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.superfences\n  - pymdownx.tasklist\n  - pymdownx.tilde\n\nextra:\n  search:\n    language: 'en,zh,jp'\n\nplugins:\n  - search\n</code></pre> \u4e3b\u9875\u9ed8\u8ba4\u4e3aindex.md</p> <p>\u66f4\u591a\u5b66\u4e60\uff1a</p> <p>https://zhuanlan.zhihu.com/p/613038183 https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/</p>"}, {"location": "excel/", "title": "Excel", "text": ""}, {"location": "excel/#_1", "title": "\u5e38\u7528\u7b26\u53f7", "text": "\u7b26\u53f7 \u4f5c\u7528 ~ \u8f6c\u4e49\u5b57\u7b26 ? \u901a\u914d\u7b26 * \u8868\u793a\u4e00\u4e2a\u6216\u4e00\u4e32\u5b57\u7b26 &lt;&gt; \u4e0d\u7b49\u4e8e $ \u8868\u793a\u7edd\u5bf9\u5f15\u7528\uff0c\u5982$A1\u5219A\u56fa\u5b9a1\u662f\u53ef\u53d8"}, {"location": "excel/#_2", "title": "\u51fd\u6570", "text": ""}, {"location": "excel/#if", "title": "if\u51fd\u6570", "text": "<ul> <li> <p>\u57fa\u672c\u4f7f\u7528 <pre><code>IF(\u6d4b\u8bd5\u6761\u4ef6, \"\u771f\",\"\u5047\")\n</code></pre> \u5982\uff1a=IF(B2=-1,\"\u4e0d\u663e\u793a\",B2))         \u5982\u679cB2\u7b49\u4e8e-1\uff0c\u5219\u5355\u5143\u683c\u663e\u793a\u5185\u5bb9\u4e3a\u201c\u4e0d\u663e\u793a\u201d\uff0c\u5426\u5219\u663e\u793aB2\u5177\u4f53\u5185\u5bb9</p> </li> <li> <p>\u5d4c\u5957\u4f7f\u7528</p> </li> </ul> <p>\u5982\uff1a=IF(B2=-1,\"\u4e0d\u663e\u793a\",IF(B2&gt;5,\"\u4e0d\u5408\u9002\",B2)) \u5982\u679cB2\u7b49\u4e8e-1\uff0c\u5219\u5355\u5143\u683c\u663e\u793a\u5185\u5bb9\u4e3a\u201c\u4e0d\u663e\u793a\u201d\uff0c\u5426\u5219\u518d\u5224\u65adB2\u662f\u5426\u5927\u4e8e5\uff0c\u5927\u4e8e\u5219\u663e\u793aB2\u5177\u4f53\u5185\u5bb9\uff0c\u5426\u5219\u5355\u5143\u683c\u663e\u793a\u5185\u5bb9\u4e3a\u201c\u4e0d\u5408\u9002\u201d</p> <ul> <li>\u591a\u4e2a\u6761\u4ef6\u540c\u65f6\u4f7f\u7528</li> </ul> <p>\u5982\uff1a=IF(B2=-1,\"-\",IF(AND(I3=\"\u5bf9\",L3=\"\u5bf9\"),\"\u4e2d\",\"\u4e0d\u4e2d\"))</p> <p>\u5982\u679cB2\u4e0d\u4e3a-1\uff0c\u5224\u65adI3\u548cL3\u662f\u5426\u540c\u65f6\u4e3a\u201c\u5bf9\u201d\uff0c\u663e\u793a\u4e0d\u540c\u7684\u7ed3\u679c \u7c7b\u4f3c\u7684=IF(B2=-1,\"-\",IF(OR(I3=\"\u5bf9\",L3=\"\u5bf9\"),\"\u4e2d\",\"\u4e0d\u4e2d\"))</p> <p>\u8fd9\u91ccI3\u548cL3\u53ea\u8981\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u5373\u4e3a\u771f AND\u53ef\u4ee5\u4f7f\u7528*\u4ee3\u66ff\uff0c=IF(B2=-1,\"-\",IF((I3=\"\u5bf9\")*(L3=\"\u5bf9\"),\"\u4e2d\",\"\u4e0d\u4e2d\"))</p> <p>OR\u53ef\u4ee5\u4f7f\u7528+\u4ee3\u66ff\uff0c=IF(B2=-1,\"-\",IF((I3=\"\u5bf9\")+(L3=\"\u5bf9\"),\"\u4e2d\",\"\u4e0d\u4e2d\"))</p>"}, {"location": "excel/#countif", "title": "COUNTIF\u51fd\u6570", "text": "<ul> <li> <p>\u57fa\u672c\u4f7f\u7528 <pre><code>COUNTIF(\u7edf\u8ba1\u8303\u56f4, \u6761\u4ef6)\n</code></pre> \u5982\uff1a=COUNTIF(B3:D3,H3) \u7edf\u8ba1B3\u5230D3\u533a\u57df\u91cc\u548cH3\u5185\u5bb9\u76f8\u540c\u7684\u6570\u91cf\uff0c\u663e\u793a\u5230\u5355\u5143\u683c\u4e2d</p> </li> <li> <p>\u548cIF\u5d4c\u5957\u4f7f\u7528</p> </li> </ul> <p>\u5982\uff1a=IF(B2=-1,\"\u65e0\u6548\",IF(COUNTIF(B3:D3,H3),\"\u9519\",\"\u5bf9\")) B2\u4e0d\u662f\u65e0\u6548\u65f6\uff0c\u7edf\u8ba1B3\u5230D3\u5b58\u5728\u591a\u5c11\u4e2aH3\u503c\uff0c\u5982\u679c\u4e3a0\u5219\u663e\u793a\u5bf9\uff0c\u5426\u5219\u663e\u793a\u9519</p> <ul> <li>\u5176\u4ed6\u4f7f\u7528</li> </ul> <p>=COUNTIF(E2:E12,\"&gt;=90\")\u00a0\uff0c\"&gt;=90\" \u4e5f\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\"&gt;=\"&amp;90</p> <p>=COUNTIF(B2:B12,\"\u7c89\u7ea2*\")</p> <p>=COUNTIF(F2:F12,\"&gt;\"&amp;AVERAGE(F2:F12))</p> <ul> <li>\u6570\u7ec4\u7ec4\u5408\u591a\u91cd\u6761\u4ef6</li> </ul> <p>\u5982\u7edf\u8ba1&gt;=350\u4ee5\u53ca&lt;=750\u7684\u8ba1\u6570\u548c =SUM(COUNTIF(F2:F12,{\"&gt;=350\",\"&gt;750\"})*{1,-1})</p> <p>\u5982\u679c\u6761\u4ef6\u586b\u5199&lt;=750\u4f1a\u628a&lt;350\u7684\u4e5f\u7edf\u8ba1\u8fdb\u6765 \u5982\u679c\u4e0d\u548c(*)\u4e0a{1,-1}\uff0c\u9ed8\u8ba4\u7ed3\u679c\u662f\u5c06\u4e24\u4e2a\u6761\u4ef6\u7ed3\u679c\u76f8\u52a0\uff0c\u7406\u60f3\u7ed3\u679c\u662f\u76f8\u51cf\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u540e\u9762\u7684\u7ed3\u679c\u53d8\u6210\u8d1f\u6570 \u6216\u8005\u76f4\u63a5\u6539\u6210=COUNTIF(F2:F12,\"&gt;350\"\uff09- COUNTIF(F2:F12,\"&gt;750\"\uff09</p>"}, {"location": "excel/#mod", "title": "MOD\u51fd\u6570", "text": "<p><pre><code>MOD(\u6570\u503c,\u9664\u6570)\n</code></pre> \u5982\uff1a=MOD(1000,10)        \u7ed3\u679c\u662f0\uff0c\u9664\u6570\u662f10\u5219\u4fdd\u7559\u4e2a\u4f4d\uff0c\u76f8\u5f53\u4e8e\u9664\u4f59\u64cd\u4f5c</p>"}, {"location": "excel/#rows", "title": "ROWS\u51fd\u6570", "text": "<p><pre><code>ROWS(\u6570\u7ec4)\n</code></pre> \u5982\uff1a=ROWS(I3:I13) \u7ed3\u679c\u662f11\uff0c\u8fd4\u56de\u7684\u662f\u533a\u57df\u7684\u603b\u884c\u6570</p>"}, {"location": "excel/#choose", "title": "CHOOSE\u51fd\u6570", "text": ""}, {"location": "excel/#vlookup", "title": "VLOOKUP\u51fd\u6570", "text": ""}, {"location": "excel/#match", "title": "MATCH\u51fd\u6570", "text": ""}, {"location": "excel/#lookup", "title": "LOOKUP\u51fd\u6570", "text": "<pre><code>\u4e09\u4e2a\u53c2\u6570(keys1, keys2, values)\nkeys1:\u8868\u793a\u8981\u67e5\u627e\u7684key\uff0c\u53ef\u4ee5\u662f\u591a\u4e2a\nkeys2:\u8868\u793a\u5b9a\u4e49\u597d\u7684\u96c6\u5408\u4e2d\u7684key\nvalues:\u8868\u793a\u96c6\u5408\u4e2d\u7684key\u5bf9\u5e94\u7684value\n</code></pre>"}, {"location": "excel/#searchfind", "title": "SEARCH\u548cFIND\u51fd\u6570", "text": "<p>\u4e24\u4e2a\u53c2\u6570(\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\uff0c\u88ab\u67e5\u627e\u7684\u5b57\u7b26\u4e32\uff0c\u5f00\u59cb\u4f4d\u7f6e) \u5176\u4e2d\u5f00\u59cb\u4f4d\u7f6e\u53ef\u4ee5\u4e0d\u586b\uff0c\u9ed8\u8ba4\u4ece\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb *search\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0cfind\u533a\u5206\u5927\u5c0f\u5199\uff0c\u90fd\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u4f4d\u7f6e</p>"}, {"location": "excel/#iferror", "title": "IFERROR\u51fd\u6570", "text": "<p>\u4e24\u4e2a\u53c2\u6570(\u503c\uff0c\u9519\u8bef\u503c) \u53ef\u4ee5\u914d\u5408search\u51fd\u6570\uff0csearch\u51fd\u6570\u5982\u679c\u627e\u4e0d\u5230\u4f1a\u8fd4\u56de\u9519\u8bef\u503c(#VALUE!)\uff0cIFERROR\u51fd\u6570\u53ef\u4ee5\u5c06\u9519\u8bef\u503c\u91cd\u65b0\u8bbe\u7f6e\u6210\u81ea\u5df1\u60f3\u8981\u7684\u503c IFERROR(\u9519\u8bef\u503c\uff0c\u81ea\u884c\u6307\u5b9a\u503c)</p>"}, {"location": "excel/#_3", "title": "\u6848\u4f8b", "text": "<ul> <li>\u7edf\u8ba1\u6700\u5927\u8fde\u7eed\u51fa\u73b0\"A\"\u7684\u6b21\u6570 <pre><code>MAX(FREQUENCY(IF($V2:$V1441=\"A\",ROW(V2:V1441)),IF($V2:$V1441=\"B\",ROW(V2:V1441))))\n</code></pre></li> <li> <p>\u7edf\u8ba1\u8fde\u7eed\u51fa\u73b0(1,2,3,...,N)\u6b21\u7684\u6b21\u6570 <pre><code>SUM(N(FREQUENCY(IF($O1:$O1419=\"A\",ROW(O1:O1419)),IF($O1:$O1419=\"B\",ROW(O1:O1419)))=COLUMN(A1)))\n</code></pre> COLUMN(A1)\u7528\u6765\u786e\u5b9aN\u7684\u503c\uff0cA1\u5373\u51fa\u73b0\u8fde\u7eed1\u6b21\u7684A\u7684\u6b21\u6570 \u4ee5\u4e0a\u90fd\u9700\u8981shift+ctrl+\u56de\u8f66</p> </li> <li> <p>\u81ea\u52a8\u52a00\u516c\u5f0f\uff1a <pre><code>IF(B2&lt;10,\"0000\"&amp;B2,IF(B2&lt;100,\"000\"&amp;B2,\nIF(B2&lt;1000,\"00\"&amp;B2,IF(B2&lt;10000,\"0\"&amp;B2,B2))))\n</code></pre></p> </li> <li>\u5982\u56fe\u6548\u679c</li> </ul> <p> <pre><code>\u5904\u7406\u7b2c\u4e00\u4e2a\u7a7a\u7684\u4f4d\u7f6e(A1)\uff1a=IF(A1=\"\u7a7a\",1,0)\n\u540e\u9762\u7684\u76f4\u63a5=IF(A2=\"\u7a7a\",B1+1,IF(A2=0,0,\"--\"))\n</code></pre> * \u628a\u5185\u5bb915894\u5206\u5272 <pre><code>=MID($A1,COLUMN(B1)-1,1)\n</code></pre> MID(\u5206\u5272\u7684\u5185\u5bb9\uff0c\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5206\u5272\u4e2a\u6570) \u5982\u679c\u5185\u5bb9\u5b58\u5728\u7279\u70b9\u7b26\u53f7\u598245122-4578\uff0c\u53ef\u4ee5\u4f7f\u7528\u5de5\u5177\u5206\u5272 \u9009\u62e9\u9700\u8981\u5206\u5272\u7684\u533a\u57df\uff0c\u6570\u636e--\u5206\u5217--\u5206\u5272\u7b26\u53f7(\u6216\u8005\u56fa\u5b9a\u5bbd\u5ea6)--\u9009\u62e9\u7b26\u53f7(\u6807\u8bb0\u5206\u5272\u7ebf)--\u5b8c\u6210</p>"}, {"location": "git_github/", "title": "git\u90e8\u7f72", "text": ""}, {"location": "git_github/#git", "title": "git\u5b89\u88c5", "text": "<p>window:</p> <p>https://gitforwindows.org/</p> <p>linux/mac: <pre><code>sudo apt install git\nbrew install git\n</code></pre></p>"}, {"location": "git_github/#_1", "title": "\u914d\u7f6e\u7528\u6237\u4fe1\u606f", "text": "<pre><code>git config --global user.name \"xxx\"\ngit config --global user.email \"xxx\"\n</code></pre>"}, {"location": "git_github/#_2", "title": "\u521b\u5efa\u4ee3\u7801\u4ed3\u5e93", "text": "<pre><code>git init\n</code></pre>"}, {"location": "git_github/#_3", "title": "\u63d0\u4ea4\u4ee3\u7801", "text": "<pre><code>git add xxx\ngit commit -m \"xxx\"\n</code></pre>"}, {"location": "git_github/#_4", "title": "\u5206\u652f\u5904\u7406", "text": "<p><pre><code>git branch\u67e5\u770b\u672c\u5730\u6240\u6709\u5206\u652f\ngit branch -a\u67e5\u770b\u8fdc\u7a0b\u6240\u6709\u5206\u652f\ngit branch -D xxx \u5220\u9664\u67d0\u4e2a\u5206\u652f\ngit checkout xxx\u5207\u6362\u5230\u67d0\u4e2a\u5206\u652f\ngit branch xxx\u65b0\u5efaxxx\u672c\u5730\u5206\u652f\n</code></pre> \u5408\u5e76\u4fee\u6539\u5230\u4e3b\u5206\u652f\uff1a <pre><code>git checkout \u4e3b\u5206\u652f\ngit merge \u672c\u5730\u5206\u652f\n</code></pre> \u89e3\u51b3\u51b2\u7a81</p>"}, {"location": "git_github/#github", "title": "\u63d0\u4ea4\u4ee3\u7801\u5230github", "text": "<p>1)github\u4e0a\u65b0\u5efa\u9879\u76ee(New repository)</p> <p> 2)\u672c\u5730\u751f\u6210SSH</p> <p>\u9002\u5f53\u4f4d\u7f6e\u4e0b\u6267\u884c\uff1a <pre><code>git init\n</code></pre> \u7136\u540e\u6267\u884c\uff1a <pre><code>ssh-keygen -t rsa -C \"\u90ae\u7bb1\"\n</code></pre> \u5bc6\u7801\u53ef\u4e0d\u586b\u76f4\u63a5\u56de\u8f66</p> <p>\u751f\u6210\u5b8c\u6bd5\u540e\u5230\u751f\u6210\u76ee\u5f55(C:\\Users\\window.ssh)\u590d\u5236id_rsa.pub\u91cc\u7684\u5185\u5bb9\u5230github\u4e0a</p> <p>\u4f4d\u7f6e\uff1aSettings--SSH and GPG keys</p> <p> \u6dfb\u52a0\u65b0\u7684key(New SSH key)</p> <p>3)\u6dfb\u52a0\u8fdc\u7a0b\u5730\u5740</p> <p></p> <p>git remote add origin git@github.com:13757539485/AndroidForAll.git</p> <p>4)\u63d0\u4ea4\u672c\u5730\u4ee3\u7801</p> <p>Android Studio\u65b0\u5efa\u9879\u76ee <pre><code>git branch -a\n\n\u590d\u5236\u8fdc\u7a0b\u5206\u652f remotes/origin/master\n\ngit reset --mixed remotes/origin/master\n\ngit add .\n\ngit commit -m \"project init\"\n\ngit push  (remotes/origin/master master)\n</code></pre> 5)\u521b\u5efa\u8fdc\u7a0b\u5206\u652f <pre><code>git checkout -b xxx\n\ngit push origin xxx:xxx\n</code></pre> 6)\u5220\u9664\u8fdc\u7a0b\u5206\u652f <pre><code>git push origin --delete xxx\n</code></pre></p>"}, {"location": "git_github/#_5", "title": "\u5176\u4ed6\u547d\u4ee4", "text": "<pre><code>git fetch\n\ngit diff --cached\n\ngit format-patch\u6253\u8865\u4e01\n\ngit tag\n\ngit config --global commit.template  [\u6a21\u677f\u6587\u4ef6\u540d]\n\ngit config --global core.editor  [\u7f16\u8f91\u5668\u540d\u5b57] \u5982C:/windows/notepad.exe\n</code></pre>"}, {"location": "git_github/#_6", "title": "\u67e5\u770b\u914d\u7f6e\u4fe1\u606f", "text": "<p>\u67e5\u770b\u7cfb\u7edfconfig <pre><code>git config --system --list\uff08\u4e00\u822c\u6ca1\u6709\uff09\n</code></pre> \u67e5\u770b\u5f53\u524d\u7528\u6237\uff08global\uff09\u914d\u7f6e\uff0c\u76f8\u5f53\u4e8e\u5168\u5c40 <pre><code>git config --global --list\n</code></pre> \u67e5\u770b\u5f53\u524d\u4ed3\u5e93\u914d\u7f6e\u4fe1\u606f\uff0c\u76f8\u5f53\u4e8e\u4f5c\u7528\u4e8e\u8fd9\u4e2a\u4ed3\u5e93 <pre><code>git config --local --list\n</code></pre></p>"}, {"location": "git_github/#_7", "title": "\u914d\u7f6e\u522b\u540d", "text": "<p>\u5982\u8bbe\u7f6estatus\u7b80\u5199st <pre><code>git config --global alias.st status\ngit config --global alias.ch checkout\ngit config --global alias.co commit\ngit config --global alias.br branch\ngit config --global alias.sh stash\n\ngit config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit\"\n\ngit config --global alias.last 'log -1'\n</code></pre> \u6216\u8005\u76f4\u63a5\u5728\u914d\u7f6e\u6587\u4ef6\u91cc\u6dfb\u52a0\uff0c~/.gitconfig</p> <p>[user]</p> <p>email = 1875287386@qq.com</p> <p>name = yuli [core]</p> <p>editor = vi [commit]</p> <p>template = /home/yuli/CommitTemplate [color]</p> <p>ui = auto [alias]</p> <p>last = log -1</p> <p>lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit</p> <p>ch = checkout</p> <p>co = commit</p> <p>br = branch</p> <p>st = status</p> <p>Window\u4e0agit diff\u51fa\u73b0^M\u95ee\u9898 <pre><code>git config --global core.autocrlf true\n</code></pre> git tag\u4f7f\u7528 <pre><code>git tag -l\u67e5\u770b\u6240\u6709tag\n</code></pre> \u521b\u5efatag\uff1a <pre><code>git tag tagName \u6216\u8005\n\ngit tag -a tagName -m \"\u5907\u6ce8\u4fe1\u606f\"\n</code></pre> \u63d0\u4ea4tag\uff1a <pre><code>git push origin tagName\n</code></pre> \u5220\u9664tag <pre><code>git tag -d tagName\n</code></pre> \u7279\u5b9acommit\u6dfb\u52a0tag <pre><code>git tag tagName  commit_id\n</code></pre> \u6307\u5b9atag\u4e0a\u4fee\u6539\u4ee3\u7801\uff1a <pre><code>git checkout -b branch_name tagName\n</code></pre> \u4fee\u6539\u540e\u63d0\u4ea4 <pre><code>git push --set-upstream origin branch_name\n</code></pre></p>"}, {"location": "git_github/#repo", "title": "\u6e05\u7406repo\u7f13\u5b58", "text": "<pre><code>repo forall -c \"git gc\"\nrm -rf .repo/objects/*\nrm -rf .repo/logs/*\nrm -rf .repo/cache/*\nrepo sync --no-repo-verify -c\n</code></pre>"}, {"location": "git_github/#aosp", "title": "aosp\u67e5\u770b\u5206\u652f", "text": "<pre><code>git --git-dir=.repo/manifests/.git/ branch -av\n</code></pre>"}, {"location": "git_github/#aosp_1", "title": "aosp\u6e05\u7406\u4fee\u6539", "text": "<pre><code>repo forall -c 'git stash' # \u5148\u6682\u5b58\u6240\u6709\u66f4\u6539\uff08\u5982\u679c\u6709\uff09\nrepo forall -c 'git checkout .'\nrepo forall -c 'git clean -fdx' # \u6e05\u7406\u672a\u8ddf\u8e2a\u6587\u4ef6\u548c\u76ee\u5f55\nrepo forall -c 'git reset --hard HEAD' # \u786c\u91cd\u7f6e\u6240\u6709\u6a21\u5757\u5230HEAD\nrepo forall -c 'git stash drop' # \u5220\u9664\u6682\u5b58\u533a\u7684\u6539\u52a8\uff08\u5982\u679c\u524d\u9762\u6267\u884c\u4e86stash\n</code></pre> <p>git push origin HEAD:refs/for/master</p>"}, {"location": "git_github/#_8", "title": "\u914d\u7f6e\u591a\u4e2a\u8fdc\u7a0b\u4ed3\u5e93", "text": "<p>\u521b\u5efaconfig\u6587\u4ef6\uff0c\u8def\u5f84</p> <p>window\uff1ac\u76d8/\u7528\u6237/\u7528\u6237\u540d/.ssh/config</p> <p>linux: ~/.ssh/config</p> <p>\u5199\u5165\u5185\u5bb9 <pre><code>Host github\nHostName github.com\nIdentityFile ~/.ssh/github_rsa\nUser 13757539485\nHost gitlab\nHostName gitlab-rd0.maezia.com\nIdentityFile ~/.ssh/id_rsa\nUser li.yu1\n</code></pre> \u9879\u76ee\u914d\u7f6euser\u4fe1\u606f\u65f6\u4f7f\u7528git config --local user.name/user.email</p>"}, {"location": "gpt/", "title": "gpt\u90e8\u7f72", "text": ""}, {"location": "gpt/#gpt", "title": "\u5e38\u7528gpt", "text": "<p>deepseek\uff1ahttps://chat.deepseek.com/coder</p> <p>chatgpt\uff1ahttps://chatgpt.com/</p> <p>gemini\uff1ahttps://gemini.google.com/app</p>"}, {"location": "gpt/#deepseek", "title": "\u672c\u5730\u90e8\u7f72deepseek", "text": ""}, {"location": "gpt/#ollama", "title": "\u5b89\u88c5ollama", "text": "<p>https://ollama.com/</p> <p>\u4e0b\u8f7d\u5bf9\u5e94\u5e73\u53f0\u5b89\u88c5\u5373\u53ef\uff0c\u5bf9\u4e8elinux\u4e0b\u8f7d\u7684deb\u4f7f\u7528sudo dpkg -i xxx.deb\u8fdb\u884c\u5b89\u88c5</p> <p>\u9009\u62e9\u6a21\u578b\uff0c\u70b9Models\uff0c\u9009\u62e9deepseek-r1\uff0c\u9009\u62e91.5b\uff0c7b\uff0c8b\u7b49</p> <p></p> <p>\u7ec8\u7aef\u6267\u884c\u547d\u4ee4\u5982\u9009\u62e98b <pre><code>ollama run deepseek-r1:8b\n</code></pre></p>"}, {"location": "gpt/#_1", "title": "\u56fe\u5f62\u5316\u754c\u9762", "text": "<p>1.chatbox</p> <p>https://github.com/Bin-Huang/chatbox/releases</p> <p>\u914d\u7f6e\u6a21\u578b\uff1a\u8bbe\u7f6e-\u6a21\u578b</p> <p>\u6a21\u578b\u63d0\u4f9b\u65b9\u9009\u62e9ollama api</p> <p>\u6a21\u578b\u9009\u62e9\uff1adeepseek-r1:8b</p> <p>2.cherry studio</p> <p>https://cherry-ai.com/download</p> <p>\u9700\u8981\u89e3\u538b\u624d\u80fd\u6267\u884c\uff0c\u53f3\u952e-\u5c5e\u6027-\u4f5c\u4e3a\u7a0b\u5e8f\u6267\u884c\u5f00\u542f <pre><code>./Cherry-Studio-0.9.19-x86_64.AppImage --appimage-extract\n</code></pre></p> <p>\u8fd0\u884cAppRun</p> <p>ollama pull bge-m3</p> <p>3.AnythingLLM</p> <p>https://github.com/infiniflow/ragflow</p> <p>sudo vi /etc/docker/daemon.json</p> <p>{     \"registry-mirrors\": [         \"https://docker.1panel.live\",         \"https://hub.rat.dev\"     ] }</p> <p>systemctl daemon-reload</p> <p>systemctl restart docker</p>"}, {"location": "markdown/", "title": "Markdown", "text": ""}, {"location": "markdown/#_1", "title": "\u4ee3\u7801\u5feb", "text": "<p>```java/kotlin/xml\u7b49</p> <p>//\u4ee3\u7801</p> <p>```</p>"}, {"location": "markdown/#_2", "title": "\u6587\u5b57\u989c\u8272", "text": "<p>&lt;font color=\"#dd0000\"&gt;\u6587\u5b57\u989c\u8272&lt;/font&gt;</p>"}, {"location": "markdown/#_3", "title": "\u6807\u9898", "text": "<p># \u4e00\u7ea7</p> <p>## \u4e8c\u7ea7</p>"}, {"location": "markdown/#_4", "title": "\u5b57\u4f53", "text": "<p>*\u659c\u4f53*</p> <p>_\u659c\u4f53_</p> <p>**\u52a0\u7c97**</p> <p>***\u503e\u659c\u52a0\u7c97***</p> <p>~~\u4e0b\u5212\u7ebf~~</p>"}, {"location": "markdown/#_5", "title": "\u56fe\u7247/\u8fde\u63a5/\u8df3\u8f6c", "text": "<p>![\u56fe\u7247](/\u77ed\u89c6\u9891\u5c01\u9762/083.jpg)</p> <p>[\u94fe\u63a5](\u7f51\u5740) </p> <p>\u7eaf\u82f1\u6587\u6807\u9898\u8df3\u8f6c\uff1a [\u6587\u5b57](\u6587\u4ef6\u8def\u5f84/#title)</p> <p>\u542b\u4e2d\u6587\u6807\u9898\u8df3\u8f6c\uff1a</p> <p>\u5148\u5728\u8981\u8df3\u8f6c\u7684\u6807\u9898\u6dfb\u52a0a\u6807\u7b7e\uff0c\u5982\"##### &lt;a id=\"title\"&gt;\u6807\u9898&lt;/a&gt;\"</p> <p>\u7136\u540e\u8c03\u7528\uff1a [\u6587\u5b57](\u6587\u4ef6\u8def\u5f84/#title)</p>"}, {"location": "other/", "title": "\u5176\u4ed6\u8bb0\u5f55", "text": "<p>csdn\u4e0b\u8f7d\u5de5\u5177</p> <p>http://toolman.ddnsfree.com:9192/#/main/csdnPaper</p> <p>3281770\u90ae\u7bb1  sese1234 hfc1234</p>"}, {"location": "python/", "title": "\u5b89\u88c5", "text": "<p>\u8fdb\u5165\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef</p>"}, {"location": "python/#_2", "title": "\u73af\u5883\u53d8\u91cf", "text": ""}, {"location": "python/#windows", "title": "windows", "text": "<ol> <li>\u65b0\u5efapython_home\uff0c\u6dfb\u52a0\u5b89\u88c5\u8def\u5f84\uff0c\u5982\u56fe</li> </ol> <ol> <li>path\u4e2d\u6dfb\u52a0\u53d8\u91cf\uff0c\u5982\u56fe</li> </ol> <ol> <li>\u67e5\u770bpython\u7248\u672c\uff0c\u68c0\u6d4b\u73af\u5883\u662f\u5426\u6b63\u5e38</li> </ol> <pre><code>python -V\n</code></pre> <ol> <li>\u67e5\u770bpip\u7248\u672c</li> </ol> <pre><code>pip -V\n</code></pre>"}, {"location": "python/#linux", "title": "linux", "text": "<p>python\u4e00\u822c\u9ed8\u8ba4\u81ea\u5e26\uff0c\u751f\u6210\u4e00\u4e0b\u8f6f\u94fe\u63a5\u5373\u53ef <pre><code>sudo ln -s /usr/bin/python3.10 /usr/bin/python\n</code></pre> - \u5176\u4e2d/usr/bin/python3.10\u53ef\u901a\u8fc7which python3\u6309Tab\u952e\u67e5\u770b</p> <p>\u5b89\u88c5pip <pre><code>sudo apt install pip\n</code></pre></p>"}, {"location": "android/android_build_apk/", "title": "Apk\u76f8\u5173", "text": ""}, {"location": "android/android_build_apk/#_1", "title": "\u591a\u6e20\u9053\u6253\u5305", "text": ""}, {"location": "android/android_build_apk/#_2", "title": "\u4ec0\u4e48\u662f\u591a\u6e20\u9053\u5305\uff1f", "text": "<p>\u6e20\u9053\u5305\u5c31\u662f\u8981\u5728\u5b89\u88c5\u5305\u4e2d\u6dfb\u52a0\u6e20\u9053\u4fe1\u606f\uff0c\u4e5f\u5c31\u662fchannel\uff0c\u5bf9\u5e94\u4e0d\u540c\u7684\u6e20\u9053\uff0c\u4f8b\u5982\uff1a\u5c0f\u7c73\u5e02\u573a\u3001ov\u5e02\u573a\u3001\u5e94\u7528\u5b9d\u5e02\u573a\u7b49</p>"}, {"location": "android/android_build_apk/#_3", "title": "\u4e3a\u4ec0\u4e48\u8981\u63d0\u4f9b\u591a\u6e20\u9053\u5305\uff1f", "text": "<p>\u5728\u5b89\u88c5\u5305\u4e2d\u6dfb\u52a0\u4e0d\u540c\u7684\u6807\u8bc6\uff0c\u5e94\u7528\u5728\u8bf7\u6c42\u7f51\u7edc\u7684\u65f6\u5019\u643a\u5e26\u6e20\u9053\u4fe1\u606f\uff0c\u65b9\u4fbf\u540e\u53f0\u505a\u8fd0\u8425\u7edf\u8ba1</p>"}, {"location": "android/android_build_apk/#360", "title": "360\u6253\u5305", "text": ""}, {"location": "android/android_build_apk/#1", "title": "1.\u539f\u7406", "text": "<p>apk\u6587\u4ef6\u672c\u8d28\u5c31\u662fzip\u6587\u4ef6,\u5229\u7528zip\u6587\u4ef6\u201c\u53ef\u4ee5\u6dfb\u52a0comment\uff08\u6458\u8981\uff09\u201d\u7684\u6570\u636e\u7ed3\u6784\u7279\u70b9\uff0c\u5728\u6587\u4ef6\u7684\u672b\u5c3e\u5199\u5165\u4efb\u610f\u6570\u636e\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u89e3\u538bzip\u6587\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6e20\u9053\u4fe1\u606f\u5199\u5165\u6458\u8981\u533a</p>"}, {"location": "android/android_build_apk/#2", "title": "2.\u65b9\u6cd5", "text": "<p>https://jiagu.360.cn/#/global/download</p>"}, {"location": "android/android_build_apk/#3", "title": "3.\u4f18\u7f3a\u70b9", "text": "<p>\u4f18\u70b9: 1\u30015M\u7684apk\uff0c1\u79d2\u79cd\u80fd\u6253300\u4e2a 2\u3001\u5728\u4e0b\u8f7dapk\u7684\u540c\u65f6\uff0c\u670d\u52a1\u7aef\u53ef\u4ee5\u5199\u5165\u4e00\u4e9b\u4fe1\u606f\uff0c\u4f8b\u5982\u9080\u8bf7\u7801\uff0c\u5206\u4eab\u4fe1\u606f\u7b49 \u7f3a\u70b9: \u6e20\u9053\u4fe1\u606f\u4e5f\u662f\u5f88\u5bb9\u6613\u4fee\u6539\uff0c\u867d\u7136\u53ef\u4ee5\u52a0\u5bc6\uff0c\u53ea\u662f\u63d0\u9ad8\u4e86\u4fee\u6539\u7684\u95e8\u69db</p>"}, {"location": "android/android_build_apk/#_4", "title": "\u53cb\u76df\u6253\u5305", "text": ""}, {"location": "android/android_build_apk/#1_1", "title": "1.\u539f\u7406", "text": "<p>\u4e00\u822c\u6765\u8bb2\uff0c\u8fd9\u4e2a\u6e20\u9053\u7684\u6807\u8bc6\u4f1a\u653e\u5728AndroidManifest.xml\u7684Application\u7684\u4e00\u4e2aMetadata\u4e2d\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u5728java\u4e2d\u901a\u8fc7API\u83b7\u53d6\u5bf9\u5e94\u7684\u6570\u636e\u4e86\u3002</p>"}, {"location": "android/android_build_apk/#2_1", "title": "2.\u65b9\u6cd5", "text": "<p>\u7b2c\u4e00\u79cd\uff1a\u53cb\u76df\u5c31\u63d0\u4f9b\u4e86\u591a\u6e20\u9053\u6253\u5305\u7684\u65b9\u5f0f\uff0c\u53ef\u7528\u4e8e\u6e20\u9053\u7edf\u8ba1\u7b49\u3002 \u73b0\u5728Android\u7684\u6784\u5efa\u5de5\u5177\u6362\u6210\u4e86gradle\uff0c\u901a\u8fc7gradle\uff0c\u7b80\u5355\u914d\u7f6e\u540e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u81ea\u52a8\u6253\u6240\u6709\u6e20\u9053\u5305\u3002 1.\u6309\u7167umeng\u7684\u8981\u6c42\uff0cmanifest\u6587\u4ef6\u4e2d\u9700\u8981\u6709 <pre><code>&lt;meta-data\n\u00a0android:name=\"UMENG_CHANNEL\"\n\u00a0android:value=\"${UMENG_CHANNEL_VALUE}\" /&gt;\n</code></pre> \u8fd9\u6bb5\u914d\u7f6e\uff0cvalue\u90a3\u91cc\u5c31\u662fwandoujia\uff0c360\u4e4b\u7c7b\u7684\u6e20\u9053\u540d\u79f0\uff0c\u4f46\u662f\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u4f1a\u53bb\u5199\u6e20\u9053\u540d\uff0c\u5199\u7684\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u540e\u9762gradle\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u52a8\u6001\u7684\u66ff\u6362\u6389\u5b83\u3002 2\uff0c\u5728module\uff08\u4e00\u822c\u4e5f\u5c31\u662fapp\uff09\u7684build.gradle\u7684android{}\u4e2d\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a <pre><code>productFlavors{\n\u00a0 wandoujia{}\n\u00a0 xiaomi{}\n\u00a0}\n\u00a0productFlavors.all { flavor -&gt;\n\u00a0 flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]\n\u00a0}\n</code></pre></p> <p>\u91cd\u547d\u540dapk <pre><code>applicationVariants.all { variant -&gt;    //\u6279\u91cf\u4fee\u6539Apk\u540d\u5b57\n        variant.outputs.all { output -&gt;\n            if (!variant.buildType.isDebuggable()) {\n                def sourceFile = \".apk\"\n                def replaceFile = \"-${variant.versionName}_${releaseTime()}.apk\"\n                outputFileName = output.outputFile.name.replace(sourceFile, replaceFile)\n            }\n        }\n    }\ndef releaseTime() {\n    return new Date().format(\"yyyy-MM-dd\", TimeZone.getTimeZone(\"UTC\"))\n}\n</code></pre></p> <p>4.\u83b7\u53d6\u6e20\u9053 \u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6mate-data\u4fe1\u606f\u6765\u83b7\u53d6\u6e20\u9053\uff0c\u7136\u540e\u6dfb\u52a0\u5230\u8bf7\u6c42\u53c2\u6570\u4e2d\uff0c\u83b7\u53d6\u65b9\u6cd5\u5982\u4e0b\uff1a <pre><code>private String getChannel() {\n\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 PackageManager pm = getPackageManager();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ApplicationInfo appInfo = pm.getApplicationInfo(getPackageName(), PackageManager.GET_META_DATA);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return appInfo.metaData.getString(\"UMENG_CHANNEL\");\n\u00a0\u00a0 } catch (PackageManager.NameNotFoundException ignored) {\n\u00a0\u00a0 }\n\u00a0\u00a0 return \"\";\n}\n</code></pre> 5.\u6267\u884c\u7b7e\u540d\u6253\u5305\uff1a \u8fd9\u65f6\u5019\u4f60\u53bbapp/build/outputs/apk\u4e2d\u5c31\u80fd\u770b\u5230\u81ea\u52a8\u6253\u597d\u7684\u6e20\u9053\u5305\u4e86</p>"}, {"location": "android/android_build_apk/#3_1", "title": "3.\u4f18\u7f3a\u70b9", "text": "<p>\u6253\u5305\u65b9\u5f0f\u6548\u7387\u6bd4\u8f83\u4f4e\u4e0b</p>"}, {"location": "android/android_compose/", "title": "Compose", "text": ""}, {"location": "android/android_compose/#_1", "title": "\u51fd\u6570\u4fee\u9970\u7b26", "text": "<p>\u51fd\u6570\u4fee\u9970\u7b26\u4ecb\u7ecd</p>"}, {"location": "android/android_compose/#_2", "title": "\u7ec4\u4ef6", "text": "<p>\u521b\u5efa\u7ec4\u4ef6\u6a21\u677f </p> <pre><code>#if (${PACKAGE_NAME} &amp;&amp; ${PACKAGE_NAME} != \"\")package ${PACKAGE_NAME}#end\n\n#parse(\"File Header.java\")\n\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.tooling.preview.Preview\n\n#if (${Function_Name} == \"\" )\n@Composable\nfun ${NAME}() {\n}@Preview\n@Composable\nfun ${NAME}Preview() {${NAME}()\n}\n#end#if (${Function_Name} != \"\" )\n@Composable\nfun ${Function_Name}() {\n}@Preview\n@Composable\nfun ${Function_Name}Preview() {${Function_Name}()\n}\n#end\n</code></pre> <p>\u7ec4\u4ef6\u5bf9\u6bd4</p> Android Compose Button Button TextView Text EditText TextField ImageView Image LinearLayout(h) Row LinearLayout(v) Column FrameLayout Box RecyclerView(v) LazyColumn RecyclerView(h) LazyRow Snackbar Snackbar"}, {"location": "android/android_compose/#modifier", "title": "Modifier\u4fee\u9970\u7b26", "text": ""}, {"location": "android/android_compose/#slots-api", "title": "Slots API", "text": "<p>CompositionLocalProvider Scaffold</p>"}, {"location": "android/android_compose/#_3", "title": "\u4f18\u5316", "text": "<p>Laziness\u4f18\u5316</p>"}, {"location": "android/android_dev_mode/", "title": "\u5f00\u53d1\u6a21\u5f0f", "text": ""}, {"location": "android/android_dev_mode/#mvc", "title": "MVC", "text": "<p>\u5728\u5b89\u5353\u5f00\u53d1\u4e2d\uff0cMVC\uff08Model-View-Controller\uff09\u662f\u4e00\u79cd\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u7528\u4e8e\u7ec4\u7ec7\u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u6784\u548c\u903b\u8f91\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b89\u5353\u4e2d\u7684MVC\u6a21\u5f0f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ee5\u4e0b\u5bf9\u5e94\u5173\u7cfb\uff1a</p> <ol> <li> <p>Model\uff08\u6a21\u578b\uff09\uff1a\u6a21\u578b\u662f\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u548c\u4e1a\u52a1\u903b\u8f91\u3002\u5728\u5b89\u5353\u4e2d\uff0c\u6a21\u578b\u901a\u5e38\u662f\u6307\u6570\u636e\u7684\u6765\u6e90\u548c\u5904\u7406\uff0c\u4f8b\u5982\u4ece\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u6570\u636e\u3001\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u548c\u66f4\u65b0\u7b49\u3002</p> </li> <li> <p>View\uff08\u89c6\u56fe\uff09\uff1a\u89c6\u56fe\u8d1f\u8d23\u663e\u793a\u6a21\u578b\u4e2d\u7684\u6570\u636e\u548c\u7528\u6237\u754c\u9762\u3002\u5728\u5b89\u5353\u4e2d\uff0c\u89c6\u56fe\u901a\u5e38\u662f\u6307UI\u5143\u7d20\uff0c\u5982\u6309\u94ae\u3001\u6587\u672c\u6846\u3001\u56fe\u8868\u7b49\uff0c\u4ee5\u53ca\u5e03\u5c40\u6587\u4ef6\uff08XML\u6587\u4ef6\uff09\u3002</p> </li> <li> <p>Controller\uff08\u63a7\u5236\u5668\uff09\uff1a\u63a7\u5236\u5668\u8d1f\u8d23\u5904\u7406\u7528\u6237\u8f93\u5165\u3001\u66f4\u65b0\u6a21\u578b\u6570\u636e\u548c\u7ba1\u7406\u89c6\u56fe\u7684\u884c\u4e3a\u3002\u5728\u5b89\u5353\u4e2d\uff0c\u63a7\u5236\u5668\u901a\u5e38\u662f\u6307\u6d3b\u52a8\uff08Activity\uff09\u6216\u7247\u6bb5\uff08Fragment\uff09\uff0c\u5b83\u4eec\u63a5\u6536\u7528\u6237\u8f93\u5165\u3001\u8c03\u7528\u6a21\u578b\u7684\u65b9\u6cd5\u6765\u66f4\u65b0\u6570\u636e\uff0c\u5e76\u5728\u9700\u8981\u65f6\u66f4\u65b0\u89c6\u56fe\u3002</p> </li> </ol>"}, {"location": "android/android_dev_mode/#_1", "title": "\u4f18\u70b9", "text": "<ol> <li>\u5206\u79bb\u5173\u6ce8\u70b9\uff1aMVC\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u5206\u4e3a\u6a21\u578b\u3001\u89c6\u56fe\u548c\u63a7\u5236\u5668\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u5177\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</li> <li>\u53ef\u91cd\u7528\u6027\uff1aMVC\u4e2d\u7684\u6a21\u578b\u548c\u89c6\u56fe\u662f\u72ec\u7acb\u7684\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e2d\u91cd\u7528\u3002</li> <li>\u677e\u8026\u5408\uff1a\u6a21\u578b\u3001\u89c6\u56fe\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u8f83\u4f4e\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e2a\u90e8\u5206\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u90e8\u5206\u3002</li> <li>\u5bb9\u6613\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff1aMVC\u4e2d\u7684\u63a7\u5236\u5668\u548c\u6a21\u578b\u90fd\u53ef\u4ee5\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u4ee5\u4fdd\u8bc1\u4ee3\u7801\u7684\u8d28\u91cf\u3002</li> </ol>"}, {"location": "android/android_dev_mode/#_2", "title": "\u7f3a\u70b9", "text": "<ol> <li>\u89c6\u56fe\u548c\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u8026\u5408\uff1a\u63a7\u5236\u5668\u5bf9\u89c6\u56fe\u7684\u76f4\u63a5\u5f15\u7528\u53ef\u80fd\u5bfc\u81f4\u5b83\u4eec\u4e4b\u95f4\u7684\u5f3a\u8026\u5408\uff0c\u9020\u6210\u4ee3\u7801\u7684\u590d\u6742\u6027\u589e\u52a0\u3002</li> <li>\u903b\u8f91\u5206\u6563\uff1aMVC\u4e2d\u7684\u63a7\u5236\u5668\u8d1f\u8d23\u5904\u7406\u7528\u6237\u8f93\u5165\u548c\u63a7\u5236\u6a21\u578b\u548c\u89c6\u56fe\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u5206\u6563\u5728\u5404\u4e2a\u63a7\u5236\u5668\u4e4b\u95f4\u3002</li> <li>\u968f\u7740\u754c\u9762\u53ca\u5176\u903b\u8f91\u7684\u590d\u6742\u5ea6\u4e0d\u65ad\u63d0\u5347\uff0cActivity\u7c7b\u7684\u804c\u8d23\u4e0d\u65ad\u589e\u52a0\uff0c\u4ee5\u81f4\u53d8\u5f97\u5e9e\u5927\u81c3\u80bf</li> </ol>"}, {"location": "android/android_dev_mode/#mvp", "title": "MVP", "text": "<p>\u5728\u5b89\u5353\u5f00\u53d1\u4e2d\uff0cMVP\uff08Model-View-Presenter\uff09\u662f\u4e00\u79cd\u57fa\u4e8eMVC\u6a21\u5f0f\u7684\u53d8\u79cd\u6a21\u5f0f\uff0c\u5b83\u7528\u4e8e\u7ec4\u7ec7\u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u7ed3\u6784\u548c\u903b\u8f91\u3002\u5728\u5b89\u5353\u4e2d\uff0cMVP\u6a21\u5f0f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ee5\u4e0b\u5bf9\u5e94\u5173\u7cfb\uff1a</p> <ol> <li> <p>Model\uff08\u6a21\u578b\uff09\uff1a\u4e0emvc\u76f8\u540c</p> </li> <li> <p>View\uff08\u89c6\u56fe\uff09\uff1a\u4e0emvc\u76f8\u540c</p> </li> <li> <p>Presenter\uff08\u5c55\u793a\u8005\uff09\uff1a\u5c55\u793a\u8005\u662f\u8fde\u63a5\u6a21\u578b\u548c\u89c6\u56fe\u7684\u4e2d\u95f4\u5c42\u3002\u5b83\u8d1f\u8d23\u5904\u7406\u7528\u6237\u8f93\u5165\u3001\u8c03\u7528\u6a21\u578b\u7684\u65b9\u6cd5\u6765\u66f4\u65b0\u6570\u636e\uff0c\u5e76\u5728\u9700\u8981\u65f6\u66f4\u65b0\u89c6\u56fe\u3002\u5c55\u793a\u8005\u8fd8\u8d1f\u8d23\u63a7\u5236\u89c6\u56fe\u7684\u884c\u4e3a\u548c\u903b\u8f91\uff0c\u4f8b\u5982\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\u3001\u663e\u793a\u6570\u636e\u7b49\u3002</p> </li> </ol>"}, {"location": "android/android_dev_mode/#_3", "title": "\u4f18\u70b9", "text": "<ol> <li>\u66f4\u597d\u7684\u6d4b\u8bd5\u6027\uff1aMVP\u4e2d\u7684\u89c6\u56fe\u548c\u6a21\u578b\u4e4b\u95f4\u901a\u8fc7Presenter\u8fdb\u884c\u4ea4\u4e92\uff0c\u4f7f\u5f97\u89c6\u56fe\u548c\u6a21\u578b\u53ef\u4ee5\u8fdb\u884c\u72ec\u7acb\u7684\u5355\u5143\u6d4b\u8bd5\u3002</li> <li>\u89e3\u8026\uff1aMVP\u5c06\u89c6\u56fe\u548c\u6a21\u578b\u5b8c\u5168\u89e3\u8026\uff0c\u4f7f\u5f97\u5b83\u4eec\u53ef\u4ee5\u72ec\u7acb\u5730\u8fdb\u884c\u5f00\u53d1\u548c\u4fee\u6539\u3002</li> <li>\u53ef\u7ef4\u62a4\u6027\uff1aMVP\u67b6\u6784\u4f7f\u5f97\u4ee3\u7801\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4\u3002</li> <li>\u7075\u6d3b\u6027\uff1aPresenter\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u7684\u9700\u6c42\u8fdb\u884c\u5b9a\u5236\uff0c\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u66f4\u52a0\u7075\u6d3b\u3002</li> </ol>"}, {"location": "android/android_dev_mode/#_4", "title": "\u7f3a\u70b9", "text": "<ol> <li>\u590d\u6742\u6027\u589e\u52a0\uff1aMVP\u67b6\u6784\u4e2d\u589e\u52a0\u4e86Presenter\u7684\u89d2\u8272\uff0c\u4f7f\u5f97\u6574\u4f53\u67b6\u6784\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u3002</li> <li>\u5b66\u4e60\u66f2\u7ebf\uff1a\u5bf9\u4e8e\u6ca1\u6709\u4f7f\u7528\u8fc7MVP\u7684\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u5b66\u4e60\u548c\u7406\u89e3MVP\u67b6\u6784\u53ef\u80fd\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\u548c\u7ecf\u9a8c</li> <li>\u63a5\u53e3\u7206\u70b8\u5f0f\u589e\u52a0</li> </ol>"}, {"location": "android/android_dev_mode/#mvp_1", "title": "mvp\u642d\u5efa", "text": "<p>View\u5c42\u63a5\u53e3 <pre><code>interface ILoginView {\n    fun loginSuccess(data: LoginBean?)\n\n    fun loginFail(msg: String?)\n}\n</code></pre> View\u5c42\u5b9e\u73b0\uff1a\u7531\u56fe\u53ef\u77e5v\u5c42\u9700\u8981p\u5c42\u5bf9\u8c61 <pre><code>class LoginActivity : AppCompatActivity, ILoginView {\n    private lateinit var p: ILoginPresenter\n    override fun init() {\n        p = LoginPresenterImpl(this, this)\n        xx.setOnClickListener {\n            p.login(\"xxx\", \"xxx\")\n        }\n    }\n    override fun loginSuccess(data: LoginBean?) {\n    }\n\n    override fun loginFail(msg: String?) {\n    }\n}\n</code></pre> p\u5c42\u63a5\u53e3 <pre><code>interface ILoginPresenter {\n    fun login(name: String, pwd: String)\n}\n</code></pre> p\u5c42\u5b9e\u73b0\uff1a\u7531\u56fe\u53ef\u77e5p\u5c42\u9700\u8981model\u548cview\u5bf9\u8c61\uff0c\u4e00\u822c\u6570\u636e\u6821\u9a8c\u53ef\u4ee5\u5728\u6b64\u6267\u884c <pre><code>class LoginPresenterImpl(private val context: Context, private val loginView: ILoginView) :\n    ILoginPresenter, ILoginModel.ILoginCallBack {\n    private val model = LoginModelImpl()\n    override fun login(name: String, pwd: String) {\n        //\u6570\u636e\u6821\u9a8c\u5904\u7406\n        model.login(context, name, pwd, this)\n    }\n    override fun onSuccess(data: LoginBean?) {\n        //\u6570\u636e\u6821\u9a8c\u5904\u7406\n        loginView.loginSuccess(data)\n    }\n    override fun onFail(msg: String?) {\n        loginView.loginFail(msg)\n    }\n}\n</code></pre> model\u5c42\u63a5\u53e3\uff1a\u9700\u8981\u56de\u8c03\u7ed9p\u5c42\u6570\u636e <pre><code>interface ILoginModel {\n    fun login(context: Context, name: String, pwd: String, callBack: ILoginCallBack)\n\n    interface ILoginCallBack {\n        fun onSuccess(data: LoginBean?)\n\n        fun onFail(msg: String?)\n    }\n}\n</code></pre> model\u5c42\u5b9e\u73b0 <pre><code>class LoginModelImpl : ILoginModel {\n    override fun login(\n        context: Context,\n        name: String,\n        pwd: String,\n        callBack: ILoginModel.ILoginCallBack\n    ) {\n        //\u7f51\u7edc\u8bf7\u6c42\n}\n</code></pre> google\u65b9\u6848\u5b9e\u73b0 \u589e\u52a0\u4e00\u4e2a\u5951\u7ea6\u7c7b\uff0c\u5c06\u63a5\u53e3\u7c7b\u5168\u90e8\u79fb\u5230\u7c7b\u4e2d <pre><code>interface LoginContract {\n    interface IModel {\n        //\u7701\u7565\n    }\n\n    interface IView{\n        //\u7701\u7565\n    }\n\n    interface IPresenter {\n       //\u7701\u7565\n    }\n}\n</code></pre></p>"}, {"location": "android/android_github/", "title": "\u5f00\u6e90\u6846\u67b6", "text": ""}, {"location": "android/android_github/#eventbus", "title": "EventBus", "text": "<p>\u4f7f\u7528\u6ce8\u89e3\u3001\u53cd\u5c04\u30013.x\u540e\u6dfb\u52a0apt\u4ee3\u66ff\u53cd\u5c04</p>"}, {"location": "android/android_github/#mmkv", "title": "mmkv", "text": "<p>github: https://github.com/Tencent/MMKV/</p> <p>\u5199\u5165\u5feb\uff0c\u5c0f\u6570\u636e\u5feb\uff0c\u652f\u6301\u591a\u8fdb\u7a0b\uff0c\u4e0d\u4f1a\u81ea\u52a8\u5907\u4efd\u6570\u636e\uff0c\u521d\u59cb\u5316\u52a0\u8f7d\u6587\u4ef6\u6216\u5927\u5b57\u7b26\u65f6\u53ef\u80fd\u4f1a\u5361\u987f</p> <p>\u8bde\u751f\u76ee\u7684\uff1a\u89e3\u51b3\u9ad8\u9891\u4e3b\u7ebf\u7a0b\u5199\u6570\u636e</p>"}, {"location": "android/android_github/#datastore", "title": "datastore", "text": "<p>\u8bde\u751f\u76ee\u7684\uff1a\u4ee3\u66ffSharedPreferences</p> <p>\u652f\u6301\u591a\u8fdb\u7a0b\uff0c\u4f1a\u81ea\u52a8\u5907\u4efd\uff0c\u5927\u6570\u636e\u5b58\u50a8\u6bd4mmkv\u5feb</p>"}, {"location": "android/android_github/#okhttp", "title": "OKhttp", "text": "<p>\u51c6\u5907\u77e5\u8bc6\uff1ajava\u57fa\u7840\u3001\u7f51\u7edc\u7f16\u7a0b\u3001HTTP\u534f\u8bae\u3001\u8bbe\u8ba1\u6a21\u5f0f</p> <p>\u4fdd\u6301\u957f\u8fde\u63a5\uff1a\u52a0\u5feb\u8bf7\u6c42\u6548\u7387\uff0c\u91cd\u590d\u4f7f\u7528socket\uff0c\u9700\u8981\u670d\u52a1\u5668\u652f\u6301</p> <p>key: Connection value: keep-alive</p> <p>\u5982\u679c\u54cd\u5e94\u8fd4\u56de\u4e5f\u6709\u662fkeep-alive\u8bf4\u660e\u652f\u6301\uff0c\u5982\u679c\u662fclose\u5219\u4e0d\u652f\u6301</p> <p>http1.1\u5f00\u59cb\u652f\u6301\uff0c\u4f46\u53ea\u80fd\u4e32\u884c(\u4fdd\u8bc1\u6709\u5e8f)\uff0c\u5373\u4e0a\u4e00\u4e2a\u8bf7\u6c42\u5b8c\u6210\u540e\u624d\u80fd\u4e0b\u4e00\u4e2a\u8bf7\u6c42</p> <p>http2.0\u652f\u6301\u5e76\u884c(\u591a\u4e86\u987a\u5e8f\u6807\u8bc6\u4fdd\u8bc1\u6709\u5e8f)</p> <p>OkHttp\u7f13\u5b58\u9ed8\u8ba4\u5173\u95ed\u9700\u8981\u8c03\u7528.cache(path)</p>"}, {"location": "android/android_github/#_1", "title": "\u5206\u53d1\u6d41\u7a0b", "text": "<p><pre><code>override fun enqueue(responseCallback: Callback) {\n    check(executed.compareAndSet(false, true)) { \"Already Executed\" }\n\n    callStart()\n    client.dispatcher.enqueue(AsyncCall(responseCallback))\n}\n</code></pre> check\u5148\u4f7f\u7528CAS\u673a\u5236\u4fdd\u8bc1\u53ea\u80fd\u6267\u884c\u4e00\u6b21\u5f02\u6b65\u8bf7\u6c42\uff0c\u7136\u540edispatcher\u5206\u53d1\u5668 <pre><code>internal fun enqueue(call: AsyncCall) {\n    synchronized(this) {\n    // \u6dfb\u52a0\u5230\u51c6\u5907\u961f\u5217\u4e2d\n    readyAsyncCalls.add(call)\n    if (!call.call.forWebSocket) {\n        val existingCall = findExistingCallWithHost(call.host)\n        if (existingCall != null) call.reuseCallsPerHostFrom(existingCall)\n      }\n    }\n    promoteAndExecute()\n}\nprivate fun promoteAndExecute(): Boolean {\n    //...\n    synchronized(this) {\n      val i = readyAsyncCalls.iterator()\n      while (i.hasNext()) {\n        val asyncCall = i.next()\n        // \u6700\u5927\u5f02\u6b65\u8bf7\u6c4264\u4e2a\n        if (runningAsyncCalls.size &gt;= this.maxRequests) break // Max capacity.\n        // \u540c\u4e00\u4e2ahost\u4e0d\u80fd\u5927\u4e8e5\uff0c\u6bd4\u5982\u8bf7\u6c42\u767e\u5ea6\u4e0d\u80fd\u540c\u65f6\u67656\u6b21\uff0c\u7b2c6\u6b21\u7b49\u5f85\n        if (asyncCall.callsPerHost.get() &gt;= this.maxRequestsPerHost) continue // Host max capacity.\n\n        i.remove()\n        asyncCall.callsPerHost.incrementAndGet()\n        // \u6dfb\u52a0\u5230\u9700\u8981\u6267\u884c\u7684\u8bf7\u6c42\u961f\u5217\u4e2d\n        executableCalls.add(asyncCall)\n        // \u6dfb\u52a0\u5230\u6267\u884c\u961f\u5217\u4e2d\n        runningAsyncCalls.add(asyncCall)\n      }\n      isRunning = runningCallsCount() &gt; 0\n    }\n\n    for (i in 0 until executableCalls.size) {\n      val asyncCall = executableCalls[i]\n      asyncCall.executeOn(executorService)// \u904d\u5386\u6267\u884c\u5f02\u6b65\u8bf7\u6c42\n    }\n\n    return isRunning\n  }\n\nfun executeOn(executorService: ExecutorService) {\n    //...\n    try {\n    executorService.execute(this) //\u6267\u884crun\u65b9\u6cd5\n    } \n    //...\n}\nexecutorService\uff1a\u76f8\u5f53\u4e8eExecutor.newCachedThreadPool\n\n// SynchronousQueue: \u4e0d\u7528\u7b49\u5f85\u524d\u9762\u8bf7\u6c42\uff0c\u5e76\u884c\u6267\u884c\nThreadPoolExecutor(0, Int.MAX_VALUE, 60, TimeUnit.SECONDS,\n    SynchronousQueue(), threadFactory(\"$okHttpName Dispatcher\", false))\n\noverride fun run() {\n    //...\n    finally {\n        // \u4f1a\u91cd\u5199\u6267\u884cpromoteAndExecute\u65b9\u6cd5\u89e6\u53d1\u4e0b\u4e00\u4e2a\u8bf7\u6c42(\u5982\u679c\u8fd8\u6709\u4e0b\u4e00\u4e2a\u8bf7\u6c42)\n        client.dispatcher.finished(this)\n    }\n}\n</code></pre> \u540c\u6b65\u8bf7\u6c42execute\u533a\u522b\u5c31\u662f\u76f4\u63a5\u6dfb\u52a0\u5230runningAsyncCalls\u4e2d\u6267\u884c\u8bf7\u6c42</p>"}, {"location": "android/android_github/#_2", "title": "\u62e6\u622a\u5668", "text": "<ol> <li>\u91cd\u8bd5\u91cd\u5b9a\u5411\u62e6\u622a\u5668\uff1a\u5224\u65ad\u662f\u5426\u53d6\u6d88\uff0c\u83b7\u5f97\u7ed3\u679c\u540e\u6839\u636e\u54cd\u5e94\u7801\u5224\u65ad\u662f\u5426\u91cd\u5b9a\u5411\uff0c\u6ee1\u8db3\u6761\u4ef6\u4f1a\u91cd\u542f\u6240\u6709\u62e6\u622a\u5668</li> <li>\u6865\u63a5\u62e6\u622a\u5668\uff1a\u81ea\u52a8\u6dfb\u52a0host\u7b49http\u534f\u8bae\u5fc5\u5907\u7684\u8bf7\u6c42\u5934\uff0ccookie\u76f8\u5173</li> <li>\u7f13\u5b58\u62e6\u622a\u5668\uff1a\u7f13\u5b58\u76f8\u5173</li> <li>\u8fde\u63a5\u62e6\u622a\u5668\uff1a\u8d1f\u8d23\u627e\u5230\u6216\u8005\u521b\u5efa\u4e00\u4e2a\u62e6\u622a\u5668\uff0c\u4e0d\u4f1a\u989d\u5916\u5904\u7406\u6570\u636e</li> <li>\u8bf7\u6c42\u670d\u52a1\u5668\u62e6\u622a\u5668\uff1a\u771f\u6b63\u4e0e\u670d\u52a1\u5668\u901a\u4fe1</li> </ol> <p>\u81ea\u5b9a\u4e49\u62e6\u622a\u5668</p> <p>Interceptor\u548cNetworkInterceptor\uff1a\u524d\u8005\u6dfb\u52a0\u5230\u6700\u5f00\u59cb\uff0c\u540e\u8005\u6dfb\u52a0\u5230\u6700\u540e\uff0c\u6240\u4ee5\u8bf7\u6c42\u6709\u524d\u8005\u5148\u83b7\u5f97\uff0c\u54cd\u5e94\u7531\u540e\u8005\u5148\u83b7\u53d6\uff0c\u56e0\u4e3a\u5148\u8bf7\u6c42\u540e\u54cd\u5e94</p> <p>HttpLoggingInterceptor\u6dfb\u52a0\u5230\u4e0a\u9762\u4e24\u4e2a\u6548\u679c\u4e0d\u540c\uff0c\u540e\u8005\u7531\u4e8e\u653e\u6700\u540e\u80fd\u62ff\u5230\u6240\u6709\u8bf7\u6c42\u5185\u5bb9</p> <p>\u5206\u53d1\u5668\u5de5\u4f5c\u6d41\u7a0b</p> <p>\u540c\u6b65\uff1a\u4e3b\u8981\u8bb0\u5f55\u5230\u961f\u5217\u4e2d\u76f4\u63a5\u8bf7\u6c42\uff1b\u5f02\u6b65\uff1a\u9700\u8981\u5148\u653e\u5230\u51c6\u5907\u961f\u5217\u6ee1\u8db364\u548c5\u6761\u4ef6\u540e\u518d\u8bf7\u6c42</p> <p>\u62e6\u622a\u5668\u5206\u53d1\u6d41\u7a0b</p> <p>\u8d23\u4efb\u94fe\u6a21\u5f0f</p> <p>\u8bf7\u6c42\u6d41\u7a0b\uff1a\u521b\u5efaclient-&gt;realCall-&gt;\u540c\u6b65\u3001\u5f02\u6b65(AsynCall)-&gt;\u5206\u53d1\u5668-&gt;\u62e6\u622a\u5668\u8bf7\u6c42</p> <p>getResponseWithInterceptorChain\uff1a\u6240\u6709\u62e6\u622a\u5668\u6240\u5728</p>"}, {"location": "android/android_github/#_3", "title": "\u91cd\u5b9a\u5411\u62e6\u622a\u5668", "text": "<p>\u6700\u591a20\u6b21\uff0c.retryOnConnectionFailure(false)\u5173\u95ed\u91cd\u8bd5\u9ed8\u8ba4\u5f00\u542f</p> <p>\u67d0\u4e9b\u5f02\u5e38\u4e0d\u91cd\u8bd5\uff1a\u534f\u8bae\u5f02\u5e38(204)\u3001io\u4e2d\u65ad\u5f02\u5e38(Socket\u91cd\u8bd5\u9664\u5916)\u3001\u8bc1\u4e66\u5f02\u5e38\u3001\u8bc1\u4e66\u9a8c\u8bc1\u5f02\u5e38</p> <p>\u57fa\u4e8eSocket\u7f51\u7edc\u8bf7\u6c42\uff0cHttpURLConnection\u4e5f\u662f\u57fa\u4e8eSocket\u5c01\u88c5</p>"}, {"location": "android/android_github/#retrofit", "title": "Retrofit", "text": "<p>\u5b98\u65b9\u7f51\u5740\uff1ahttps://github.com/square/retrofit</p> <p>\u672c\u8eab\u4e0d\u652f\u6301\u7f51\u7edc\u8bf7\u6c42\uff0c\u9762\u5411\u5207\u9762\u7f16\u7a0b\uff0caop\u601d\u60f3</p>"}, {"location": "android/android_github/#8", "title": "\u5e94\u75288\u79cd\u8bbe\u8ba1\u6a21\u5f0f", "text": "<p>\u6784\u5efa\u8005\u6a21\u5f0f(Builder)\uff1a\u4f7f\u7528\u89c4\u5219\u662f\u53c2\u6570\u8d85\u8fc75\u4e14\u53ef\u9009\u65f6\uff0cRetrofit\u7684\u521b\u5efa\u65f6\u4f7f\u7528\u5230</p> <p>\u5916\u89c2\u6a21\u5f0f\uff1a\u5bb9\u6613\u4f7f\u7528\uff0c\u7b26\u5408\u8fea\u7c73\u7279\u6cd5\u5219\uff0ccreate\u5373\u53ef\u521b\u5efa\u5b9e\u4f8b\uff1b\u4e09\u65b9sdk\u5e38\u7528</p> <p>\u88c5\u9970\u8005\u6a21\u5f0f\uff1a\u7ec4\u5408\u7684\u5f62\u5f0f\u62d3\u5c55\u529f\u80fd\uff0c\u5982io\u4e2d\u7684BufferedoutputStream(FileOutputStream(File))\u53ef\u4ee5\u5355\u72ec\u4e5f\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\uff0c\u6839\u636e\u9700\u6c42\u589e\u51cf\u5341\u5206\u7075\u6d3b\uff1bretrofit\u5728ExecutorCallbackCall\u62d3\u5c55OkHttpCall\u529f\u80fd\uff0c\u6dfb\u52a0\u5207\u6362\u5230\u4e3b\u7ebf\u7a0b\u529f\u80fd(MainThreadExecutor\u91c7\u7528Handler)</p> <p>\u4ee3\u7406\u6a21\u5f0fvs\u88c5\u9970\u8005\u6a21\u5f0f\u533a\u522b\uff1a\u4ee3\u7406\u540e\u5bf9\u8c61\u53d8\u4e86\uff0c\u88c5\u9970\u540e\u53ea\u662f\u589e\u5f3a\u529f\u80fd</p> <p>\u9002\u914d\u5668\u6a21\u5f0f\uff1aOkHttpCall\u8f6c\u6210ExecutorCallbackCall</p> <p>\u7b56\u7565\u6a21\u5f0f\uff1aCallAdapter\u6839\u636e\u4e0d\u540c\u8fd4\u56de\u7c7b\u578b\u91c7\u53d6\u4e0d\u540c\u7b97\u6cd5</p> <p></p>"}, {"location": "android/android_github/#_4", "title": "\u539f\u7406", "text": "<p>\u6838\u5fc3\u77e5\u8bc6\uff1a\u52a8\u6001\u4ee3\u7406\u3001\u6ce8\u89e3\u3001\u53cd\u5c04</p> <p>Retrofit\u7684\u521b\u5efa <pre><code>Retrofit.Builder()\n    .baseUrl(BASE_URL)\n    .client(createDefaultOkhttp())\n    .addConverterFactory(GsonConverterFactory.create())\n    .build()\n</code></pre> \u5b9e\u4f8b\u751f\u6210\uff0c\u662f\u52a8\u6001\u751f\u6210\u4e86\u5b9e\u73b0\u7c7b <pre><code>retrofit.create(ChatGptApi::class.java)\n</code></pre> create\u7684\u6e90\u7801\u4f7f\u7528\u4e86\u52a8\u6001\u4ee3\u7406 <pre><code>public &lt;T&gt; T create(final Class&lt;T&gt; service) {\n    validateServiceInterface(service);\nreturn (T)\n    Proxy.newProxyInstance(\n        service.getClassLoader(),\n        new Class&lt;?&gt;[] {service},\n        new InvocationHandler() {\n            private final Platform platform = Platform.get();\n            private final Object[] emptyArgs = new Object[0];\n\n            @Override\n            public @Nullable Object invoke(Object proxy, Method method, @Nullable Object[] args)\n                throws Throwable {\n            if (method.getDeclaringClass() == Object.class) {\n                return method.invoke(this, args);\n            }\n            args = args != null ? args : emptyArgs;\n            return platform.isDefaultMethod(method)\n                ? platform.invokeDefaultMethod(method, service, proxy, args)\n                : loadServiceMethod(method).invoke(args);\n            }\n        });\n}\n</code></pre> \u63a5\u7740\u4f7f\u7528\u6ce8\u89e3\u548c\u53cd\u5c04\u77e5\u8bc6 <pre><code>ServiceMethod&lt;?&gt; loadServiceMethod(Method method) {\n    ServiceMethod&lt;?&gt; result = serviceMethodCache.get(method);\n    if (result != null) return result;\n\n    synchronized (serviceMethodCache) {\n      result = serviceMethodCache.get(method);\n      if (result == null) {\n        result = ServiceMethod.parseAnnotations(this, method);\n        serviceMethodCache.put(method, result);\n      }\n    }\n    return result;\n}\n</code></pre> \u4e3b\u8981\u662f\u901a\u8fc7\u52a8\u6001\u4ee3\u7406(\u542b\u53cd\u5c04\u673a\u5236)\uff0c\u7136\u540e\u89e3\u6790\u6ce8\u89e3\u5c01\u88c5\u8bf7\u6c42\u6240\u9700\u7684\u4fe1\u606f\u5e76\u521b\u5efa\u9ed8\u8ba4\u7684okhttp\u8bf7\u6c42\u4f53\u8fdb\u884c\u8bf7\u6c42</p>"}, {"location": "android/android_github/#glide", "title": "Glide", "text": ""}, {"location": "android/android_github/#gson", "title": "Gson", "text": ""}, {"location": "android/android_github/#coil", "title": "Coil", "text": "<p>\u5b98\u65b9\u7f51\u5740\uff1ahttps://github.com/coil-kt/coil</p> <p>\u9ed8\u8ba4\u7f51\u7edc\u8bf7\u6c42\u662f\u4f7f\u7528OkHttp</p> <p>\u6d3b\u52a8\u7f13\u5b58\u3001\u5185\u5b58\u7f13\u5b58\u3001\u78c1\u76d8\u7f13\u5b58</p>"}, {"location": "android/android_github/#recyclerview", "title": "RecyclerView\u76f8\u5173\u5e93", "text": "<p>1.\u5b9e\u73b0\u4eff\u7f8e\u56e2\u53cc\u6392\u7ffb\u9875\u6548\u679c\uff1a https://github.com/GcsSloop/pager-layoutmanager</p> <p></p> <p>2.\u5b9e\u73b0\u4eff\u5fae\u4fe1\u4e5d\u5bab\u683c\u6548\u679c\uff1ahttps://github.com/MartinMu2016/NineGridLayoutManager</p> <p>3.\u5b9e\u73b0\u5438\u9876\u6548\u679c\uff1ahttps://github.com/donkingliang/ConsecutiveScroller</p> <p>4.BaseRecyclerViewAdapterHelper</p>"}, {"location": "android/android_github/#_5", "title": "\u4e0b\u62c9\u5237\u65b0\u5e93", "text": "<p>https://github.com/scwang90/SmartRefreshLayout</p>"}, {"location": "android/android_github/#xxpermissions", "title": "XXPermissions", "text": "<p>https://github.com/getActivity/XXPermissions</p>"}, {"location": "android/android_github/#immersionbar", "title": "ImmersionBar", "text": "<p>\u5904\u7406\u72b6\u6001\u680f\u7684\u5e93</p> <p>https://github.com/gyf-dev/ImmersionBar</p>"}, {"location": "android/android_github/#_6", "title": "\u5c4f\u5e55\u9002\u914d", "text": ""}, {"location": "android/android_github/#palette", "title": "palette", "text": "<p>\u53d6\u8272\u5de5\u5177</p> <p>gradle\u5f15\u7528 <pre><code>implementation (\"androidx.palette:palette:1.0.0\")\n</code></pre></p> <ul> <li>getLightVibrantColor()\uff1a\u83b7\u53d6\u6700\u4eae\u7684\u9c9c\u8273\u989c\u8272</li> <li>getMutedColor()\uff1a\u83b7\u53d6\u6700\u67d4\u548c\u7684\u989c\u8272</li> <li>getDarkMutedColor()\uff1a\u83b7\u53d6\u6700\u6697\u7684\u67d4\u548c\u989c\u8272</li> <li>getLightMutedColor()\uff1a\u83b7\u53d6\u6700\u4eae\u7684\u67d4\u548c\u989c\u8272</li> <li>getDominantColor()\uff1a\u83b7\u53d6\u6700\u4e3b\u8981\u7684\u989c\u8272</li> <li>getVibrantColor()\uff1a\u83b7\u53d6\u6700\u9c9c\u8273\u7684\u989c\u8272</li> <li>getDarkVibrantColor()\uff1a\u83b7\u53d6\u6700\u6697\u7684\u9c9c\u8273\u989c\u8272</li> </ul> <p>\u57fa\u672c\u4f7f\u7528 <pre><code>Palette.from(bitmap).generate {\n    it?.let { palette -&gt;\n        val dominantColor = palette.getDominantColor(Color.WHITE)\n        val mutedColor = palette.getMutedColor(Color.WHITE)\n        val darkVibrantColor = palette.getDarkVibrantColor(Color.WHITE)\n        val lightMutedColor = palette.getLightMutedColor(Color.WHITE)\n        val vibrantColor = palette.getVibrantColor(Color.WHITE)\n        val darkMutedColor = palette.getDarkMutedColor(Color.WHITE)\n        val lightVibrantColor = palette.getLightVibrantColor(Color.WHITE)\n    }\n}\n</code></pre></p>"}, {"location": "android/android_hotfix/", "title": "\u63d2\u4ef6\u5316", "text": ""}, {"location": "android/android_hotfix/#_1", "title": "\u63d2\u4ef6\u5316\u5fc5\u5907\u77e5\u8bc6\u70b9", "text": "<ol> <li>Binder</li> <li>AIDL</li> <li>AMS</li> <li>\u56db\u5927\u7ec4\u4ef6\u7684\u5de5\u4f5c\u539f\u7406</li> <li>PMS</li> <li>App\u5b89\u88c5\u8fc7\u7a0b</li> <li>ClassLoader\u4ee5\u53ca\u53cc\u4eb2\u59d4\u6258</li> <li>\u53cd\u5c04</li> </ol>"}, {"location": "android/android_hotfix/#classloader", "title": "ClassLoader\u4ee5\u53ca\u53cc\u4eb2\u59d4\u6258", "text": "<p>Android4.4\u542b\u4ee5\u4e0b\uff1a</p> <ul> <li>DexClassLoader\uff1a\u52a0\u8f7djar\u3001apk\u3001dex\uff0c\u53ef\u4ee5\u4ece\u6307\u5b9a\u76ee\u5f55\u4e2d\u52a0\u8f7d</li> <li>PathClassLoader\uff1a\u53ea\u80fd\u52a0\u8f7d\u5df2\u5b89\u88c5\u5230\u7cfb\u7edf\u4e2d\u7684apk\u6587\u4ef6\uff0c\u5373/data/app\u76ee\u5f55</li> </ul> <p>Android5.0-Android8.0\uff1a</p> <ul> <li>DexClassLoader\uff1a\u4e0d\u53d8</li> <li>PathClassLoader\uff1a\u548cDexClassLoader\u57fa\u672c\u76f8\u540c\uff0c\u9664\u4e86\u65e0\u6cd5\u8fdb\u884cdex2oat\u64cd\u4f5c</li> </ul> <p>Android8.0\u4ee5\u4e0a\uff1a\u5b8c\u5168\u4e00\u81f4</p> <p>\u53cc\u4eb2\u59d4\u6258\u673a\u5236\uff1a\u7c7b\u52a0\u8f7d\u65f6\u4f18\u5148\u8bf7\u6c42\u7236\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\uff0c\u627e\u4e0d\u5230\u6307\u5b9a\u7c7b\u65f6\u624d\u7531\u5b50\u7c7b\u52a0\u8f7d\u5668\u5c1d\u8bd5\u52a0\u8f7d</p> <p>\u52a0\u8f7d\u6b65\u9aa4\uff1a\u7f13\u5b58\u52a0\u8f7d--\u7236\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d--\u81ea\u5df1\u52a0\u8f7d <pre><code>protected Class&lt;?&gt; loadClass(String name, boolean resolve)\n        throws ClassNotFoundException\n{\n    // \u7f13\u5b58\u52a0\u8f7d\n    Class&lt;?&gt; c = findLoadedClass(name);\n    if (c == null) {\n        try {\n            if (parent != null) {\n                c = parent.loadClass(name, false); // \u7236\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\n            } else {\n                c = findBootstrapClassOrNull(name);\n            }\n        } catch (ClassNotFoundException e) {\n        }\n\n        if (c == null) {\n            // \u81ea\u5df1\u5c1d\u8bd5\u52a0\u8f7d\n            c = findClass(name);\n        }\n    }\n    return c;\n}\n</code></pre> \u53cc\u4eb2\u59d4\u6258\u673a\u5236\u7684\u4f5c\u7528 1. \u9632\u6b62\u91cd\u590d\u52a0\u8f7d 2. \u5b89\u5168\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u7c7b\u4e0d\u80fd\u88ab\u7be1\u6539</p> <p>\u6253\u7834\u53cc\u4eb2\u59d4\u6258\u673a\u5236\uff1a\u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668</p> <p>\u521b\u5efa\u7c7b\u7ee7\u627f\u4e8eClassLoader\uff0c\u91cd\u5199loadClass\u65b9\u6cd5\uff0c\u5b9e\u73b0findClass\u65b9\u6cd5</p> <p>Android\u5e94\u7528\u573a\u666f\uff1a\u63d2\u4ef6\u5316\u5f00\u53d1\u3001\u70ed\u66f4\u65b0</p> <p>\u7c7b\u52a0\u8f7d\u53ef\u4ee5\u901a\u8fc7Class.forName(\"\")</p>"}, {"location": "android/android_ndk/", "title": "Android ndk", "text": ""}, {"location": "android/android_ndk/#_1", "title": "\u914d\u7f6e\u5de5\u7a0b", "text": "<p>as\u4e2d\u5b89\u88c5\u5de5\u5177\uff0c\u5305\u62ecndk\u548ccmake</p> <p></p> <p>gradle\u914d\u7f6e</p> <p>\u4ee3\u7801\u63d0\u793a\u529f\u80fd\u5f00\u542f\uff0c\u9488\u5bf9\u5934\u6587\u4ef6\u5f15\u5165\u540e\u6ca1\u6709\u4ee3\u7801\u63d0\u793a</p> <p></p>"}, {"location": "android/android_ndk/#_2", "title": "\u57fa\u7840\u77e5\u8bc6", "text": "<p>\u4e0a\u5c42\u8c03\u7528c++\u65b9\u6cd5\u65b9\u5f0f</p> <p>java\uff1anative\u5173\u952e\u5b57</p> <p>kotlin\uff1aexternal\u5173\u952e\u5b57</p> <p>cmake\u6587\u4ef6\u4e2d</p> <p><pre><code>add_library(${CMAKE_PROJECT_NAME} SHARED\n    jetpack.cpp)\n\ntarget_link_libraries(${CMAKE_PROJECT_NAME}\n    android\n    log)\n</code></pre> add_library\uff1a\u53c2\u6570\u5206\u522b\u662f\u540d\u5b57\uff0c\u7f16\u8bd1\u7c7b\u578b(SHARED\u8868\u793a\u7f16\u8bd1\u6210so)\uff0c\u7f16\u8bd1\u6e90\u6587\u4ef6</p> <p>target_link_libraries\uff1a\u5f15\u7528\u5176\u4ed6\u5e93</p>"}, {"location": "android/android_root/", "title": "Root\u9762\u5177", "text": ""}, {"location": "android/android_root/#kernelsu", "title": "KernelSU", "text": "<p>\u9879\u76ee\u5b98\u7f51\uff1ahttps://github.com/tiann/KernelSU</p> <p>\u4e0b\u8f7d\u6700\u65b0\u7684Magisk\u5b89\u88c5\u5305</p> <p>https://github.com/topjohnwu/Magisk/releases</p> <p>\u5c06 Magisk-(version).apk \u91cd\u547d\u540d\u4e3a Magisk-.zip </p> <p>\u89e3\u538b\u83b7\u53d6Magisk-*/lib/arm64-v8a/libmagiskboot.so\u6587\u4ef6</p> <p>\u4f7f\u7528 adb push \u5230\u624b\u673a\uff1a <pre><code>adb push libmagiskboot.so /data/local/tmp/magiskboot\n</code></pre> \u63d0\u53d6boot.img\uff0c\u5237\u673a\u5305\u6216\u8005\u76f4\u63a5\u63d0\u53d6\u7cfb\u7edfboot</p> <p>\u4e0b\u8f7dAnyKernel3(https://github.com/tiann/KernelSU/releases/tag/v0.9.0) \u4e2d\u7684 Image</p> <p>\u6839\u636e\u624b\u673a\u8bbe\u7f6e\u5185\u6838\u7248\u672c</p> <p></p> <p>\u4e0b\u8f7d\u5bf9\u5e94AnyKernel3-android13-5.10.198_2023-12.zip </p> <p>\u63a8\u9001\u5230\u624b\u673a <pre><code>adb push boot.img /data/local/tmp/\nadb push Image /data/local/tmp/\n</code></pre> \u6253\u5305\u5185\u6838 <pre><code>adb shell\ncd /data/local/tmp/\nchmod +x magiskboot\n./magiskboot unpack boot.img\n//\u6267\u884c\u540e\u5f97\u5230kernel\u6587\u4ef6\nmv -f Image kernel\n./magiskboot repack boot.img\n//\u5f97\u5230new-boot.img\u6587\u4ef6\n</code></pre> \u5237\u5185\u6838\u5230\u624b\u673a <pre><code>fastboot flash boot new-boot.img\n</code></pre> \u5b89\u88c5 KernelSU_xxx-release.apk (https://github.com/tiann/KernelSU/releases/tag/v0.9.0)</p>"}, {"location": "android/android_root/#lsposed", "title": "LSPosed", "text": "<p>LSPosed\u6846\u67b6: https://github.com/LSPosed/LSPosed</p> <p>Magisk\u9762\u5177root\u5b89\u88c5: LSPosed-v1.9.2-7024-riru-release.zip</p> <p>KernelSu\u5b89\u88c5: LSPosed-v1.9.2-7024-zygisk-release.zip </p> <p>\u62e8\u53f7\u952e\u8f93\u5165\u4ee3\u7801 ##5776733## \u53ef\u542f\u52a8\u5e94\u7528</p>"}, {"location": "android/android_root/#riru", "title": "Riru", "text": "<p>https://github.com/RikkaApps/Riru</p>"}, {"location": "android/android_root/#zygisk-next", "title": "Zygisk-Next", "text": "<p>https://github.com/tsailin-bit/ZygiskNext/</p>"}, {"location": "android/android_root/#zygisk-on-kernelsu", "title": "Zygisk-on-KernelSU", "text": "<p>https://github.com/magiskmodule/Zygisk-on-KernelSU</p> <p>\u548cZygisk-Next\u4e92\u65a5</p>"}, {"location": "android/android_root/#xposed", "title": "Xposed\u5f00\u53d1", "text": "<p><pre><code>maven {\n    url \"https://api.xposed.info/\"\n}\ncompileOnly 'de.robv.android.xposed:api:82'\n</code></pre> assets\u6587\u4ef6\u5939\u4e2d\u6dfb\u52a0xxx.kt,\u5185\u5bb9\u4e3a\uff1a\u5305\u540d.\u7c7b\u578b</p> <p>xxx.kt\u4ee5hook\u7c7bViewGroup\u4e2d\u7684dispatchTouchEvent\u65b9\u6cd5\u4e3a\u4f8b <pre><code>class XXXHook : IXposedHookZygoteInit {\n    @Throws(Throwable::class)\n    override fun initZygote(startupParam: StartupParam) {\n        XposedBridge.hookAllMethods(\n            ViewGroup::class.java,\n            \"dispatchTouchEvent\",\n            object : XC_MethodHook() {\n                @Throws(Throwable::class)\n                override fun beforeHookedMethod(param: MethodHookParam) {\n                    handleTouchEvent(param.thisObject as View, param.args[0] as MotionEvent)\n                }\n            })\n    }\n}\n</code></pre> \u6e05\u5355\u6587\u4ef6\u4e2d\u6dfb\u52a0 <pre><code>&lt;meta-data\n    android:name=\"xposedmodule\" android:value=\"true\"/&gt;\n&lt;meta-data\n    android:name=\"xposedminversion\" android:value=\"93\"/&gt;\n&lt;meta-data\n    android:name=\"xposeddescription\" android:value=\"hook\u4e8b\u4ef6\u5206\u53d1\"/&gt;\n</code></pre></p>"}, {"location": "android/android_studio/", "title": "AS\u76f8\u5173", "text": ""}, {"location": "android/android_studio/#composekotlin", "title": "Compose\u4e0ekotlin\u7248\u672c\u517c\u5bb9", "text": "<p>https://developer.android.com/jetpack/androidx/releases/compose-kotlin?hl=zh-cn</p>"}, {"location": "android/android_studio/#_1", "title": "\u6ce8\u89e3\u5904\u7406\u5668", "text": "<p>auto-service: https://github.com/google/auto</p> <p>\u6dfb\u52a0kapt <pre><code>plugins {\n    id 'com.android.library'\n    id 'org.jetbrains.kotlin.android'\n    id 'kotlin-kapt'\n}\nannotationProcessor 'com.google.auto.service:auto-service:1.1.1'\nkapt 'com.google.auto.service:auto-service:1.1.1'\n</code></pre></p>"}, {"location": "android/android_studio/#gradle", "title": "gradle\u5e38\u89c1\u95ee\u9898", "text": ""}, {"location": "android/android_studio/#gradle80", "title": "\u8001\u7248\u672c\u5347\u7ea7gradle8.0", "text": "<p>1.\u5148\u4fee\u6539gradle/gradle-wrapper.properties\u62108.0 <pre><code>distributionBase=GRADLE_USER_HOME\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-8.0-bin.zip\ndistributionPath=wrapper/dists\nzipStorePath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\n</code></pre></p> <p>2.\u4fee\u6539settings.gradle\u548c\u6839build.gradle\u6587\u4ef6</p> <p>build.gradle\u53c2\u8003\u6a21\u677f <pre><code>buildscript {\n    ext {\n        compose_version = '1.4.2'\n    }\n}\nplugins {\n    id 'com.android.application' version '8.0.0' apply false\n    id 'com.android.library' version '8.0.0' apply false\n    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false\n    id 'org.jetbrains.kotlin.jvm' version '1.8.10' apply false\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n</code></pre> settings.gradle\u53c2\u8003\u6a21\u677f <pre><code>pluginManagement {\n    repositories {\n        gradlePluginPortal()\n        google()\n        mavenCentral()\n        maven { url 'https://jitpack.io' }\n    }\n}\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        maven { url 'https://jitpack.io' }//\u4e09\u65b9\u5e93\u5e38\u7528\n    }\n}\nrootProject.name = \"KotlinApp\"//\u9879\u76ee\u6587\u4ef6\u5939\u540d\u5b57\ninclude ':app'\ninclude ':other'//\u5176\u4ed6module\n</code></pre> \u5176\u4ed6\u62a5\u9519\u4fee\u6539</p> <p>1.Build was configured to prefer settings repositories over project repositories but repository 'flatDir' was added by build file 'xxx\\build.gradle' <pre><code>repositories {\n    flatDir {\n        dirs 'libs', 'providedLibs'\n    }\n}\n</code></pre> \u89e3\u51b3\u65b9\u5f0f</p> <p>\u5c06flatDir\u90e8\u5206\u4ee3\u7801\u79fb\u52a8\u5230settings.gradle</p> <p>2.Namespace not specified. Please specify a namespace in the module's build.gradle file like so</p> <p>\u5c06\u6bcf\u4e2abuild.gradle\u4e2d\u6dfb\u52a0\u5305\u540d\uff0c\u53ef\u4eceAndroidManifest\u4e2d\u67e5\u770b <pre><code>android {\n    namespace 'com.xxx.xxx'\n}\n</code></pre></p> <p>3.Build Type 'debug' contains custom BuildConfig fields, but the feature is disabled.</p> <p>build.gradle\u4e2d\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u914d\u7f6e(BuildConfig)\u5c5e\u6027buildConfigField\uff0c8.0\u9ed8\u8ba4\u5173\u95ed\u9700\u8981\u624b\u52a8\u5f00\u542f <pre><code>android {\n    buildFeatures {\n        buildConfig = true\n    }\n}\n</code></pre> 4.\u65e0\u6cd5\u65b0\u5efaAIDL\u6587\u4ef6 Requires setting the buildFeatures.aidl to true in the build file <pre><code>buildFeatures {\n    aidl = true\n}\n</code></pre></p>"}, {"location": "android/android_studio/#viewbinding", "title": "ViewBinding\u5f00\u542f", "text": "<pre><code>buildFeatures {\n    viewBinding = true\n}\n</code></pre>"}, {"location": "android/android_studio/#ndk", "title": "ndk\u914d\u7f6e", "text": "<p><pre><code>android {\n    //...\n    defaultConfig {\n        //...\n        //\u914d\u7f6e\u81ea\u5df1c++\u4ee3\u7801\u7f16\u8bd1\u7684CPU\u67b6\u6784\n        externalNativeBuild {\n            cmake {\n                cppFlags ''\n                abiFilters 'armeabi-v7a'\n            }\n        }\n        //\u914d\u7f6e\u6253\u5305\u54ea\u4e9bCPU\u67b6\u6784\n        ndk {\n            abiFilters 'armeabi-v7a'\n        }\n    }\n    //...\n    //\u914d\u7f6ecpp\u4ee3\u7801\u8def\u5f84\n    externalNativeBuild {\n        cmake {\n            path file('src/main/cpp/CMakeLists.txt')\n            version '3.22.1'\n        }\n    }\n}\n</code></pre> as\u63d2\u4ef6\uff1aCMake simple highlighter</p>"}, {"location": "android/android_studio/#gradlekts", "title": "gradle\u4e0ekts", "text": ""}, {"location": "android/android_studio/#_2", "title": "\u4f7f\u7528\u963f\u91cc\u6e90", "text": "<p>kts\u7248\u672c\uff0csettings.gradle.kts <pre><code>maven{ url = uri(\"https://maven.aliyun.com/repository/google\") }\nmaven{ url = uri(\"https://maven.aliyun.com/repository/gradle-plugin\") }\nmaven{ url = uri(\"https://maven.aliyun.com/repository/public\") }\nmaven{ url = uri(\"https://maven.aliyun.com/repository/jcenter\") }\nmaven{ url = uri(\"https://jitpack.io\") }\n</code></pre> gradle\u7248\u672c\uff0csettings.gradle <pre><code>maven{ url 'https://maven.aliyun.com/repository/google'}\nmaven{ url 'https://maven.aliyun.com/repository/gradle-plugin'}\nmaven{ url 'https://maven.aliyun.com/repository/public'}\nmaven{ url 'https://maven.aliyun.com/repository/jcenter'}\nmaven{ url 'https://jitpack.io' }\n</code></pre></p>"}, {"location": "android/android_studio/#aar", "title": "aar\u4f9d\u8d56", "text": "<p>\u65b0\u5efa\u6587\u4ef6\u5939\u5982xxx_aar\uff0c\u521b\u5efabuild.gradle.kts\uff0c\u5185\u5bb9\uff1a <pre><code>configurations.maybeCreate(\"default\")\nartifacts.add(\"default\",file(\"xxx.aar\"))\n</code></pre> \u6ce8\u518c\u6a21\u5757settings.gradle.kts <pre><code>include(\":local_aar:xxx_aa\")\n</code></pre> \u5f15\u7528\u8fd9\u4e2amodule <pre><code>implementation(project(\":local_aar:xxx_aa\"))\n</code></pre></p>"}, {"location": "android/android_studio/#gradle_1", "title": "\u7f3a\u5c11gradle\u7f16\u8bd1\u9009\u9879", "text": "<p>\u8001\u7248\u672c\uff1aFile -&gt; Settings -&gt; Experimental \u9009\u9879\uff0c\u53d6\u6d88\u52fe\u9009 Do not build Gradle task list during Gradle sync \u9009\u9879</p> <p>\u65b0\u7248\u672c\uff1aFile -&gt; Settings -&gt; Experimental \u9009\u9879\uff0c\u52fe\u9009  Configure all Gradle tasks during Gradle Sync (this can make Gradle Sync slower)\u9009\u9879</p> <p>\u518d\u540c\u6b65gradle\u5373\u53ef\uff0cFile -&gt; Sync Project with Gradle Files \u6216\u8005\u76f4\u63a5\u70b9\u56fe\u6807\u6309\u94ae</p> <p></p>"}, {"location": "android/android_studio/#idea", "title": "\u91cd\u65b0\u6784\u5efaidea", "text": "<p>File -&gt; Settings -&gt; Build,Execution,Deployment-&gt;Build Tools -&gt; Gradle\uff0c\u52fe\u9009Generate *.iml files for modules imported from Gradle\uff0c\u5f00\u542f\u540e\u4f1a\u751f\u6210\u5982\u56fe\u663e\u793a</p> <p></p>"}, {"location": "android/android_studio/#gradlejar", "title": "gradle\u751f\u6210jar", "text": "<p>gradle\u6253\u5305jar\uff0csync-&gt;other-&gt;syncReleaseLibJars\uff0c\u751f\u6210\u76ee\u5f55build/intermediates/aar_main-jar/release/syncReleaseLibJars/class.jar</p>"}, {"location": "android/android_studio/#gradle_2", "title": "gradle\u4e0b\u8f7d\u6e90", "text": "<p>https://mirrors.huaweicloud.com/repository/maven/</p> <p>http://mirrors.cloud.tencent.com/gradle/</p> <p>\u66ff\u6362\uff1a .gradle/wrapper/dists/</p>"}, {"location": "android/android_studio/#gradle_3", "title": "gradle\u7b7e\u540d", "text": "<pre><code>signingConfigs {\n    create(\"keystore\") {\n        storeFile = file(\"../app_key\")\n        storePassword = \"123456\"\n        keyAlias = \"app_key\"\n        keyPassword = \"123456\"\n    }\n}\nbuildTypes {\n    release {\n        signingConfig = signingConfigs.getByName(\"keystore\")\n        isMinifyEnabled = false\n        proguardFiles(\n            getDefaultProguardFile(\"proguard-android-optimize.txt\"),\n            \"proguard-rules.pro\"\n        )\n    }\n    debug {\n        signingConfig = signingConfigs.getByName(\"keystore\")\n        isMinifyEnabled = false\n        proguardFiles(\n            getDefaultProguardFile(\"proguard-android-optimize.txt\"),\n            \"proguard-rules.pro\"\n        )\n    }\n}\n</code></pre>"}, {"location": "android/android_studio/#_3", "title": "\u5e38\u89c1\u5f02\u5e38", "text": "<ol> <li> <p>\u63d0\u793a\u6b64\u5e94\u7528\u4e13\u4e3a\u65e7\u7248android\u6253\u9020...\uff0c\u5e95\u90e8\u663e\u793a\u5168\u5c4f</p> <p>\u5c06minSdkVersion\u4fee\u6539\u621024\u6216\u4ee5\u4e0a</p> </li> <li> <p>java\u8f6ckt\u540e\u542f\u52a8Activity\u5931\u8d25</p> <p>app\u9879\u76ee\u7684gradle\u4e2d\u52a0kotlin\u63d2\u4ef6 <pre><code>plugins {\n    //...\n    id 'org.jetbrains.kotlin.android'\n}\n</code></pre> \u6839\u76ee\u5f55\u7684gradle\u5bf9\u5e94 <pre><code>plugins {\n    //...\n    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false\n}\n</code></pre></p> </li> <li> <p>YALI: \u5e03\u5c40\u67e5\u770b</p> </li> </ol>"}, {"location": "android/android_studio/#_4", "title": "\u5e38\u89c1\u63d2\u4ef6", "text": "<ol> <li>Legacy Layout Inspector: \u5e03\u5c40\u67e5\u770b</li> </ol>"}, {"location": "android/android_studio/#_5", "title": "\u627e\u4e0d\u5230\u8c03\u8bd5\u8fdb\u7a0b", "text": "<ol> <li>\u65ad\u5f00\u6570\u636e\u7ebf</li> <li>\u5173\u95ed\u5f00\u53d1\u8005\u6a21\u5f0f\uff0c\u5173\u95edusb\u8c03\u8bd5</li> <li>\u6253\u5f00\u5f00\u53d1\u8005\u6a21\u5f0f\uff0c\u5f00\u542fusb\u8c03\u8bd5</li> <li>\u63d2\u4e0a\u6570\u636e\u7ebf</li> </ol>"}, {"location": "android/android_studio/#_6", "title": "\u521b\u5efa\u684c\u9762\u5feb\u6377\u65b9\u5f0f", "text": "<p>\u6253\u5f00Android Studio\u5217\u8868\u754c\u9762-&gt;\u8bbe\u7f6e(\u9f7f\u8f6e\u56fe\u6807)-&gt;Create Desktop Entry...</p> <p>\u521b\u5efa\u6210\u529f\u540e\u4f1a\u5728\uff1a/usr/share/applications/jetbrains-studio.desktop</p> <p>\u521b\u5efa\u591a\u4e2a\u5feb\u6377\u65b9\u5f0f\uff1asudo mv jetbrains-studio.desktop asfp.desktop</p> <p>\u91cd\u590das\u521b\u5efa\u5373\u53ef</p>"}, {"location": "android/android_ui/", "title": "View\u6e90\u7801", "text": ""}, {"location": "android/android_ui/#ui", "title": "UI\u66f4\u65b0\u76f8\u5173", "text": ""}, {"location": "android/android_ui/#ui_1", "title": "\u5b50\u7ebf\u7a0b\u66f4\u65b0UI", "text": "<p>onCreate\u3001onResume\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5b50\u7ebf\u7a0b\u66f4\u65b0ui <pre><code>&lt;androidx.appcompat.widget.AppCompatTextView\n        android:id=\"@+id/tvShow\"\n        android:layout_width=\"match_parent\"\n        android:text=\"xml\u7684\u6587\u5b57\"\n        android:textSize=\"@dimen/sp_25\"\n        android:gravity=\"center\"\n        android:layout_height=\"wrap_content\" /&gt;\n</code></pre> <pre><code>class ThreadCreateUIActivity : AppCompatActivity() {\n    private var textView: AppCompatTextView? = null\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_thread_create_uiactivity)\n        textView = findViewById(R.id.tvShow)\n        Thread {\n            textView?.text = \"onCreate\u5b50\u7ebf\u7a0b\u4e2d\u4fee\u6539\"\n        }.start()\n        btnTest?.setOnClickListener {\n            thread {\n                textView?.text = \"click\u5b50\u7ebf\u7a0b\u4e2d\u4fee\u6539\"\n            }\n        }\n    }\n\n    override fun onResume() {\n        super.onResume()\n        Thread {\n            textView?.text = \"onResume\u5b50\u7ebf\u7a0b\u4e2d\u4fee\u6539\"\n        }.start()\n    }\n}\n</code></pre> \u5982\u679ctextView\u7684layout_width\u662fwrap_content\uff0cclick\u5237\u65b0ui\u4f1a\u62a5\u9519</p> <p>\u5b50\u7ebf\u7a0b\u4e2d\u521b\u5efa\u7684View\u53ef\u4ee5\u66f4\u65b0 <pre><code>//\u914d\u7f6e\u60ac\u6d6e\u7a97\u6743\u9650\n&lt;uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" /&gt;\n&lt;uses-permission android:name=\"android.permission.SYSTEM_OVERLAY_WINDOW\" /&gt;\n//\u5224\u65ad\u6743\u9650\uff0c\u8df3\u8f6c\u8bbe\u7f6e\u4e2d\u6253\u5f00\nif (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) {\n    if (!Settings.canDrawOverlays(this)) {\n        startActivity(\n            Intent(\n                Settings.ACTION_MANAGE_OVERLAY_PERMISSION,\n                Uri.parse(\"package:$packageName\")\n            )\n        )\n    }\n}\n\nprivate val handlerThread = HandlerThread(\"thread\")\n//\u70b9\u51fb\u65f6\u8c03\u7528\nprivate fun addFloatView() {\n    handlerThread.start()\n    val handler = Handler(handlerThread.looper){\n        val manager = getSystemService(WINDOW_SERVICE) as WindowManager\n        val layoutParams = WindowManager.LayoutParams()\n        layoutParams.type = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY\n        layoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE\n        layoutParams.format = PixelFormat.RGBA_8888\n        layoutParams.gravity = Gravity.TOP or Gravity.LEFT\n        layoutParams.width = WindowManager.LayoutParams.WRAP_CONTENT\n        layoutParams.height = WindowManager.LayoutParams.WRAP_CONTENT\n        layoutParams.x = 50\n        layoutParams.y = 50\n        manager.addView(it.obj as View, layoutParams)\n        false\n    }\n    Thread {\n        TextView(this).apply {\n            text = \"\u6d4b\u8bd5\u6587\u5b57\"\n            textSize = 25.0f\n            setTextColor(Color.GRAY)\n            val ll = LinearLayout(this@ThreadCreateUIActivity)\n            ll.addView(this, LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT)\n            setOnClickListener {\n                runOnUiThread {\n                    Toast.makeText(this@ThreadCreateUIActivity, \"\u88ab\u70b9\u51fb\", Toast.LENGTH_LONG).show()\n                }\n            }\n            handler.sendMessage(Message.obtain().let {\n                it.obj = ll\n                it\n            })\n        }\n    }.start()\n}\n</code></pre> \u62a5\u5b50\u7ebf\u7a0b\u4e2d\u4e0d\u80fd\u66f4\u65b0ui\u7684\u5f02\u5e38\u662f\u5728ViewRootImpl\u4e2d <pre><code>ViewRootImpl.java\npublic void requestLayout() {\n    if (!mHandlingLayoutInLayoutRequest) {\n        checkThread();\n        mLayoutRequested = true;\n        scheduleTraversals();\n    }\n}\nvoid checkThread() {\n    if (mThread != Thread.currentThread()) {\n        throw new CalledFromWrongThreadException(\n                \"Only the original thread that created a view hierarchy can touch its views.\");\n    }\n}\n</code></pre> \u6839\u636e\u666e\u901ahandleLaunchActivity\u53ef\u77e5ViewRootImpl\u521b\u5efa\u662f\u5728onResume\u540e\uff0c\u6240\u4ee5\u5728onCreate\u548conResume\u4e2d\u4e0d\u4f1a\u68c0\u67e5\u7ebf\u7a0b\u662f\u5426\u662fUI\u7ebf\u7a0b</p> <p>\u603b\u7ed3\uff1a 1.onCreate\u3001onResume\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5b50\u7ebf\u7a0b\u66f4\u65b0UI</p> <p>2.\u5728ViewRootImpl\u521b\u5efa\u540e\u9664\u4e86TextView(\u67d0\u4e9b\u573a\u666f\u4e0b),\u5176\u4ed6View\u90fd\u4e0d\u80fd\u5728\u5b50\u7ebf\u7a0b\u66f4\u65b0UI</p> <p>3.TextView\u53ea\u80fd\u5728\u5bbd\u5ea6\u4e3a\u56fa\u5b9a\u503c\u65f6\u53ef\u4ee5\u5728\u5b50\u7ebf\u7a0b\u66f4\u65b0\u6587\u672c\uff0c\u56e0\u4e3a\u6e90\u7801\u4e2d\u5bf9\u5bbd\u5ea6\u8fdb\u884c\u5224\u65ad\u5982\u679cmLayoutParams.width != LayoutParams.WRAP_CONTENT\u5c31\u4e0d\u4f1a\u89e6\u53d1requestLayout</p> <p>4.\u53ea\u8981\u4e0d\u89e6\u53d1requestLayout\u5c31\u4e0d\u4f1a\u89e6\u53d1\u4e3b\u7ebf\u7a0b\u68c0\u6d4b\uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49view\u53ef\u4ee5\u53ea\u8c03\u7528invalidate\u968f\u610f\u66f4\u65b0\u5185\u5bb9</p>"}, {"location": "android/android_ui/#view", "title": "\u81ea\u5b9a\u4e49view\u76f8\u5173", "text": "<p>\u81ea\u5b9a\u4e49view\u4e00\u822c\u53ef\u91cd\u5199onMeasure,onLayout,onDraw,onSizeChanged,\u4e3b\u8981\u662f\u540e\u97622\u4e2a</p> <p>\u81ea\u5b9a\u4e49ViewGroup\u4e00\u822c\u91cd\u5199\u9664\u4e86view\u7684\u8fd8\u6709dispatchDraw,drawChild</p> <p>\u5982\u679c\u9700\u8981\u7ed8\u5236\u5185\u5bb9\u5219\u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528setWillNotDraw(false)\uff0c\u5426\u5219\u4e0d\u56de\u8c03onDraw\uff0c\u5982\u679c\u6709\u80cc\u666f\u5219\u4e0d\u9700\u8981\u8c03\u7528\uff0cViewGroup\u9ed8\u8ba4\u5f00\u542f\u4e0d\u7ed8\u5236\u5185\u5bb9</p> <p>\u6d4b\u91cf\u65b9\u5f0f</p> <p>MeasureSpec.getMode()\u83b7\u53d6\u6d4b\u91cf\u6a21\u5f0f</p> <p>MeasureSpec.getSize()\u83b7\u53d6\u6d4b\u91cf\u5927\u5c0f</p> <p>mode\u5171\u6709\u4e09\u79cd\u60c5\u51b5\uff1a</p> <p>MeasureSpec.UNSPECIFIED(\u65e0\u9650\u5927), </p> <p>MeasureSpec.EXACTLY(\u9ed8\u8ba4\u6a21\u5f0f\uff0c\u7cbe\u786e\u503c\u6a21\u5f0f,\u5177\u4f53\u6570\u503c\u6216\u8005match_parent)</p> <p>MeasureSpec.AT_MOST(wrap_content)</p>"}, {"location": "android/android_ui/#decorviewwindowviewviewrootimpl", "title": "DecorView\u3001Window\u3001View\u3001ViewRootImpl", "text": ""}, {"location": "android/android_ui/#window", "title": "Window", "text": "<p>Android\u4e2d\u7ba1\u7406View\u7684\u5de5\u5177\uff0c\u88c5\u8f7dView\u7684\u5b9e\u4f53\uff0cactivity\u548cdialog\u4f9d\u8d56\u4e8ewindow\uff0cwindow\u7684\u552f\u4e00\u5b9e\u73b0\u7c7b\u662fPhoneWindow\uff0c\u5728Activity\u7684attach\u65b9\u6cd5\u4e2d\u521b\u5efa\uff0cattach\u65b9\u6cd5\u5728handleLaunchActivity\u8c03\u7528</p>"}, {"location": "android/android_ui/#decorview", "title": "DecorView", "text": "<p><pre><code>AppCompatActivity\u4e2d\npublic void setContentView(View view) {\n    initViewTreeOwners();\n    getDelegate().setContentView(view);\n}\nAppCompatDelegateImpl.java\npublic void setContentView(View v) {\n    ensureSubDecor();\n    ViewGroup contentParent = mSubDecor.findViewById(android.R.id.content);\n    contentParent.removeAllViews();\n    contentParent.addView(v);\n    //...\n}\n\nprivate void ensureSubDecor() {\n    if (!mSubDecorInstalled) {\n        mSubDecor = createSubDecor();\n    }\n    //...\n}\n</code></pre> v\u662f\u6dfb\u52a0\u5230contentParent\u4e2d\uff0ccontentParent\u662f\u901a\u8fc7mSubDecor\u83b7\u53d6\u7684\uff0c\u800cmSubDecor\u901a\u8fc7createSubDecor\u521b\u5efa <pre><code>private ViewGroup createSubDecor() {\n    //...\n    ensureWindow();\n    mWindow.getDecorView();\n    //...\n    ViewGroup subDecor = null;\n    subDecor = (ViewGroup) LayoutInflater.from(themedContext)\n            .inflate(R.layout.abc_screen_toolbar, null);\n\n    mDecorContentParent = (DecorContentParent) subDecor\n            .findViewById(R.id.decor_content_parent);\n    mDecorContentParent.setWindowCallback(getWindowCallback());\n    //...\n    mWindow.setContentView(subDecor);\n    //...\n    return subDecor;\n}\n</code></pre> subDecor\u6700\u7ec8\u6dfb\u52a0\u5230mWindow\uff0c\u8c03\u7528PhoneWindow\u7684setContentView <pre><code>public void setContentView(View view, ViewGroup.LayoutParams params) {\n    if (mContentParent == null) {\n        installDecor();\n    } else if (!hasFeature(FEATURE_CONTENT_TRANSITIONS)) {\n        mContentParent.removeAllViews();\n    }\n    if (hasFeature(FEATURE_CONTENT_TRANSITIONS)) {\n        view.setLayoutParams(params);\n        final Scene newScene = new Scene(mContentParent, view);\n        transitionTo(newScene);\n    } else {\n        mContentParent.addView(view, params);\n    }\n    //...\n}\n</code></pre> \u6b64\u5904installDecor\u4e0d\u4f1a\u8c03\u7528\uff0c\u800c\u662f\u5728mWindow.getDecorView()\u4e2d\u4f1a\u8c03\u7528mContentParent\u5c31\u4e0d\u4f1a\u4e3anull <pre><code>private void installDecor() {\n    if (mDecor == null) {\n        mDecor = generateDecor(-1);\n        //...\n    } else {\n        mDecor.setWindow(this);\n    }\n    if (mContentParent == null) {\n        mContentParent = generateLayout(mDecor);\n        //...\n    }\n}\n\nprotected DecorView generateDecor(int featureId) {\n    //...\n    return new DecorView(context, featureId, this, getAttributes());\n}\nprotected ViewGroup generateLayout(DecorView decor) {\n    //...\n    //\u52a0\u8f7d\u5e03\u5c40\u6587\u4ef6\u5230mDecor\n    mDecor.onResourcesLoaded(mLayoutInflater, layoutResource);\n    ViewGroup contentParent = (ViewGroup)findViewById(ID_ANDROID_CONTENT);\n    //...\n    return contentParent;\n}\npublic &lt;T extends View&gt; T findViewById(@IdRes int id) {\n    return getDecorView().findViewById(id);\n}\n</code></pre> \u603b\u7ed3\uff1asetContentView\u7684View\u6700\u7ec8\u5b58\u653e\u5230mContentParent\u4e2d\uff0cmContentParent\u662f\u901a\u8fc7DecorView\u901a\u8fc7id(com.android.internal.R.id.content)\u83b7\u5f97</p>"}, {"location": "android/android_ui/#viewrootimpl", "title": "ViewRootImpl", "text": "<p>\u6865\u63a5View\u548cWms\uff0c\u5185\u90e8\u5c5e\u6027mView\u5c31\u662fDecorView\uff0c\u7ed1\u5b9a\u8fc7\u7a0b\u770bhandleResumeActivity\u8fc7\u7a0b\u4e2dWindowManagerGlobal\u8c03\u7528addView\u65b9\u6cd5</p> <p>performTraversals\u65b9\u6cd5\u4e2d\u91cd\u8981\u7684\u6d4b\u91cf\u3001\u5e03\u5c40\u3001\u7ed8\u5236\u6b65\u9aa4(View\u7684\u7ed8\u5236\u6d41\u7a0b) <pre><code>performMeasure(childWidthMeasureSpec, childHeightMeasureSpec);\nperformLayout(lp, mWidth, mHeight);\nperformDraw()\n</code></pre></p> <p>View\u7684invalidate()\u4f1a\u8c03\u7528onDraw\uff0c\u5927\u81f4\u6d41\u7a0b\u662finvalidate\u4f1a\u9010\u5c42\u627eparent\u4e00\u76f4\u5230DecorView\u5373ViewRootImpl\u4e2d\u7684mView\u4e2d\uff0c\u7136\u540e\u7531ViewRootImpl\u5206\u53d1\u7ed9\u6240\u6709View\uff0c\u4e0d\u4f1a\u8c03\u7528ViewRootImpl\u7684invalidate\uff0c\u800c\u662f\u9012\u5f52\u8c03\u7528\u7236View\u7684invalidateChildInParent\uff0c\u7136\u540e\u89e6\u53d1ViewRootImpl\u7684performTraversals\uff0c\u7531\u4e8emLayoutRequested\u4e3afalse\uff0conMeasure\u548conLayout\u4e0d\u88ab\u8c03\u7528\uff0c\u53ea\u8c03\u7528onDraw\uff0c\u4e5f\u4f1a\u8c03\u7528computeScroll\u65b9\u6cd5</p>"}, {"location": "android/android_ui/#_1", "title": "\u5173\u7cfb\u603b\u7ed3", "text": "<ol> <li>DecorView\u4e2d\u6709PhoneWindow\u7684\u5b9e\u4f8b\u5bf9\u8c61\u5373mWindow</li> <li>ViewRootImpl\u4e2d\u6709DecorView\u7684\u5b9e\u4f8b\u5bf9\u8c61\u5373mView</li> <li>ViewRootImpl\u901a\u8fc7IWindowSession\u4e0eWMS\u901a\u4fe1</li> <li>wms\u901a\u8fc7IWidnow\u4e0ePhoneWindow\u4ea4\u4e92</li> <li>IWindow\u662f\u901a\u8fc7IWindowSession\u4f20\u9012\u7684</li> <li>DecorView\u5305\u542btitle\u548ccontentParent(android.R.id.content)</li> <li>contentParent\u662f\u6dfb\u52a0app\u7684\u5e03\u5c40</li> </ol>"}, {"location": "android/android_ui/#view_1", "title": "View", "text": ""}, {"location": "android/android_ui/#invalidatepostinvalidate", "title": "invalidate\u548cpostInvalidate", "text": "<p>postInvalidate\u53ef\u4ee5\u5728\u5b50\u7ebf\u7a0b\u4e2d\u8c03\u7528\u5237\u65b0\uff0c\u901a\u8fc7Handler\u5207\u6362\u7ebf\u7a0b\u6700\u7ec8\u8c03\u7528invalidate</p> <p>\u7528\u4e8e\u5185\u5bb9\u53d8\u5316\uff0c\u5982\u989c\u8272\u3001\u6587\u672c\u3001\u56fe\u5f62\u7b49</p>"}, {"location": "android/android_ui/#requesstlayout", "title": "requesstLayout", "text": "<p>\u4f1a\u8c03\u7528onMeasure\u548cnLayout\u65b9\u6cd5\uff0c\u4e0d\u4e00\u5b9a\u89e6\u53d1onDraw</p> <p>\u7528\u4e8e\u5e03\u5c40\u53d8\u5316\uff0c\u5982\u5c3a\u5bf8\u3001\u4f4d\u7f6e</p>"}, {"location": "android/android_ui/#onresumeviewpost", "title": "onResume\u548cview.post", "text": "<p>view\u7684\u6d4b\u91cf\u662f\u5728onResume\u4e4b\u540e\u6267\u884c\u7684\uff0c\u6240\u4ee5\u65e0\u6cd5\u83b7\u53d6\u5bbd\u9ad8 <pre><code>//Activity.onResume()\npublic void onResume(){\n    super.onResume();\n    view.post();\n}\n//View.post\npublic boolean post(Runnable action) {\n    final AttachInfo attachInfo = mAttachInfo;\n    if (attachInfo != null) {\n        return attachInfo.mHandler.post(action);\n    }\n    getRunQueue().post(action);\n    return true;\n}\n//ViewRootImplscheduleTraversals\nvoid scheduleTraversals() {\n    if (!mTraversalScheduled) {\n        mTraversalScheduled = true;\n        mTraversalBarrier = mHandler.getLooper().getQueue().postSyncBarrier();\n        mChoreographer.postCallback(\n                Choreographer.CALLBACK_TRAVERSAL, mTraversalRunnable, null);\n    }\n}\n//ViewRootImpl.performTraversals\nprivate void performTraversals() {\n    if (mFirst) {\n        host.dispatchAttachedToWindow(mAttachInfo, 0);\n    }\n    getRunQueue().executeActions(mAttachInfo.mHandler);\n    performMeasure(childWidthMeasureSpec, childHeightMeasureSpec);\n}\nvoid dispatchAttachedToWindow(AttachInfo info, int visibility) {\n    if (mRunQueue != null) {\n        mRunQueue.executeActions(info.mHandler);\n        mRunQueue = null;\n    }\n}\n</code></pre> 1.\u5f53view\u8c03\u7528post\u7684\u65f6\u5019\u7531\u4e8emAttachInfo\u6b64\u65f6\u4e3anull\uff0c\u521d\u59cb\u5316\u662f\u5728ViewRootImpl\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u6b64\u65f6ViewRootImpl\u8fd8\u6ca1\u88ab\u521b\u5efa\uff0c\u56e0\u4e3a\u662f\u5728onResume\u4e4b\u540e\u624d\u4f1a\u88ab\u521b\u5efa\uff0c\u5219\u4f1a\u5c06post\u7684Runnable\u6dfb\u52a0\u5230getRunQueue\u4e2d</p> <p>2.\u5f53ViewRootImpl\u88ab\u521b\u5efa\u5e76\u5f00\u59cb\u8d70view\u7ed8\u5236\u6d41\u7a0b\u540e\u5230performTraversals\uff0c\u6b64\u65f6\u4f1a\u5c06mAttachInfo\u8d4b\u503c\u7ed9View(host)\uff0c\u6b63\u5e38\u6765\u8bf4\u5c31\u4f1a\u8ba9Handler\u6267\u884cexecuteActions\uff0c\u4f46\u662f\u5728\u6267\u884cscheduleTraversals\u65f6\u4f1a\u53d1\u9001\u6d88\u606f\u5c4f\u969c\u539f\u7406\uff0c\u5bfc\u81f4mTraversalRunnable\u662f\u6700\u5148\u6267\u884c\u7684\uff0cpost\u7684Runnable\u9700\u8981\u6392\u961f\uff0cmTraversalRunnable\u6267\u884c\u7684\u5c31\u662fperformTraversals\u6574\u4e2aview\u7ed8\u5236\u6d41\u7a0b</p>"}, {"location": "android/android_ui/#view_2", "title": "View\u7684\u6ed1\u52a8", "text": "<ol> <li>scrollTo\u548cscrollBy</li> <li>\u5e73\u79fb\u52a8\u753b</li> <li>layoutParams\u4e2dmargin\u503c\u4fee\u6539</li> <li>\u8c03\u7528layout\u4fee\u6539\u503c</li> <li>Scroller+invalidate+\u91cd\u5199computeScroll</li> </ol>"}, {"location": "android/android_ui/#_2", "title": "\u4e8b\u4ef6\u5206\u53d1\u673a\u5236", "text": "<ol> <li>dispatcchTouchEvent\uff1a\u4e8b\u4ef6\u5206\u53d1\u903b\u8f91\uff0c\u8fd4\u56de\u503csuper\u548c\u76f4\u63a5true\u3001false\u6548\u679c\u662f\u4e0d\u540c\u7684</li> <li>onInterceptTouchEvent\uff1a\u4e8b\u4ef6\u62e6\u622a\uff0cviewgroup\u4e13\u5c5e</li> <li>onTouchEvent\uff1a\u5904\u7406\u4e8b\u4ef6</li> </ol> <p>ViewGroup     -ViewGroup1         -View1</p> <p>\u89e6\u6478v1\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u60c5\u51b5 <pre><code>down/move/up:vp(dis)-&gt;vp(intercept=false)-&gt;vp1(dis)-&gt;vp1(intercept=false)-&gt;v1(dis)-&gt;v1(onTouch)\n</code></pre> \u89e6\u6478v1\u4f4d\u7f6e\uff0c\u4e0d\u540cdispatcchTouchEvent\u60c5\u51b5 <pre><code>down/move/up:vp(dis=true)\n\ndown:vp(dis=false)\n\ndown/move/up:vp(dis=super)-&gt;vp(intercept=false)-&gt;vp1(dis=true)\n</code></pre> \u89e6\u6478v1\u4f4d\u7f6e\uff0c\u4e0d\u540conInterceptTouchEvent\u60c5\u51b5 <pre><code>down:vp(dis)-&gt;vp(intercept=true)-&gt;vp(onTouch)\nmove:vp(dis)-&gt;vp(onTouch)\nup:vp(dis)-&gt;vp(onTouch)\n\ndown:vp(dis)-&gt;vp(intercept=false)-&gt;vp1(dis)-&gt;vp1(intercept=true)-&gt;vp1(onTouch)\nmove:vp(dis)-&gt;vp(intercept=false)-&gt;vp1(dis)-&gt;vp1(onTouch)\nup:vp(dis)-&gt;vp(intercept=false)-&gt;vp1(dis)-&gt;vp1(onTouch)\n</code></pre></p> <p>\u603b\u7ed3 1. \u8c03\u7528\u987a\u5e8f\uff1adispatcchTouchEvent-&gt;onInterceptTouchEvent-&gt;onTouchEvent 2. onInterceptTouchEvent\u8fd4\u56detrue\u76f4\u63a5\u8c03\u7528\u81ea\u8eabonTouchEvent\uff0cfalse\u6216\u9ed8\u8ba4\u7ee7\u7eed\u5b50view\u5206\u53d1(dispatcchTouchEvent) 3. dispatcchTouchEvent\u8fd4\u56detrue/false\u76f4\u63a5\u7ed3\u675f\uff0c\u4e00\u822c\u9700\u8981\u8c03\u7528super\uff0cViewGroup\u91cc\u9762\u6709\u903b\u8f91 4. onTouchEvent\u8fd4\u56detrue\u8868\u793a\u6d88\u8d39\u4e8b\u4ef6\uff0cfalse\u624d\u4f1a\u7ee7\u7eed\u627e\u4e0b\u4e00\u4e2aview 5. \u4e8b\u4ef6\u5206\u53d1\u662f\u5012\u5e8f\u7684\uff0c\u540e\u6dfb\u52a0\u7684view\u4f18\u5148\u5206\u53d1\u4e8b\u4ef6</p>"}, {"location": "android/android_ui/#_3", "title": "\u4e8b\u4ef6\u51b2\u7a81", "text": "<ol> <li>\u5185\u90e8\u62e6\u622a\u6cd5</li> </ol> <p>\u6839\u636e\u6761\u4ef6\u5728\u5b50view\u4e2d\u7684dispatcchTouchEvent\u8bf7\u6c42\u7236\u5bb9\u5668\u4e0d\u62e6\u622a\u4e8b\u4ef6 <pre><code>parent.requestDisallowInterceptTouchEvent(true)\n</code></pre></p> <ol> <li>\u5916\u90e8\u62e6\u622a\u6cd5 \u76f4\u63a5\u5728\u7236\u5bb9\u5668\u7684onInterceptTouchEvent\u6839\u636e\u6761\u4ef6\u62e6\u622a\u4e8b\u4ef6</li> </ol>"}, {"location": "android/android_ui/#ontouchontoucheventonclick", "title": "onTouch\u3001onTouchEvent\u3001onClick", "text": "<p>onTouch\u662f\u901a\u8fc7setOnTouchListener\u56de\u8c03\uff0c\u8fd4\u56deboolean</p> <p>V2\u4e0a\u8bbe\u7f6esetOnTouchListener\uff0c\u5219\u8c03\u7528\u5982\u4e0b</p> <p>v2(dis)-&gt;onTouch(false)-&gt;v2(onTouchEvent)</p> <p>v2(dis)-&gt;onTouch(true)</p> <p>V2\u4e0a\u8bbe\u7f6esetOnClickListener\uff0c\u5219\u8c03\u7528\u5982\u4e0b</p> <p>v2(dis)-&gt;v2(onTouchEvent = false)</p> <p>v2(dis)-&gt;v2(onTouchEvent = true)</p> <p>v2(dis)-&gt;v2(onTouchEvent = super.onTouchEvent)-&gt;onClick</p> <p><pre><code>if (li != null &amp;&amp; li.mOnTouchListener != null\n        &amp;&amp; (mViewFlags &amp; ENABLED_MASK) == ENABLED\n        &amp;&amp; li.mOnTouchListener.onTouch(this, event)) {\n    result = true;\n}\n\nif (!result &amp;&amp; onTouchEvent(event)) {\n    result = true;\n}\n\n//onClick\u662f\u5728onTouchEvent\u4e2d\u5904\u7406\u7684\n</code></pre> \u603b\u7ed3\uff1a 1. onClick\u662f\u5728onTouchEvent\u4e2d\u5904\u7406\u7684\uff0c\u6240\u4ee5\u8bbe\u7f6esetOnTouchListener\u540eonClick\u53ef\u80fd\u4e0d\u4f1a\u8c03\u7528\uff0c\u7531onTouch\u7684\u8fd4\u56de\u503c\u51b3\u5b9a\uff0cfalse\u8c03\u7528 3. onClick\u8c03\u7528\u524d\u63d0\uff1asetOnTouchListener\u7684\u8fd4\u56defalse\uff0c\u4e14onTouchEvent\u8c03\u7528super.onTouchEvent\uff0c\u89e6\u53d1\u65f6\u673a\u5728UP\u4e8b\u4ef6\u540e <pre><code>public boolean onTouchEvent(MotionEvent event) {\n    //...\n    case MotionEvent.ACTION_UP:\n        if (!post(mPerformClick)) {\n            performClickInternal();\n        }\n    //...\n}\npublic boolean performClick() {\n    //...\nif (li != null &amp;&amp; li.mOnClickListener != null) {\n        playSoundEffect(SoundEffectConstants.CLICK);\n        li.mOnClickListener.onClick(this);\n        result = true;\n    } else {\n        result = false;\n    }\n    //...\n}\n</code></pre> \u8bbe\u8ba1\u6a21\u5f0f\uff1a\u8d23\u4efb\u94fe\u6a21\u5f0f</p>"}, {"location": "android/design_mode/", "title": "\u8bbe\u8ba1\u6a21\u5f0f", "text": ""}, {"location": "android/design_mode/#_1", "title": "\u8bbe\u8ba1\u6a21\u5f0f\u516d\u5927\u539f\u5219", "text": ""}, {"location": "android/design_mode/#1", "title": "1.\u5355\u4e00\u804c\u8d23\u539f\u5219", "text": "<p>\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u8d1f\u8d23\u4e00\u9879\u804c\u8d23</p>"}, {"location": "android/design_mode/#2", "title": "2.\u63a5\u53e3\u9694\u79bb\u539f\u5219", "text": "<p>\u5efa\u7acb\u5355\u4e00\u63a5\u53e3\uff0c\u4e0d\u8981\u5efa\u7acb\u81c3\u80bf\u5e9e\u5927\u7684\u63a5\u53e3\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u63a5\u53e3\u5c3d\u91cf\u7ec6\u5316\uff0c\u540c\u65f6\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u5c3d\u91cf\u5c11</p>"}, {"location": "android/design_mode/#3", "title": "3.\u91cc\u6c0f\u66ff\u6362\u539f\u5219", "text": "<p>\u5b50\u7c7b\u53ef\u4ee5\u6269\u5c55\u7236\u7c7b\u7684\u529f\u80fd\uff0c\u4f46\u662f\u4e0d\u80fd\u6539\u53d8\u7236\u7c7b\u539f\u6709\u7684\u529f\u80fd(\u4e0d\u80fd\u8986\u76d6\u7236\u7c7b\u7684\u975e\u62bd\u8c61\u65b9\u6cd5)</p>"}, {"location": "android/design_mode/#4", "title": "4.\u4f9d\u8d56\u5012\u7f6e\u539f\u5219", "text": "<p>\u6a21\u5757\u95f4\u4f9d\u8d56\u901a\u8fc7\u62bd\u8c61\u53d1\u751f\uff0c\u5b9e\u73b0\u7c7b\u4e4b\u95f4\u4e0d\u53d1\u751f\u76f4\u63a5\u4f9d\u8d56\u5173\u7cfb\uff0c\u5982\u7c7b\u4e2d\u7684\u6210\u5458\u5c5e\u6027\u5e94\u8be5\u62bd\u8c61\u5316(\u63a5\u53e3)</p>"}, {"location": "android/design_mode/#5", "title": "5.\u8fea\u7c73\u7279\u6cd5\u5219", "text": "<p>\u6838\u5fc3\u662f\u5c3d\u91cf\u964d\u4f4e\u7c7b\u4e4b\u95f4\u7684\u8026\u5408</p>"}, {"location": "android/design_mode/#6", "title": "6.\u5f00\u95ed\u539f\u5219", "text": "<p>\u5f3a\u8c03\u5bf9\u4fee\u6539\u5173\u95ed\uff0c\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u9075\u5faa\u8be5\u539f\u5219\u80fd\u591f\u4f7f\u4ee3\u7801\u66f4\u52a0\u7075\u6d3b\u3001\u6613\u4e8e\u7ef4\u62a4\u548c\u6269\u5c55</p>"}, {"location": "android/design_mode/#23", "title": "23\u79cd\u8bbe\u8ba1\u6a21\u5f0f", "text": "<ol> <li> <p>\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5171\u4e94\u79cd\uff1a\u2f2f\u2f1a\u2f45\u6cd5\u6a21\u5f0f\u3001\u62bd\u8c61\u2f2f\u2f1a\u6a21\u5f0f\u3001\u5355\u4f8b\u6a21\u5f0f\u3001\u5efa\u9020\u8005\u6a21\u5f0f\u3001\u539f\u578b\u6a21\u5f0f</p> </li> <li> <p>\u7ed3\u6784\u578b\u6a21\u5f0f\uff0c\u5171\u4e03\u79cd\uff1a\u9002\u914d\u5668\u6a21\u5f0f\u3001\u88c5\u9970\u5668\u6a21\u5f0f\u3001\u4ee3\u7406\u6a21\u5f0f\u3001\u5916\u89c2\u6a21\u5f0f\u3001\u6865\u63a5\u6a21\u5f0f\u3001\u7ec4\u5408\u6a21\u5f0f\u3001\u4eab\u5143\u6a21\u5f0f</p> </li> <li> <p>\u2f8f\u4e3a\u578b\u6a21\u5f0f\uff0c\u5171\u2f17\u2f00\u79cd\uff1a\u7b56\u7565\u6a21\u5f0f\u3001\u6a21\u677f\u2f45\u6cd5\u6a21\u5f0f\u3001\u89c2\u5bdf\u8005\u6a21\u5f0f\u3001\u8fed\u4ee3\u2f26\u6a21\u5f0f\u3001\u8d23\u4efb\u94fe\u6a21\u5f0f\u3001\u547d\u4ee4\u6a21\u5f0f\u3001\u5907\u5fd8\u5f55\u6a21\u5f0f\u3001\u72b6\u6001\u6a21\u5f0f\u3001\u8bbf\u95ee\u8005\u6a21\u5f0f\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3001\u89e3\u91ca\u5668\u6a21\u5f0f</p> </li> </ol>"}, {"location": "android/design_mode/#_2", "title": "\u5355\u4f8b\u6a21\u5f0f", "text": "<p>\u5355\u4f8b\u6a21\u5f0f</p>"}, {"location": "android/design_mode/#_3", "title": "\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f", "text": "<p>AsyncTask(onPreExecute\u3001doInBackground\u3001onPostExecute)\u3001Activity(\u751f\u547d\u5468\u671f)</p>"}, {"location": "android/design_mode/#_4", "title": "\u89c2\u5bdf\u8005\u6a21\u5f0f", "text": "<p>\u89c2\u5bdf\u8005\u6a21\u5f0f</p>"}, {"location": "android/design_mode/#_5", "title": "\u4eab\u5143\u6a21\u5f0f", "text": "<p>\u4eab\u5143\u6a21\u5f0f</p>"}, {"location": "android/design_mode/#_6", "title": "\u7b56\u7565\u6a21\u5f0f", "text": "<p>\u7b56\u7565\u6a21\u5f0f</p>"}, {"location": "android/design_mode/#_7", "title": "\u8d23\u4efb\u94fe\u6a21\u5f0f <p>Android\u4e8b\u4ef6\u5206\u53d1\u673a\u5236</p> <p>\u4f18\u70b9 1. \u964d\u4f4e\u5bf9\u8c61\u95f4\u8026\u5408\u5ea6 2. \u589e\u5f3a\u7cfb\u7edf\u53ef\u6269\u5c55\u6027\uff0c\u6ee1\u8db3\u5f00\u95ed\u539f\u5219 3. \u589e\u5f3a\u5bf9\u8c61\u6307\u6d3e\u8d23\u4efb\u7684\u7075\u6d3b\u6027 4. \u7b80\u5316\u5bf9\u8c61\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u907f\u514dif else\u8bed\u53e5 5. \u8d23\u4efb\u5206\u62c5\uff0c\u6bcf\u4e2a\u7c7b\u53ea\u9700\u8981\u5904\u7406\u81ea\u5df1\u7684\u5de5\u4f5c\uff0c\u7b26\u5408\u5355\u4e00\u804c\u8d23\u539f\u5219</p> <p>\u7f3a\u70b9 1. \u4e0d\u80fd\u4fdd\u8bc1\u4e8b\u4ef6\u4e00\u5b9a\u88ab\u5904\u7406 2. \u8d23\u4efb\u94fe\u592a\u957f\u65f6\uff0c\u7cfb\u7edf\u6027\u80fd\u53d7\u5f71\u54cd 3. \u8d23\u4efb\u94fe\u5efa\u7acb\u9700\u8981\u5408\u7406\u5904\u7406\u624d\u80fd\u4fdd\u8bc1\uff0c\u590d\u6742\u6027\u589e\u52a0</p>", "text": ""}, {"location": "android/resource/", "title": "\u5e38\u7528\u7f51\u7ad9", "text": "<p>\u8c37\u6b4c\u6587\u5b57\u5e93\uff1ahttps://www.googlefonts.cn/</p> <p>Android\u7248\u672c\uff1ahttps://developer.android.google.cn/about/versions?hl=zh-cn</p> <p>\u84dd\u7259\u3001\u7f51\u7edc\u3001USB\u7b49\uff1ahttps://developer.android.google.cn/develop/connectivity/overview?hl=zh-cn</p> <p>Android\u5f00\u53d1\uff1ahttps://developer.android.google.cn/guide?hl=zh-cn</p> <p>\u6587\u5fc3\u4e00\u8a00</p> <p>\u901a\u4e49\u5343\u95ee</p> <p>OpenAI</p> <p>elijahjom7o@outlook.com gH1HSlvjgH1HSlvj</p>"}, {"location": "android/api/Bitmap/", "title": "Bitmap", "text": ""}, {"location": "android/api/Bitmap/#bitmapfile", "title": "Bitmap\u4fdd\u5b58File", "text": "<p>Android10\u53ca\u4ee5\u4e0a\u4f7f\u7528MediaStore\uff0c\u4e0d\u9700\u8981\u7533\u8bf7\u6743\u9650 \u5220\u9664\u56fe\u7247 <pre><code>fun deleteImageFromGallery(context: Context, displayName: String) {\n        val resolver = context.contentResolver\n        val collection = MediaStore.Images.Media.EXTERNAL_CONTENT_URI\n        val selection = MediaStore.Images.Media.DISPLAY_NAME + \"=?\"\n        val selectionArgs = arrayOf(displayName)\n        val deleted = resolver.delete(collection, selection, selectionArgs)\n        if (deleted &gt; 0) {\n            //\u5220\u9664\u6210\u529f\n        } else {\n            //\u5220\u9664\u5931\u8d25\n        }\n    }\n</code></pre> \u4fdd\u5b58\u56fe\u7247\u5230\u672c\u5730 <pre><code>fun saveBitmap(context: Context, displayName: String, bitmap: Bitmap) :Uri?{\n    val values = ContentValues()\n    values.put(MediaStore.Images.Media.DISPLAY_NAME, displayName)\n    values.put(MediaStore.Images.Media.MIME_TYPE, \"image/jpeg\")\n\n    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.Q) {\n        values.put(MediaStore.Images.Media.RELATIVE_PATH, Environment.DIRECTORY_PICTURES)\n    } else {\n        val storageDir =\n            Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES)\n        val path = storageDir.absolutePath + File.separator + displayName\n        values.put(MediaStore.Images.Media.DATA, path)\n    }\n\n    val resolver: ContentResolver = context.contentResolver\n    val uri = try {\n        resolver.insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values)\n    } catch (e: Exception) {\n        null\n    }\n    if (uri != null) {\n        resolver.openOutputStream(uri)?.use { outputStream -&gt;\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, outputStream)\n            outputStream.flush()\n        }\n    }\n    return uri\n}\n</code></pre></p>"}, {"location": "android/api/Bitmap/#bitmaphardwarebuffer", "title": "Bitmap\u8f6cHardwareBuffer", "text": "<p>\u4ec5\u9650\u7cfb\u7edf\u4f7f\u7528 <pre><code>BitmapFactory.Options options = new BitmapFactory.Options();\noptions.inPreferredConfig = Bitmap.Config.HARDWARE;\n\nHardwareBuffer hardwareBuffer = BitmapFactory.decodeResource(mService.mContext.getResources(),\n    com.android.internal.R.drawable.xxx, options).getHardwareBuffer();\n</code></pre></p>"}, {"location": "android/api/Bitmap/#bitmap", "title": "Bitmap\u4e4b\u6027\u80fd\u4f18\u5316", "text": "<p>\u89c1Bitmap\u5185\u5b58\u4f18\u5316</p>"}, {"location": "android/component/com_base/", "title": "as\u914d\u7f6e", "text": ""}, {"location": "android/component/com_base/#_1", "title": "\u610f\u4e49", "text": "<p>\u4e0d\u4e92\u76f8\u4f9d\u8d56\uff0c\u53ef\u4ee5\u4e92\u76f8\u4ea4\u4e92\uff0c\u4efb\u610f\u7ec4\u5408\uff0c\u9ad8\u5ea6\u89e3\u8026\uff0c\u81ea\u7531\u62c6\u5378\uff0c\u81ea\u7531\u7ec4\u88c5\uff0c\u91cd\u590d\u5229\u7528\uff0c\u5206\u5c42\u72ec\u7acb\u5316</p>"}, {"location": "android/component/com_base/#_2", "title": "\u5de5\u7a0b\u914d\u7f6e", "text": "<p>app\u58f3\u5de5\u7a0b\u548c\u591a\u4e2a\u72ec\u7acb\u6a21\u5757</p> <p>\u5229\u7528gradle\u5207\u6362application\u548clibrary\u8fbe\u5230\u6a21\u5757\u53ef\u72ec\u7acb\u8fd0\u884c</p> <p>\u6839\u76ee\u5f55\u6dfb\u52a0config.gradle <pre><code>ext {\n    isRelease = false//\u5f00\u5173\u63a7\u5236\uff0c\u8c03\u8bd5\u65f6\u8ba9\u6a21\u5757\u5355\u72ec\u8fd0\u884c\n    appId = [\n            app    : \"com.android.kotlinapp\",\n            module1: \"com.module.xx\",\n            module2: \"com.module.xxx\",\n    ]\n}\n</code></pre> \u6839build.gradle\u5f15\u7528 <pre><code>apply from: \"config.gradle\"\n</code></pre> \u6a21\u5757gradle\u4fee\u6539 <pre><code>def config = rootProject.ext\nif (config.isRelease) {\n    apply plugin: 'com.android.library'\n} else {\n    apply plugin: 'com.android.application'\n}\nandroid {\n    defaultConfig {\n        if (!config.isRelease) {//\u8c03\u8bd5\u65f6\u9700\u8981id\n            applicationId config.appId.module1\n        }\n        ...\n    }\n    ...\n}\n</code></pre> app\u58f3gradle\u4fee\u6539 <pre><code>if (config.isRelease) {\n    implementation project(path: ':module1')\n    implementation project(path: ':module2')\n    implementation project(path: ':module3')\n}\n</code></pre></p>"}, {"location": "android/component/com_base/#apt", "title": "APT\u6280\u672f", "text": "<p>\u65b0\u5efa\u4e24\u4e2ajava/kotlin\u6a21\u5757\uff0cannotations\u548ccompiler </p> <p>\u5176\u4e2dannotations\u4e3b\u8981\u662f\u58f0\u660e\u6ce8\u89e3\uff0ccompiler\u7528\u4e8eAPT\u5b9e\u73b0</p> <p>\u6ce8\u89e3\u90e8\u5206\u6bd4\u8f83\u7b80\u5355 <pre><code>@Target( AnnotationTarget.CLASS)\n@Retention(AnnotationRetention.BINARY)\nannotation class ARouter(\n    val path: String = \"\",\n    val group: String = \"\"\n)\n</code></pre> APT\u7528\u4e8e\u4ee5\u4ee3\u7801\u7684\u65b9\u5f0f\u751f\u6210\u4ee3\u7801\uff0c\u9996\u5148gradle\u6dfb\u52a0\u4f9d\u8d56 <pre><code>plugins {\n    id 'kotlin-kapt'\n}\ndependencies {\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n\n    // \u80cc\u540e\u7684\u670d\u52a1 \u80fd\u591f\u76d1\u542c \u4f60\u662f\u5426\u5728\u7f16\u8bd1\u4e2d.....\n    // https://github.com/google/auto/tree/master/service\n    compileOnly 'com.google.auto.service:auto-service:1.0.1'\n    kapt 'com.google.auto.service:auto-service:1.0.1'\n\n    // \u5e2e\u52a9\u6211\u4eec\u901a\u8fc7\u7c7b\u8c03\u7528\u7684\u5f62\u5f0f\u6765\u751f\u6210Java\u4ee3\u7801\n    // https://github.com/square/javapoet\n    // https://github.com/square/kotlinpoet\n    //implementation 'com.squareup:javapoet:1.13.0'\n    implementation 'com.squareup:kotlinpoet:1.12.0'\n\n    // \u4f9d\u8d56\u6ce8\u89e3\n    implementation project(\":annotations\")\n}\n</code></pre> \u540c\u6b65\u540e\u81ea\u5b9a\u4e49\u7c7b\u76d1\u542c\u7f16\u8bd1\u65f6 <pre><code>@AutoService(Processor::class)// \u542f\u7528\u670d\u52a1\n@SupportedSourceVersion(SourceVersion.RELEASE_11) // \u73af\u5883\u7684\u7248\u672c\n@SupportedOptions(\"moduleName\") // \u63a5\u6536 \u5b89\u5353\u5de5\u7a0b\u4f20\u9012\u8fc7\u6765\u7684\u53c2\u6570\n@SupportedAnnotationTypes(\"com.hfc.annotations.ARouter\")// \u6ce8\u89e3\u5b8c\u6574\u8def\u5f84\nclass ARouterProcessor : AbstractProcessor() {\n    // \u64cd\u4f5cElement\u7684\u5de5\u5177\u7c7b\uff08\u7c7b\uff0c\u51fd\u6570\uff0c\u5c5e\u6027\uff0c\u5176\u5b9e\u90fd\u662fElement\uff09\n    private lateinit var mElements: Elements\n\n    // Message\u7528\u6765\u6253\u5370 \u65e5\u5fd7\u76f8\u5173\u4fe1\u606f\n    private lateinit var mMessager: Messager\n\n    // \u6587\u4ef6\u751f\u6210\u5668\uff0c \u7c7b\u8d44\u6e90\u7b49\uff0c\u5c31\u662f\u6700\u7ec8\u8981\u751f\u6210\u7684\u6587\u4ef6\u662f\u9700\u8981Filer\u6765\u5b8c\u6210\u7684\n    private lateinit var mFiler: Filer\n\n    // type(\u7c7b\u4fe1\u606f)\u7684\u5de5\u5177\u7c7b\uff0c\u5305\u542b\u7528\u4e8e\u64cd\u4f5cTypeMirror\u7684\u5de5\u5177\u65b9\u6cd5\n    private lateinit var mTypeTool: Types\n\n    override fun init(processingEnv: ProcessingEnvironment) {\n        super.init(processingEnv)\n        mElements = processingEnv.elementUtils\n        mMessager = processingEnv.messager\n        mFiler = processingEnv.filer\n\n        val name = processingEnv.options?.get(\"moduleName\")\n        mMessager.printMessage(Diagnostic.Kind.NOTE, \"===============init $name\")\n    }\n\n    override fun process(\n        annotations: MutableSet&lt;out TypeElement&gt;,\n        roundEnv: RoundEnvironment\n    ): Boolean {\n        mMessager.printMessage(Diagnostic.Kind.NOTE, \"------------------process\")\n        if (annotations.isEmpty()) {\n            return false // \u7531\u4e8e\u56de\u8c03\u75283\u6b21\u6b64\u65b9\u6cd5\uff0c\u5176\u4e2d\u6b63\u786e\u7684\u4e00\u6b21annotations\u6709\u503c\n        }\n        return false\n    }\n}\n</code></pre> \u6ce8\uff1a Diagnostic.Kind.ERROR\u7528\u4e8e\u629b\u5f02\u5e38\uff0c\u53ef\u4ee5\u5728\u4ee3\u7801\u68c0\u67e5\u5f02\u5e38\u65f6\u4f7f\u7528</p> <p>SupportedOptions\u63a5\u6536\u7684\u53c2\u6570\u662f\u901a\u8fc7gradle\u4f20\u9012\uff0c\u6a21\u5757\u4e2d\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49 <pre><code>kapt {\n    arguments {\n        arg(\"moduleName\", project.getName())\n    }\n}\n</code></pre> javapoet/kotlinpoet\u90fd\u662f\u4ee5oop\u601d\u60f3\u65b9\u5f0f\u751f\u6210\u4ee3\u7801\uff0c\u8fd8\u6709\u4e00\u79cd\u4f20\u7edf\u65b9\u5f0f\u76f4\u63a5\u4e00\u884c\u884c\u5199\u5b57\u7b26\u4e32\u65b9\u5f0f\u53ef\u770bEventBus\u5b9e\u73b0</p>"}, {"location": "android/component/com_base/#auto-service", "title": "auto-service", "text": "<p>build.gradle\u4e2d\u6dfb\u52a0\u6ce8\u89e3\u89e3\u91ca\u5668\u548cauto-service</p> <p>\u89c1as\u914d\u7f6e</p>"}, {"location": "android/component/com_base/#auto-service_1", "title": "\u4f7f\u7528Auto-Service", "text": "<p><pre><code>object ServiceLoader {\n    fun &lt;T&gt; load(service: Class&lt;T&gt;): T? {\n        return try {\n            ServiceLoader.load(service).iterator().next()\n        } catch (e: Exception) {\n            null\n        }\n    }\n}\n</code></pre> \u4e3b\u8981\u7528\u6765\u52a0\u8f7d\u63a5\u53e3\u65b9\u6cd5 <pre><code>interface XXX{\n    fun xx()\n}\n\n@AutoService(XXX::class)\nclass XXXImpl: XXX {\n}\n\nServiceLoader.load(XXX::class.java)\n</code></pre> \u4f7f\u7528\u6848\u4f8bWebView\u5c01\u88c5</p>"}, {"location": "android/compose/compose_annotation/", "title": "Compose annotation", "text": ""}, {"location": "android/compose/compose_annotation/#composable", "title": "@Composable", "text": "<p>\u53ef\u7ec4\u5408\u51fd\u6570\uff0cJetpack Compose \u662f\u56f4\u7ed5\u53ef\u7ec4\u5408\u51fd\u6570\u6784\u5efa\u7684 <pre><code>@Composable\nfun MessageCard(name: String) {\n    Text(text = \"Hello $name!\")\n}\n</code></pre></p>"}, {"location": "android/compose/compose_annotation/#preview", "title": "@Preview", "text": "<p>\u5f00\u542f\u9884\u89c8\u529f\u80fd <pre><code>@Preview(\n    showBackground = true,\n    showSystemUi = true,\n    device = Devices.NEXUS_5\n)\n@Composable\nfun MessageCard(name: String) {\n    Text(text = \"Hello $name!\")\n}\n</code></pre> \u63a5\u53e3</p> \u53c2\u6570\u540d \u53c2\u6570\u7c7b\u578b \u5fc5\u586b \u53c2\u6570\u63cf\u8ff0 name String \u5426 \u8bbe\u7f6e\u9884\u89c8\u522b\u540d group String \u5426 \u8bbe\u7f6e\u9884\u89c8\u7ec4\u540d apiLevel Int \u5426 \u8bbe\u7f6eapi\u7b49\u7ea7\uff0c\u6839\u636eas\u63d0\u793a\u8303\u56f4\u586b\u5199 widthDp Int \u5426 \u8bbe\u7f6e\u9884\u89c8\u754c\u9762\u5bbd\u5ea6\uff0c\u5355\u4f4ddp heightDp Int \u5426 \u8bbe\u7f6e\u9884\u89c8\u754c\u9762\u9ad8\u5ea6\uff0c\u5355\u4f4ddp locale String \u5426 \u8bbe\u7f6e\u9884\u89c8\u8bed\u8a00\uff0c\u5982\u4e2d\u6587\uff0c\u82f1\u6587\u7b49 fontScale Float \u5426 \u8bbe\u7f6e\u9884\u89c8\u6587\u5b57\u7f29\u653e showSystemUi Boolean \u5426 \u8bbe\u7f6e\u9884\u89c8\u72b6\u6001\u680f\u5e95\u90e8\u680f\u663e\u793a showBackground Boolean \u5426 \u8bbe\u7f6e\u9884\u89c8\u754c\u9762\u80cc\u666f\u663e\u793a backgroundColor String \u5426 \u8bbe\u7f6e\u9884\u89c8\u754c\u9762\u80cc\u666f\u989c\u8272 uiMode UiMode \u5426 \u8bbe\u7f6e\u9884\u89c8\u663e\u793a\u6a21\u5f0f\uff0c\u5982\u591c\u95f4\u6a21\u5f0f device Device \u5426 \u8bbe\u7f6e\u9884\u89c8\u8bbe\u5907 wallpaper Wallpaper \u5426 \u8bbe\u7f6e\u9884\u89c8\u58c1\u7eb8"}, {"location": "android/compose/compose_annotation/#uimode", "title": "UiMode", "text": "\u540d\u79f0 \u63cf\u8ff0 UI_MODE_TYPE_UNDEFINED \u672a\u5b9a\u4e49 UI_MODE_TYPE_NORMAL \u6b63\u5e38\u6a21\u5f0f UI_MODE_TYPE_DESK \u5de5\u4f5c\u6a21\u5f0f UI_MODE_TYPE_CAR \u6c7d\u8f66\u6a21\u5f0f UI_MODE_TYPE_TELEVISION \u7535\u89c6\u8bbe\u5907 UI_MODE_TYPE_APPLIANCE \u4fbf\u643a\u8bbe\u5907 UI_MODE_TYPE_WATCH \u624b\u8868\u8bbe\u5907 UI_MODE_TYPE_VR_HEADSET VR\u8bbe\u5907 UI_MODE_NIGHT_MASK \u591c\u95f4\u6a21\u5f0f UI_MODE_NIGHT_UNDEFINED \u591c\u95f4\u672a\u5b9a\u4e49 UI_MODE_NIGHT_NO \u767d\u5929\u6a21\u5f0f UI_MODE_NIGHT_YES \u9ed1\u591c\u6a21\u5f0f <p>group\u4e00\u822c\u548cdevices\u7ec4\u5408\u4f7f\u7528\uff0c\u5982\u6a2a\u5c4f\u548c\u7ad6\u5c4f </p>"}, {"location": "android/compose/compose_laziness/", "title": "Compose laziness", "text": "<p>\u6848\u4f8b</p> <p><pre><code>fun MainSample() {\n    log(\"1\")\n    var state by remember {\n        mutableStateOf(\"init\")\n    }\n    LaunchedEffect(key1 = Unit){\n        delay(1000L)\n        state = \"modify\"\n    }\n    Greeting(content = state)\n    log(\"4\")\n}\n\n@Composable\nfun Greeting(content: String) {\n    log(\"2 $content\")\n    Text(text = content)\n    log(\"3 $content\")\n}\n\nfun log(msg: String){\n    Log.d(\"TAG\", \"log: $msg\")\n}\n\n\u8fd0\u884c\u7ed3\u679c\uff1a\n\nlog: 1\nlog: 2 init\nlog: 3 init\nlog: 4\n1s\u540e\nlog: 1\nlog: 2 modify\nlog: 3 modify\nlog: 4\n</code></pre> \u4f18\u5316\u540e</p> <p><pre><code>fun MainSample() {\n    ...\n    Greeting { state }\n    ...\n}\n\n@Composable\nfun Greeting(lambda: () -&gt; String) {\n    log(\"2 ${lambda()}\")\n    Text(text = lambda())\n    log(\"3 ${lambda()}\")\n}\n\n\u8fd0\u884c\u7ed3\u679c\uff1a\n\nlog: 1\nlog: 2 init\nlog: 3 init\nlog: 4\n1s\u540e\nlog: 2 modify\nlog: 3 modify\n</code></pre> \u539f\u56e0\u662flambda\u8868\u8fbe\u5f0f\u662f\u5728\u8c03\u7528\u7684\u65f6\u5019\u624d\u6267\u884c\uff0c\u4f18\u5316\u540e\u7684\u4f5c\u7528\u57df\u53d8\u6210\u4e86Greeting\u51fd\u6570\u4e2d\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u89e6\u53d1MainSample\u7684\u51fd\u6570\u4f5c\u7528\u57df</p>"}, {"location": "android/compose/compose_text/", "title": "Compose text", "text": ""}, {"location": "android/compose/compose_text/#_1", "title": "\u6587\u5b57\u5185\u5bb9", "text": "<pre><code>Text(text = \"app_name\")\nText(text = stringResource(id = R.string.app_name))\n</code></pre>"}, {"location": "android/compose/compose_text/#_2", "title": "\u6587\u5b57\u989c\u8272", "text": "<pre><code>color = Color.Blue\ncolor = Color(0XFFFFFF00)\ncolor = Color(1F, 1F, 0F, 1f)\ncolor = Color(255, 255, 0, 0xFF)\ncolor = colorResource(id = R.color.black)\n</code></pre>"}, {"location": "android/compose/compose_text/#_3", "title": "\u6587\u5b57\u5927\u5c0f", "text": "<pre><code>fontSize = 16.sp\nfontSize = TextUnit(22f, TextUnitType.Sp)\n</code></pre>"}, {"location": "android/compose/compose_text/#_4", "title": "\u6587\u5b57\u7c97\u7ec6", "text": "<pre><code>fontWeight = FontWeight.Bold\n</code></pre>"}, {"location": "android/compose/compose_text/#_5", "title": "\u6587\u5b57\u6837\u5f0f", "text": "<pre><code>fontStyle = FontStyle.Normal\nfontStyle = FontStyle.Italic\n</code></pre>"}, {"location": "android/compose/compose_text/#_6", "title": "\u5b57\u4f53", "text": "<pre><code>fontFamily = FontFamily.SansSerif\n</code></pre>"}, {"location": "android/compose/compose_text/#_7", "title": "\u6587\u5b57\u95f4\u8ddd", "text": "<pre><code>letterSpacing = 10.sp\n</code></pre>"}, {"location": "android/compose/compose_text/#_8", "title": "\u6587\u5b57\u88c5\u9970", "text": "<pre><code>textDecoration = TextDecoration.Underline//\u4e0b\u5212\u7ebf\ntextDecoration = TextDecoration.combine(listOf(\n            TextDecoration.LineThrough,//\u5220\u9664\u7ebf\n            TextDecoration.Underline//\u4e0b\u5212\u7ebf\n        ))//\u540c\u65f6\u5b58\u5728\n</code></pre>"}, {"location": "android/compose/compose_text/#_9", "title": "\u6587\u5b57\u4f4d\u7f6e", "text": "<pre><code>textAlign = TextAlign.Center\n</code></pre>"}, {"location": "android/compose/compose_text/#_10", "title": "\u884c\u9ad8", "text": "<pre><code>lineHeight = 15.sp\n</code></pre>"}, {"location": "android/compose/compose_text/#_11", "title": "\u6587\u5b57\u884c\u6570\u4ee5\u53ca\u88c1\u526a", "text": "<pre><code>overflow = TextOverflow.Clip\nmaxLines = 1\n</code></pre>"}, {"location": "android/compose/compose_text/#_12", "title": "\u6587\u5b57\u6837\u5f0f\u53ef\u8bbe\u7f6e\u5f88\u591a\u5c5e\u6027\uff0c\u5305\u62ec\u4ee5\u4e0a\u4ee5\u53ca\u989d\u5916\u7684\u7f29\u8fdb\u7b49", "text": "<pre><code>style = TextStyle()\n</code></pre>"}, {"location": "android/compose/compose_text/#_13", "title": "\u6587\u5b57\u53ef\u9009\u62e9", "text": "<pre><code>SelectionContainer {\n    Text()\n}\n</code></pre>"}, {"location": "android/compose/compose_text/#_14", "title": "\u53ef\u70b9\u51fb\u6587\u672c(\u5bcc\u6587\u672c)", "text": "<p>\u6848\u4f8b\uff1a\u7528\u6237\u534f\u8bae\u548c\u9690\u79c1\u653f\u7b56\u70b9\u51fb\u8d85\u94fe\u63a5 <pre><code>val annoStr = buildAnnotatedString {\n    append(\"\u70b9\u51fb\u767b\u5f55\u4ee3\u7801\u540c\u610f\")\n    pushStringAnnotation(\"protocol\", \"https://www.baidu.com\")\n    withStyle(\n        SpanStyle(\n            color = Color.Blue,\n            textDecoration = TextDecoration.Underline\n        )\n    ) {\n        append(\"\u7528\u6237\u534f\u8bae\")\n    }\n    pop()\n    append(\"\u548c\")\n    pushStringAnnotation(\"private\", \"https://developer.android.google.cn/jetpack/compose\")\n    withStyle(\n        SpanStyle(\n            color = Color.Blue,\n            textDecoration = TextDecoration.Underline\n        )\n    ) {\n        append(\"\u9690\u79c1\u653f\u7b56\")\n    }\n    pop()\n}\nvar showStr by remember {\n    mutableStateOf(\"\")\n}\nColumn {\n    ClickableText(text = annoStr, onClick = { position -&gt;\n        showStr = annoStr.getStringAnnotations(\"protocol\", position, position)\n            .firstOrNull()?.item ?: annoStr.getStringAnnotations(\"private\", position, position)\n            .firstOrNull()?.item ?: \"\"\n    })\n    Text(text = showStr)\n}\n</code></pre></p>"}, {"location": "android/design/design_enyuan/", "title": "Design enyuan", "text": ""}, {"location": "android/design/design_enyuan/#_1", "title": "\u7b80\u4ecb", "text": "<p>\u4eab\u5143\u6a21\u5f0f\u662f\u5bf9\u8c61\u6c60\u7684\u4e00\u79cd\u5b9e\u73b0\uff0c\u4eab\u5143\u6a21\u5f0f\u7528\u6765\u5c3d\u53ef\u80fd\u51cf\u5c11\u5185\u5b58\u4f7f\u7528\u91cf\uff0c\u5b83\u9002\u5408\u7528\u4e8e\u53ef\u80fd\u5b58\u5728\u5927\u91cf\u91cd\u590d\u5bf9\u8c61\u7684\u573a\u666f\uff0c\u6765\u7f13\u5b58\u53ef\u5171\u4eab\u7684\u5bf9\u8c61\uff0c\u8fbe\u5230\u5bf9\u8c61\u5171\u4eab\u3001\u907f\u514d\u521b\u5efa\u8fc7\u591a\u5bf9\u8c61\u7684\u6548\u679c\uff0c\u8fd9\u6837\u4e00\u6765\u5c31\u53ef\u4ee5\u63d0\u5347\u6027\u80fd\u3001\u907f\u514d\u5185\u5b58\u79fb\u9664\u7b49\u3002</p>"}, {"location": "android/design/design_enyuan/#_2", "title": "\u4f7f\u7528\u573a\u666f", "text": "<ol> <li>\u7cfb\u7edf\u4e2d\u5b58\u5728\u5927\u91cf\u7684\u76f8\u4f3c\u5bf9\u8c61\u3002</li> <li>\u7ec6\u7c92\u5ea6\u7684\u5bf9\u8c61\u90fd\u5177\u5907\u8f83\u63a5\u8fd1\u7684\u5916\u90e8\u72b6\u6001\uff0c\u800c\u4e14\u5185\u90e8\u72b6\u6001\u4e0e\u73af\u5883\u65e0\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u8c61\u6ca1\u6709\u7279\u5b9a\u8eab\u4efd\u3002</li> <li>\u9700\u8981\u7f13\u51b2\u6c60\u7684\u573a\u666f\u3002</li> </ol>"}, {"location": "android/design/design_enyuan/#android", "title": "Android\u4e2d\u7684\u5e94\u7528", "text": ""}, {"location": "android/design/design_enyuan/#handler", "title": "Handler\u4e2d", "text": "<p><pre><code>// Handler\npublic final Message obtainMessage(){\n    return Message.obtain(this);\n}\n// Message\npublic static Message obtain(Handler h) {\n    Message m = obtain();\n    m.target = h;\n    return m;\n}\npublic static Message obtain() {\n    synchronized (sPoolSync) {\n        if (sPool != null) { // \u4ece\u7f13\u5b58\u4e2d\u53d6Message\n            Message m = sPool;\n            sPool = m.next;\n            m.next = null;\n            m.flags = 0; // clear in-use flag\n            sPoolSize--;\n            return m;\n        }\n    }\n    return new Message();\n}\n// Looper\u4e2dloopOnce\u65b9\u6cd5\u6700\u540e\u4f1a\u56de\u6536message\nmsg.recycleUnchecked(); \nvoid recycleUnchecked() {\n    flags = FLAG_IN_USE;\n    what = 0;\n    arg1 = 0;\n    arg2 = 0;\n    obj = null;\n    replyTo = null;\n    sendingUid = UID_NONE;\n    workSourceUid = UID_NONE;\n    when = 0;\n    target = null;\n    callback = null;\n    data = null;\n\n    synchronized (sPoolSync) { // \u5c06Message\u5185\u5bb9\u6e05\u7a7a\u540e\u5b58\u653e\u5230\u7f13\u5b58\u4e2d\u4ee5\u4fbf\u4e8e\u590d\u7528\n        if (sPoolSize &lt; MAX_POOL_SIZE) { // \u4e0a\u965050\u4e2a\n            next = sPool;\n            sPool = this;\n            sPoolSize++;\n        }\n    }\n}\n</code></pre> \u8bbe\u8ba1\u4f18\u52bf\uff1a</p> <ol> <li>\u5c4f\u5e55\u5237\u65b0\u4e5f\u9700\u8981Handler\u5904\u7406\u6d88\u606f(60hz,120hz\u7b49\u6bcf16ms\u62168ms\u6d88\u606f\u5904\u7406\u4e00\u6b21\u6bd4\u8f83\u9891\u7e41)\uff0c\u5982\u679c\u4e0d\u8fdb\u884c\u7f13\u5b58\u590d\u7528\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5185\u5b58\u6296\u52a8</li> <li>\u6709\u5229\u4e8e\u5c11\u5185\u5b58\u788e\u7247\uff0c\u5982\u679c\u76f4\u63a5new\u7684\u65b9\u5f0f\u4f1a\u4ea7\u751f\u5185\u5b58\u788e\u7247\uff0c\u5f53\u521b\u5efa\u6bd4\u8f83\u5927\u53c8\u9700\u8981\u8fde\u7eed\u5185\u5b58\u65f6\u53ef\u80fd\u5bfc\u81f4oom(\u5982\u521b\u5efabitmap)</li> </ol>"}, {"location": "android/design/design_enyuan/#recyclerview", "title": "RecyclerView\u4e2d", "text": ""}, {"location": "android/design/design_observer/", "title": "Design observer", "text": ""}, {"location": "android/design/design_observer/#_1", "title": "\u89c2\u5bdf\u8005\u6a21\u5f0f", "text": ""}, {"location": "android/design/design_observer/#_2", "title": "\u7b80\u4ecb", "text": "<p>\u5b9a\u4e49\u5bf9\u8c61\u95f4\u4e00\u79cd\u4e00\u5bf9\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u5bf9\u8c61\u72b6\u6001\u6539\u53d8\u65f6\uff0c\u6240\u6709\u4f9d\u8d56\u4e8e\u5b83\u7684\u5bf9\u8c61\u90fd\u4f1a\u5f97\u5230\u901a\u77e5\u5e76\u88ab\u81ea\u52a8\u66f4\u65b0</p>"}, {"location": "android/design/design_observer/#_3", "title": "\u4f7f\u7528\u573a\u666f", "text": "<ol> <li>\u5173\u8054\u884c\u4e3a\u573a\u666f\uff0c\u884c\u4e3a\u53ef\u4ee5\u62c6\u5206\u4e0d\u662f\u7ec4\u5408\u5173\u7cfb</li> <li>\u4e8b\u4ef6\u591a\u7ea7\u89e6\u53d1\u573a\u666f</li> <li>\u8de8\u7cfb\u7edf\u7684\u6d88\u606f\u4ea4\u6362\u573a\u666f\uff0c\u5982\u6d88\u606f\u961f\u5217\u4e8b\u4ef6\u603b\u7ebf\u7684\u5904\u7406\u673a\u5236</li> </ol>"}, {"location": "android/design/design_observer/#_4", "title": "\u6848\u4f8b", "text": "<pre><code>//\u88ab\u89c2\u5bdf\u8005\ninterface Observable {\n    fun addObserver(observer: Observer)\n    fun removeObserver(observer: Observer)\n    fun notifyObservers()\n    fun pushMsg(msg: String)\n}\nclass ObservableImpl : Observable {\n    private val mObservers: ArrayList&lt;Observer&gt; = ArrayList()\n    private var mMsg: String = \"\"\n    override fun addObserver(observer: Observer) {\n        mObservers += observer\n    }\n    override fun removeObserver(observer: Observer) {\n        mObservers -= observer\n    }\n    override fun notifyObservers() {\n        mObservers.forEach {\n            it.update(mMsg)\n        }\n    }\n    override fun pushMsg(msg: String) {\n        mMsg = msg\n        notifyObservers()\n    }\n}\n//\u89c2\u5bdf\u8005\ninterface Observer {\n    fun update(msg: Any)\n}\nclass ObserverImpl(var name: String) : Observer {\n    override fun update(msg: Any) {\n        println(\"${name}\u63a5\u6536\u5230\u901a\u77e5\uff1a$msg\")\n    }\n}\nfun main() {\n    val wechat = ObservableImpl()\n    val user1 = ObserverImpl(\"\u7528\u62371\")\n    val user2 = ObserverImpl(\"\u7528\u62372\")\n    val user3 = ObserverImpl(\"\u7528\u62373\")\n    wechat.addObserver(user1)\n    wechat.addObserver(user2)\n    wechat.addObserver(user3)\n    wechat.pushMsg(\"\u5fae\u4fe1\u5347\u7ea78.5\u7248\u672c\")\n    wechat.removeObserver(user2)\n    wechat.pushMsg(\"\u5fae\u4fe1\u5347\u7ea78.6\u7248\u672c\")\n}\n</code></pre>"}, {"location": "android/design/design_observer/#android", "title": "Android\u4e2d\u7684\u5e94\u7528", "text": "<ol> <li>View\u8bbe\u7f6e\u4e8b\u4ef6</li> <li>ListView\u3001RecyclerView\u4e2d\u7684Adapter\u6570\u636e\u5237\u65b0\u76d1\u542c</li> <li>Rxjava</li> </ol>"}, {"location": "android/design/design_observer/#_5", "title": "\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f", "text": ""}, {"location": "android/design/design_observer/#_6", "title": "\u7b80\u4ecb", "text": "<p>\u5176\u5b9e\u5c31\u662f\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u884d\u751f\uff0c\u533a\u522b\u5982\u4e0b</p> <p></p>"}, {"location": "android/design/design_observer/#_7", "title": "\u6848\u4f8b", "text": "<pre><code>//\u53d1\u5e03\u8005\nclass Publisher(var type: Any, var msg: Any) {\n\n}\n//\u8ba2\u9605\u8005\nclass Subscriber(var type: Any) {\n    fun onEvent(msg: Any) {\n        println(\"\u63a5\u6536\u6d88\u606f: $msg\")\n    }\n}\n//\u8c03\u5ea6\u4e2d\u5fc3\nclass EventBus {\n    private val mSubscribers: ArrayList&lt;Subscriber&gt; = ArrayList()\n    fun register(subscriber: Subscriber) {\n        mSubscribers += subscriber\n    }\n    fun unregister(subscriber: Subscriber) {\n        mSubscribers -= subscriber\n    }\n    fun push(publisher: Publisher) {\n        mSubscribers.forEach {\n            if (it.type == publisher.type) {\n                it.onEvent(publisher.msg)\n            }\n        }\n    }\n}\nfun main() {\n    val eventBus = EventBus()\n    eventBus.register(Subscriber(1))\n    eventBus.register(Subscriber(true))\n    val subscriber = Subscriber(\"name\")\n    eventBus.register(subscriber)\n    eventBus.push(Publisher(1, \"\u5fae\u4fe1\u66f4\u65b0\u4e861.0\"))\n    eventBus.push(Publisher(true, \"\u5fae\u4fe1\u66f4\u65b0\u4e862.0\"))\n    eventBus.unregister(subscriber)\n    eventBus.push(Publisher(\"name\", \"\u5fae\u4fe1\u66f4\u65b0\u4e863.0\"))\n}\n</code></pre>"}, {"location": "android/design/design_observer/#android_1", "title": "Android\u4e2d\u7684\u5e94\u7528", "text": "<ol> <li>BoradcastReceiver\u8c03\u5ea6\u4e2d\u5fc3\uff1aAMS</li> <li>EventBus\u8c03\u5ea6\u4e2d\u5fc3\uff1aEventBus\u5355\u4f8b</li> </ol>"}, {"location": "android/design/design_single/", "title": "Design single", "text": ""}, {"location": "android/design/design_single/#_1", "title": "\u200b\u997f\u6c49\u5f0f", "text": "<pre><code>public class EagerSingleton {\n    private static final EagerSingleton INSTANCE = new EagerSingleton();\n    private EagerSingleton() {}\n    public static EagerSingleton getInstance() {\n        return INSTANCE;\n    }\n}\n</code></pre>"}, {"location": "android/design/design_single/#_2", "title": "\u61d2\u6c49\u5f0f", "text": "<pre><code>public class LazySingleton {\n    private static LazySingleton instance;\n    private LazySingleton() {}\n    public static synchronized LazySingleton getInstance() {\n        if (instance == null) {\n            instance = new LazySingleton();\n        }\n        return instance;\n    }\n}\n</code></pre>"}, {"location": "android/design/design_single/#_3", "title": "\u679a\u4e3e\u5355\u4f8b", "text": "<pre><code>public enum EnumSingleton {\n    INSTANCE;\n    public void doSomething() {\n        // \u65b9\u6cd5\u5b9e\u73b0\n    }\n}\n</code></pre>"}, {"location": "android/design/design_single/#_4", "title": "\u61d2\u6c49\u5f0f(\u53cc\u91cd\u6821\u9a8c)", "text": "<pre><code>public class Singleton {\n    private static Singleton INSTANCE;\n    private Singleton() {\n    }\n    public static Singleton getInstance() {\n        if (INSTANCE == null) {\n            synchronized (Singleton.class) {\n                if (INSTANCE == null) {\n                    INSTANCE = new Singleton();\n                }\n            }\n        }\n        return INSTANCE;\n    }\n}\n</code></pre>"}, {"location": "android/design/design_single/#_5", "title": "\u9759\u6001\u5185\u90e8\u7c7b\u5355\u4f8b(\u63a8\u8350)", "text": "<pre><code>class Singleton {\n    private Singleton() {\n\n    }\n\n    public static Singleton getInstance() {\n        return Holder.singleton;\n    }\n    private static class Holder{\n        private static Singleton singleton = new Singleton();\n    }\n}\n</code></pre>"}, {"location": "android/design/design_single/#kotlin", "title": "kotlin\u7684\u5355\u4f8b", "text": "<p>object\u5173\u952e\u5b57\u5355\u4f8b</p>"}, {"location": "android/design/design_single/#_6", "title": "\u61d2\u6c49\u5f0f(\u53cc\u91cd\u6821\u9a8c)", "text": "<pre><code>class Singleton private constructor() {\n    companion object {\n        val instance by lazy(mode = LazyThreadSafetyMode.SYNCHRONIZED) {\n            Singleton()\n        }\n    }\n}\n</code></pre>"}, {"location": "android/design/design_single/#_7", "title": "\u9759\u6001\u5185\u90e8\u7c7b\u5355\u4f8b", "text": "<pre><code>class Singleton private constructor() {\n    companion object {\n        val instance = Holder.instance\n    }\n\n    private object Holder {\n        val instance = Singleton()\n    }\n}\n</code></pre>"}, {"location": "android/design/design_strategy/", "title": "Design strategy", "text": ""}, {"location": "android/design/design_strategy/#_1", "title": "\u7b80\u4ecb", "text": "<p>\u5c06\u7b97\u6cd5\u6216\u8005\u7b56\u7565\u62bd\u8c61\u51fa\u6765\u63d0\u4f9b\u7edf\u4e00\u63a5\u53e3\uff0c\u5141\u8bb8\u5916\u90e8\u52a8\u6001\u66ff\u6362\u7b97\u6cd5\u6216\u7b56\u7565</p>"}, {"location": "android/design/design_strategy/#_2", "title": "\u4f7f\u7528\u573a\u666f", "text": "<ol> <li>\u9488\u5bf9\u540c\u4e00\u7c7b\u95ee\u9898\u7684\u591a\u79cd\u5904\u7406\u65b9\u5f0f\uff0c\u4ec5\u5177\u4f53\u884c\u4e3a\u4e0d\u540c\u65f6</li> <li>\u9700\u8981\u5b89\u5168\u5c01\u88c5\u591a\u79cd\u540c\u4e00\u7c7b\u64cd\u4f5c\u65f6</li> <li>\u51fa\u73b0\u540c\u4e00\u62bd\u8c61\u7c7b\u6709\u591a\u4e2a\u5b50\u7c7b\uff0c\u4e14\u9700\u8981\u4f7f\u7528if else\u6216when\u6765\u9009\u62e9\u5177\u4f53\u5b50\u7c7b\u65f6 if else\u6216when(switch)\u4e0d\u9075\u5faa\u5f00\u95ed\u539f\u5219</li> </ol>"}, {"location": "android/design/design_strategy/#_3", "title": "\u6848\u4f8b", "text": "<p><pre><code>class PriceCalculator {// \u8ba1\u7b97\u7c7b\n    private fun busPrice(){}\n    private fun subWayPrice(){}\n    fun calPrice(traffic: Traffic) {\n        if (traffic == Traffic.BUS) {busPrice()}\n        else if (traffic == Traffic.SUBWAY){subWayPrice()}\n    }\n}\nenum class Traffic{// \u51fa\u884c\u7c7b\u578b\n    BUS,SUBWAY\n}\n\nfun main() {\n    PriceCalculator().calPrice(Traffic.BUS)\n    PriceCalculator().calPrice(Traffic.SUBWAY)\n}\n</code></pre> \u95ee\u9898\u548c\u7f3a\u9677</p> <ol> <li>PriceCalculator\u7c7b\u8fdd\u53cd\u5355\u4e00\u804c\u8d23\uff0c\u9700\u8981\u8ba1\u7b97\u4e0d\u540c\u7c7b\u578b\u7684\u51fa\u884c\u4ef7\u683c</li> <li>\u8fdd\u53cd\u5f00\u95ed\u539f\u5219\u51fa\u73b0if else\u81c3\u80bf\uff0c\u62d3\u5c55\u5dee\uff0c\u6dfb\u52a0\u4e00\u79cd\u51fa\u73b0\u7c7b\u578b\u9700\u8981\u6dfb\u52a0else\u5206\u652f\u4ee5\u53ca\u4ef7\u683c\u8ba1\u7b97\u65b9\u5f0f</li> </ol> <p>\u7b56\u7565\u6a21\u5f0f\u89e3\u51b3 </p> <p>\u62bd\u8c61\u7edf\u4e00\u63a5\u53e3\u548c\u5177\u4f53\u5b9e\u73b0 <pre><code>interface CalculateStrategy {\n    fun calPrice()\n}\nclass BusStrategy : CalculateStrategy {\n    override fun calPrice() {}\n}\n\nclass SubWayStrategy : CalculateStrategy {\n    override fun calPrice() {}\n}\n</code></pre> \u8c03\u7528 <pre><code>class PriceCalculator(var strategy: CalculateStrategy) {\n    fun calPrice() {\n        strategy.calPrice()\n    }\n}\nfun main() {\n    PriceCalculator(BusStrategy()).calPrice()\n    PriceCalculator(SubWayStrategy()).calPrice()\n}\n</code></pre></p>"}, {"location": "android/design/design_strategy/#android", "title": "Android\u6e90\u7801\u4e2d\u7684\u7b56\u7565\u6a21\u5f0f", "text": "<p>\u52a8\u753b\u63d2\u503c\u5668</p>"}, {"location": "android/design/design_strategy/#_4", "title": "\u4f18\u7f3a\u70b9", "text": "<p>\u4f18\u70b9\uff1a</p> <ol> <li>\u7ed3\u6784\u6e05\u6670\uff0c\u4f7f\u7528\u7b80\u5355\u76f4\u89c2</li> <li>\u8026\u5408\u5ea6\u8f83\u4f4e\uff0c\u6269\u5c55\u65b9\u4fbf</li> <li> <p>\u64cd\u4f5c\u5c01\u88c5\u6bd4\u8f83\u5f7b\u5e95\uff0c\u6570\u636e\u66f4\u5b89\u5168 \u7f3a\u70b9\uff1a</p> </li> <li> <p>\u968f\u7740\u7b56\u7565\u589e\u52a0\uff0c\u5b50\u7c7b\u53d8\u5f97\u7e41\u591a</p> </li> </ol>"}, {"location": "android/flutter/flutter_deps/", "title": "\u4e09\u65b9\u5e93", "text": "<p>flutter_modular</p>"}, {"location": "android/flutter/flutter_modular/", "title": "Flutter modular", "text": "<p>Flutter\u7684\u8f7b\u91cf\u7ea7\u3001\u5f3a\u5927\u4e14\u6613\u4e8e\u4f7f\u7528\u7684\u4f9d\u8d56\u6ce8\u5165\u548c\u8def\u7531\u7ba1\u7406\u6846\u67b6</p>"}, {"location": "android/flutter/flutter_modular/#_1", "title": "\u4f18\u52bf", "text": "<p>\u4f9d\u8d56\u6ce8\u5165\uff1a \u5b83\u5185\u7f6e\u4e86\u4f9d\u8d56\u6ce8\u5165\u5bb9\u5668\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5404\u79cd\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f8b\u5982 services\u3001repositories \u7b49\u3002 \u8def\u7531\u7ba1\u7406\uff1a flutter_modular \u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u8def\u7531\u7ba1\u7406\u529f\u80fd\uff0c\u53ef\u4ee5\u8f7b\u677e\u5730\u5b9a\u4e49\u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u5bfc\u822a\u7ed3\u6784\uff0c\u5305\u62ec\u547d\u540d\u8def\u7531\u3001\u5d4c\u5957\u8def\u7531\u548c\u8def\u7531\u5b88\u536b\u7b49\u3002 \u6a21\u5757\u5316\uff1a \u5b83\u652f\u6301\u5c06\u5e94\u7528\u7a0b\u5e8f\u5212\u5206\u4e3a\u72ec\u7acb\u7684\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u90fd\u6709\u81ea\u5df1\u7684\u4f9d\u8d56\u548c\u8def\u7531\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u590d\u7528\u6027\u3002 \u6d4b\u8bd5\u53cb\u597d\uff1a flutter_modular \u7684\u8bbe\u8ba1\u8003\u8651\u4e86\u6d4b\u8bd5\u6027\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5bf9\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u3002 \u6027\u80fd\u4f18\u5316\uff1a \u901a\u8fc7\u61d2\u52a0\u8f7d\u6a21\u5757\u548c\u4f9d\u8d56\uff0c\u53ef\u4ee5\u6709\u6548\u5730\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u542f\u52a8\u901f\u5ea6\u548c\u6027\u80fd\u3002</p>"}, {"location": "android/flutter/flutter_modular/#_2", "title": "\u5b89\u88c5\u4f9d\u8d56", "text": "<p>flutter_modular: ^6.0.0</p>"}, {"location": "android/flutter/flutter_start/", "title": "\u73af\u5883\u914d\u7f6e", "text": "<p>\u5b98\u65b9\u4e2d\u6587\u7f51\uff1ahttps://docs.flutter.cn/community/china/</p> <p>\u7ec4\u4ef6\u5e93\uff1a</p> <p>https://pub.dev</p> <p>https://pub-web.flutter-io.cn/</p>"}, {"location": "android/flutter/flutter_start/#java", "title": "\u914d\u7f6ejava\u73af\u5883", "text": "<pre><code>sudo apt install openjdk-17-jdk\n</code></pre>"}, {"location": "android/flutter/flutter_start/#flutter", "title": "\u914d\u7f6eflutter\u73af\u5883", "text": "<pre><code>export FLUTTER_SDK=\"/xxx/FlutterSDK/flutter_linux_3.10.3-stable/flutter/bin\"\nexport PATH=$PATH:$FLUTTER_SDK\nexport PUB_HOSTED_URL=\"https://pub.flutter-io.cn\"\nexport FLUTTER_STORAGE_BASE_URL=\"https://storage.flutter-io.cn\"\n</code></pre>"}, {"location": "android/flutter/flutter_start/#android", "title": "\u914d\u7f6eAndroid\u73af\u5883", "text": "<p><pre><code>export ANDROID_HOME=/xxx/AndroidSDK/\nexport IDE_HOME=/opt/android-studio-for-platform\nexport PATH=$PATH:$ANDROID_HOME/bin:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin\n</code></pre> flutter\u4f1a\u4fee\u6539androidsdk\u6210/user/lib/android-sdk <pre><code>flutter config --android-sdk /xxx/AndroidSDK/\n</code></pre></p>"}, {"location": "android/flutter/flutter_start/#sdk", "title": "\u5207\u6362sdk\u7248\u672c", "text": "<p>\u5b89\u88c5 fvm <pre><code>dart pub global activate fvm\n</code></pre> \u5378\u8f7d fvm <pre><code>dart pub global deactivate fvm\n</code></pre> \u5b89\u88c5\u6700\u65b0\u7a33\u5b9a\u7248\u672c <pre><code>fvm install stable\n</code></pre> \u9879\u76ee\u4f7f\u7528\u67d0\u4e2a\u7248\u672c <pre><code>fvm use stable\n</code></pre> \u5168\u5c40\u4f7f\u7528 <pre><code>fvm global stable\n</code></pre></p>"}, {"location": "android/flutter/flutter_start/#_1", "title": "\u5e38\u89c1\u95ee\u9898", "text": ""}, {"location": "android/flutter/flutter_start/#fvmsdk", "title": "fvm\u5b89\u88c5sdk\u62a5\u9519", "text": "<p>git error: RPC failed\uff1b curl 92 HTTP/2 stream 0 was not closed cleanly: PROTOCOL_ERROR (err 1) <pre><code>git config --global HTTP/1.1\n</code></pre></p>"}, {"location": "android/flutter/flutter_start/#web", "title": "\u8fd0\u884cweb\u65e0\u6cd5\u8054\u7f51", "text": "<p>/fluttersdk/packages\\flutter_tools\\lib\\src\\web\u7684chrome.dart\u6587\u4ef6\uff0c\u6dfb\u52a0 \u2018\u2013disable-web-security\u2019 <pre><code>'--disable-translate',\n'--disable-web-security',\nif (headless)\n</code></pre> \u5220\u9664/fluttersdk/bin/cache/\u4e0b\u7684\u6587\u4ef6</p> <p>flutter_tools.snapshot</p> <p>flutter_tools.stamp</p>"}, {"location": "android/fws/fw_aosp_error/", "title": "Fw aosp error", "text": ""}, {"location": "android/fws/fw_aosp_error/#android", "title": "Android\u6e90\u7801\u4e0b\u8f7d\u5e38\u89c1\u95ee\u9898", "text": ""}, {"location": "android/fws/fw_aosp_error/#_1", "title": "\u4f7f\u7528\u955c\u50cf\u4e0b\u8f7d\u62a5\u9519", "text": "<p>\u62a5\u9519\uff1a Repo command failed: RepoUnhandledExceptionError     GitCommandError: 'reset --keep v2.44^0' on repo failed stderr: error: Entry 'project.py' not uptodate. Cannot merge. fatal: \u4e0d\u80fd\u91cd\u7f6e\u7d22\u5f15\u6587\u4ef6\u81f3\u7248\u672c 'v2.44^0'\u3002</p> <p>\u89e3\u51b3\uff1a <pre><code>cd .repo/repo/\ngit pull\n</code></pre></p> <p>\u62a5\u9519\uff1a error.GitError: manifests rev-list ('^1013d985f70641b2cc05943f57fab5824d9e2ff3', 'HEAD', '--'): fatal: bad revision 'HEAD'</p> <p>\u89e3\u51b3\uff1a <pre><code>cd .repo/manifests\ngit reset --hard 1013d985f70641b2cc05943f57fab5824d9e2ff3\ngit pull\n</code></pre> \u62a5\u9519\uff1agit config --global --add safe.directory /xxx/xxx</p> <p>\u89e3\u51b3\uff1a <pre><code>git config --global --add safe.directory \"*\"\n</code></pre> \u6587\u4ef6\u6743\u9650\u88ab\u4fee\u6539</p> <p>\u89e3\u51b3\uff1a <pre><code>repo forall -c git config --add core.filemode false\n</code></pre></p>"}, {"location": "android/fws/fw_aosp_error/#adbfastboot", "title": "adb\u548cfastboot\u62a5\u9519", "text": "<p>no permissions (missing udev rules? user is in the plugdev group)</p> <p>\u89e3\u51b3\uff1a <pre><code>lsusb\n</code></pre> \u8f93\u51fa\uff1aBus 001 Device 009: ID 18d1:4ee7 Google Inc. Nexus/Pixel Device (charging + debug) <pre><code>cd /etc/udev/rules.d/\nsudo vi 51-android.rules\n\u6dfb\u52a0\u5185\u5bb9\uff1a\nSUBSYSTEM==\"usb\", ATTRS{idVendor}==\"18d1\", ATTRS{idProduct}==\"4ee7\",MODE=\"0666\"\n</code></pre> \u8bbe\u7f6e\u6743\u9650 <pre><code>sudo chmod a+x 51-android.rules\n</code></pre> fastboot\u76f8\u540c\u89e3\u51b3</p> <p>Bus 001 Device 014: ID 18d1:4ee0 Google Inc. Nexus/Pixel Device (fastboot) SUBSYSTEM==\"usb\", ATTRS{idVendor}\"18d1\", ATTRS{idProduct}\"4ee0\",MODE=\"0666\"</p>"}, {"location": "android/fws/fw_aosp_error/#_2", "title": "\u5206\u533a\u4e0d\u8db3", "text": "<p>Out of space? Out of inodes? The tree size of out/target/product/oriole/tmp7f1nizih is 4096 bytes (0 MB), with reserved space of 0 bytes (0 MB). The max image size for filesystem files is 11796480000 bytes (11250 MB), out of a total partition size of 11796480000 bytes (11250 MB).</p> <p>\u89e3\u51b3\uff1a <pre><code>device/google/raviole/oriole/BoardConfig.mk\n</code></pre> \u6dfb\u52a0\uff1a <pre><code>BOARD_USERDATAIMAGE_FILE_SYSTEM_TYPE := ext4\n</code></pre></p>"}, {"location": "android/fws/fw_cpp/", "title": "Fw cpp", "text": "<p>\u63a7\u5236log\u5f00\u5173</p>"}, {"location": "android/fws/fw_cpp/#define-log_ndebug-0", "title": "define LOG_NDEBUG 0", "text": ""}, {"location": "android/fws/fw_cpp/#native-thread", "title": "Native Thread", "text": "<p>\u667a\u80fd\u6307\u9488</p> <p>sp\u4f1a\u89e6\u53d1onFirstRef\u56de\u8c03</p>"}, {"location": "android/fws/fws_ams/", "title": "AMS/ATMS", "text": "<p>\u5728\u542f\u52a8SystemServer\u65f6\u4f1a\u542f\u52a8AMS\u548cATMS\u670d\u52a1 <pre><code>startBootstrapServices(t);\n</code></pre> \u901a\u8fc7\u8f85\u52a9\u7c7bSystemServiceManager\u6765\u542f\u52a8 <pre><code>ActivityTaskManagerService atm = mSystemServiceManager.startService(\n                ActivityTaskManagerService.Lifecycle.class).getService();\nmActivityManagerService = ActivityManagerService.Lifecycle.startService(\n        mSystemServiceManager, atm);\nmActivityManagerService.setSystemServiceManager(mSystemServiceManager);\nmActivityManagerService.setInstaller(installer);\nmWindowManagerGlobalLock = atm.getGlobalLock();\n</code></pre> \u5176\u4e2dams\u548catms\u542f\u52a8\u65b9\u5f0f\u662f\u76f8\u540c\u7684\uff0cams\u4fdd\u5b58\u4e86atms\u4e3a\u6210\u5458\u53d8\u91cf</p> <p><pre><code>frameworks/base/services/core/java/com/android/server/SystemServiceManager.java\n\nConstructor&lt;T&gt; constructor = serviceClass.getConstructor(Context.class);\nservice = constructor.newInstance(mContext);\nstartService(service);\n</code></pre> \u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u5f0f\u8c03\u7528\u6784\u9020\u65b9\u6cd5\u521b\u5efaLifecycle\u5b9e\u4f8b <pre><code>mServices.add(service);\nservice.onStart();\n</code></pre> \u5c06\u521b\u5efa\u7684\u5b9e\u4f8b\u5bf9\u8c61\u4fdd\u5b58\u5230ArrayList\u4e2d\uff0cLifecycle\u7ee7\u627f\u4e8eSystemService\uff0c\u6784\u9020\u65b9\u6cd5\u4e2d\u521b\u5efaActivityTaskManagerService\u5b9e\u4f8b\uff0c\u63a5\u7740\u901a\u8fc7getService\u83b7\u5f97\u5b9e\u4f8b\u5bf9\u8c61 <pre><code>frameworks/base/services/core/java/com/android/server/wm/ActivityTaskManagerService.java\n\npublic static final class Lifecycle extends SystemService {\n    private final ActivityTaskManagerService mService;\n\n    public Lifecycle(Context context) {\n        super(context);\n        mService = new ActivityTaskManagerService(context);\n    }\n\n    @Override\n    public void onStart() {\n        publishBinderService(Context.ACTIVITY_TASK_SERVICE, mService);\n        mService.start();\n    }\n\n    public ActivityTaskManagerService getService() {\n        return mService;\n    }\n}\n</code></pre> new ActivityTaskManagerService\u65f6\u4f1a\u521b\u5efamInternal\u7684\u5b9e\u4f8b <pre><code>mInternal = new LocalService();\n</code></pre> onStart\u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u4fdd\u5b58Binder\u5bf9\u8c61\u5230ServicesManager\u4e2d\uff0cmService.start()\u4e3b\u8981\u662f\u628amInternal\u4fdd\u5b58\u8d77\u6765\u4f7f\u7528ArrayMap\u6570\u636e\u7ed3\u6784 <pre><code>LocalServices.addService(ActivityTaskManagerInternal.class, mInternal);\n</code></pre>"}, {"location": "android/fws/fws_android_start/", "title": "Android\u542f\u52a8\u6d41\u7a0b", "text": ""}, {"location": "android/fws/fws_android_start/#android", "title": "Android\u542f\u52a8\u6d41\u7a0b", "text": ""}, {"location": "android/fws/fws_android_start/#bootloader", "title": "BootLoader\u5f15\u5bfc\u9636\u6bb5", "text": "<p>\u521d\u59cb\u5316\u57fa\u672c\u7684\u786c\u4ef6\u8bbe\u5907(CPU\u3001\u5185\u5b58\u3001Flash\u7b49)\u5e76\u5efa\u7acb\u5185\u5b58\u6620\u5c04\uff0c\u7ec4\u5408\u952e\u8fdb\u5165Fastboot\u6a21\u5f0f\u548cRecovery\u6a21\u5f0f</p>"}, {"location": "android/fws/fws_android_start/#linux", "title": "\u88c5\u8f7d\u548c\u542f\u52a8Linux\u5185\u6838\u9636\u6bb5", "text": "<p>\u7531BootLoader\u88c5\u8f7dboot.img(\u5305\u542blinux\u5185\u6838\u548c\u6839\u6587\u4ef6\u7cfb\u7edf)\u8fdb\u5185\u5b58\u4e2d\uff0clinux\u5185\u6838\u6267\u884c\u6574\u4e2a\u7cfb\u7edf\u7684\u521d\u59cb\u5316\uff0c\u88c5\u8f7d\u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u542f\u52a8init\u8fdb\u7a0b\uff0c\u88c5\u8f7d\u5b8c\u6bd5\u540eBootLoader\u5728\u5185\u5b58\u4e2d\u6e05\u9664</p>"}, {"location": "android/fws/fws_android_start/#init", "title": "\u542f\u52a8init\u8fdb\u7a0b", "text": "<p>\u662f\u7cfb\u7edf\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u89e3\u6790init.rc(system/core/rootdir/init.rc)\u811a\u672c\u6587\u4ef6\uff0c\u6839\u636e\u5185\u5bb9</p> <ul> <li>\u88c5\u8f7dAndroid\u6587\u4ef6\u7cfb\u7edf</li> <li>\u521b\u5efa\u7cfb\u7edf\u76ee\u5f55</li> <li>\u521d\u59cb\u5316\u5c5e\u6027\u7cfb\u7edf</li> <li>\u542f\u52a8Android\u7684\u91cd\u8981\u5b88\u62a4\u8fdb\u7a0b\uff0c\u5982USB\u3001adb\u3001vold\u3001rild\u7b49\u5b88\u62a4\u8fdb\u7a0b</li> <li>init\u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\uff0c\u7528\u4e8e\u6267\u884c\u5c5e\u6027\u4fee\u6539\u8bf7\u6c42\uff0c\u91cd\u542f\u5d29\u6e83\u8fdb\u7a0b\u7b49\u64cd\u4f5c</li> </ul>"}, {"location": "android/fws/fws_android_start/#servicemanager", "title": "ServiceManager\u542f\u52a8", "text": "<p>\u7531init\u8fdb\u7a0b\u542f\u52a8\uff0c\u7ba1\u7406Binder\u670d\u52a1(Binder\u670d\u52a1\u7684\u6ce8\u518c\u548c\u67e5\u627e)\uff0c\u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u5b58\u5728\u4e0e\u540e\u53f0\uff0c\u5f53SystemServer\u542f\u52a8AMS\u3001WMS\u3001PMS\u7b49\u670d\u52a1\u65f6\uff0c\u90fd\u662f\u901a\u8fc7Binder\u6ce8\u518c\u5230ServiceManager\u4e2d\uff0c\u7edf\u4e00\u4fdd\u5b58\u7ba1\u7406</p>"}, {"location": "android/fws/fws_android_start/#zygote", "title": "\u542f\u52a8Zygote\u8fdb\u7a0b", "text": "<p>\u7531init\u8fdb\u7a0b\u542f\u52a8\uff0c\u8d1f\u8d23fork\u51fa\u5e94\u7528\u8fdb\u7a0b\uff0c\u521d\u59cb\u5316\u65f6\u4f1a\u521b\u5efaAndroid\u865a\u62df\u673a\u548c\u9884\u88c5\u8f7d\u7cfb\u7edf\u7684\u8d44\u6e90\u6587\u4ef6\u548cjava\u7c7b\uff0c\u6240\u6709fork\u51fa\u7684\u7528\u6237\u8fdb\u7a0b\u90fd\u5171\u4eab\uff0c\u521d\u59cb\u5316\u7ed3\u675f\u540e\u8f6c\u6210\u5b88\u62a4\u8fdb\u7a0b\uff0c\u54cd\u5e94\u542f\u52a8\u5e94\u7528\u8bf7\u6c42</p> <ul> <li>\u521b\u5efaDVM/ART\u865a\u62df\u673a</li> <li>\u6ce8\u518cAndroid SDK\u6240\u9700\u7684JNI\u65b9\u6cd5</li> <li>\u6267\u884cZygoteInit\u7684main\u51fd\u6570</li> </ul> <p>init.zygote64.rc <pre><code>service zygote /system/bin/app_process64 -Xzygote /system/bin --zygote --start-system-server\n    class main\n</code></pre> \u6267\u884c\u4ee3\u7801\uff1a frameworks/base/cmds/app_process/app_main.cpp <pre><code>runtime.start(\"com.android.internal.os.ZygoteInit\", args, zygote);\n</code></pre> \u6267\u884cframeworks/base/core/jni/AndroidRuntime.cpp\u4e2d\u7684start\u51fd\u6570 <pre><code>// \u542f\u52a8\u865a\u62df\u673a\nif (startVm(&amp;mJavaVM, &amp;env, zygote, primary_zygote) != 0) {\n    return;\n}\nonVmCreated(env);\n// \u6ce8\u518cjni\nif (startReg(env) &lt; 0) {\n    ALOGE(\"Unable to register all android natives\\n\");\n    return;\n}\nchar* slashClassName = toSlashClassName(className != NULL ? className : \"\");\njclass startClass = env-&gt;FindClass(slashClassName);\nif (startClass == NULL) {\n    ALOGE(\"JavaVM unable to locate class '%s'\\n\", slashClassName);\n    /* keep going */\n} else {\n    // \u627e\u5230main\u65b9\u6cd5\n    jmethodID startMeth = env-&gt;GetStaticMethodID(startClass, \"main\",\n        \"([Ljava/lang/String;)V\");\n    if (startMeth == NULL) {\n        ALOGE(\"JavaVM unable to find main() in '%s'\\n\", className);\n        /* keep going */\n    } else {\n        // \u542f\u52a8java\u5c42\u65b9\u6cd5\n        env-&gt;CallStaticVoidMethod(startClass, startMeth, strArray);\n    }\n}\n</code></pre></p> <p>\u6267\u884c\u4ee3\u7801\uff1aframeworks/base/core/java/com/android/internal/os/ZygoteInit.java\u4e2d\u7684main\u65b9\u6cd5</p>"}, {"location": "android/fws/fws_android_start/#systemserver", "title": "\u542f\u52a8SystemServer", "text": "<p>\u7531zygote\u8fdb\u7a0bfork\u51fa\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u8d1f\u8d23Android\u4e2d\u5927\u90e8\u5206Binder\u670d\u52a1\uff0c\u5148\u542f\u52a8SensorManager\uff0c\u518d\u542f\u52a8AMS\u3001PMS\u3001WMS\u7b49\u6240\u6709java\u670d\u52a1</p>"}, {"location": "android/fws/fws_android_start/#mediaserver", "title": "\u542f\u52a8MediaServer", "text": "<p>\u7531init\u8fdb\u7a0b\u542f\u52a8\uff0c\u5305\u542b\u5a92\u4f53\u76f8\u5173\u7684Binder\u670d\u52a1\uff0c\u5305\u542bCameraService\u3001AudioFligerService\u3001MediaPlayerService\u3001AutioPolicyService</p>"}, {"location": "android/fws/fws_android_start/#launcher", "title": "\u542f\u52a8Launcher", "text": "<p>SystemServer\u52a0\u8f7d\u5b8c\u6240\u6709java\u670d\u52a1\u540e\uff0c\u8c03\u7528AMS\u7684SystemReady\u65b9\u6cd5\uff0cIntent(android.intent.category.HOME)</p>"}, {"location": "android/fws/fws_android_start/#fork", "title": "fork\u673a\u5236", "text": "<ol> <li>\u4e24\u4e2a\u8fdb\u7a0b\u4ee3\u7801\u4e00\u81f4\uff0c\u4ee3\u7801\u6267\u884c\u5230\u7684\u4f4d\u7f6e\u4e5f\u4e00\u81f4</li> <li>\u8fdb\u7a0bPID\u4e0d\u4e00\u6837</li> <li>\u7236\u8fdb\u7a0b\u8fd4\u56de\u7684\u662f\u5b50\u8fdb\u7a0b\u7684PID\u65b9\u4fbf\u8ddf\u8e2a\u5b50\u8fdb\u7a0b\u72b6\u6001\uff0c\u5b50\u8fdb\u7a0b\u8fd4\u56de\u7684\u662f0</li> </ol>"}, {"location": "android/fws/fws_android_start/#system_serverzygote-init", "title": "system_server\u4e3a\u4ec0\u4e48\u8981\u5728Zygote\u4e2d\u542f\u52a8\uff0c\u800c\u4e0d\u662f\u7531 init \u76f4\u63a5\u542f\u52a8", "text": "<p>system_server\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Zygote\u4e2d\u7684JNI \u51fd\u6570.\u5171\u4eab\u5e93\u3001\u5e38\u7528\u7684\u7c7b\u3001\u4ee5\u53ca\u4e3b\u9898\u8d44\u6e90</p>"}, {"location": "android/fws/fws_android_start/#zygotesystem_server", "title": "\u4e3a\u4ec0\u4e48\u8981\u4e13\u95e8\u4f7f\u7528Zygote\u8fdb\u7a0b\u53bb\u5b75\u5316\u5e94\u7528\u8fdb\u7a0b\uff0c\u800c\u4e0d\u662f\u8ba9system_server\u53bb\u5b75\u5316", "text": "<ol> <li>system_server\u76f8\u6bd4 Zygote \u591a\u8fd0\u884c\u4e86 AMS\u3001WMS \u7b49\u670d\u52a1\uff0c\u8fd9\u4e9b\u5bf9\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\u662f\u4e0d\u9700\u8981\u7684</li> <li>\u8fdb\u7a0b\u7684fork()\u5bf9\u591a\u7ebf\u7a0b\u4e0d\u53cb\u597d\uff0c\u4ec5\u4f1a\u5c06\u53d1\u8d77\u8c03\u7528\u7684\u7ebf\u7a0b\u62f7\u8d1d\u5230\u5b50\u8fdb\u7a0b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6b7b\u9501\uff0c\u800csystem_server\u4e2d\u80af\u5b9a\u662f\u6709\u5f88\u591a\u7ebf\u7a0b\u7684</li> </ol> <p>\u6b7b\u9501\u7684\u539f\u56e0\uff1afork\u51fa\u7684\u5b50\u8fdb\u7a0b\u5e76\u6ca1\u6709\u7236\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b\uff0c\u9501\u662f\u53ef\u4ee5\u88ab\u590d\u5236\u7684\uff0c\u9501\u9700\u8981\u6240\u6709\u8005(\u7ebf\u7a0b)\u624d\u80fd\u89e3\u9501</p>"}, {"location": "android/fws/fws_android_start/#zygote-binder-ipc", "title": "Zygote \u4e3a\u4ec0\u4e48\u4e0d\u91c7\u7528 Binder \u673a\u5236\u8fdb\u884c IPC \u901a\u4fe1", "text": "<p>Binder\u662f\u591a\u7ebf\u7a0b\u7684\uff0cSocket\u662f\u5355\u7ebf\u7a0b\u7684</p> <p>unix\u7a0b\u5e8f\u8bbe\u8ba1\u51c6\u5219\uff1a\u591a\u7ebf\u7a0b\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528fork</p> <p>\u8865\u5145\uff1aZygote\u8fdb\u7a0b\u521d\u59cb\u5316\u65f6\uff0cBinder\u5c1a\u672a\u88ab\u521d\u59cb\u5316</p>"}, {"location": "android/fws/fws_android_start/#_1", "title": "\u4e00\u952e\u9000\u51fa\u5e94\u7528", "text": "<pre><code>val manager = getSystemService(Context.ACTIVITY_SERVICE) as ActivityManager\nmanager.appTasks.forEach {\n    it.finishAndRemoveTask()\n}\n// vm\u5c42\u6b21\uff0c\u8fdb\u7a0b\u9000\u51fa\nandroid.os.Process.killProcess(android.os.Process.myPid())\nexitProcess(0)\n</code></pre>"}, {"location": "android/fws/fws_aosp/", "title": "\u73af\u5883\u642d\u5efa", "text": ""}, {"location": "android/fws/fws_aosp/#1ubuntu2204", "title": "1.\u5b89\u88c5ubuntu\u7cfb\u7edf\uff0822.04\uff09", "text": "<p>\u78c1\u76d8\u5927\u5c0f\u8d8a\u5927\u8d8a\u597d\uff0c\u81f3\u5c11500G</p> \u4f18\u7f3a\u70b9  \u65b9\u5f0f VMWare\u65b9\u5f0f WSL2\u65b9\u5f0f Windows11\u5b89\u88c5Ubuntu \u4f18\u70b9 \u6709\u56fe\u5f62\u5316\u754c\u9762\u53ef\u4ee5\u76f4\u63a5\u542f\u52a8\u6a21\u62df\u5668(\u9700\u5173\u95edhyper-v) \u7f16\u8bd1\u901f\u5ea6\u5feb\uff0c\u5360\u7528\u4f53\u79ef\u5c0f\uff0c\u65b9\u4fbf\u548cwindows\u4e4b\u95f4\u64cd\u4f5c \u7f16\u8bd1\u901f\u5ea6\u5feb\uff0c\u72ec\u7acb\u7cfb\u7edf\uff0c\u53ef\u4f7f\u7528\u6a21\u62df\u5668\uff0c\u6e90\u7801\u5728window\u4e0b\u4e5f\u53ef\u8bbf\u95ee \u7f3a\u70b9 \u4e0d\u6d41\u7545\uff0c\u7f16\u8bd1\u901f\u5ea6\u6162\uff0c\u5360\u7528\u4f53\u79ef\u5927\uff0c\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528Android\u5b50\u7cfb\u7edf \u65e0\u56fe\u5f62\u5316\u754c\u9762\uff0c\u7f51\u7edc\u72ec\u7acb\u4e0d\u65b9\u4fbf\u4f7f\u7528vpn\uff0c\u65e0\u6cd5\u4f7f\u7528\u6a21\u62df\u5668 \u7cfb\u7edf\u5360\u7528\u7a7a\u95f4\uff0c\u548cwindow\u4ea4\u4e92\u4e0d\u4fbf"}, {"location": "android/fws/fws_aosp/#2android", "title": "2.\u4e0b\u8f7dAndroid\u6e90\u7801\u955c\u50cf\u5305(\u53ef\u8df3\u8fc7)", "text": "<p>\u78c1\u76d8\u7a7a\u95f4\u5c0f\u53ef\u4f7f\u7528\u4f20\u7edf\u65b9\u5f0f\u4e0b\u8f7d\u6e90\u7801</p> <p>\u5728ubuntu\u7cfb\u7edf\u4e2d\u6253\u5f00\u7ec8\u7aef\uff0c\u6267\u884c\u547d\u4ee4\uff1awget -c \u5730\u5740\u5982\u4e0b</p> <p>https://mirrors.ustc.edu.cn/aosp-monthly/aosp-latest.tar \u6216\u8005 https://mirrors.tuna.tsinghua.edu.cn/aosp-monthly/aosp-latest.tar</p> <p>\u6587\u4ef6\u5927\u698280GB</p> <p>\u6821\u9a8c\uff1amd5sum aosp-latest.tar (\u8f83\u6162)</p> <p>\u89e3\u538b\uff1atar xvf aosp-latest.tar (\u8f83\u6162)</p> <p>\u89e3\u538b\u540e\u5f97\u5230\u76ee\u5f55aosp</p> <p>\u6ce8\uff1a\u62a5\u9519\u5c1d\u8bd5\u4f7f\u7528 <pre><code>wget -U NoSuchBrowser/1.0 \u4e0b\u8f7d\u5730\u5740\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#3gitrepo", "title": "3.\u5b89\u88c5git\u548crepo", "text": "<p>\u5b89\u88c5git <pre><code>sudo apt install git\ngit config --global user.email 1875287386@qq.com\ngit config --global user.name \"yuli\"\n</code></pre> git\u914d\u7f6egit\u4e0egithub</p> <p>\u5b89\u88c5repo <pre><code>echo \"PATH=~/bin:\\$PATH\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\nsudo apt install curl\nmkdir ~/bin\ncurl -sSL 'https://gerrit-googlesource.proxy.ustclug.org/git-repo/+/master/repo?format=TEXT' |base64 -d &gt; ~/bin/repo\nchmod +x ~/bin/repo\nexport REPO_URL='https://mirrors.tuna.tsinghua.edu.cn/git/git-repo'\n</code></pre> \u5bf9\u4e8ewsl2\u53ef\u80fd\u65e0\u6cd5\u4e0b\u8f7drepo\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\u4e0b\u8f7d</p> <p>python\u5feb\u6377\u952e\u521b\u5efa <pre><code>sudo ln -s /usr/bin/python3.10 /usr/bin/python\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#4android", "title": "4.\u540c\u6b65Android\u6e90\u7801", "text": "<p>\u67e5\u770bAndroid\u7cfb\u7edf\u6e90\u7801\u7684\u7f51\u5740</p> <p>AOSP\u6700\u65b0\u5728\u7ebf\u6e90\u7801(\u9700vpn) https://cs.android.com/android/platform/superproject/main</p> <p>9.0\u4e4b\u524d\uff1ahttp://androidxref.com</p> <p>5.0-14.0+: </p> <p>http://aospxref.com</p> <p>http://xrefandroid.com/</p> <p>\u8fdb\u5165\u76ee\u5f55aosp\u6267\u884c <pre><code>repo init -u https://mirrors.tuna.tsinghua.edu.cn/git/AOSP/platform/manifest -b android-15.0.0_r3\n</code></pre> \u5176\u4e2d-b\u67e5\u770b\u5730\u5740\uff1a</p> <p>https://source.android.com/setup/start/build-numbers?hl=zh_cn(\u6302vpn)</p> <p>https://source.android.google.cn/docs/setup/reference/build-numbers?hl=zh-cn</p> <p>Pixel6: AP3A.241005.015.A2\u5bf9\u5e94\u5206\u652fandroid-15.0.0_r3</p> <p>aosp14\u6700\u540e\u4e00\u4e2a\u7248\u672c\uff1aAP2A.240905.003.F1 android-14.0.0_r73</p> <p>aosp14\u8f6c\u6298\u6027\u7248\u672c\uff1aAP1A.240305.019.A1 android-14.0.0_r29</p>"}, {"location": "android/fws/fws_aosp/#_1", "title": "\u6dfb\u52a0\u4ea4\u6362\u5185\u5b58", "text": "<ol> <li>zram</li> </ol> <p>\u5b89\u88c5 <pre><code>sudo apt-get install zram-config\n</code></pre> \u542f\u52a8 <pre><code>sudo systemctl enable zram-config\nsudo systemctl start zram-config\n</code></pre> \u67e5\u770b\u4f7f\u7528\u60c5\u51b5 <pre><code>sudo zramctl\n</code></pre> \u7981\u7528 <pre><code>sudo systemctl stop zram-config\nsudo systemctl disable zram-config\n</code></pre> 2. swap</p> <p>\u5982\u679c\u5df2\u7ecf\u5b58\u5728swapfile\uff0c\u5148\u5173\u95ed <pre><code>sudo swapoff /swapfile\n</code></pre> \u5728\u5220\u9664 <pre><code>sudo rm -rf /swapfile\n</code></pre> \u6700\u540e\u914d\u7f6e <pre><code>sudo dd if=/dev/zero of=/swapfile bs=1G count=20\nsudo mkswap /swapfile\nsudo swapon /swapfile\n</code></pre> \u6dfb\u52a0\u5f00\u542f\u81ea\u542f\uff1a/etc/fstab <pre><code>/swapfile                                 none      swap    sw          0       0\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#_2", "title": "\u4f7f\u7528\u4f20\u7edf\u540c\u6b65\u4ee3\u7801", "text": "<p>\u5728\u6267\u884crepo init xxx\u540e\u4e3a\u8282\u7701\u7a7a\u95f4\uff0c\u7f16\u8f91.repo/manifests.git/config</p> <p>\u5728[remote \"origin\"]\u8282\u70b9\u4e0b\u6dfb\u52a0 <pre><code>[remote \"origin\"]\n    //..\n    depth = 1\n    no-tags = true\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#_3", "title": "\u540c\u6b65\u4ee3\u7801", "text": "<p>\u8f83\u6162 <pre><code>repo sync -c -j20\n</code></pre> \u62a5\u9519\u95ee\u9898\u89c1</p>"}, {"location": "android/fws/fws_aosp/#_4", "title": "\u5b89\u88c5\u4f9d\u8d56", "text": "<p>\u5b89\u88c5jdk <pre><code>sudo apt install openjdk-11-jre-headless\n</code></pre> \u5176\u4ed6\u4f9d\u8d56 <pre><code>sudo apt-get install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#_5", "title": "\u63d0\u5347\u7f16\u8bd1", "text": "<p>\u4ea4\u6362\u5185\u5b58\u63a7\u5236\uff0c\u91cd\u542f\u751f\u6548 <pre><code>sudo vi /etc/sysctl.conf\nvm.swappiness=70\n</code></pre> swappiness\u503c\u4e3a0\u8868\u793a\u4f18\u5148\u4f7f\u7528\u7269\u7406\u5185\u5b58\uff0c\u503c\u4e3a100\u5219\u4f18\u5148\u4f7f\u7528swap\u5185\u5b58</p> <p>\u67e5\u770b\u547d\u4ee4 <pre><code>cat /proc/sys/vm/swappiness\n</code></pre> \u8bbe\u7f6e\u7f13\u5b58\uff0c\u914d\u7f6ejava\u865a\u62df\u673a\u5185\u5b58 <pre><code>vi ~/.bashrc\n#\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\nexport USE_CCACHE=1\nexport CCACHE_COMPRESS=1\nexport LC_ALL=C\n\nexport _JAVA_OPTIONS=\"-Xmx6g\"\n</code></pre> \u5f00\u542fccache <pre><code>ccache -M 50G\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#5google", "title": "5.\u9a71\u52a8\u4e0b\u8f7d(\u9488\u5bf9google\u624b\u673a\uff0c\u53ef\u8df3\u8fc7)", "text": "<p>https://developers.google.com/android/drivers</p> <p></p> <p>\u4e0a\u9762\u6e90\u7801\u4e0b\u8f7d\u7684\u662fandroid-15.0.0_r3\u6240\u4ee5\u590d\u5236build ID(AP3A.241005.015.A2)\u5230\u9a71\u52a8\u7f51\u7ad9</p> <p></p> <p>\u4e0b\u8f7d\u540e\u653e\u5230aosp\u76ee\u5f55\u4e0b\u5e76\u89e3\u538b <pre><code>tar -zxvf google_devices-cheetah-td1a.220804.031-d59f7f42.tgz\n</code></pre> \u6267\u884c <pre><code>./extract-google_devices-cheetah.sh\n</code></pre> \u6309\u56de\u8f66\u540e\u4e00\u76f4\u6309F\u952e\u76f4\u5230\u51fa\u73b0Type \"I ACCEPT\" if you agree to the terms of the license: \u8f93\u5165I ACCEPT\u56de\u8f66\u5373\u53ef</p> <p>\u83b7\u5f97\u4e00\u4e2avendor\u6587\u4ef6\u5939\uff0c\u786e\u4fdd\u5728aosp\u76ee\u5f55\u4e0b</p>"}, {"location": "android/fws/fws_aosp/#6", "title": "6.\u5185\u6838\u4e0b\u8f7d(\u53ef\u8df3\u8fc7)", "text": "<p>https://source.android.google.cn/docs/setup/build/building-kernels?hl=zh-cn#id-version</p> <p></p> <p>\u4e00\u822c\u5df2\u7ecf\u5305\u542b\uff0c\u53ef\u901a\u8fc7\u8def\u5f84\u786e\u8ba4</p>"}, {"location": "android/fws/fws_aosp/#7", "title": "7.\u6e90\u7801\u7f16\u8bd1", "text": "<pre><code>export DISABLE_ARTIFACT_PATH_REQUIREMENTS=\"true\"\nsource build/envsetup.sh\n</code></pre>"}, {"location": "android/fws/fws_aosp/#aosp12", "title": "aosp12\u4e4b\u524d", "text": "<p>\u6a21\u62df\u5668\uff1a <pre><code>lunch aosp_x86_64-eng\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#aosp12-14r29", "title": "aosp12-14r29", "text": "<p>lunch\u540e\u4f1a\u5217\u51fa\u7f16\u8bd1\u9009\u9879</p> <p>\u6a21\u62df\u5668\uff1a <pre><code>lunch sdk_phone_x86_64\n</code></pre></p> <p>\u5982\u679c\u662f\u771f\u673a\u4ee3\u53f7\uff0c\u6bd4\u5982Pixel6 (\"oriole\") <pre><code>lunch aosp_oriole-userdebug\n</code></pre> \u7f16\u8bd1\u7248\u672c\u4ecb\u7ecd</p> <ul> <li>user:\u65e0root\u6743\u9650</li> <li>userdebug:\u6709root\uff0c\u9700\u8981\u901a\u8fc7su\u83b7\u53d6</li> <li>eng:\u6709root\uff0cadbd\u8d85\u7ea7\u6743\u9650\uff0c\u7f16\u8bd1\u66f4\u5feb\uff0c\u63a8\u8350\u5f00\u53d1\u4f7f\u7528</li> </ul>"}, {"location": "android/fws/fws_aosp/#lunch", "title": "\u6dfb\u52a0lunch\u9009\u9879", "text": "<p>\u5bf9\u4e8e\u6a21\u62df\u5668\u5fc5\u987bsdk\u5f00\u5934\uff0c\u6bd4\u5982lunch sdk_phone_x86_64-userdebug</p> <p>\u6253\u5f00build/make/target/product/AndroidProducts.mk <pre><code>COMMON_LUNCH_CHOICES := \\\n...\nsdk_x86_64-eng \\\nsdk_phone_x86_64-eng \\\nsdk_x86_64-userdebug \\\nsdk_phone_x86_64-userdebug\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#aosp14r29", "title": "aosp14r29\u4e4b\u540e", "text": "<p>\u6a21\u62df\u5668\uff1a <pre><code>sdk_phone64_x86_64-ap2a-eng //\u624b\u673a\nsdk_car_x86_64-ap2a-userdebug //\u8f66\u673a\n</code></pre></p> <p>Pixel6 <pre><code>aosp_oriole-ap2a-eng\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#aosp15", "title": "aosp15", "text": "<p><pre><code>lunch product_name-release-build_variant\n</code></pre> - product_name\uff1a\u5982 aosp_cf_x86_64_phone \u6216 aosp_husky\uff0ccf\u662f\u6307Cuttlefish \u6a21\u62df\u5668 - release \u8bbe\u7f6e\u4e3a trunk_staging - build_variant\uff1auser\u3001userdebug\u3001eng</p> <p>\u6a21\u62df\u5668\uff1a <pre><code>lunch sdk_phone64_x86_64-trunk_staging-eng\n</code></pre> \u771f\u673a <pre><code>lunch aosp_oriole-trunk_staging-eng\n</code></pre> \u62a5\u9519\uff1a <pre><code>cat: device/google/raviole-kernels/5.10/trunk-11969182/vendor_boot.modules.load: \u6ca1\u6709\u90a3\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\nIn file included from build/make/core/config.mk:381:\nIn file included from build/make/core/envsetup.mk:368:\nIn file included from build/make/core/board_config.mk:241:\nIn file included from device/google/raviole/oriole/BoardConfig.mk:46:\ndevice/google/gs101/BoardConfig-common.mk:371: error: vendor_boot.modules.load not found or empty.\n</code></pre> \u89e3\u51b3\uff1a <pre><code>cd device/google/raviole-kernels/5.10/\ngit ch -b master\ngit branch --set-upstream-to=aosp/master master\ngit pull\n</code></pre> \u9009\u62e9\u7248\u672c\u540e\u6267\u884c\u7f16\u8bd1\u547d\u4ee4\uff1amake -j(\u865a\u62df\u673a\u914d\u7f6e\u7684cpu\u6838\u6570)</p> <p>\u6a21\u62df\u5668\u4fee\u6539\u5206\u8fa8\u7387</p> <p>out/target/product/emu64x/config.ini\uff0c\u4fee\u6539\u6210 <pre><code>hw.lcd.density=420\nskin.name=1080x2400\nskin.path=1080x2400\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#_6", "title": "\u7f16\u8bd1\u4ee5\u53ca\u547d\u4ee4\u76f8\u5173", "text": "<p>fws_aosp_make</p>"}, {"location": "android/fws/fws_aosp/#car-api", "title": "Car API\u76f8\u5173", "text": "<p>\u5373\u7f16\u8bd1\u548cCarService\u901a\u4fe1\u7684\u63a5\u53e3\u5e93</p> <p>make android.car \u53ef\u770b\u5230\u6240\u6709\u65b9\u6cd5\u63a5\u53e3\uff0c\u5305\u62ec\u5177\u4f53\u5b9e\u73b0</p> <p>make android.car-system-stubs \u53ef\u770b\u5230\u6240\u6709\u65b9\u6cd5\u63a5\u53e3\u4f46\u4e0d\u542b\u5177\u4f53\u5b9e\u73b0</p> <p>make android.car-stubs \u4ec5\u5305\u542b\u6ca1\u6709\u88ab@SystemApi\u4fee\u9970\u7684\u65b9\u6cd5\uff0c\u4e14\u4e0d\u542b\u5177\u4f53\u5b9e\u73b0</p> <p>\u6210\u529f\u540ejar\u5728out\\soong.intermediates\\packages\\services\\Car\\car-lib\\android.car\\android_common\\javac\\</p> <p>pixel\u624b\u673a\u5237\u5165\u8f66\u8f7d\u7cfb\u7edf</p> <p>https://source.android.com/docs/automotive/start/pixelxl?hl=zh-cn</p>"}, {"location": "android/fws/fws_aosp/#8", "title": "8.\u5237\u673a(\u53ef\u8df3\u8fc7)", "text": "<p>\u8c37\u6b4c\u539f\u751f\u624b\u673a\u5730\u5740\uff1a</p> <p>\u7ebf\u5237\u5305\uff1ahttps://developers.google.com/android/images</p> <p>OTA\u5305\uff1ahttps://developers.google.com/android/ota</p>"}, {"location": "android/fws/fws_aosp/#_7", "title": "\u5237\u673a\u7f16\u8bd1\u7684\u5305", "text": "<p>\u89e3\u9501\u8bbe\u5907 <pre><code>fastboot flashing unlock\n\u97f3\u91cf\u952e\u9009\u62e9Unlock\n</code></pre> \u67e5\u770b\u7f16\u8bd1\u4ea7\u51fa\u76ee\u5f55\u662f\u5426\u6b63\u786e\uff0c\u9ed8\u8ba4\u662f\u6b63\u786e\u7684\uff0c\u5982\u9700\u914d\u7f6e\u5728.bashrc\u4e2d\u6dfb\u52a0export ANDROID_PRODUCT_OUT=/home/xxx/aosp/out/target/product/oriole <pre><code>echo $ANDROID_PRODUCT_OUT\n</code></pre> \u5237\u5165\u7f16\u8bd1\u4ea7\u7269\uff1a <pre><code>fastboot flashall -w\n</code></pre></p> <p>\u5176\u4ed6\u547d\u4ee4</p> <p>b\u5206\u533a\u76f8\u5173 <pre><code>fastboot set_active other\nfastboot --slot=other flash bootloader bootloader.img\n</code></pre></p> <p>\u62a5\u9519\u95ee\u9898\u89c1</p>"}, {"location": "android/fws/fws_aosp/#wifi", "title": "wifi\u611f\u53f9\u53f7\u5904\u7406", "text": "<p><pre><code>adb shell settings delete global captive_portal_http_url\nadb shell settings delete global captive_portal_https_url\nadb shell settings put global captive_portal_http_url http://www.google.cn/generate_204\nadb shell settings put global captive_portal_https_url https://www.google.cn/generate_204\n</code></pre> \u98de\u884c\u6a21\u5f0f\u5f00\u5173\u4e00\u4e0b</p>"}, {"location": "android/fws/fws_aosp/#9", "title": "9.\u542f\u52a8\u6a21\u62df\u5668", "text": "<p>1.vmware\u4e2d\uff0c\u6e90\u7801\u7f16\u8bd1\u5b8c\u540e\u76f4\u63a5\u6267\u884cemulator\u5373\u53ef</p> <p>2.\u5982\u679c\u662fwsl2\u4e2d\uff0c\u7531\u4e8e\u65e0\u6cd5\u542f\u52a8\u6a21\u62df\u5668\uff0c\u9700\u8981\u501f\u52a9window\u4e2d\u7684emulator.exe\uff0c\u524d\u63d0\u662f\u5df2\u7ecf\u5b89\u88c5\u597dAndroid Studio\u5e76\u4e14\u521b\u5efa\u4e86\u4e00\u4e2a\u6a21\u62df\u5668\u540d\u4e3aPixel5\uff0c\u6a21\u62df\u5668\u5904\u4e8e\u5173\u95ed\u72b6\u6001\uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\u542f\u52a8\u6a21\u62df\u5668 emulator.exe -avd Pixel5 -system \"\\wsl.localhost\\Ubuntu-22.04\\home\\yuli\\aosp\\out\\target\\product\\emulator_x86_64\\system.img\" -data \"\\wsl.localhost\\Ubuntu-22.04\\home\\yuli\\aosp\\out\\target\\product\\emulator_x86_64\\userdata.img\"</p> <p>-system\uff1a\u6307\u5b9a\u7f16\u8bd1\u51fa\u6765\u7684system.img\u955c\u50cf</p> <p>-data\uff1a\u6307\u5b9a\u7f16\u8bd1\u51fa\u6765\u7684userdata.img\u955c\u50cf</p> <p>3.ubuntu\u7cfb\u7edf\u4e2d\u76f4\u63a5\u6267\u884cemulator -writable-system <pre><code>adb root\nadb remount\nadb reboot\n</code></pre> \u5373\u53ef\u63a8\u9001\u6587\u4ef6\u5230system</p>"}, {"location": "android/fws/fws_aosp/#10as", "title": "10.\u6e90\u7801\u5bfc\u5165AS(\u901a\u7528)", "text": "<p>\u751f\u6210idegen.jar <pre><code>source build/envsetup.sh\nmmm development/tools/idegen/\ndevelopment/tools/idegen/idegen.sh\nsudo chmod 777 android.iml\nsudo chmod 777 android.ipr\n</code></pre></p> <p>\u6dfb\u52a0\u6392\u9664\u540d\u5355(android.iml) <pre><code>&lt;excludeFolder url=\"file://$MODULE_DIR$/bionic\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/bootable\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/build\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/cts\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/dalvik\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/developers\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/development\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/device\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/docs\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/external\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/hardware\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/kernel\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/out\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/pdk\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/platform_testing\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/prebuilts\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/sdk\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/system\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/test\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/toolchain\" /&gt;\n&lt;excludeFolder url=\"file://$MODULE_DIR$/tools\" /&gt;\n</code></pre> AS\u5bfc\u5165\u65b9\u5f0f\uff1a\u6253\u5f00android.ipr\u6587\u4ef6</p> <p>\u62a5\u5f02\u5e38\uff1a</p> <p>External file changes sync may be slow: The current inotify(7) watch limit is too low.</p> <p>\u89e3\u51b3\uff1a <pre><code>sudo touch /etc/sysctl.d/idea.conf\n</code></pre> \u5185\u5bb9\u586b\u5199\uff1a <pre><code>fs.inotify.max_user_watches = 524288\nsudo sysctl -p --system\n</code></pre> \u91cd\u542fas</p>"}, {"location": "android/fws/fws_aosp/#11asfplinux", "title": "11.\u6e90\u7801\u5bfc\u5165ASFP(Linux\u4e13\u7528)", "text": "<p>\u4e0b\u8f7d\u5b89\u88c5\u5305\uff1a</p> <p>https://dl.google.com/android/asfp/asfp-2023.1.1.19-linux.deb</p> <p>https://dl.google.com/android/asfp/asfp-2023.2.1.19-linux.deb</p> <p>\u4f7f\u7528\u6559\u7a0b\uff1a</p> <p>https://juejin.cn/post/7316927971095576630</p>"}, {"location": "android/fws/fws_aosp/#12aidegen", "title": "12.AIDEGen\u5bfc\u5165\u6e90\u7801", "text": "<p>\u914d\u7f6eas\u8def\u5f84</p> <p>vi ~/.bashrc <pre><code>export ANDROID_HOME=/opt/android-studio-for-platform\nexport PATH=$PATH:$ANDROID_HOME/bin\n</code></pre></p>"}, {"location": "android/fws/fws_aosp/#13", "title": "13.\u6e90\u7801\u4ed3\u5e93\u672c\u5730\u7ba1\u7406", "text": "<p>1.\u79fb\u52a8\u786c\u76d8/\u672c\u5730\u5176\u4ed6\u6587\u4ef6\u5939\u4f5c\u4e3a\u8fdc\u7a0b\u4ed3\u5e93</p> <p>\u5982\u679c\u662f\u79fb\u52a8\u786c\u76d8\uff0c\u6302\u8f7d\u76ee\u5f55\uff1a/media/xxx/xxx/</p> <p>\u5982\u679c\u662f\u672c\u5730\u5176\u4ed6\u6587\u4ef6\u5939\uff0c\u76ee\u5f55\uff1a/xxx/xxx</p> <p>\u65b0\u5efa\u76ee\u5f55\u5982aosp\uff0c\u521d\u59cb\u5316\u88f8\u4ed3\u5e93 <pre><code>cd aosp\ngit init --bare\n</code></pre> \u4f1a\u51fa\u73b0HEAD\u3001branches\u3001config\u3001description\u3001hooks\u3001info\u3001objects\u3001refs\u6587\u4ef6\u6216\u6587\u4ef6\u5939</p> <p>2.\u672c\u5730aosp\u6e90\u7801</p> <p>\u5220\u9664.repo/ <pre><code>git init\ngit checkout -b my-branch\n\necho \"Initial commit\" &gt; README.md\ngit add README.md\ngit commit -m \"Initial commit\"\n\ngit remote add xxx(\u8fdc\u7a0b\u4ed3\u5e93\u540d\u968f\u610f) /media/xxx/xxx/aosp\n</code></pre> \u786e\u4fddgit remote add\u6210\u529f <pre><code>git remote -v\n</code></pre> \u8f93\u51fa\u7c7b\u4f3c <pre><code>xxx /media/xxx/xxx/aosp/ (fetch)\nxxx /media/xxx/xxx/aosp/ (push)\n</code></pre> \u914d\u7f6epush\u5e76\u63a8\u9001 <pre><code>git push --set-upstream xxx my-branch\n</code></pre> \u6ce8\u610f\uff1a\u6dfb\u52a0\u76ee\u5f55\u65f6\u4f7f\u7528git add -f xxx</p>"}, {"location": "android/fws/fws_aosp_make/", "title": "\u7f16\u8bd1\u76f8\u5173", "text": ""}, {"location": "android/fws/fws_aosp_make/#_1", "title": "\u7f16\u8bd1\u955c\u50cf\u547d\u4ee4", "text": "\u547d\u4ee4 \u955c\u50cf\u6587\u4ef6 make snod \u7f16\u8bd1System.img make vnod \u7f16\u8bd1vendor.img make pnod \u7f16\u8bd1product.img make senod \u7f16\u8bd1system_ext.img make onod \u7f16\u8bd1odm.img"}, {"location": "android/fws/fws_aosp_make/#_2", "title": "\u6e05\u9664\u547d\u4ee4", "text": "\u547d\u4ee4 \u4f5c\u7528 m clobber \u6e05\u9664\u6240\u6709\u7f16\u8bd1\u7f13\u5b58 m clean \u6e05\u9664\u7f16\u8bd1\u7f13\u5b58\uff0c\u7b49\u4ef7\u4e8erm -rf out/ m installclean \u6e05\u9664\u6240\u6709\u4e8c\u8fdb\u5236\u6587\u4ef6"}, {"location": "android/fws/fws_aosp_make/#_3", "title": "\u67e5\u627e\u547d\u4ee4", "text": "\u547d\u4ee4 \u67e5\u627e\u8303\u56f4 jgrep \u5728\u6240\u6709java\u6587\u4ef6\u4e2d\u67e5\u627e cgrep \u5728\u6240\u6709c/c++\u6587\u4ef6\u4e2d\u67e5\u627e resgrep \u5728\u6240\u6709res/*.xml\u6587\u4ef6\u4e2d\u67e5\u627e ggrep \u5728\u6240\u6709Gradle\u6587\u4ef6\u4e2d\u67e5\u627e mangrep \u5728\u6240\u6709AndroidManfest.xml\u6587\u4ef6\u4e2d\u67e5\u627e mgrep \u5728\u6240\u6709Makefiles\u548c*.bp\u6587\u4ef6\u4e2d\u67e5\u627e"}, {"location": "android/fws/fws_aosp_make/#_4", "title": "\u5176\u4ed6\u547d\u4ee4", "text": "\u547d\u4ee4 \u4f5c\u7528 printconfig \u6253\u5370\u5f53\u524d\u914d\u7f6e\u4fe1\u606f allmod \u663e\u793aaosp\u6240\u6709module pathmod [module name] \u663e\u793amodule\u6240\u5728\u8def\u5f84 refreshmod \u5237\u65b0module\u5217\u8868 gomod [module name] \u5b9a\u4f4d\u5230\u6307\u5b9amodule\u76ee\u5f55 croot \u56de\u5230aosp\u6839\u76ee\u5f55 <p>\u6a21\u5757\u7f16\u8bd1\uff1amake [module name]</p>"}, {"location": "android/fws/fws_aosp_make/#_5", "title": "\u5e38\u89c1\u6a21\u5757\u7f16\u8bd1", "text": "\u6a21\u5757\u540d make\u65b9\u5f0f\u547d\u4ee4 mmm\u65b9\u5f0f\u547d\u4ee4 init make init mmm system/core/init zygote make app_process mmm frameworks/base/cmds/app_process framework-res make framework-res mmm frameworks/base/core/res framework-jni make libandroid_runtime mmm frameworks/base/core/jni framework framework-minus-apex mmm frameworks/base/core/java services make services mmm frameworks/base/core/services libandroid_servers make libandroid_servers mmm frameworks/base/core/jni libsensorservice make libsensorservice mmm frameworks/native/services/sensorservice sensorservice make sensorservice mmm frameworks/native/services/sensorservice binder make libbinder mmm frameworks/native/libs/binder <p>\u5176\u4e2d\u7f16\u8bd1framework</p> <p>make framework(Android12\u4e4b\u540e\u4f7f\u7528make framework-minus-apex) \u6216\u8005\u76f4\u63a5mmm frameworks/base</p>"}, {"location": "android/fws/fws_aosp_make/#ninja", "title": "ninja", "text": ""}, {"location": "android/fws/fws_aosp_make/#_6", "title": "\u914d\u7f6e\u73af\u5883", "text": "<p><pre><code>ln -sf out/combined-***.ninja build.ninja\n</code></pre> \u5982oriole\u8bbe\u5907 <pre><code>ln -sf out/combined-aosp_oriole.ninja build.ninja\n</code></pre> \u4fdd\u8bc1ninja\u547d\u4ee4\u5b58\u5728 <pre><code>cp prebuilts/build-tools/linux-x86/bin/ninja out/host/linux-x86/bin/\n</code></pre></p>"}, {"location": "android/fws/fws_aosp_make/#_7", "title": "\u7f16\u8bd1", "text": "<p>\u6574\u7f16 <pre><code>ninja\n</code></pre> \u5355\u7f16\u548cmake\u4e00\u6837\uff0c\u5982 <pre><code>ninja services\n</code></pre></p>"}, {"location": "android/fws/fws_aosp_make/#_8", "title": "\u5e38\u89c1\u95ee\u9898", "text": "<ol> <li>\u7f3a\u5c11so\u5e93\uff0c\u5982\u7f3a\u5c11libjemalloc5.so <pre><code>sudo cp prebuilts/build-tools/linux-x86/lib64/libjemalloc5.so /usr/lib/\n</code></pre></li> <li>Android.bp\u4fee\u6539 <pre><code>rm -rf out/soong/.temp\nm soong\nninja -f out/build-***.ninja\n</code></pre></li> </ol>"}, {"location": "android/fws/fws_app_start/", "title": "App\u8fdb\u7a0b\u542f\u52a8", "text": ""}, {"location": "android/fws/fws_app_start/#app", "title": "app\u542f\u52a8\u6d41\u7a0b", "text": ""}, {"location": "android/fws/fws_app_start/#_1", "title": "\u51b7\u542f\u52a8", "text": "<p>1.Launcher(\u6216\u5176\u4ed6\u5e94\u7528)\u8fdb\u7a0b</p> <p>launcher\u8c03\u7528Activity:startActivity-&gt;startActivityyForResult-&gt;</p> <p>Instrumentation:execStartActivity</p> <p>Instrumentation\u4ece\u54ea\u91cc\u6765\uff1f\u7531SystemServer\u5728bindApplication\u65f6\u521b\u5efa\u7684</p> <p>2.system_server\u8fdb\u7a0b</p> <p>\u901a\u8fc7binder\u8c03\u7528atms\u7684startActivity-&gt;startActivityAsUser</p> <p>ActivityStarter:execute-&gt;executeRequest\u521b\u5efaActivityRecord</p> <p>ActivityRecord\u521b\u5efa\u4f1asetState\u4e3aINITIALIZING\uff0c\u751f\u547d\u5468\u671f\u76f8\u5173</p> <p>-&gt;startActivityUnchecked\u8fd9\u91cc\u6709\u4e2adoResume\u53c2\u6570\u4e3atrue</p> <p>-&gt;startActivityInner\u8c03\u7528setInitialState\u5bf9mDoResume\u8d4b\u503c</p> <p>-&gt;getLaunchRootTask</p> <p>RootWindowContainer:getLaunchRootTask</p> <p>TaskDisplayArea:getOrCreateRootTask</p> <p>Task:startActivityLocked</p> <p>ActivityRecord:showStartingWindow-&gt;addStartingWindow\u542f\u52a8\u95ea\u5c4f\u9875\u76f8\u5173SplashScreen</p> <p>RootWindowContainer: resumeFocusedTasksTopActivities</p> <p>Task: resumeTopActivityUncheckedLocked-&gt;resumeTopActivityInnerLocked</p> <p>TaskFragment: resumeTopActivity</p> <p>ActivityTaskSupervisor:startSpecificActivity</p> <p>\u5982\u679cnext.attachedToProcess()\u5219\u8bf4\u660e\u8fdb\u7a0b\u5df2\u7ecf\u521b\u5efa</p> <p>ActivityTaskSupervisor:realStartActivityLocked\u89c1\u70ed\u542f\u52a8\u6d41\u7a0b</p> <p>\u5426\u5219\u8d70atms:startProcessAsync</p> <p>ams:startProcess</p> <p>ProcessList: startProcessLocked-&gt;\u4e3b\u8981\u662f\u521b\u5efanewProcessRecordLocked\uff0c\u6821\u9a8cflag\u53c2\u6570\u865a\u62df\u673a\u76f8\u5173\uff0c\u6700\u7ec8\u5f02\u6b65\u6216\u540c\u6b65\u90fd\u8c03\u7528startProcess</p> <p>\u5982\u679cusesWebviewZygote\u5219\u8c03\u7528startWebView</p> <p>\u5982\u679cusesAppZygote\u5219\u8c03\u7528createAppZygoteForProcessIfNeeded</p> <p>\u5176\u4ed6\u8d70Process.start\u65b9\u6cd5</p> <p>\u666e\u901a\u5e94\u7528\u8d70usesAppZygote\uff0c\u521b\u5efaAppZygote</p> <p>AppZygote: getProcess-&gt;connectToZygoteIfNeededLocked</p> <p>ZygoteProcess: startChildZygote\u521b\u5efaLocalSocketAddress</p> <p>startViaZygote-&gt;zygoteSendArgsAndGetResult-&gt;attemptZygoteSendArgsAndGetResult</p> <p>\u8fd4\u56deChildZygoteProcess\u5bf9\u8c61mZygote</p> <p>ZygoteProcess: waitForConnectionToZygote\u4f20\u5165mZygote\u7684socket\u5730\u5740\u7136\u540e\u5efa\u7acb\u8fde\u63a5-&gt;connect</p> <p>-&gt;preloadApp</p> <p>\u63a5\u7740getProcess\u6700\u7ec8\u8fd4\u56de\u7684\u662fmZygote\u5bf9\u8c61-&gt;start-&gt;startViaZygote-&gt;zygoteSendArgsAndGetResult-&gt;attemptZygoteSendArgsAndGetResult</p> <p>zygote\u8fdb\u7a0b\u542f\u52a8\u65f6main\u65b9\u6cd5\u4e2d\u4f1a\u521b\u5efaZygoteServer</p> <p>3.zygote\u8fdb\u7a0b</p> <p>ZygoteServer: runSelectLoop-&gt;acceptCommandPeer\u7b49\u5f85\u63a5\u8fde-&gt;fillUsapPool</p> <p>Zygote:forkUsap-&gt;nativeForkApp\u8fd4\u56dechildMain\uff0cpid\u662f0\u5219\u8868\u793a\u5728\u5b50\u8fdb\u7a0b(\u5c31\u662ffork\u51fa\u6765\u7684\u5e94\u7528\u8fdb\u7a0b)</p> <p>ZygoteInit:zygoteInit</p> <p>RuntimeInit:applicationInit-&gt;findStaticMain\u53cd\u5c04\u8c03\u7528ActivityThread\u7684main</p> <p>\u521b\u5efaActivityThread\u5bf9\u8c61\u8c03\u7528attach\u65b9\u6cd5</p> <p>\u5982\u679c\u662f\u7cfb\u7edf(SystemServer)\u8c03\u7528\u5219\u521b\u5efaInstrumentation\uff0c\u521b\u5efaApplication\u8c03\u7528onCreate</p> <p>\u5982\u679c\u4e0d\u662f\u7cfb\u7edf\u8c03\u7528\u5219\u901a\u8fc7ams\u8c03\u7528attachApplication(\u8de8\u8fdb\u7a0b)\uff0c\u5e76\u4f20\u9012IApplicationThread\u8fd9\u4e2abinder\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662f\u4e3a\u4e86system_server\u8fdb\u7a0b\u65b9\u4fbf\u80fd\u4e0e\u8fd9\u4e2a\u5e94\u7528\u8fdb\u7a0b\u901a\u4fe1</p> <p>4.system_server\u8fdb\u7a0b</p> <p>ams: attachApplication</p> <p>IApplicationThread: bindApplication-&gt;handleBindApplication\u4e3b\u8981\u662f\u521b\u5efaInstrumentation</p> <p>\u7136\u540e\u521b\u5efaApplication-&gt;makeApplication</p> <p>Instrumentation:newApplication</p> <p>Application:attach</p> <p>\u521d\u59cb\u5316ContentProvider-&gt;installContentProviders-&gt;installProvider-&gt;instantiateProvider\u901a\u8fc7\u53cd\u5c04\u521b\u5efaContentProvider</p> <p>ContentProvider:attachInfo-&gt;onCreate</p> <p>\u8c03\u7528Application\u7684onCreate\u65b9\u6cd5callApplicationOnCreate</p> <p>Application:onCreate</p> <p>\u63a5\u7740\u56de\u5230atms:attachApplication</p> <p>RootWindowContainer:attachApplication-&gt;startActivityForAttachedApplicationIfNeeded-&gt;realStartActivityLocked\u8d70\u70ed\u542f\u52a8\u6d41\u7a0b</p> <p>5.app\u8fdb\u7a0b</p>"}, {"location": "android/fws/fws_app_start/#_2", "title": "\u70ed\u542f\u52a8", "text": "<p>1.Launcher(\u6216\u5176\u4ed6\u5e94\u7528)\u8fdb\u7a0b\u9636\u6bb5\u4e00\u81f4</p> <p>2.system_server\u8fdb\u7a0b</p> <p>\u8d70\u5230TaskFragment: resumeTopActivity</p> <p>ActivityTaskSupervisor:startSpecificActivity-&gt;realStartActivityLocked</p> <p>\u521b\u5efaClientTransaction\uff0c\u6dfb\u52a0addCallback:LaunchActivityItem</p> <p>\u8bbe\u7f6e\u8bf7\u6c42setLifecycleStateRequest:ResumeActivityItem</p> <p>atms:scheduleTransaction</p> <p>ClientTransaction:schedule</p> <p>ApplicationThread:\u901a\u8fc7IApplicationThread\u8fd9\u4e2abinder\u5bf9\u8c61-&gt;scheduleTransaction</p> <p>ActivityThread:scheduleTransaction\u901a\u8fc7Handler\u6700\u7ec8\u8c03\u7528</p> <p>TransactionExecutor:execute-&gt;executeCallbacks\u5373LauncherActivityItem</p> <p>LauncherActivityItem:execute-&gt;handleLaunchActivity</p> <p>ActivityThread:\u8d70handleLaunchActivity\u6d41\u7a0b</p> <p>\u56de\u5230TransactionExecutor:execute-&gt;executeLifecycleState-&gt;cycleToPath-&gt;performLifecycleSequence</p> <p>TransactionHandler:handleStartActivity</p> <p>\u63a5\u7740ResumeActivityItem</p> <p>ResumeActivityItem:execute-&gt;handleResumeActivity</p> <p>ActivityThread:\u8d70handleResumeActivity\u6d41\u7a0b</p> <p>\u8865\u5145\uff1a\u51b7\u542f\u52a8\u4e2d\u7684\u70ed\u542f\u52a8\u6d41\u7a0b</p> <p>RootWindowContainer:realStartActivityLocked</p> <p>ClientTransaction:schedule</p>"}, {"location": "android/fws/fws_app_start/#launcher", "title": "launcher\u542f\u52a8\u6d41\u7a0b", "text": "<p>SystemServer:main-&gt;run-&gt;startOtherServices</p> <p>ams:systemReady</p> <p>atms:startHomeOnAllDisplays</p> <p>RootWindowContainer:startHomeOnAllDisplays-&gt;startHomeOnDisplay-&gt;startHomeOnTaskDisplayArea</p> <p>ActivityStartController:startHomeActivity\u521b\u5efaTask</p> <p>ActivityStarter:execute\u63a5\u7740\u542f\u52a8\u5e94\u7528\u4e00\u6837</p>"}, {"location": "android/fws/fws_app_start/#_3", "title": "\u7ec6\u8282\u8865\u5145", "text": "<p>ServiceManager.getService(Context.ACTIVITY_TASK_SERVICE)</p> <p>\u901a\u8fc7AMS\u542f\u52a8\u6d41\u7a0b\u53ef\u77e5\u5728publishBinderService(Context.ACTIVITY_TASK_SERVICE, mService)\u4f1a\u5c06atms\u6dfb\u52a0\u5230ServiceManager\u4e2d</p> <p>ActivityTaskManagerService: startProcessAsync <pre><code>final Message m = PooledLambda.obtainMessage(ActivityManagerInternal::startProcess,\n                mAmInternal, activity.processName, activity.info.applicationInfo, knownToBeDead,\n                isTop, hostingType, activity.intent.getComponent());\nmH.sendMessage(m);\n</code></pre> AMS\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u5728Lifecycle\u7684onStart\u65b9\u6cd5\u4e2d\u8c03\u7528start\u65b9\u6cd5 LocalServices.addService(ActivityManagerInternal.class, mInternal)\uff0cLocalService\u7ee7\u627f\u4e8eActivityManagerInternal</p> <p>\u53cd\u5c04\u8c03\u7528ActivityThread\u7684main\u65b9\u6cd5\uff0cattach\u4f20\u5165\u7684\u662ffalse <pre><code>Looper.prepareMainLooper();\nActivityThread thread = new ActivityThread();\nthread.attach(false, startSeq);\nLooper.loop();\n</code></pre></p> <p>\u5728SystemServer\u4e2d\u4e5f\u4f1a\u521b\u5efaActivityThread\uff0ccreateSystemContext\u65b9\u6cd5\u4e2d\uff0cattach\u4f20\u5165\u7684\u662ftrue <pre><code>ActivityThread activityThread = ActivityThread.systemMain();\n\npublic static ActivityThread systemMain() {\n    ThreadedRenderer.initForSystemProcess();\n    ActivityThread thread = new ActivityThread();\n    thread.attach(true, 0);\n    return thread;\n}\n</code></pre></p>"}, {"location": "android/fws/fws_app_start/#activity", "title": "Activity\u751f\u547d\u5468\u671f\u6d41\u7a0b", "text": "<p>handleLaunchActivity\u6d41\u7a0b <pre><code>public Activity handleLaunchActivity(ActivityClientRecord r,\nPendingTransactionActions pendingActions, Intent customIntent) {\nfinal Activity a = performLaunchActivity(r, customIntent);\n}\n\nprivate Activity performLaunchActivity(ActivityClientRecord r, Intent customIntent) {\n    ContextImpl appContext = createBaseContextForActivity(r);//\u521b\u5efaBaseContext\n    Activity activity = null;\n\n    //\u53cd\u5c04\u521b\u5efaActivity\n    java.lang.ClassLoader cl = appContext.getClassLoader();\n    activity = mInstrumentation.newActivity(cl, component.getClassName(), r.intent);\n\n    //...\n    Application app = r.packageInfo.makeApplicationInner(false, mInstrumentation);//\u521b\u5efaApplicaton\n\n    //...\n    //\u8c03\u7528attch\u65b9\u6cd5\n    activity.attach(appContext, this, getInstrumentation(), r.token,r.ident, app, r.intent, r.activityInfo, title, r.parent,\n        r.embeddedID, r.lastNonConfigurationInstances, config,\n        r.referrer, r.voiceInteractor, window, r.activityConfigCallback,\n        r.assistToken, r.shareableActivityToken);\n    //...\n    //\u8bbe\u7f6eActivity\u7684\u4e3b\u9898\n    int theme = r.activityInfo.getThemeResource();\n    if (theme != 0) {\n        activity.setTheme(theme);\n    }\n    //...\n\n    if (r.isPersistable()) {\n        mInstrumentation.callActivityOnCreate(activity, r.state, r.persistentState);\n    } else {\n        mInstrumentation.callActivityOnCreate(activity, r.state);\n    }\n\n    //...\n    r.setState(ON_CREATE);//lifecycle\u72b6\u6001\u8bbe\u7f6e\n}\n</code></pre> attach\u65b9\u6cd5 <pre><code>final void attach(Context context, ActivityThread aThread,\n    Instrumentation instr, IBinder token, int ident,\n    Application application, Intent intent, ActivityInfo info,\n    CharSequence title, Activity parent, String id,\n    NonConfigurationInstances lastNonConfigurationInstances,\n    Configuration config, String referrer, IVoiceInteractor voiceInteractor,\n    Window window, ActivityConfigCallback activityConfigCallback, IBinder assistToken,\n    IBinder shareableActivityToken) {\n    //...\n    mWindow = new PhoneWindow(this, window, activityConfigCallback);// \u521b\u5efawindow\u552f\u4e00\u5b9e\u73b0\u7c7b\n    //...\n}\n</code></pre> callActivityOnCreate\u65b9\u6cd5 <pre><code>public void callActivityOnCreate(Activity activity, Bundle icicle,\n            PersistableBundle persistentState) {\n    prePerformCreate(activity);\n    activity.performCreate(icicle, persistentState);\n    postPerformCreate(activity);\n}\n\nfinal void performCreate(Bundle icicle, PersistableBundle persistentState) {\n    final int windowingMode = getResources().getConfiguration().windowConfiguration.getWindowingMode();\n    //\u591a\u7a97\u6a21\u5f0f\n    mIsInMultiWindowMode = inMultiWindowMode(windowingMode);\n    //\u753b\u4e2d\u753b\u6a21\u5f0f\n    mIsInPictureInPictureMode = windowingMode == WINDOWING_MODE_PINNED;\n    //...\n    //\u56de\u8c03\u5230Activity\u751f\u547d\u5468\u671f\u7684onCreate\u65b9\u6cd5\n    if (persistentState != null) {\n        onCreate(icicle, persistentState);\n    } else {\n        onCreate(icicle);\n    }\n    //...\n    //fragment\u751f\u547d\u5468\u671f\u5206\u53d1\n    mFragments.dispatchActivityCreated();\n    //...\n</code></pre></p> <p>handleResumeActivity\u6d41\u7a0b <pre><code>ActivityThread.java\npublic void handleResumeActivity(ActivityClientRecord r, boolean finalStateRequest, boolean isForward, String reason) {\n    if (!performResumeActivity(r, finalStateRequest, reason)) {\n        return;\n    }\n    //...\n}\n\npublic boolean performResumeActivity(ActivityClientRecord r, boolean finalStateRequest, String reason) {\n    //...\n    r.activity.performResume(r.startsNotResumed, reason);\n    //...\n}\n\n final void performResume(boolean followedByPause, String reason) {\n        //...\n        dispatchActivityPreResumed();\n        performRestart(true /* start */, reason);\n        //...\n        mInstrumentation.callActivityOnResume(this);\n        //...\n        mFragments.dispatchResume();\n        //...\n        dispatchActivityPostResumed();\n    }\n\npublic void callActivityOnResume(Activity activity) {\n        activity.mResumed = true;\n        activity.onResume();\n        //...\n    }\n</code></pre> \u56de\u8c03\u5230Activity\u751f\u547d\u5468\u671f\u7684onResume\u65b9\u6cd5\uff0c\u56de\u5230handleResumeActivity\u63a5\u7740\u5f80\u4e0b\u8d70 <pre><code>public void handleResumeActivity(ActivityClientRecord r, boolean finalStateRequest, boolean isForward, String reason) {\n    //...\n    if (!r.activity.mFinished &amp;&amp; willBeVisible &amp;&amp; r.activity.mDecor != null &amp;&amp; !r.hideForNow) {\n        //...\n        r.activity.mVisibleFromServer = true;\n        mNumVisibleActivities++;\n        if (r.activity.mVisibleFromClient) {\n            r.activity.makeVisible();\n        }\n    }\n}\n\nvoid makeVisible() {\n    if (!mWindowAdded) {\n        ViewManager wm = getWindowManager();\n        wm.addView(mDecor, getWindow().getAttributes());\n        mWindowAdded = true;\n    }\n    mDecor.setVisibility(View.VISIBLE);\n}\n\n//WindowManagerImpl.java\npublic void addView(@NonNull View view, @NonNull ViewGroup.LayoutParams params) {\n    applyTokens(params);\n    mGlobal.addView(view, params, mContext.getDisplayNoVerify(), mParentWindow, mContext.getUserId());\n}\n\n//WindowManagerGlobal.java\npublic void addView(View view, ViewGroup.LayoutParams params,\n    Display display, Window parentWindow, int userId) {\n    ViewRootImpl root;\n    //...\n    if (windowlessSession == null) {\n        root = new ViewRootImpl(view.getContext(), display);\n    } else {\n        root = new ViewRootImpl(view.getContext(), display,\n                windowlessSession);\n    }\n    view.setLayoutParams(wparams);\n    mViews.add(view);\n    mRoots.add(root);\n    mParams.add(wparams);\n\n    root.setView(view, wparams, panelParentView, userId);\n    //...\n}\n</code></pre> setView\u4e2d\u901a\u8fc7IWindowSession(Binder)\u4e0ewms\u4ea4\u4e92</p>"}, {"location": "android/fws/fws_app_start/#_4", "title": "\u603b\u7ed3", "text": "<p>1.onRestoreInstanceState\u662f\u5728onStart\u4e4b\u540e\uff0conPostCreate\u4e4b\u524d\u8c03\u7528</p> <p>2.DecorView\u5728onCreate\u4e2d\u8c03\u7528setContentView\uff0cViewRootImpl\u5728onResume\u521b\u5efa\u540eWindowManager\u4f1a\u8c03\u7528addView\u4e2d\u521b\u5efa\u5e76\u6dfb\u52a0</p> <p>3.PhoneWindow\u5728attach\u4e2d\u521b\u5efa\uff0c\u5728onCreate\u4e4b\u524d</p> <p>4.Provider\u5728Application\u7684onCreate\u4e4b\u524d\u521b\u5efa</p> <p>5.onWindowFocusChanged\u5728onResume\u4e4b\u540e\u8c03\u7528</p> <p>6.onStart\u88ab\u8c03\u7528\u8868\u793aActivity\u53ef\u89c1\u4f46\u4e0d\u53ef\u4ea4\u4e92\uff0conResume\u8868\u793a\u53ef\u89c1\u5e76\u53ef\u4ee5\u4ea4\u4e92</p>"}, {"location": "android/fws/fws_boot/", "title": "\u5f00\u673a\u52a8\u753b", "text": ""}, {"location": "android/fws/fws_boot/#_1", "title": "\u603b\u4f53\u4ecb\u7ecd", "text": "<p>\u4e0d\u4f9d\u8d56\u4e8eview\u5b9e\u73b0</p> <p>\u9010\u5e27\u52a8\u753b\uff1a\u7075\u6d3b\u3001\u7ec6\u817b\uff0c\u56fe\u7247\u592a\u5927\u4f1a\u4e0d\u6d41\u7545</p> <p>\u52a8\u753b\u6587\u4ef6\u5b58\u653e\u8def\u5f84\uff1a/system/media/</p> <p>Opengl\u52a8\u753b\uff1a\u901a\u8fc7\u7f16\u7a0b\u7ed8\u5236\u52a8\u753b\uff0c\u8de8\u5e73\u53f0\uff0c\u7ed8\u5236\u4e8c\u7ef4\u3001\u4e09\u7ef4\u7b49\u590d\u6742\u52a8\u753b\u6216\u89c6\u56fe</p>"}, {"location": "android/fws/fws_boot/#_2", "title": "\u6e90\u7801\u5206\u6790", "text": ""}, {"location": "android/fws/fws_boot/#_3", "title": "\u6e90\u7801\u8def\u5f84", "text": "<p>1.bootanimation: frameworks/base/cmds/bootanimation/</p> <p>\u76f8\u5173\u6587\u4ef6</p> <p>frameworks/base/cmds/bootanimation/bootanim.rc</p> <p>\u7f16\u8bd1\u751f\u6210\uff1aout/target/product/oriole/system/bin/bootanimation</p> <p>2.surfaceflinger: frameworks/native/services/surfaceflinger/</p> <p>\u76f8\u5173\u6587\u4ef6</p> <p>frameworks/native/services/surfaceflinger/</p> <ul> <li>surfaceflinger.rc</li> <li>main_surfaceflinger.cpp</li> <li>SurfaceFlinger.cpp</li> <li>StartPropertySetThread.cpp</li> </ul> <p>\u7f16\u8bd1\u751f\u6210\uff1aout/target/product/oriole/system/bin/surfaceflinger</p> <p>3.init: system/core/init/</p> <p>\u76f8\u5173\u6587\u4ef6</p> <p>system/core/init/</p> <ul> <li>main.cpp</li> <li>init.cpp</li> <li>property_service.cpp</li> </ul> <p>\u7f16\u8bd1\u751f\u6210\uff1aout/target/product/oriole/system/bin/init</p>"}, {"location": "android/fws/fws_boot/#_4", "title": "\u542f\u52a8\u6d41\u7a0b", "text": "<p>init.rc\u8c03\u7528surfaceflinger.rc\u548cbootanim.rc</p> <p>\u5176\u4e2dbootanim\u670d\u52a1\u4e0d\u4f1a\u88ab\u542f\u52a8\uff0c\u4f1a\u6267\u884cdisabled\uff0c\u4f46\u662fbootanim\u8fd9\u4e2aservice\u4f1a\u88ab\u8bb0\u5f55\u6dfb\u52a0\u5230Service\u5217\u8868\u4e2d <pre><code>service bootanim /system/bin/bootanimation\n    class core animation\n    user graphics\n    group graphics audio\n    disabled\n    oneshot\n    ioprio rt 0\n    task_profiles MaxPerformance\n</code></pre> main_surfaceflinger.cpp <pre><code>int main(int, char**) {\n    //...\n    sp&lt;SurfaceFlinger&gt; flinger = surfaceflinger::createSurfaceFlinger();\n    //...\n    flinger-&gt;init();\n    //...\n    flinger-&gt;run();\n    //...\n}\n</code></pre> SurfaceFlinger.cpp <pre><code>void SurfaceFlinger::init() FTL_FAKE_GUARD(kMainThreadContext) {\n    //...\n    mStartPropertySetThread = getFactory().createStartPropertySetThread(presentFenceReliable);\n\n    if (mStartPropertySetThread-&gt;Start() != NO_ERROR) {\n        ALOGE(\"Run StartPropertySetThread failed!\");\n    }\n    //...\n}\n</code></pre> StartPropertySetThread.cpp\uff0c\u542f\u52a8\u7ebf\u7a0b\uff0c\u8c03\u7528Start\u540e\u56de\u8c03\u7528threadLoop <pre><code>status_t StartPropertySetThread::Start() {\n    return run(\"SurfaceFlinger::StartPropertySetThread\", PRIORITY_NORMAL);\n}\n\nbool StartPropertySetThread::threadLoop() {\n    //...\n    // Clear BootAnimation exit flag\n    property_set(\"service.bootanim.exit\", \"0\");\n    property_set(\"service.bootanim.progress\", \"0\");\n    // Start BootAnimation if not started\n    property_set(\"ctl.start\", \"bootanim\");//\u542f\u52a8bootanim\u8fdb\u7a0b\n    // Exit immediately\n    return false;\n}\n</code></pre> \u4e3a\u4f55property_set\u5c31\u80fd\u542f\u52a8bootanim\u670d\u52a1\u5462\uff0c\u5728init\u8fdb\u7a0b\u542f\u52a8\u65f6\u4f1a\u76d1\u542c\u5c5e\u6027\u5e76\u542f\u52a8\u76f8\u5e94\u670d\u52a1</p> <p>main.cpp <pre><code>int main(int argc, char** argv) {\n    //...\n    if (!strcmp(argv[1], \"second_stage\")) {\n        return SecondStageMain(argc, argv);\n    }\n    //...\n}\n</code></pre> init.cpp <pre><code>nt SecondStageMain(int argc, char** argv) {\n    //...\n    PropertyInit();\n    //...\n    StartPropertyService(&amp;property_fd);\n    //...\n    HandleControlMessages();\n    //...\n}\n</code></pre> property_service.cpp\uff0c\u521b\u5efasocket\u5e76\u521b\u5efa\u7ebf\u7a0b\u6765\u76d1\u542cproperty_set\u8bbe\u7f6e\u7684\u5c5e\u6027 <pre><code>void StartPropertyService(int* epoll_socket) {\n    //...\n    *epoll_socket = from_init_socket = sockets[0];\n    init_socket = sockets[1];\n    StartSendingMessages();\n\n    StartThread(PROP_SERVICE_FOR_SYSTEM_NAME, 0660, AID_SYSTEM, property_service_for_system_thread,\n                true);\n    StartThread(PROP_SERVICE_NAME, 0666, 0, property_service_thread, false);\n\n    //...\n    }\n}\nvoid StartThread(const char* name, int mode, int gid, std::thread&amp; t, bool listen_init) {\n    int fd = -1;\n    if (auto result = CreateSocket(name, SOCK_STREAM | SOCK_CLOEXEC | SOCK_NONBLOCK,\n                                   /*passcred=*/false, /*should_listen=*/false, mode, /*uid=*/0,\n                                   /*gid=*/gid, /*socketcon=*/{});\n        result.ok()) {\n        fd = *result;\n    } else {\n        LOG(FATAL) &lt;&lt; \"start_property_service socket creation failed: \" &lt;&lt; result.error();\n    }\n\n    listen(fd, 8);\n\n    auto new_thread = std::thread(PropertyServiceThread, fd, listen_init);\n    t.swap(new_thread);\n}\n</code></pre> \u542f\u52a8\u7ebf\u7a0bPropertyServiceThread <pre><code>static void PropertyServiceThread(int fd, bool listen_init) {\n    Epoll epoll;\n    //...\n    if (auto result = epoll.RegisterHandler(fd, std::bind(handle_property_set_fd, fd));\n        !result.ok()) {\n        LOG(FATAL) &lt;&lt; result.error();\n    }\n    //...\n}\nstatic void handle_property_set_fd(int fd) {\n    //...\n    switch (cmd) {\n    case PROP_MSG_SETPROP: {\n        //...\n        auto result = HandlePropertySetNoSocket(prop_name, prop_value, source_context, cr, &amp;error);\n    //...\n    case PROP_MSG_SETPROP2: {\n        auto result = HandlePropertySet(name, value, source_context, cr, &amp;socket, &amp;error);\n    //...\n}\n</code></pre> \u6700\u7ec8\u4f1a\u8c03\u7528HandlePropertySet\uff0c\u4e4b\u524d\u8bbe\u7f6e\u7684\u662fctl.start <pre><code>std::optional&lt;uint32_t&gt; HandlePropertySet(const std::string&amp; name, const std::string&amp; value,\n                                          const std::string&amp; source_context, const ucred&amp; cr,\n                                          SocketConnection* socket, std::string* error) {\n    //...\n    if (StartsWith(name, \"ctl.\")) {\n        return {SendControlMessage(name.c_str() + 4, value, cr.pid, socket, error)};\n    }\n    //...\n}\n\nstatic uint32_t SendControlMessage(const std::string&amp; msg, const std::string&amp; name, pid_t pid,\n                                   SocketConnection* socket, std::string* error) {\n    //...\n    bool queue_success = QueueControlMessage(msg, name, pid, fd);\n    //...\n}\n</code></pre> init.cpp <pre><code>bool QueueControlMessage(const std::string&amp; message, const std::string&amp; name, pid_t pid, int fd) {\n    //...\n    pending_control_messages.push({message, name, pid, fd});\n    WakeMainInitThread();\n    //...\n}\n</code></pre> WakeMainInitThread\u4f1a\u89e6\u53d1HandleControlMessages <pre><code>static void HandleControlMessages() {\n    auto lock = std::unique_lock{pending_control_messages_lock};\n    if (!pending_control_messages.empty()) {\n        auto control_message = pending_control_messages.front();\n        pending_control_messages.pop();\n        lock.unlock();\n        bool success = HandleControlMessage(control_message.message, control_message.name,\n                                            control_message.pid);\n        //...\n        lock.lock();\n    }\n    //...\n}\nstatic bool HandleControlMessage(std::string_view message, const std::string&amp; name,\n                                 pid_t from_pid) {\n    //...\n    Service* service = nullptr;\n    if (ConsumePrefix(&amp;action, \"interface_\")) {\n        service = ServiceList::GetInstance().FindInterface(name);\n    } else {\n        service = ServiceList::GetInstance().FindService(name);\u901a\u8fc7name=bootanim\u627e\u5230\u5bf9\u5e94\u7684\u670d\u52a1\uff0cinit\u7684\u65f6\u5019\u88ab\u8bb0\u5f55\u5230ServiceList\u5e76disabled\u7684\n    }\n    const auto&amp; map = GetControlMessageMap();\n    const auto it = map.find(action);//action=start\n    //...\n    const auto&amp; function = it-&gt;second;\n\n    if (auto result = function(service); !result.ok()) {\n        //...\n    }\n    //...\n}\nstatic const std::map&lt;std::string, ControlMessageFunction, std::less&lt;&gt;&gt;&amp; GetControlMessageMap() {\n    // clang-format off\n    static const std::map&lt;std::string, ControlMessageFunction, std::less&lt;&gt;&gt; control_message_functions = {\n        {\"sigstop_on\",        [](auto* service) { service-&gt;set_sigstop(true); return Result&lt;void&gt;{}; }},\n        {\"sigstop_off\",       [](auto* service) { service-&gt;set_sigstop(false); return Result&lt;void&gt;{}; }},\n        {\"oneshot_on\",        [](auto* service) { service-&gt;set_oneshot(true); return Result&lt;void&gt;{}; }},\n        {\"oneshot_off\",       [](auto* service) { service-&gt;set_oneshot(false); return Result&lt;void&gt;{}; }},\n        {\"start\",             DoControlStart},\n        {\"stop\",              DoControlStop},\n        {\"restart\",           DoControlRestart},\n    };\n    // clang-format on\n\n    return control_message_functions;\n}\nstatic Result&lt;void&gt; DoControlStart(Service* service) {\n    return service-&gt;Start();\n}\n</code></pre> \u5373bootanim\u8fd9\u4e2a\u670d\u52a1\u53c8\u88ab\u542f\u52a8\u4e86</p>"}, {"location": "android/fws/fws_boot/#_5", "title": "\u7ed3\u675f\u6d41\u7a0b", "text": "<p>frameworks/base/cmds/bootanimation/bootanimation_main.cpp <pre><code>int main()\n{\n    //...\n    sp&lt;BootAnimation&gt; boot = new BootAnimation(audioplay::createAnimationCallbacks());\n    //...\n}\n</code></pre> BootAnimation.cpp,BootAnimation\u672c\u8eab\u662f\u4e00\u4e2aThread <pre><code>BootAnimation::BootAnimation(sp&lt;Callbacks&gt; callbacks)\n        : Thread(false), mLooper(new Looper(false)), mClockEnabled(true), mTimeIsAccurate(false),\n        mTimeFormat12Hour(false), mTimeCheckThread(nullptr), mCallbacks(callbacks) {\n    //..\n}\n</code></pre> \u63a5\u7740\u6267\u884c~BootAnimation(),\u5148\u91ca\u653e\u52a8\u753b <pre><code>BootAnimation::~BootAnimation() {\n    //...\n    if (mAnimation != nullptr) {\n        releaseAnimation(mAnimation);\n        mAnimation = nullptr;\n    }\n    //...\n}\n</code></pre> Thread\u4f1a\u52a0\u8f7donFirstRef,\u9884\u52a0\u8f7d\u52a8\u753b\u6587\u4ef6 <pre><code>void BootAnimation::onFirstRef() {\n    //...\n    preloadAnimation();\n    //...\n}\n</code></pre> \u6267\u884creadyToRun\uff0c\u6700\u540e\u6267\u884cthreadLoop <pre><code>bool BootAnimation::threadLoop() {\n    //...\n    initShaders();\n\n    if (mZipFileName.empty()) {\n        ALOGD(\"No animation file\");\n        result = android();//\u9ed8\u8ba4\u7684android logo\u52a8\u753b\n    } else {\n        result = movie();//\u52a8\u753b\u6587\u4ef6\n    }\n\n    mCallbacks-&gt;shutdown();\n    eglMakeCurrent(mDisplay, EGL_NO_SURFACE, EGL_NO_SURFACE, EGL_NO_CONTEXT);\n    eglDestroyContext(mDisplay, mContext);\n    eglDestroySurface(mDisplay, mSurface);\n    mFlingerSurface.clear();\n    mFlingerSurfaceControl.clear();\n    eglTerminate(mDisplay);\n    eglReleaseThread();\n    IPCThreadState::self()-&gt;stopProcess();\n    return result;\n}\n</code></pre></p>"}, {"location": "android/fws/fws_boot/#opengl", "title": "opengl\u7ed8\u5236", "text": ""}, {"location": "android/fws/fws_boot/#zip", "title": "zip\u5f62\u5f0f\u7ed8\u5236", "text": ""}, {"location": "android/fws/fws_boot/#_6", "title": "\u5b9e\u6218", "text": "<p>\u6848\u4f8b</p>"}, {"location": "android/fws/fws_drag/", "title": "\u6e90\u7801", "text": ""}, {"location": "android/fws/fws_drag/#api", "title": "\u7cfb\u7edf\u62d6\u62fdAPI", "text": "<p>startDragAndDrop(ClipData data, DragShadowBuilder shadowBuilder, Object myLocalState, int flags)</p> <p>ClipData\uff1a\u7528\u4e8e\u5b58\u50a8\u4f20\u9001\u7684\u6570\u636e</p> <p>DragShadowBuilder\uff1a\u62d6\u52a8\u65f6\u5c55\u793a\u7684\u89c6\u56fe\u6216\u9634\u5f71</p> <p>myLocalState\uff1a\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u7528\u4f5cActivity\u5185\u90e8\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4f20\u8f93\u673a\u5236\u3002\u76d1\u542c\u65b9\u901a\u8fc7DragEvent#getLocalState()\u65b9\u6cd5\u6765\u83b7\u53d6\u6570\u636e\u3002\u5b83\u4e0d\u80fd\u8de8Activity\uff0c\u5982\u679c\u5728\u5176\u4ed6Activity\u8c03\u7528getLocalState()\u65b9\u6cd5\u4f1a\u8fd4\u56denull</p> <p>flags\uff1a\u8bbe\u7f6e\u4e3a0\u8868\u793a\u4e0d\u8bbe\u7f6eflag</p> <ol> <li>DRAG_FLAG_GLOBAL\u8868\u793a\u53ef\u4ee5\u8de8window\u62d6\u62fd\uff0c\u5178\u578b\u7684\u662f\u5206\u5c4f\u72b6\u6001\u4e0b\u7684\u62d6\u62fd</li> <li>DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION</li> <li>DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION</li> <li>DRAG_FLAG_GLOBAL_URI_READ</li> <li>DRAG_FLAG_GLOBAL_URI_WRITE</li> <li>DRAG_FLAG_OPAQUE</li> <li>DRAG_FLAG_ACCESSIBILITY_ACTION</li> </ol> <p>\u62d6\u62fd\u7b80\u5355\u6587\u672c <pre><code>val shadow = LayoutInflater.from(this).inflate(R.layout.xxx, null)\n\nval builder = MyDragShadowBuilder(shadow)\nview.setOnLongClickListener(object : OnLongClickListener {\n    //\u957f\u6309\u4e8b\u4ef6\u89e6\u53d1\u62d6\u62fd\n    override fun onLongClick(v: View?): Boolean {\n        val data = ClipData.newPlainText(\"drag text\", content)\n        imageView.startDragAndDrop(\n            data,\n            builder, // \u5982\u679c\u4e0d\u662f\u81ea\u5b9a\u4e49\u9634\u5f71\u76f4\u63a5new View.DragShadowBuilder(view)\n            null,\n            0 or View.DRAG_FLAG_GLOBAL or View.DRAG_FLAG_OPAQUE\n        )\n\n        return true\n    }\n})\n\nclass MyDragShadowBuilder(private var mShadow: View) :\n    View.DragShadowBuilder() {\n    private val width: Int = 400\n    private val height: Int = 400\n\n    override fun onProvideShadowMetrics(outShadowSize: Point?, outShadowTouchPoint: Point?) {\n        //\u62d6\u52a8\u56fe\u50cf\u7684\u5bbd\u548c\u9ad8\n        outShadowSize?.set(width, height)\n\n        //\u624b\u6307\u5728\u62d6\u52a8\u56fe\u50cf\u7684\u4f4d\u7f6e \u4e2d\u70b9\n        outShadowTouchPoint?.set(width / 2, height / 2)\n    }\n\n    override fun onDrawShadow(canvas: Canvas) {\n        mShadow.measure(width, height)\n        mShadow.layout(0, 0, width, height)\n        mShadow.draw(canvas)\n    }\n}\n</code></pre></p> <p>\u62d6\u62fd\u5904\u7406\u901a\u8fc7setOnDragListener <pre><code>binding.root.setOnDragListener { v, event -&gt;\n    if (event.action == DragEvent.ACTION_DROP) {\n        event.clipData?.let { clipData -&gt;\n            if (clipData.description == null) return@let\n            val mimeType: String = clipData.description.getMimeType(0)\n            clipData.getItemAt(0)?.let {\n                if (mimeType.startsWith(\"image/\")) {\n                    contentResolver.openInputStream(it.uri)?.use {input-&gt;\n                        BitmapFactory.decodeStream(input)?.let { bitmap-&gt;\n                            // \u5904\u7406\u56fe\u7247\n                        }\n                    }\n                } else if (mimeType.startsWith(\"text/\")) {\n                    // \u5904\u7406\u6587\u672c\n                } else {\n                    // \u5904\u7406\u5176\u4ed6\u5185\u5bb9\n                }\n            }\n        }\n    }\n    true\n}\n</code></pre></p>"}, {"location": "android/fws/fws_drag/#_1", "title": "\u6e90\u7801\u5206\u6790", "text": ""}, {"location": "android/fws/fws_drag/#_2", "title": "\u5b9e\u6218\u6848\u4f8b", "text": "<p>\u6848\u4f8b\u5b9a\u5236</p> <p>\u5e94\u7528\u6a2a\u5c4f https://blog.csdn.net/u012932409/article/details/117379528</p>"}, {"location": "android/fws/fws_handler/", "title": "Handler", "text": "<p>\u4e00\u822c\u5904\u7406\u7ebf\u7a0b\u4e4b\u95f4\u95ee\u9898\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u4e00\u822c\u662fbinder \u6e90\u7801\u5206\u6790\u57fa\u4e8eAndroid13</p>"}, {"location": "android/fws/fws_handler/#_1", "title": "\u7ebf\u7a0b\u95f4\u901a\u4fe1\u7684\u539f\u7406", "text": "<p>\u6838\u5fc3\uff1a\u7ebf\u7a0b\u95f4\u5185\u5b58\u5171\u4eab(MessageQueue\u5171\u4eab)\uff0c\u57fa\u4e8e\u94fe\u8868\u7ed3\u6784\u7684Message\u5bb9\u5668\u5b9e\u73b0</p>"}, {"location": "android/fws/fws_handler/#_2", "title": "\u5185\u5b58\u6cc4\u9732\u539f\u56e0", "text": "<p>\u5b8c\u5168\u7406\u89e3\u524d\u63d0\uff1a\u9700\u8981\u7406\u89e3JVM\u865a\u62df\u673a\u539f\u7406</p> <p>\u5f15\u7528\u8bb0\u6570\u6cd5 \u4f8b\u5982\uff1a\u5bf9\u8c61Obj\u88ab\u53d8\u91cfa,b,c\u5f15\u7528\u65f6\uff0c\u8ba1\u6570\u4e3a3\uff0c\u5f53c\u65ad\u5f00\u5f15\u7528\u8ba1\u6570\u53d82\uff0c\u5f53\u8ba1\u6570\u4e3a0\u65f6GC\u5373\u53ef\u6e05\u7406\uff0c\u5e38\u89c1\u4e8epython\u865a\u62df\u673a\u4e2d</p> <p>\u7f3a\u9677\uff1a\u76f8\u4e92\u5f15\u7528\u65f6\u9700\u8981\u989d\u5916\u673a\u5236\u5904\u7406\uff0c\u56e0\u6b64\u4e3b\u6d41\u865a\u62df\u673a\u4e0d\u4f7f\u7528</p> <p>\u5b89\u5353\u4e2d\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u53ef\u4ee5\u91ca\u653e\uff1a\u5f15\u7528\u94fe\u662f\u5426\u5b58\u5728GcRoot\uff0c\u4e00\u65e6\u5b58\u5728\u65e0\u6cd5\u91ca\u653e\u5bf9\u8c61</p> <p>\u6b64\u5904\u5f15\u7528\u94fe:</p> <p>static sMainLooper-&gt;Thread-&gt;ThreadLocal.ThreadLocalMap\u2192Entry(WeakReference)-&gt;Looper-&gt;MessageQueue-&gt;Message-&gt;Handler-&gt;XXActivity.this</p> <p>\u5224\u65adGcRoot\u4f9d\u636e\u4e4b\u4e00\uff1astatic</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u60f3\u529e\u6cd5\u65ad\u5f00\u5f15\u7528\u94fe</p> <ol> <li>Handler\u5b9a\u4e49\u6210\u9759\u6001+\u5f31\u5f15\u7528\u65b9\u5f0f(\u65ad\u5f00Message\u548cHandler\u4e4b\u95f4\u7684\u5f15\u7528)</li> <li>\u624b\u52a8\u79fb\u51faMessage\u65b9\u5f0f(\u65ad\u5f00Messagequeue\u548cMessage\u4e4b\u95f4\u7684\u5f15\u7528)</li> </ol>"}, {"location": "android/fws/fws_handler/#threadlocal", "title": "ThreadLocal", "text": "<p>static final\u7c7b\u578b\uff0c\u751f\u547d\u5468\u671f\u548capp\u8fdb\u7a0b\u4e00\u81f4\uff0c\u7528\u6765\u9694\u79bb\u7ebf\u7a0b\u53d8\u91cf\uff0c\u6b64\u5904\u7528\u6765\u9694\u79bbLooper\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u53ea\u80fd\u62e5\u6709\u81ea\u8eab\u72ec\u7acb\u7684Looper\u5bf9\u8c61\uff0c\u6e90\u7801\u4e3b\u8981\u770bset\u548cget\u65b9\u6cd5 <pre><code>public void set(T value) {\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null)\n        map.set(this, value);\n    else\n        createMap(t, value);\n}\nvoid createMap(Thread t, T firstValue) {\n    t.threadLocals = new ThreadLocalMap(this, firstValue);\n}\nThreadLocalMap(ThreadLocal&lt;?&gt; firstKey, Object firstValue) {\n    table = new Entry[INITIAL_CAPACITY];//16 Entry\u662f\u7ee7\u627fWeakReference\n    int i = firstKey.threadLocalHashCode &amp; (INITIAL_CAPACITY - 1);\n    table[i] = new Entry(firstKey, firstValue);\n    size = 1;\n    setThreshold(INITIAL_CAPACITY);\n}\n</code></pre> \u4ee5\u5f53\u524d\u7ebf\u7a0b\u4f5c\u4e3akey\u83b7\u5f97ThreadLocalMap\u5bf9\u8c61\uff0c\u5c06value(\u6b64\u5904\u65f6Looper\u5bf9\u8c61)\u4fdd\u5b58\u5230map\u4e2d\uff0c\u5176\u4e2dkey\u4e3athis\u5373Threadlocal <pre><code>public T get() {\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null) {\n        ThreadLocalMap.Entry e = map.getEntry(this);\n        if (e != null) {\n            @SuppressWarnings(\"unchecked\")\n            T result = (T)e.value;\n            return result;\n        }\n    }\n    return setInitialValue();\n}\n</code></pre> \u540c\u7406get\u4e5f\u662f\u5148\u901a\u8fc7\u5f53\u524d\u7ebf\u7a0b\u83b7\u5f97map\u518d\u901a\u8fc7this\u83b7\u53d6\u5bf9\u5e94Looper\u5bf9\u8c61</p>"}, {"location": "android/fws/fws_handler/#new-handler", "title": "\u4e3b\u7ebf\u7a0b\u4e3a\u4f55\u80fd\u76f4\u63a5new Handler", "text": "<p>\u56e0\u4e3a\u5728Activitythread\u4e2d\u5df2\u7ecf\u521b\u5efa\u4e86Looper\u5bf9\u50cf <pre><code>Looper.prepareMainLooper()\n...\nLooper.loop()\n</code></pre> \u5728new Handler\u65f6\u80fd\u83b7\u53d6\u5230Looper\u5bf9\u8c61 <pre><code>mLooper = Looper.myLooper();\nif (mLooper == null) {\n    throw new RuntimeException(\n        \"Can't create handler inside thread \" + Thread.currentThread()\n                + \" that has not called Looper.prepare()\");\n}\n</code></pre> \u5176\u4e2dmylooper\u65b9\u6cd5\u662f\u901a\u8fc7ThreadLocal\u4e2d\u53d6\u51faLooper\u5bf9\u8c61\uff0ckey\u4e3a\u7ebf\u7a0bThread\uff0cvalue\u65f6Looper\u5bf9\u8c61\uff0c\u56e0\u6b64\u4e3b\u7ebf\u7a0b\u80fd\u83b7\u53d6\u5230Looper</p>"}, {"location": "android/fws/fws_handler/#handler", "title": "\u5b50\u7ebf\u7a0b\u521b\u5efaHandler", "text": "<p>\u65b9\u5f0f\u4e00\uff1a <pre><code>Thread {\n    Looper.prepare()\n    Handler(Looper.myLooper()!!) { msg: Message -&gt;\n        false\n    }\n    Looper.loop()\n}.start()\n</code></pre> \u65b9\u5f0f\u4e8c\uff1a(\u63a8\u8350) <pre><code>val thread = HandlerThread(\"thread-\")\nthread.start()\nval handler = Handler(thread.looper){msg: Message -&gt;\n    false\n}\n</code></pre></p>"}, {"location": "android/fws/fws_handler/#handlerthread", "title": "HandlerThread", "text": "<p>\u5b8c\u5168\u7406\u89e3\u524d\u63d0\uff1a\u9700\u8981\u5b66\u4e60\u5e76\u53d1\u76f8\u5173\u77e5\u8bc6\u70b9</p> <p>\u5c01\u88c5\u4e86Looper\u548c\u52a0\u5165\u4e86\u5e76\u53d1\u5904\u7406</p>"}, {"location": "android/fws/fws_handler/#_3", "title": "\u6e90\u7801\u89e3\u6790", "text": "<p>\u95ee\u98981\uff1a\u5fc5\u987b\u8981\u5148\u6267\u884cstart\u5417\uff1f\u4e0d\u9700\u8981\uff0cstart\u7684\u4f5c\u7528\u662fThread\u8c03\u7528start\u540e\u4f1a\u8c03\u7528run\u65b9\u6cd5\uff0c\u7136\u540e\u5c31\u6267\u884c\u529bLooper.prepare\u548cLooper.loop\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7getlooper()\u62ff\u5230looper\u5bf9\u8c61\u7ed9handler\uff0c\u5e76\u53d1\u539f\u7406\u5148\u770b\u95ee\u98982\u518d\u770b\u6e90\u7801\u6ce8\u91ca <pre><code>public void run() {\n    ...\n    Looper.prepare();\n    synchronized (this) {\n        mLooper = Looper.myLooper();\n        notifyAll();// \u4e3a\u5565\u4e0d\u662fnotify\uff1f\u56e0\u4e3agetlooper\u53ef\u80fd\u88ab\u591a\u4e2aHandler\u4f7f\u7528\u65f6\u8c03\u7528\uff0c\u9700\u8981\u5168\u90e8\u901a\u77e5\n        // wait\u662f\u7acb\u523b\u6302\u8d77\u548c\u91ca\u653e\u9501\uff0cnotify\u662f\u9700\u8981\u7b49synchronized\u5305\u88f9\u7684\u6240\u6709\u4ee3\u7801\u6267\u884c\u5b8c\u6210\u624d\u91ca\u653e\u9501\uff0c\u6240\u4ee5\u4e0d\u662f\u8bf4notify\u4e86wait\u5c31\u7acb\u523b\u6267\u884c\uff0c\u800c\u662f\u901a\u77e5wait\u53ef\u4ee5\u51c6\u5907\u5c31\u7eea\n        // notifyAll\u4ee3\u7801\u53ef\u4ee5\u8c03\u6362\u987a\u5e8f\uff0c\u53ea\u8981synchronized\u5305\u88f9\u8303\u56f4\u6548\u679c\u4e00\u81f4\n    }\n    ...\n    Looper.loop();\n    ...\n}\npublic Looper getLooper() {\n    ...\n    synchronized (this) {\n        while (isAlive() &amp;&amp; mLooper == null) {// \u4e3a\u5565\u4e0d\u662fif\uff1f\u9632\u6b62\u5176\u4ed6\u5730\u65b9\u4e5f\u4f7f\u7528\u5e76\u91ca\u653e\u4e86this\u9501\uff0c\u800c\u6b64\u65f6looper\u53ef\u80fd\u4f9d\u7136\u662fnull\n            try {\n                wait(); // \u6302\u8d77\uff0c\u91ca\u653e\u5bf9\u8c61\u9501\uff0c\u9632\u6b62\u4e07\u4e00\u6b64\u65b9\u6cd5\u5148\u6267\u884c\u62ff\u5230\u9501\uff0c\u9700\u8981\u5148\u91ca\u653e\u9501\u8ba9run\u4e2d\u62ff\u5230\u9501\n                // sleep\uff1a\u6302\u8d77\uff0c\u4f46\u4e0d\u91ca\u653e\u9501\n            } catch (InterruptedException e) {\n                wasInterrupted = true;\n            }\n        }\n    }\n    ...    \n    return mLooper;\n}\n</code></pre> \u95ee\u98982\uff1a\u4e3a\u5565\u6e90\u7801\u4e2d\u9700\u8981\u7528\u5230synchronized\u540c\u6b65\u9501\u673a\u5236 \u56e0\u4e3a\u9700\u8981\u4fdd\u8bc1start\u540eHandler(thread.looper)\u80fd\u786e\u4fdd\u62ff\u5230looper\uff0cHandler\u521b\u5efa\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e2d\uff0c\u800clooper\u662f\u5728\u5b50\u7ebf\u7a0b\u4e2d\u521b\u5efa\uff0c\u4e0d\u52a0\u9501\u53ef\u80fd\u4f1a\u5bfc\u81f4looper\u4e3anull synchronized\uff1a\u5185\u7f6e\u9501\uff0c\u529f\u80fd\uff1a\u4e92\u65a5\u8bbf\u95ee\uff0c\u4f5c\u7528\u4e8e\u65b9\u6cd5\uff0c\u4ee3\u7801\u5757 \u5c0f\u6848\u4f8b\uff1a <pre><code>class A {\n    fun method1() { synchronized(this){} }\n    fun method2() { synchronized(this){} }\n}\nval a = A()\nval b = A()\na.method1()\na.method2()\nb.method1()\n</code></pre> a.method1()\u548ca.method2()\u662f\u4e92\u65a5\uff0c\u4e0d\u80fd\u540c\u65f6\u8c03\u7528\uff0c\u9501\u662fthis\u5373A\u5bf9\u8c61</p> <p>a.method1()\u548cb.method1()\u4e0d\u662f\u4e92\u65a5\uff0c\u9501\u662fthis\uff0c\u5206\u522b\u662fA\u548cB\u5bf9\u8c61</p> <p>\u95ee\u98983\uff1a\u5982\u679c\u4e0d\u8c03\u7528start\u4f1a\u5982\u4f55\uff1f\u4f1a\u62a5\u7a7a\u6307\u9488\u5f02\u5e38 <pre><code>public Looper getLooper() {\n    if (!isAlive()) {\n        return null;\n    }\n    ...\n}\n</code></pre> isAlive\u7528\u6765\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u5df2\u7ecfstart <pre><code>public Handler(@NonNull Looper looper, @Nullable Callback callback, boolean async) {\n    mLooper = looper;\n    mQueue = looper.mQueue;\n    mCallback = callback;\n    mAsynchronous = async;\n}\n</code></pre> \u7531\u4e8egetlooper\u8fd4\u56denull\uff0c\u6240\u4ee5\u518d\u521b\u5efaHandler\u65f6\u4f1a\u62a5\u7a7a\u6307\u9488 \u5982\u679c\u6ca1\u6709isAlive()\u5904\u7406\u4f1a\u5982\u4f55\uff1f\u4e3b\u7ebf\u7a0b\u4f1a\u6302\u8d77\uff0c\u56e0\u4e3a\u6267\u884c\u4e86wait\uff0c\u5f53\u524d\u7ebf\u7a0b\u6ca1\u6709start\uff0c\u8c03\u7528\u8005\u662f\u4e3b\u7ebf\u7a0b\uff0c\u6240\u4ee5\u4f1a\u5c06\u4e3b\u7ebf\u7a0bwait\u6302\u8d77</p> <p>\u6ce8\uff1await\u4f1a\u91ca\u653e\u9501\uff0cCPU\uff0c\u8d44\u6e90\uff0c\u4f46\u4f1a\u6302\u8d77\u5f53\u524d\u7ebf\u7a0b\uff1bsleep\u65e2\u4e0d\u91ca\u653e\u9501CPU\u8d44\u6e90\u4e5f\u4f1a\u6302\u8d77</p>"}, {"location": "android/fws/fws_handler/#messagequeuehandler", "title": "MessageQueue\u4e2d\u6dfb\u52a0\u6570\u636e\u65f6\uff0c\u5404\u4e2aHandler\u53ef\u80fd\u5904\u4e8e\u4e0d\u540c\u7ebf\u7a0b\uff0c\u5982\u4f55\u5904\u7406", "text": "<p>\u6dfb\u52a0\u6570\u636eenqueueMessage()\uff1a\u5404\u4e2a\u5b50\u7ebf\u7a0b</p> <p>\u53d6\u51fa\u6570\u636enext()\uff1a\u4e3b\u7ebf\u7a0b</p> <p>\u90fd\u4f7f\u7528\u4e86synchronized(this)\uff0c\u524d\u8005\u9501\u53ef\u4ee5\u4fdd\u8bc1\u5404\u4e2a\u5b50\u7ebf\u7a0b\u6dfb\u52a0\u6570\u636e\u7ebf\u7a0b\u5b89\u5168\uff0c\u540e\u8005\u7528\u6765\u4fdd\u8bc1\u6570\u636e\u6dfb\u52a0\u548c\u53d6\u51fa\u7ebf\u7a0b\u5b89\u5168</p>"}, {"location": "android/fws/fws_handler/#messagenew", "title": "Message\u5bf9\u8c61\u83b7\u53d6\u65b9\u5f0f\uff0c\u662f\u5426\u53ef\u4ee5\u76f4\u63a5new", "text": "<p>\u4e0d\u63a8\u8350\u76f4\u63a5new\uff0c\u4f7f\u7528Handler.obtainMessage\u65b9\u5f0f</p> <p>\u539f\u56e0\uff1a\u5728GC\u56de\u6536\u5bf9\u8c61\u65f6\u5b58\u5728stw\u673a\u5236\u8ba9\u6240\u6709\u7ebf\u7a0b\u77ed\u6682\u505c\u4e00\u4e0b\uff0c\u5982\u679cstw\u8fc7\u4e8e\u9891\u7e41\u4f1a\u5bfc\u81f4\u5361\u987f\u3002\u800cobtainMessage\u65b9\u5f0f\u4f18\u5316\u5185\u5b58\u6296\u52a8\u95ee\u9898</p> <p>\u8bbe\u8ba1\u6a21\u5f0f\uff1a\u4eab\u5143\u8bbe\u8ba1\u6a21\u5f0f</p>"}, {"location": "android/fws/fws_handler/#looperanr", "title": "Looper\u6b7b\u5faa\u73af\u4e3a\u5565\u4e0d\u4f1aANR", "text": "<p><pre><code>for (;;) {\n    if (!loopOnce(me, ident, thresholdOverride)) {\n        return;\n    }\n}\n</code></pre> \u9700\u8981\u7406\u89e3ANR\u4ea7\u751f\u539f\u7406</p>"}, {"location": "android/fws/fws_handler/#epoll", "title": "epoll", "text": "<p>\u7528\u6765\u7ba1\u7406IO\u963b\u585e\u7684\u673a\u5236</p> <p>\u573a\u666f\uff1a\u6709n\u4e2aIO\u4e8b\u4ef6\u9700\u8981\u540c\u65f6\u5904\u7406 <pre><code>while(true){\n    //select(stream[])\n    for(i in stream[]){\n        xxx    \n    }\n}\n</code></pre> \u7f3a\u9677\uff1a\u5982\u679c\u6d41\u91cc\u9762\u6ca1\u6709\u6570\u636e\u65f6\uff0c\u4f1a\u6d6a\u8d39CPU\u8d44\u6e90</p> <p>\u6dfb\u52a0select\u540e\uff0c\u5f53\u6d41\u91cc\u9762\u6709\u6570\u636e\u9700\u8981\u5904\u7406\u65f6\u4f1a\u5524\u9192CPU\u6267\u884cfor\u5faa\u73af</p> <p>\u7f3a\u9677\uff1a\u65e0\u6cd5\u5f97\u77e5\u90a3\u4e9b\u6d41\u9700\u8981\u5904\u7406</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898epoll\u767b\u573a <pre><code>while(true){\n    active_stream[] = epoll_wait()\n    for(i in active_stream[]){\n        xxx    \n    }\n}\n</code></pre> \u5f53\u6709\u6d41\u9700\u8981\u5904\u7406\u6570\u636e\u65f6\u5c06\u5176\u5b58\u5230stream\u4e2d\uff0c\u5927\u5927\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6O(n)-&gt;O(1)</p>"}, {"location": "android/fws/fws_handler/#android", "title": "Android\u6e90\u7801\u4e2d\u5e94\u7528", "text": "<p><pre><code>Message next() {\n    ...\n    int nextPollTimeoutMillis = 0;\n    for (;;) {\n        ...\n        nativePollOnce(ptr, nextPollTimeoutMillis);\n        synchronized (this) {\n            final long now = SystemClock.uptimeMillis();\n            Message prevMsg = null;\n            Message msg = mMessages;\n            ...\n            if (msg != null) {\n                if (now &lt; msg.when) {\n                    nextPollTimeoutMillis = (int) Math.min(msg.when - now, Integer.MAX_VALUE);\n                } else {\n                    ...\n                }\n            } else {\n                nextPollTimeoutMillis = -1;\n            }\n           ...\n        }\n        ...\n        nextPollTimeoutMillis = 0;\n    }\n}\n</code></pre> nextPollTimeoutMillis: \u6570\u503c\u4e3a0\u65f6\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c-1\u4e0d\u786e\u5b9a\uff0c\u5177\u4f53\u65f6\u95f4\u5373\u7b49\u5f85\u8ba1\u65f6\u540e\u8fd4\u56de</p> <p>\u5524\u9192\u5728enqueueMessage\u65b9\u6cd5\u4e2dnativeWake</p>"}, {"location": "android/fws/fws_handler/#_4", "title": "\u6d88\u606f\u5c4f\u969c", "text": "<p>\u4f5c\u7528\uff1a\u4e3aUI\u5237\u65b0\u201c\u5f00\u7eff\u706f\u201d\uff0c\u63d0\u9ad8\u4f18\u5148\u7ea7</p> <p>\u6d88\u606f\u5206\u4e3a\uff1a\u6d88\u606f\u5c4f\u969c\uff0c\u5f02\u6b65\u6d88\u606f\uff0c\u540c\u6b65\u6d88\u606f</p> <p>\u6d88\u606f\u5c4f\u969c\uff1atarget\u4e3anull\uff0cpostSyncBarrier(ViewRootImpl\u5237\u65b0UI\u65f6\u8c03\u7528)</p> <p>\u6d88\u606f\u5c4f\u969c\u548c\u5f02\u6b65\u6d88\u606f\u80af\u5b9a\u6210\u5bf9\u51fa\u73b0\uff0c\u56e0\u4e3a\u53ea\u80fdframework\u8c03\u7528\u4e14\u76ee\u524d\u53ea\u5728ViewRootimpl\u4e2d\u4f7f\u7528 <pre><code>void scheduleTraversals() {\n    if (!mTraversalScheduled) {\n        mTraversalScheduled = true;\n        mTraversalBarrier = mHandler.getLooper().getQueue().postSyncBarrier();\n        mChoreographer.postCallback(\n                Choreographer.CALLBACK_TRAVERSAL, mTraversalRunnable, null);\n        //\u5f53\u6267\u884cmTraversalRunnable\u65f6run\u4e2d\u4f1a\u79fb\u9664\u6d88\u606f\u5c4f\u969c\n        //mHandler.getLooper().getQueue().removeSyncBarrier(mTraversalBarrier);\n        notifyRendererOfFramePending();\n        pokeDrawLockIfNeeded();\n    }\n}\n@hide//\u4ec5\u9650\u7cfb\u7edf\u8c03\u7528\npublic int postSyncBarrier() {\n    return postSyncBarrier(SystemClock.uptimeMillis());\n}\nprivate int postSyncBarrier(long when) {\n    synchronized (this) {\n        ...\n        final Message msg = Message.obtain();\n        ...\n        Message p = mMessages;//mMessages\u53d8\u91cf\u4fdd\u5b58\u4e4b\u524d\u7684\u6d88\u606f\n        ...\n            msg.next = p;//\u653e\u5230\u6d88\u606f\u5c4f\u969cmsg\u540e\u9762\n            mMessages = msg;//mMessages\u53d8\u91cf\u8d4b\u503c\u6210\u6d88\u606f\u5c4f\u969cmsg\n        ...\n        return token;\n    }\n}\n//mChoreographer.postCallback\u6700\u7ec8\u8c03\u7528\nprivate void postCallbackDelayedInternal(int callbackType,\n        Object action, Object token, long delayMillis) {\n      ...\n      scheduleFrameLocked(now);\n      ...\n    }\n}\nprivate void scheduleFrameLocked(long now) {\n    if (!mFrameScheduled) {\n        mFrameScheduled = true;\n        if (USE_VSYNC) { // 4.1\u7cfb\u7edf\u540e\u9ed8\u8ba4\u4e3atrue\n            ...\n            scheduleVsyncLocked();\n            ...\n        } else {\n            ...\n        }\n    }\n}\nscheduleVsyncLocked\u8c03\u7528native\u6700\u7ec8\u8c03\u7528FrameDisplayEventReceiver(Runnable)\u7684onVsync\npublic void onVsync(long timestampNanos, long physicalDisplayId, int frame,\n        VsyncEventData vsyncEventData) {\n        ....\n        Message msg = Message.obtain(mHandler, this);\n        msg.setAsynchronous(true);//\u5f02\u6b65\u6d88\u606f\n        mHandler.sendMessageAtTime(msg, timestampNanos / TimeUtils.NANOS_PER_MS);\n        ...\n}\n</code></pre> \u6d88\u606f\u5c4f\u969c\u4f1a\u6dfb\u52a0\u5230Message\u6700\u5f00\u59cb\u5904\uff0c\u7136\u540emChoreographer\u7684msg\u653e\u5728\u5176\u540e</p> <p>\u6d88\u606f\u5c4f\u969c\u6dfb\u52a0\u5230\u5934\u90e8\u8fbe\u5230\u4fdd\u8bc1UI\u5237\u65b0\u4f18\u5148\u7ea7\uff0c\u5728next\u65b9\u6cd5\u4e2d <pre><code>Message prevMsg = null;\nMessage msg = mMessages;\nif (msg != null &amp;&amp; msg.target == null) { // \u6d88\u606f\u5c4f\u969ctarget\u672a\u8bbe\u7f6e\u56e0\u6b64\u4e3anull\n    // Stalled by a barrier.  Find the next asynchronous message in the queue.\n    do {\n        prevMsg = msg;\n        msg = msg.next;\n    } while (msg != null &amp;&amp; !msg.isAsynchronous());// Choreographer\u53d1\u9001\u7684\u6d88\u606f\u8bbe\u7f6e\u4e3atrue\n}\n</code></pre> \u6ce8\uff1a\u6d88\u606f\u5c4f\u969c\u53ea\u80fd\u5c3d\u53ef\u80fd\u4fdd\u8bc1UI\u5237\u65b0\u4f18\u5148\uff0c\u6240\u4ee5\u4f1a\u5b58\u5728\u4ee5\u4e0b\u95ee\u9898 \u5e38\u89c1\u5f15\u53d1\u7684\u95ee\u9898(log\u5728Choreographer\u4e2d\u6267\u884crun\u65b9\u6cd5\u540e\u8c03\u7528doFrame) Skipped xx frames!  The application may be doing too much work on its main thread \u539f\u56e0\uff1a\u521a\u597d\u5728Choreographer\u4e4b\u524d\u5b58\u5728\u5176\u4ed6\u5f02\u6b65\u6d88\u606f(isAsynchronous=true)\uff0c\u5bfc\u81f4while\u5faa\u73af\u904d\u5386\u8017\u65f6\u6216\u8005\u5f02\u6b65\u6d88\u606f\u5904\u7406\u8017\u65f6</p>"}, {"location": "android/fws/fws_handler/#idlehandler", "title": "Idlehandler", "text": "<p>\u7279\u6b8a\u7684Message\uff0c\u4f18\u5148\u7ea7\uff1a\u5f02\u6b65Msg&gt;\u540c\u6b65Msg&gt;idlehandler</p> <p>\u6267\u884c\u524d\u63d0\uff1a\u6ca1\u6709Msg\u9700\u8981\u5904\u7406</p> <p>\u4f7f\u7528\u573a\u666f\uff1a\u7ebf\u7a0b\u7a7a\u95f2\u7684\u65f6\u5019</p> <p>Activity\u542f\u52a8\u751f\u547d\u5468\u671f\u4e2d\u6bd4\u8f83\u8017\u65f6\u7684\u64cd\u4f5c(\u6848\u4f8b\u5728ActivityThread\u4e2d\u7684handleResumeActivity\u6700\u540e)</p>"}, {"location": "android/fws/fws_lineage_os/", "title": "LineageOS", "text": ""}, {"location": "android/fws/fws_lineage_os/#lineageos", "title": "LineageOS", "text": "<p>\u57fa\u4e8eaosp\u5b9a\u5236\u5e76\u6301\u7eed\u8ddf\u8fdb\u7248\u672c\uff0c\u6e90\u81eaCyanogenMod\u9879\u76ee\uff0c\u7531\u5168\u7403\u5f00\u53d1\u8005\u793e\u533a\u5171\u540c\u7ef4\u62a4</p>"}, {"location": "android/fws/fws_lineage_os/#pixel6lineageos", "title": "Pixel6\u5237LineageOS", "text": ""}, {"location": "android/fws/fws_lineage_os/#_1", "title": "\u5237\u673a\u4f53\u9a8c", "text": "<ol> <li> <p>\u8fdb\u5165fastboot\u6a21\u5f0f <pre><code>adb -d reboot bootloader\n</code></pre> \u6216\u8005\u6309Volume Down + Power</p> </li> <li> <p>\u67e5\u770b\u8bbe\u5907 <pre><code>fastboot devices\n</code></pre></p> </li> <li>\u89e3\u9501\u8bbe\u5907 <pre><code>fastboot flashing unlock\n</code></pre></li> <li>\u4e0b\u8f7d\u955c\u50cf\u5305</li> <li>boot.img</li> <li>dtbo.img</li> <li>vendor_boot.img</li> </ol> <p>\u5206\u522b\u5237\u5165 <pre><code>fastboot flash boot boot.img\nfastboot flash dtbo dtbo.img\nfastboot flash vendor_boot vendor_boot.img\n</code></pre> \u63d0\u793aOKAY [  0.000s]\u5b57\u6837\u5373\u53ef</p> <p>\u5176\u4e2dvendor_boot.img\u4e3aLineage Recovery</p> <ol> <li>\u8fdb\u5165Recovery</li> </ol> <p>\u5728fastboot\u6a21\u5f0f\u4e2d\u4f7f\u7528Volume\u952e\u8fdb\u884c\u5207\u6362\uff0cRecovery Mode</p> <ol> <li>\u6e05\u7a7a\u6570\u636e</li> </ol> <p>\u9009\u62e9Factory Reset\u7136\u540eFormat data / factory reset</p> <ol> <li>\u4e0b\u8f7d\u5237\u673arom</li> </ol> <p>lineage-xxx-nightly-oriole-signed.zip</p> <p>\u9009\u62e9Apply Update\u7136\u540eApply from ADB</p> <p>\u7535\u8111\u7aef\u6267\u884c <pre><code>adb -d sideload lineage-xxx-nightly-oriole-signed.zip\n</code></pre></p>"}, {"location": "android/fws/fws_lineage_os/#pixel6", "title": "Pixel6\u955c\u50cf\u5305", "text": "<p>https://download.lineageos.org/devices/oriole/builds</p>"}, {"location": "android/fws/fws_lineage_os/#_2", "title": "\u6784\u5efa\u6e90\u7801", "text": "<p>https://wiki.lineageos.org/devices/oriole/build/</p> <ol> <li>\u521d\u59cb\u5316\u4ed3\u5e93 <pre><code>repo init -u https://mirrors4.tuna.tsinghua.edu.cn/git/lineageOS/LineageOS/android.git -b lineage-22.1 --git-lfs --no-clone-bundle\n</code></pre></li> <li>\u540c\u6b65\u6e90\u7801 \u4fee\u6539\u914d\u7f6e\uff0c\u6253\u5f00.repo/manifests/default.xml <pre><code>&lt;remote name=\"github\"\n           fetch=\"..\"\n           review=\"review.lineageos.org\" /&gt;\n&lt;remote name=\"aosp\"\n           fetch=\"https://android.googlesource.com\" /&gt;\n</code></pre> \u6539\u6210 <pre><code>&lt;remote name=\"github\"\n        fetch=\"https://github.com/\" /&gt;\n\n&lt;remote name=\"lineage\"\n    fetch=\"https://mirrors.tuna.tsinghua.edu.cn/git/lineageOS/\"\n    review=\"review.lineageos.org\" /&gt;\n&lt;remote name=\"aosp\"\n    fetch=\"https://mirrors.tuna.tsinghua.edu.cn/git/AOSP\" /&gt;\n</code></pre> \u5c06 <pre><code>&lt;default revision=\"...\"\n        remote=\"github\" /&gt;\n</code></pre> \u6539\u6210 <pre><code>&lt;default revision=\"...\"\n           remote=\"lineage\" /&gt;\n</code></pre> \u5f00\u59cb\u540c\u6b65 <pre><code>repo sync -j20\n</code></pre></li> <li>\u521d\u59cb\u5316\u73af\u5883 <pre><code>source build/envsetup.sh\nbreakfast oriole eng\n</code></pre></li> <li>\u5b89\u88c5pixel6\u76f8\u5173\u914d\u7f6e</li> </ol> <p>\u8fde\u63a5\u624b\u673a\u6267\u884c <pre><code>cd device/google/oriole\n./extract-files.sh\n</code></pre> \u5982\u679c\u624b\u673a\u5f53\u524d\u7cfb\u7edf\u7248\u672c\u548c\u6e90\u7801\u7248\u672c\u4e0d\u4e00\u81f4\u9700\u8981\u5355\u72ec\u4e0b\u8f7d\u56fa\u4ef6\u63d0\u53d6 <pre><code>./extract-files.sh vendor.img\n</code></pre> \u5b98\u65b9\u6ca1\u670920\u7248\u672c\uff0c20\u7248\u672c\uff1aTQ3A.230901.001</p> <p>https://pan.baidu.com/s/1Uc2p3HWTfBzvjRAtUvD7Ew \u63d0\u53d6\u7801: 8888</p> <p>\u89e3\u538b\u5230vendor/google/oriole/</p> <ol> <li>\u7f16\u8bd1\u6e90\u7801 <pre><code>croot\nbrunch oriole\n</code></pre> lunch\u6ca1\u6709\u9009\u9879 <pre><code>build_build_var_cache\n</code></pre></li> </ol> <p>\u5bf9\u4e8e20\u7248\u672c\uff1alunch lineage_oriole-userdebug</p> <p>\u5bf9\u4e8e21\u7248\u672c\uff1alunch lineage_oriole-ap2a-userdebug</p> <p>\u5bf9\u4e8e22\u7248\u672c\uff1alunch lineage_oriole-ap4a-userdebug</p> <ol> <li>breakfast &amp; brunch</li> </ol> <p>\u6e90\u7801\u8def\u5f84\uff1a</p> <p>vendor/lineage/build/envsetup.sh</p> <p>\u9ed8\u8ba4\u662f\u8fd0\u884cuserdebug\u7248\u672c</p> <p>\u6253\u5370breakfast\u547d\u4ee4\uff0c\u4fee\u6539envsetup.sh <pre><code>echo \"lunch target: lineage_$target-$aosp_target_release-$variant\"\nlunch lineage_$target-$aosp_target_release-$variant\n</code></pre></p>"}, {"location": "android/fws/fws_mk_bp/", "title": "\u5176\u4ed6\u529f\u80fd", "text": ""}, {"location": "android/fws/fws_mk_bp/#wifi", "title": "\u53bb\u9664wifi\u7f51\u7edc\u9650\u5236", "text": "<p>packages/modules/NetworkStack/src/com/android/server/connectivity/NetworkMonitor.java <pre><code>private static boolean getIsCaptivePortalCheckEnabled(@NonNull Context context,\n            @NonNull Dependencies dependencies) {\n    /*String symbol = CAPTIVE_PORTAL_MODE;\n    int defaultValue = CAPTIVE_PORTAL_MODE_PROMPT;\n    int mode = dependencies.getSetting(context, symbol, defaultValue);\n    return mode != CAPTIVE_PORTAL_MODE_IGNORE;*/\n    return false;\n}\n</code></pre></p>"}, {"location": "android/fws/fws_mk_bp/#_1", "title": "\u8f93\u5165\u6cd5\u5185\u7f6e", "text": "<p>\u53c2\u8003\uff1ahttps://blog.csdn.net/li_5033/article/details/143714495</p> <p>\u6dfb\u52a0QQ\u8f93\u5165\u6cd5\u4e3a\u9ed8\u8ba4\u8f93\u5165\u6cd5\u4e3a\u4f8b</p> <p>\u6dfb\u52a0\u914d\u7f6e\uff1a frameworks/base/packages/SettingsProvider/res/values/defaults.xml <pre><code>&lt;string name=\"enabled_input_methods\" translatable=\"false\"&gt;com.android.inputmethod.latin/.LatinIME:com.tencent.qqpinyin/.QQPYInputMethodService&lt;/string&gt;\n&lt;string name=\"def_input_method\" translatable=\"false\"&gt;com.tencent.qqpinyin/.QQPYInputMethodService&lt;/string&gt;\n</code></pre> frameworks/base/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java <pre><code>private void loadSecureSettings(SQLiteDatabase db) {\n    SQLiteStatement stmt = null;\n    try {\n        //...\n        loadStringSetting(stmt, Settings.Secure.ENABLED_INPUT_METHODS,\n                R.string.enabled_input_methods);\n\n        loadStringSetting(stmt, Settings.Secure.DEFAULT_INPUT_METHOD,\n                R.string.def_input_method);\n\n    } finally {\n        if (stmt != null) stmt.close();\n    }\n}\n</code></pre> \u4e0d\u786e\u5b9astirng\u4e2d\u6dfb\u52a0\u7684\u5185\u5bb9\uff0c\u5148\u6b63\u5e38\u5b89\u88c5\u8f93\u5165\u6cd5\uff0c\u547d\u4ee4\u67e5\u770b\u540e\u518d\u586b\u5199 <pre><code>adb shell settings get secure default_input_method\nadb shell settings get secure enabled_input_methods\n</code></pre> frameworks/base/services/core/java/com/android/server/InputMethodManagerService.java</p> <ul> <li>\u767e\u5ea6\uff1acom.baidu.input/.ImeService</li> <li>\u8baf\u98de\uff1acom.iflytek.inputmethod/.FlyIME</li> <li>\u817e\u8baf\uff1acom.tencent.qqpinyin/.QQPYInputMethodService</li> <li>\u8c37\u6b4c\uff1acom.google.android.inputmethod.pinyin/.PinyinIME</li> <li>\u641c\u72d7\uff1acom.sohu.inputmethod.sogou/.SogouIME</li> <li>\u89e6\u5b9d\uff1acom.cootek.smartinput5/.TouchPalIM</li> </ul> <p>\u9488\u5bf9LOCAL_PREBUILT_JNI_LIBS := \\</p> <p>\u53ef\u4f7f\u7528\u547d\u4ee4\u5c06\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684so\u6587\u4ef6\u540d\u5230\u6587\u672c\u4e2d\uff0c\u6279\u91cf\u5c06#\u66ff\u6362\u6389\u5373\u53ef <pre><code>find \"$(pwd)\" -type f -printf \"%p#\\n\" &gt; fullpaths.txt\n</code></pre> \u767e\u5ea6\u8f93\u5165\u6cd5\u7f16\u8bd1\u62a5\u9519\u89e3\u51b3\uff1a</p> <p>bp\u6587\u4ef6\u4e2d\u6dfb\u52a0 <pre><code>LOCAL_ENFORCE_USES_LIBRARIES := false\n</code></pre> \u66f4\u591a\u6821\u9a8c\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1ahttps://source.android.google.cn/devices/tech/dalvik/art-class-loader-context?hl=zh-cn</p>"}, {"location": "android/fws/fws_mk_bp/#staap", "title": "\u5f00\u542fSta\u548cAp\u5e76\u53d1", "text": "<p>wifi\u6a21\u7ec4\uff1a\u6b63\u57faAP6275\u7cfb\u5217 \u6a21\u7ec4\u652f\u6301STA+AP\u5e76\u53d1</p> <p>device/xxx/BoardConfig.mk\u4e2d\u6dfb\u52a0\u6807\u5fd7\u4f4d <pre><code>WIFI_HIDL_FEATURE_DUAL_INTERFACE:=true\n</code></pre></p> <p>kernel-5.10/drivers/net/wireless/rockchip_wlan/rkwifi/bcmdhd/Makefile\u5f00\u653e <pre><code>CONFIG_BCMDHD_STATIC_IF :=y\n\nifeq ($(CONFIG_BCMDHD_STATIC_IF),y)\n    DHDCFLAGS += -DWL_STATIC_IF\nendif\n</code></pre></p>"}, {"location": "android/fws/fws_mk_bp/#_2", "title": "\u8bbe\u5907\u5f3a\u5236\u6a2a\u5c4f", "text": "<p>\u9002\u7528\u4e8eAndroid11\u4ee5\u4e0a</p> <p>https://blog.csdn.net/u011774634/article/details/125508483</p> <p>frameworks/base/services/core/java/com/android/server/wm/DisplayContent.java <pre><code>int getOrientation() {\n    if (true) {\n        return SCREEN_ORIENTATION_LANDSCAPE;\n    }\n    //...\n}\n</code></pre></p> <p>frameworks/base/services/core/java/com/android/server/wm/DisplayRotation.java <pre><code>boolean updateRotationUnchecked(boolean forceUpdate) {\n    if (true) {\n        return true;\n    }\n    //...\n}\n</code></pre></p>"}, {"location": "android/fws/fws_mk_bp/#_3", "title": "\u4fee\u6539\u9ed8\u8ba4\u8bed\u8a00", "text": "<p>\u6e90\u7801\u8def\u5f84\uff1abuild/tools/buildinfo.sh <pre><code>echo \"persist.sys.language=zh\"\necho \"persist.sys.country=CN\"\necho \"persist.sys.localevar=\"\necho \"persist.sys.timezone=Asia/Shanghai\"\necho \"ro.product.locale.language=zh\"\necho \"ro.product.locale.region=CN\"\n</code></pre></p> <p>\u6e90\u7801\u8def\u5f84\uff1adevice/\u7cfb\u7edf\u54c1\u724c/\u7cfb\u7edf\u578b\u53f7/device.mk <pre><code>PRODUCT_LOCALES := zh_CN\n</code></pre> \u6e90\u7801\u8def\u5f84\uff1abuild/make/target/product/languages_default.mk\u5c06\u4e2d\u6587(zh_CN)\u653e\u5230\u6700\u524d\u9762 <pre><code>PRODUCT_LOCALES := \\\n        zh_CN \\\n</code></pre></p>"}, {"location": "android/fws/fws_mk_bp/#framework", "title": "framework\u6e90\u7801\u6dfb\u52a0\u63a5\u53e3", "text": ""}, {"location": "android/fws/fws_mk_bp/#_4", "title": "\u95ee\u9898", "text": "<p>\u4ee5View\u6e90\u7801\u4e2d\u6dfb\u52a0\u5c5e\u6027\u4e3a\u4f8b <pre><code>public class View implements xxx {\n    // ...\n    // \u6dfb\u52a0\u5c5e\u6027\n    boolean mEnablePressedAnim;\n    // ...\n}\n</code></pre> \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e09\u65b9\u5e94\u7528\u901a\u8fc7\u53cd\u5c04\u6dfb\u52a0\u4f1a\u62a5 <pre><code>Accessing hidden field Landroid/view/View;-&gt;mEnablePressedAnim:Z (blocked, reflection, denied)\n</code></pre> \u53cd\u5c04\u4ee3\u7801 <pre><code>private fun fieldChange(view: View, isEnable: Boolean) {\n    try {\n        val field = View::class.java.getDeclaredField(\"mEnablePressedAnim\")\n        field.isAccessible = true\n        field.setBoolean(view, isEnable)\n    } catch (e: Exception) {\n        e.printStackTrace()\n    }\n}\n</code></pre></p>"}, {"location": "android/fws/fws_mk_bp/#_5", "title": "\u539f\u56e0\u548c\u4f5c\u7528", "text": "<p>\u662fgoogle\u5bf9\u975eSDK\u7684api\u8fdb\u884c\u540d\u5355\u9650\u5236</p> <p>https://developer.android.google.cn/guide/app-compatibility/restrictions-non-sdk-interfaces?hl=bg</p> <p>\u9664\u4e86\u5230\u5904csv\u67e5\u770bapi\u540d\u5355\u6807\u8bb0\uff0c\u8fd8\u53ef\u4ee5\u53cd\u7f16\u8bd1\u5f97\u5230smali\u6587\u4ef6\u67e5\u770b <pre><code>.field blacklist mEnablePressedAnim:Z\n</code></pre></p>"}, {"location": "android/fws/fws_mk_bp/#_6", "title": "\u89e3\u51b3\u65b9\u6848", "text": "<p>\u4e3a\u4e86\u5141\u8bb8\u4e09\u65b9\u5e94\u7528\u8c03\u7528\u6216\u53cd\u5c04\u8c03\u7528</p>"}, {"location": "android/fws/fws_mk_bp/#_7", "title": "\u76f4\u63a5\u65b9\u6848", "text": "<p>frameworks/base/data/etc/hiddenapi-package-whitelist.xml</p> <p>\u6dfb\u52a0\u5e94\u7528\u5305\u540d\u5373\u53ef</p>"}, {"location": "android/fws/fws_mk_bp/#_8", "title": "\u4e34\u65f6\u65b9\u6848", "text": "<pre><code>adb shell settings put global hidden_api_policy 1\n</code></pre>"}, {"location": "android/fws/fws_mk_bp/#aosp12", "title": "\u6c38\u4e45\u65b9\u6848\u4e4baosp12\u53ca\u4ee5\u4e0a", "text": "<p>\u6e90\u7801\u6587\u4ef6\uff1abuild/soong/apex/platform_bootclasspath_test.go</p> <p>\u641c\u7d22TestPlatformBootclasspath_Fragments platform_bootclasspath\u4e0b\u7684 <pre><code>hidden_api: {\n    // ...\n    unsupported_packages: [\n        \"unsupported-packages.txt\",\n    ],\n    //\u6dfb\u52a0\u4ee5\u4e0b\n    sdk: [\n        \"sdk.txt\",\n    ],\n},\n</code></pre> bootclasspath_fragment\u4e0b\u7684 <pre><code>hidden_api: {\n    // ...\n    unsupported_packages: [\n        \"bar-unsupported-packages.txt\",\n    ],\n    //\u6dfb\u52a0\u4ee5\u4e0b\n    sdk: [\n        \"bar-sdk.txt\",\n    ],\n},\n</code></pre> \u6e90\u7801\u6587\u4ef6\uff1abuild/soong/java/hidenapi_modular.go</p> <p>\u641c\u7d22type HiddenAPIFlagFileProperties struct <pre><code>Unsupported_packages []string `android:\"path\"`\n//\u6dfb\u52a0\u4ee5\u4e0b\nSdk []string `android:\"path\"`\n</code></pre> \u641c\u7d22[]*hiddenAPIFlagFileCategory <pre><code>{\n    PropertyName: \"unsupported_packages\",\n    propertyValueReader: func(properties *HiddenAPIFlagFileProperties) []string {\n        return properties.Unsupported_packages\n    },\n    commandMutator: func(command *android.RuleBuilderCommand, path android.Path) {\n        command.FlagWithInput(\"--unsupported \", path).Flag(\"--packages \")\n    },\n},\n//\u6dfb\u52a0\u4ee5\u4e0b\n{\n    PropertyName: \"sdk\",\n    propertyValueReader: func(properties *HiddenAPIFlagFileProperties) []string {\n        return properties.Sdk\n    },\n    commandMutator: func(command *android.RuleBuilderCommand, path android.Path) {\n        command.FlagWithInput(\"--sdk \", path)\n    },\n},\n</code></pre> \u6e90\u7801\u8def\u5f84: framework/base/boot/hiddenapi/</p> <p>\u6dfb\u52a0\u6587\u4ef6hiddenapi-sdk.txt\uff0c\u6dfb\u52a0\u9700\u8981\u66b4\u9732\u7684\u63a5\u53e3\u5c5e\u6027\u7b49\uff0c\u5982View\u4e2d\u6dfb\u52a0\u5c5e\u6027boolean mEnablePressedAnim\u5219\u5bf9\u5e94\u6dfb\u52a0 <pre><code>Landroid/view/View;-&gt;mEnablePressedAnim:Z\n</code></pre> \u6e90\u7801\u6587\u4ef6\uff1aframework/base/boot/Android.bp <pre><code>unsupported_packages: [\n    \"hiddenapi/hiddenapi-unsupported-packages.txt\",\n],\n//\u6dfb\u52a0\u4ee5\u4e0b\nsdk: [\n    \"hiddenapi/hiddenapi-sdk.txt\",\n],\n</code></pre> \u6267\u884c\u547d\u4ee4\uff1a <pre><code>m api-stubs-docs-non-updatable-update-current-api\nm -j20\n</code></pre></p>"}, {"location": "android/fws/fws_mk_bp/#aosp11", "title": "\u6c38\u4e45\u65b9\u6848\u4e4baosp11\u53ca\u4ee5\u4e0b", "text": "<p>\u6e90\u7801\u6587\u4ef6\uff1a \u76f4\u63a5\u6dfb\u52a0\u5305\u540d\u8fc7\u6ee4</p> <p>framework/base/config/hiddenapi-greylist-packages.txt</p> <p>\u901a\u8fc7\u6dfb\u52a0\u5177\u4f53\u5c5e\u6027\u6216\u65b9\u6cd5\u8fc7\u6ee4</p> <p>framework/base/config/hiddenapi-greylist.txt</p> <p>\u6216\u8005 \u6e90\u7801\u6587\u4ef6\uff1a/build/soong/java/hiddenapi_singleton.go <pre><code>FlagWithInput(\"--greylist-packages \",\n            android.PathForSource(ctx, \"frameworks/base/config/hiddenapi-greylist-packages.txt\")).\n//\u6dfb\u52a0\u4ee5\u4e0b\nFlagWithInput(\"--whitelist \",\n            android.PathForSource(ctx, \"frameworks/base/config/hiddenapi-sdk.txt\")).\n</code></pre> \u5bf9\u5e94\u8def\u5f84\u6dfb\u52a0\u6587\u4ef6hiddenapi-sdk.txt</p>"}, {"location": "android/fws/fws_mk_bp/#_9", "title": "\u7a97\u53e3\u6a21\u7cca", "text": "<p>\u5bf9\u4e8eAndroid12\u5f00\u542f\u7cfb\u7edf\u7a97\u53e3\u6a21\u5f0f</p> <p>/device/\u8bbe\u5907/\u578b\u53f7/xxx.mk PRODUCT_PROPERTY_OVERRIDES += \\        ro.surface_flinger.supports_background_blur=1</p>"}, {"location": "android/fws/fws_mk_bp/#jaraar", "title": "\u5bfc\u5165jar\u6216aar\u6b65\u9aa4", "text": "<p>Android.bp\u4e2d <pre><code>java_import {\n    name: \"my_module_jar\",\n    jars: [\n        \"libs/my_module.jar\", \n        \"libs/kotlinx-coroutines-core-jvm-1.6.0.jar\",\n    ],\n}\nandroid_library_import {\n    name:\"my_module_aar\",\n    aars: [\n        \"libs/my_module-debug.aar\", \n    ],\n    sdk_version: \"current\",\n}\n</code></pre> \u5982\u5728framework/base/Android.bp\u8c03\u7528 <pre><code>java_library {\n    name: \"framework-minus-apex\",\n    //...\n    static_libs: [\n       \"my_module_jar\",\n    ],\n}\n</code></pre></p>"}, {"location": "android/fws/fws_process/", "title": "IPC\u901a\u4fe1", "text": ""}, {"location": "android/fws/fws_process/#_1", "title": "\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u6848", "text": "<p>\u7ba1\u9053\u3001\u4fe1\u53f7\u3001\u4fe1\u53f7\u91cf\u3001\u5185\u5b58\u5171\u4eab\u3001socket\u3001binder\u3001\u6d88\u606f\u961f\u5217</p> <p>\u7528\u6237\u7a7a\u95f4\u7684\u8de8\u8fdb\u7a0b\u901a\u4fe1\u57fa\u672c\u91c7\u7528binder</p> <p>\u865a\u62df\u5185\u5b58\u5206\u4e3a\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\uff0c\u5f7c\u6b64\u9694\u79bb</p> <p>\u7528\u6237\u7a7a\u95f4\uff1a\u7a0b\u5e8f\u4ee3\u7801\u8fd0\u884c\u7684\u5730\u65b9</p> <p>\u5185\u6838\u7a7a\u95f4\uff1a\u5185\u6838\u4ee3\u7801\u8fd0\u884c\u7684\u5730\u65b9\uff0c\u6240\u6709\u8fdb\u7a0b\u5171\u4eab</p> <p>\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u672c\u8d28\uff1a\u5185\u5b58\u62f7\u8d1d</p>"}, {"location": "android/fws/fws_process/#_2", "title": "\u7ba1\u9053", "text": "<p>unix\u6700\u53e4\u8001\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f\uff0c\u7531\u5185\u6838\u7ba1\u7406\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u7f13\u51b2\u533a\uff0c\u4e00\u7aef\u8fde\u63a5\u8fdb\u7a0b\u7684\u8f93\u51fa\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u8fdb\u7a0b\u7684\u8f93\u5165</p> <p>\u9650\u5236</p> <ol> <li>\u5927\u5c0f\u9650\u52364k</li> <li>\u534a\u53cc\u5de5\uff0c\u540c\u4e00\u65f6\u523b\u6570\u636e\u53ea\u80fd\u6d41\u5411\u4e00\u4e2a\u65b9\u5411\uff0c\u9700\u8981\u5efa\u7acb\u4e24\u4e2a\u7ba1\u9053</li> <li>\u53ea\u652f\u6301\u7236\u5b50\u548c\u5144\u5f1f\u8fdb\u7a0b\u4e4b\u95f4\u901a\u4fe1</li> </ol>"}, {"location": "android/fws/fws_process/#_3", "title": "\u4fe1\u53f7", "text": "<p>\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u6ce8\u518cSIGNALQUIT\u4fe1\u53f7\u5b9e\u73b0\u76d1\u542cANR</p>"}, {"location": "android/fws/fws_process/#_4", "title": "\u5e94\u7528\u573a\u666f", "text": "<p>\u7231\u5947\u827axCrash\u3001\u53cb\u76df+U-APM\u3001\u817e\u8bafMatrix</p>"}, {"location": "android/fws/fws_process/#_5", "title": "\u4fe1\u53f7\u91cf", "text": "<p>\u8ba1\u6570\u5668\uff0c\u63a7\u5236\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u8d44\u6e90\u8bbf\u95ee\uff0c\u4e3b\u8981\u7528\u4e8e\u8fdb\u7a0b\u95f4\u4ee5\u53ca\u540c\u4e00\u8fdb\u7a0b\u5185\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u624b\u6bb5</p>"}, {"location": "android/fws/fws_process/#_6", "title": "\u5171\u4eab\u5185\u5b58", "text": "<p>Android\u4e2d\u63d0\u4f9b\u533f\u540d\u5171\u4eab\u5185\u5b58Ashmem\uff0c\u5b58\u5728\u4e92\u65a5\u9501\uff0c\u5bb9\u6613\u51fa\u73b0\u6570\u636e\u4e0d\u540c\u6b65\uff0c\u6b7b\u9501\u7b49\u95ee\u9898</p> <p>\u6b65\u9aa4</p> <ol> <li>\u901a\u8fc7MemoryFile\u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4\uff0c\u83b7\u5f97ParcelFileDescriptor <pre><code>val memoryFile = MemoryFile(\"test\", 1024)\nval getFileDescriptor = MemoryFile::class.java.getDeclaredMethod(\"getFileDescriptor\")\nval pfd = getFileDescriptor.invoke(memoryFile)?.let {\n    ParcelFileDescriptor.dup(it as FileDescriptor)\n}\n</code></pre></li> <li>\u5c06ParcelFileDescriptor\u4f20\u9012\u7ed9\u5176\u4ed6\u8fdb\u7a0b\uff0c\u5229\u7528Binder\u673a\u5236</li> <li>A\u8fdb\u7a0b\u5f80\u5185\u5b58\u5171\u4eab\u5199\u6570\u636e <pre><code>memoryFile.outputStream.write(byteArrayOf(1,2,3))\n</code></pre></li> <li>B\u8fdb\u7a0b\u5f80\u5185\u5b58\u5171\u4eab\u8bfb\u53d6\u6570\u636e <pre><code>pfd?.let {\n    val content = byteArrayOf()\n    FileInputStream(it.fileDescriptor).read(content)\n}\n</code></pre></li> </ol>"}, {"location": "android/fws/fws_process/#_7", "title": "\u5e94\u7528\u573a\u666f", "text": "<p>Android\u89c6\u56fe\u6570\u636e\u4e0eSurfaceFlinger\u7684\u901a\u4fe1\u3001\u817e\u8bafmmkv\u3001Facebook fresco\u7b49</p>"}, {"location": "android/fws/fws_process/#_8", "title": "\u6d88\u606f\u961f\u5217", "text": "<p>\u5177\u6709\u5f02\u6b65\u80fd\u529b\uff0c\u89e3\u51b3\u4fe1\u53f7\u627f\u8f7d\u4fe1\u606f\u5c11\u95ee\u9898\uff0c\u5177\u6709\u4f20\u8f93\u80fd\u529b\uff0c\u514b\u670d\u7ba1\u9053\u53ea\u80fd\u627f\u8f7d\u65e0\u683c\u5f0f\u5b57\u8282\u6d41\u4ee5\u53ca\u7f13\u51b2\u533a\u5927\u5c0f\u53d7\u9650\u95ee\u9898</p>"}, {"location": "android/fws/fws_process/#_9", "title": "\u5e94\u7528\u573a\u666f", "text": "<p>Android\u4e2d\u7684Handler\u4f7f\u7528\u5230\u6d88\u606f\u961f\u5217</p>"}, {"location": "android/fws/fws_process/#socket", "title": "Socket", "text": "<p>\u4f20\u8f93\u6548\u7387\u4f4e\uff0c\u5f00\u9500\u5927</p>"}, {"location": "android/fws/fws_process/#_10", "title": "\u5e94\u7528\u573a\u666f", "text": "<p>Zygote\u8fdb\u7a0b\u4f7f\u7528LocalSocket\u63a5\u6536\u542f\u52a8\u5e94\u7528\u7684\u901a\u77e5</p> <p>\u66f4\u591aSocket\u77e5\u8bc6</p>"}, {"location": "android/fws/fws_process/#binder", "title": "Binder", "text": ""}, {"location": "android/fws/fws_process/#_11", "title": "\u5e94\u7528\u573a\u666f", "text": "<p>Android\u4e2dsystem_server\u4e0e\u4e0a\u5c42app\u4ea4\u4e92\u3001Intent\u3001ContentProvider\u3001AIDL\u3001Broadcast\u3001Messager\u7b49</p> <p>\u9009\u62e9Binder\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684IPC\u7684\u539f\u56e0</p> <ol> <li>\u6027\u80fd\u4e0a\uff0c\u8de8\u8fdb\u7a0b\u901a\u4fe1\u6570\u636e\u62f7\u8d1d\uff0c\u5185\u5b58\u5171\u4eab(0\u6b21)&gt;Binder(1\u6b21)&gt;\u7ba1\u9053\u3001\u6d88\u606f\u961f\u5217\u3001Socket(2\u6b21)</li> <li>Binder\u62e5\u6709\u53ef\u9760\u7684\u8eab\u4efd\u6807\u8bb0\u7b56\u7565\uff0c\u4f20\u7edfIPC\u662f\u7531\u7528\u6237\u586b\u5199UID/PID\u5bb9\u6613\u88ab\u6076\u610f\u7a0b\u5e8f\u5229\u7528\uff0cBinder\u4e3a\u6bcf\u4e2aapp\u5206\u914dUID\uff0c\u901a\u8fc7UID\u9274\u522b\u8eab\u4efd</li> <li>Binder\u57fa\u4e8eC/S\u67b6\u6784\uff0c\u804c\u8d23\u660e\u786e\u3001\u67b6\u6784\u6e05\u6670\uff0c\u7a33\u5b9a\u6027\u66f4\u597d</li> </ol>"}, {"location": "android/fws/fws_process/#ipc", "title": "\u4f20\u7edfIPC\u539f\u7406", "text": ""}, {"location": "android/fws/fws_process/#binder_1", "title": "Binder\u539f\u7406", "text": "<p>Binder\u4e0d\u662f\u5185\u6838\u7684\u4e00\u90e8\u5206\uff0c\u9700\u8981\u901a\u8fc7Linux\u7684\u52a8\u6001\u52a0\u8f7d\u6a21\u5757\u673a\u5236\u52a0\u8f7d\u4e00\u4e2a\u53ebBinder\u9a71\u52a8\u7684\u5185\u6838\u6a21\u5757\uff0c\u7136\u540e\u5404\u8fdb\u7a0b\u53ef\u901a\u8fc7\u6b21\u6a21\u5757\u8fdb\u7a0b\u901a\u4fe1</p> <p>\u5185\u5b58\u6620\u5c04\uff1a\u901a\u8fc7mmap()\u5b9e\u73b0\uff0c\u7b80\u5355\u8bf4\u5c31\u662f\u7528\u6237\u7a7a\u95f4\u7684\u4e00\u5757\u5185\u5b58\u533a\u57df\u6620\u5c04\u5230\u5185\u6838\u7a7a\u95f4\uff0c\u4e4b\u540e\u53cc\u65b9\u4fee\u6539\u7684\u5185\u5bb9\u90fd\u80fd\u53ca\u65f6\u88ab\u611f\u77e5</p> <p></p> <p>\u6570\u636e\u63a5\u6536\u7f13\u5b58\u533a\u901a\u8fc7Binder\u9a71\u52a8\u5efa\u7acb</p> <p>\u53ef\u4ee5\u662f\u540c\u6b65\u4e5f\u53ef\u4ee5\u662f\u5f02\u6b65oneway</p>"}, {"location": "android/fws/fws_process/#android", "title": "Android\u4e2d\u7684\u8fdb\u7a0b", "text": "<p>\u7a7a\u8fdb\u7a0b\u3001\u524d\u53f0\u8fdb\u7a0b(\u5e94\u7528\u754c\u9762\u663e\u793a)\u3001\u540e\u53f0\u8fdb\u7a0b(HOME\u4e4b\u540e\u7684)\u3001\u53ef\u89c1\u8fdb\u7a0b(\u88ab\u5f39\u7a97(Activity)\u906e\u6321)\u3001\u670d\u52a1\u8fdb\u7a0b(\u542f\u52a8service)</p>"}, {"location": "android/fws/fws_rk/", "title": "RK3588J", "text": ""}, {"location": "android/fws/fws_rk/#rk", "title": "RK\u677f\u5b50\u76f8\u5173", "text": "<p>\u677f\u5b50\u6559\u7a0b\uff1a</p> <p>https://wiki.t-firefly.com/zh_CN/Core-3588J/android_compile_android12.0_firmware.html</p> <p>itx3588j\u5f00\u53d1\u677f\uff1a</p> <p>https://www.t-firefly.com/product/industry/itx3588j</p>"}, {"location": "android/fws/fws_rk/#nfc", "title": "nfc\u6a21\u5757", "text": "<p>nfc pn7160 \u5b89\u5353\u9002\u914d\u6587\u6863</p> <p>https://www.nxp.com.cn/docs/en/application-note/AN13189.pdf</p> <p>\u6587\u6863\u4e2d\uff1a so\u6587\u4ef6\u4e0b\u8f7d\u5730\u5740\uff1a</p> <p>https://github.com/NXP/nfc-NXPNFCC_FW/blob/master/InfraFW/pn7160/32-bit/libpn7160_fw.so</p>"}, {"location": "android/fws/fws_sensor/", "title": "\u6e90\u7801", "text": ""}, {"location": "android/fws/fws_sensor/#_1", "title": "\u6e90\u7801\u5206\u6790", "text": "<p>\u5b66\u4e60\u535a\u5ba2\uff1a</p> <p>https://blog.csdn.net/hmorey/article/details/123609816?spm=1001.2014.3001.5506</p> <p>https://blog.csdn.net/sdkdlwk/article/details/86490684?spm=1001.2014.3001.5506</p> <p>https://blog.csdn.net/hoisjdoiajsd/article/details/130640491</p> <p>https://blog.csdn.net/qq_30624591/article/details/104517480</p> <p>https://blog.csdn.net/frank_zyp/article/details/53782614</p> <p>https://blog.csdn.net/frank_zyp/category_6571508.html</p> <p>https://blog.csdn.net/frank_zyp/article/details/53582306</p> <p>https://blog.csdn.net/Bleach3/article/details/107381719/</p> <p>https://blog.csdn.net/huilin9960/article/details/80704481?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-9-80704481-blog-125324506.235<sup>v43</sup>pc_blog_bottom_relevance_base9&amp;spm=1001.2101.3001.4242.6&amp;utm_relevant_index=10</p> <p>https://blog.csdn.net/u014787262/article/details/125324506</p> <p>https://blog.csdn.net/TangYuanTuoHai/article/details/135996477</p> <p>https://dhexx.cn/news/show-591575.html?action=onClick</p> <p>https://blog.csdn.net/u012439416/article/details/79684098</p> <p>https://blog.csdn.net/u012439416/article/details/74612903</p> <p>https://blog.csdn.net/luansxx/article/details/120959705</p> <p>https://blog.csdn.net/kehyuanyu/article/details/43195029</p>"}, {"location": "android/fws/fws_sensor/#_2", "title": "\u5b9e\u6218\u6848\u4f8b", "text": "<p>\u6848\u4f8b\u5b9a\u5236</p>"}, {"location": "android/fws/fws_split/", "title": "\u6e90\u7801", "text": "<p>Launcher\uff1a\u8d1f\u8d23\u9009\u62e9\u5206\u5c4f\u5e94\u7528\u7684taskId</p> <p>SystemUI\uff1a\u8d1f\u8d23\u5206\u5c4ftask\u7684\u7ba1\u7406\uff0c\u5206\u5272\u7ebf\u7684\u7ed8\u5236\u63a7\u5236</p> <p>SystemServer\uff1a\u8d1f\u8d23\u63a5\u6536SystemUI\u7684\u547d\u4ee4\u6765\u64cd\u4f5ctask</p>"}, {"location": "android/fws/fws_split/#launcher", "title": "Launcher\u90e8\u5206\u5206\u6790", "text": "<p>\u542f\u52a8\u6d41\u7a0b</p>"}, {"location": "android/fws/fws_split/#systemui", "title": "SystemUI\u90e8\u5206\u5206\u6790", "text": ""}, {"location": "android/fws/fws_split/#systemserver", "title": "SystemServer\u90e8\u5206\u5206\u6790", "text": ""}, {"location": "android/fws/fws_surface/", "title": "Android\u56fe\u5f62\u7cfb\u7edf", "text": ""}, {"location": "android/fws/fws_surface/#android", "title": "Android\u4e4b\u56fe\u5f62\u7cfb\u7edf", "text": ""}, {"location": "android/fws/fws_surface/#view", "title": "View", "text": ""}, {"location": "android/fws/fws_surface/#viewrootimpl", "title": "ViewRootImpl", "text": ""}, {"location": "android/fws/fws_surface/#window", "title": "Window", "text": ""}, {"location": "android/fws/fws_surface/#display", "title": "Display", "text": ""}, {"location": "android/fws/fws_surface/#surfaceview", "title": "SurfaceView", "text": ""}, {"location": "android/fws/fws_surface/#textureview", "title": "TextureView", "text": ""}, {"location": "android/fws/fws_surface/#_1", "title": "\u663e\u793a\u4e00\u5f20\u56fe\u7247", "text": "<p><pre><code>binding.textureView.surfaceTextureListener = object : TextureView.SurfaceTextureListener {\n    override fun onSurfaceTextureAvailable(\n        surfaceTexture: SurfaceTexture,\n        width: Int,\n        height: Int\n    ) {\n        drawBitmapToTextureView(surfaceTexture, width, height)\n    }\n\n    override fun onSurfaceTextureSizeChanged(\n        surfaceTexture: SurfaceTexture,\n        width: Int,\n        height: Int\n    ) {}\n\n    override fun onSurfaceTextureDestroyed(surfaceTexture: SurfaceTexture): Boolean {\n        return false\n    }\n\n    override fun onSurfaceTextureUpdated(surfaceTexture: SurfaceTexture) {}\n}\n\nprivate fun drawBitmapToTextureView(surfaceTexture: SurfaceTexture, width: Int, height: Int) {\n    // \u521b\u5efa\u4e00\u4e2a Surface \u5bf9\u8c61\n    val surface = Surface(surfaceTexture)\n\n    val bitmap = BitmapFactory.decodeResource(resources, R.mipmap.test)\n\n    // \u83b7\u53d6 Canvas\n    var canvas: Canvas? = null\n    val matrix = Matrix()\n    try {\n        canvas = surface.lockCanvas(null)\n        if (canvas != null) {\n            // \u6e05\u7a7a Canvas\n            canvas.drawColor(0, PorterDuff.Mode.CLEAR)\n            // \u8ba1\u7b97\u53d8\u6362\u77e9\u9635\u4ee5\u9002\u5e94 TextureView \u7684\u5927\u5c0f\n            val srcRect = RectF(0f, 0f, bitmap.width.toFloat(), bitmap.height.toFloat())\n            val dstRect = RectF(0f, 0f, width.toFloat(), height.toFloat())\n            matrix.setRectToRect(srcRect, dstRect, Matrix.ScaleToFit.FILL)\n\n            // \u5e94\u7528\u53d8\u6362\u77e9\u9635\u5e76\u7ed8\u5236\u56fe\u7247\n            canvas.drawBitmap(bitmap, matrix, null)\n        }\n    } catch (e: Exception) {\n        e.printStackTrace()\n    } finally {\n        if (canvas != null) {\n            // \u89e3\u9501 Canvas \u5e76\u63d0\u4ea4\u7ed8\u5236\n            surface.unlockCanvasAndPost(canvas)\n        }\n    }\n\n    // \u91ca\u653e Surface\n    surface.release()\n}\n</code></pre> \u5176\u4e2d\u94fa\u6ee1Textureview\u8fd8\u53ef\u4ee5\u901a\u8fc7scale\u5f62\u5f0f <pre><code>// \u8ba1\u7b97\u7f29\u653e\u6bd4\u4f8b\u4ee5\u9002\u5e94 TextureView \u7684\u5927\u5c0f\nval scaleX = width.toFloat() / bitmap.width\nval scaleY = height.toFloat() / bitmap.height\nval scale = scaleX.coerceAtLeast(scaleY) // \u4f7f\u7528\u6700\u5927\u7f29\u653e\u6bd4\u4f8b\u4ee5\u786e\u4fdd\u56fe\u7247\u5360\u6ee1 TextureView\n\n// \u8bbe\u7f6e\u53d8\u6362\u77e9\u9635\nmatrix.setScale(scale, scale)\n</code></pre></p>"}, {"location": "android/fws/fws_surface/#_2", "title": "\u622a\u56fe", "text": "<p>\u83b7\u53d6bitmap <pre><code>val bitmap =\n    binding.textureView.getBitmap(binding.textureView.width, binding.textureView.height)\n</code></pre> \u622a\u53d6\u90e8\u5206\u533a\u57df <pre><code>bitmap?.let {\n    val regionBitmap = Bitmap.createBitmap(\n        bitmap, 0, 0,\n        100,\n        50)\n    )\n}\n</code></pre></p>"}, {"location": "android/fws/fws_surface/#canvas", "title": "Canvas", "text": "<p>Android\u4e2d\u7684\u753b\u5e03</p>"}, {"location": "android/fws/fws_surface/#surface", "title": "Surface", "text": "<p>\u7ed8\u5236\u56fe\u5f62\u7684\u8f7d\u4f53\uff0c\u663e\u793a\u5185\u5bb9\u5982View\uff0cbitmap\u7b49\uff0c\u771f\u6b63\u7684\u753b\u5e03\uff0c\u4f1a\u5173\u8054\u4e00\u4e2aCanvas</p> <p>\u6bcf\u4e2aSuface\u90fd\u4f1a\u5728SurfaceFlinger\u4e2d\u6709\u5bf9\u5e94\u7684Layer\u56fe\u5c42</p>"}, {"location": "android/fws/fws_surface/#surfaceflinger", "title": "SurfaceFlinger", "text": "<p>\u8d1f\u8d23\u628aLayer\u6309\u9700\u6df7\u5408\u5904\u7406\u540e\u8f93\u51fa\u5230Frame Buffer\u4e2d\uff0c\u518d\u7531Display\u8bbe\u5907\uff08\u5c4f\u5e55\u6216\u663e\u793a\u5668\uff09\u628aFrame Buffer\u91cc\u7684\u6570\u636e\u5448\u73b0\u5230\u5c4f\u5e55\u4e0a <pre><code>adb shell dumpsys SurfaceFlinger\n</code></pre></p>"}, {"location": "android/fws/fws_surface/#surfacecontrol", "title": "SurfaceControl", "text": "<p>\u63a7\u5236Surface\u7684\u5c5e\u6027\u548c\u5c42\u6b21\u7ed3\u6784\uff0c\u4e00\u4e2aSurfaceControl\u5173\u8054\u4e00\u4e2aSurface\uff0c\u5e95\u5c42\u4f1a\u521b\u5efaSurface\u4e00\u822c\u4e0d\u9700\u8981\u5f00\u53d1\u8005\u521b\u5efa\u548c\u9500\u6bc1</p>"}, {"location": "android/fws/fws_surface/#api", "title": "API\u4ecb\u7ecd", "text": ""}, {"location": "android/fws/fws_surface/#surfacecontroltransaction", "title": "SurfaceControl.Transaction", "text": "<p>\u7528\u6765\u64cd\u4f5cSurfaceControl\uff0c\u6bd4\u5982\u900f\u660e\u5ea6\u3001\u5927\u5c0f\u3001\u4f4d\u7f6e\u3001\u5706\u89d2\u7b49\u5c5e\u6027\uff0c\u8c03\u7528apply\u63d0\u4ea4\u624d\u4f1a\u751f\u6548</p>"}, {"location": "android/fws/fws_surface/#api_1", "title": "API\u4ecb\u7ecd", "text": "<p>setBackgroundBlurRadius</p> <p>\u8bbe\u7f6e\u56fe\u5c42\u9ad8\u65af\u6a21\u7cca\uff0c\u786c\u4ef6\u8981\u6c42\u9ad8(\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8bbe\u5907\u5361\u987f\uff0candroid12\u4ee5\u4e0a\u9ed8\u8ba4\u5f00\u542f)</p> <p>\u5f00\u542f\u65b9\u5f0f</p> <p>\u6e90\u7801\u7f16\u8bd1\u65b9\u5f0f\uff1a</p> <p>device/\u54c1\u724c/\u578b\u53f7/xxx.mk\u4e2d\u6dfb\u52a0 <pre><code>PRODUCT_PROPERTY_OVERRIDES += \\\n    ro.surface_flinger.supports_background_blur=1\n</code></pre> root\u65b9\u5f0f\uff1avendor/build.prop\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5373\u53ef</p>"}, {"location": "android/fws/fws_surface/#viewsurface", "title": "\u901a\u8fc7View\u521b\u5efaSurface\u56fe\u5c42", "text": "<pre><code>final SurfaceSession session = new SurfaceSession();\nfinal SurfaceControl surfaceControl = new SurfaceControl.Builder(session)\n        .setName(\"drag surface\")\n        .setParent(root.getSurfaceControl())\n        .setBufferSize(view.getWidth(), view.getHeight())\n        .setFormat(PixelFormat.TRANSLUCENT)\n        .setCallsite(\"View.startDragAndDrop\")\n        .build();\nfinal Surface surface = new Surface();\nsurface.copyFrom(surfaceControl);\nfinal Canvas canvas = isHardwareAccelerated()\n        ? surface.lockHardwareCanvas()\n        : surface.lockCanvas(null);\ntry {\n    canvas.drawColor(0, PorterDuff.Mode.CLEAR);\n    view.draw(canvas);\n} finally {\n    surface.unlockCanvasAndPost(canvas);\n}\n\n// \u4e00\u822c\u7cfb\u7edf\u4e2d\u5df2\u6709Transaction\u5982wms\u4e2dmService.mTransactionFactory.get()\nSurfaceControl.Transaction transaction = new SurfaceControl.Transaction();\ntransaction.show(surfaceControl);\n// \u91cd\u65b0\u8bbe\u7f6e\u65b0\u7684\u7236\u7ea7SurfaceControl\ntransaction.reparent(surfaceControl, getDisplayContent().getOverlayLayer())\ntransaction.apply();\n\n// surface\u9700\u8981\u9500\u6bc1\nsurface.destory();\nsession.kill();\n</code></pre>"}, {"location": "android/fws/fws_surface/#surface_1", "title": "Surface\u6dfb\u52a0\u56fe\u5c42", "text": "<pre><code>private SurfaceControl mAddLeash;\n\n// \u5728\u5f53\u524dmSurfaceControl\u4e0a\u6dfb\u52a0+\u56fe\u6807\nprivate void makeAddLeash() {\n    try (SurfaceControl.Transaction transaction =\n                    mService.mTransactionFactory.get()) {\n        if (mAddLeash != null) {\n            transaction.show(mAddLeash);\n            transaction.apply();\n            return;\n        }\n        mAddLeash = new SurfaceControl.Builder()\n                .setName(\"drag add layer\")\n                .setFormat(PixelFormat.TRANSLUCENT)\n                .setParent(mSurfaceControl)\n                .setCallsite(\"DragState.createShowAnimationLocked\")\n                .setBLASTLayer()\n                .build();\n        //bitmap\u8f6c\u6210HardwareBuffer\u9700\u8981\u914d\u7f6e\u4e3aHARDWARE\u683c\u5f0f\n        BitmapFactory.Options options = new BitmapFactory.Options();\n        options.inPreferredConfig = Bitmap.Config.HARDWARE;\n\n        HardwareBuffer hardwareBuffer = BitmapFactory.decodeResource(mService.mContext.getResources(),\n                com.android.internal.R.drawable.ic_input_add, options).getHardwareBuffer();\n        // android13\u63a8\u8350\u76f4\u63a5\u4f20HardwareBuffer\n        transaction.setBuffer(mAddLeash, GraphicBuffer.createFromHardwareBuffer(hardwareBuffer));\n        transaction.setColorSpace(mAddLeash, ColorSpace.get(ColorSpace.Named.SRGB));\n        transaction.show(mAddLeash);\n        transaction.setPosition(mAddLeash,\n                mSurfaceControl.getWidth() - hardwareBuffer.getWidth(), 0);\n        //\u751f\u6548\u5fc5\u987b\u8c03\u7528apply\n        transaction.apply();\n    }\n}\n\n// \u63a7\u5236+\u56fe\u6807\u663e\u793a\u548c\u9690\u85cf\nprivate void visibleAddLeash(boolean isShow){\n    try (SurfaceControl.Transaction transaction =\n                    mService.mTransactionFactory.get()) {\n        if (mAddLeash != null) {\n            if (isShow) {\n                transaction.show(mAddLeash);\n            } else {\n                transaction.hide(mAddLeash);\n            }\n            transaction.apply();\n        }\n    }\n}\n</code></pre>"}, {"location": "android/fws/fws_system_server/", "title": "Fws system server", "text": "<p><pre><code>if (\"start-system-server\".equals(argv[i])) {\n    startSystemServer = true;\n}\nif (startSystemServer) {\n    Runnable r = forkSystemServer(abiList, zygoteSocketName, zygoteServer);\n\n    // {@code r == null} in the parent (zygote) process, and {@code r != null} in the\n    // child (system_server) process.\n    if (r != null) {\n        r.run();\n        return;\n    }\n}\nif (!enableLazyPreload) {\n    ...\n    preload(bootTimingsTraceLog);// \u52a0\u8f7d\u7cfb\u7edfres\u8d44\u6e90\u3001sdk class\u548c\u5176\u4ed6libc\n    ...\n}\ncaller = zygoteServer.runSelectLoop(abiList);// \u6b7b\u5faa\u73af\uff0c\u63a5\u6536\u5176\u4ed6\u8fdb\u7a0b\u7684Socket\u6d88\u606f\n</code></pre> forkSystemServer\u65b9\u6cd5 <pre><code>String[] args = {\n        \"--setuid=1000\",\n        \"--setgid=1000\",\n        \"--setgroups=1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1018,1021,1023,\"\n                + \"1024,1032,1065,3001,3002,3003,3005,3006,3007,3009,3010,3011,3012\",\n        \"--capabilities=\" + capabilities + \",\" + capabilities,\n        \"--nice-name=system_server\",\n        \"--runtime-args\",\n        \"--target-sdk-version=\" + VMRuntime.SDK_VERSION_CUR_DEVELOPMENT,\n        \"com.android.server.SystemServer\",\n}\nZygoteCommandBuffer commandBuffer = new ZygoteCommandBuffer(args);\ntry {\n    parsedArgs = ZygoteArguments.getInstance(commandBuffer);//\u89e3\u6790\u53c2\u6570\n} catch (EOFException e) {\n    throw new AssertionError(\"Unexpected argument error for forking system server\", e);\n}\n// \u521b\u5efaSystemServer\u8fdb\u7a0b\npid = Zygote.forkSystemServer(\n    parsedArgs.mUid, parsedArgs.mGid,\n    parsedArgs.mGids,\n    parsedArgs.mRuntimeFlags,\n    null,\n    parsedArgs.mPermittedCapabilities,\n    parsedArgs.mEffectiveCapabilities);\nreturn handleSystemServerProcess(parsedArgs);\n</code></pre></p> <p>handleSystemServerProcess\u65b9\u6cd5\u4e2d\u6267\u884czygoteInit\u65b9\u6cd5 <pre><code>return ZygoteInit.zygoteInit(parsedArgs.mTargetSdkVersion,\n        parsedArgs.mDisabledCompatChanges,\n        parsedArgs.mRemainingArgs, cl);\n</code></pre> zygoteInit\u65b9\u6cd5\u4e2d <pre><code>ZygoteInit.nativeZygoteInit();\nreturn RuntimeInit.applicationInit(targetSdkVersion, disabledCompatChanges, argv,classLoader);\n</code></pre> nativeZygoteInit\u662fAndroidRuntime.cpp\u4e2d\u6ce8\u518c\u7684jni\u51fd\u6570 <pre><code>static void com_android_internal_os_ZygoteInit_nativeZygoteInit(JNIEnv* env, jobject clazz)\n{\n    gCurRuntime-&gt;onZygoteInit();\n}\n</code></pre> \u6700\u7ec8\u4f1a\u5728app_main.cpp\u4e2d <pre><code>virtual void onZygoteInit()\n{\n    sp&lt;ProcessState&gt; proc = ProcessState::self();\n    ALOGV(\"App process: starting thread pool.\\n\");\n    proc-&gt;startThreadPool();//\u542f\u52a8Binder\u7ebf\u7a0b\u6c60\n}\n</code></pre> frameworks/base/core/java/com/android/internal/os/RuntimeInit.java \u6700\u7ec8\u901a\u8fc7\u53cd\u5c04\u8c03\u7528com.android.server.SystemServer\u7684main\u65b9\u6cd5 <pre><code>return findStaticMain(args.startClass, args.startArgs, classLoader);//\u8fd4\u56de\u7684\u65f6Runnable\uff0c\u56de\u5230\u6700\u5f00\u59cb\u7684r.run()\u4f1a\u901a\u8fc7\u53cd\u5c04\u6267\u884cmain\u65b9\u6cd5\n\npublic void run() {\n    \u7701\u7565...\n    mMethod.invoke(null, new Object[] { mArgs });\n    \u7701\u7565...\n}\n</code></pre> frameworks/base/services/java/com/android/server/SystemServer.java <pre><code>public static void main(String[] args) {\n    new SystemServer().run();\n}\n</code></pre> \u8c03\u7528run\u65b9\u6cd5\uff0c\u91cd\u8981\u4ee3\u7801\u5982\u4e0b <pre><code>private void run() {\n    Looper.prepareMainLooper();\n    System.loadLibrary(\"android_servers\");//\u52a0\u8f7dlibandroid_servers.so\n    createSystemContext();//\u521d\u59cb\u5316\u7cfb\u7edf\u4e0a\u4e0b\u6587\n    mSystemServiceManager = new SystemServiceManager(mSystemContext);\n    startBootstrapServices(t);\n    startCoreServices(t);\n    startOtherServices(t);\n    startApexServices(t);\n    Looper.loop();// looper\u6b7b\u5faa\u73af\uff0c\u4fdd\u8bc1\u8fdb\u7a0b\u4e0d\u4f1a\u9000\u51fa\n}\n</code></pre></p>"}, {"location": "android/fws/fws_wallpaper/", "title": "\u7cfb\u7edf\u58c1\u7eb8", "text": "<p>\u6e90\u7801\u5206\u6790</p>"}, {"location": "android/fws/launcher3/", "title": "\u6e90\u7801\u5206\u6790", "text": ""}, {"location": "android/fws/launcher3/#_1", "title": "\u6700\u8fd1\u591a\u4efb\u52a1", "text": ""}, {"location": "android/fws/launcher3/#_2", "title": "\u5b9a\u4f4d\u754c\u9762", "text": "<p>\u624b\u673a\u8fdb\u5165\u591a\u4efb\u52a1\u754c\u9762\uff0c\u6267\u884c\u547d\u4ee4 <pre><code>adb shell am stack list\n</code></pre> \u83b7\u53d6\u7b2c\u4e00\u4e2aRootask\u7684activiy\u4fe1\u606f\uff0c\u4f7f\u7528\u547d\u4ee4\u53ef\u67e5\u770b\u5e03\u5c40\u7ed3\u6784\uff0c\u5177\u4f53\u770bView Hierrarchy\u90e8\u5206 <pre><code>adb shell dumpsys activity com.android.launcher3/com.android.launcher3.uioverrides.QuickstepLauncher\n</code></pre></p>"}, {"location": "android/fws/launcher3/#taskview", "title": "TaskView\u521b\u5efa\u6d41\u7a0b", "text": "<p>packages/apps/Launcher3/quickstep/src/com/android/launcher3/uioverrides/QuickstepLauncher.java</p> <p>\u521b\u5efaViewPool\u548cRecentsModel</p> <p>com.android.launcher3.util.ViewPool.(ViewPool.java:54) com.android.quickstep.views.RecentsView.(RecentsView.java:825) com.android.quickstep.views.LauncherRecentsView.(LauncherRecentsView.java:78) com.android.quickstep.views.LauncherRecentsView.(LauncherRecentsView.java:74) com.android.launcher3.statemanager.StatefulActivity.inflateRootView(StatefulActivity.java:72) com.android.launcher3.Launcher.setupViews(Launcher.java:1365) com.android.launcher3.uioverrides.QuickstepLauncher.setupViews(QuickstepLauncher.java:263) com.android.launcher3.Launcher.onCreate(Launcher.java:523) com.android.launcher3.uioverrides.QuickstepLauncher.onCreate(QuickstepLauncher.java:668) <p>\u521b\u5efaTaskView</p> <p>com.android.quickstep.views.TaskView.(TaskView.kt:500) com.android.quickstep.views.TaskView.(TaskView.kt:109) com.android.quickstep.views.TaskView.(Unknown Source:15) com.android.launcher3.util.ViewPool.inflateNewView(ViewPool.java:108) com.android.launcher3.util.ViewPool.lambdainitPool1(ViewPool.java:71) com.android.launcher3.util.ViewPool.r8lambdaxmRVBUcjhnGyR58wYP_ubVk4Uoo(Unknown Source:0) com.android.launcher3.util.ViewPoolExternalSyntheticLambda1.run(D8$SyntheticClass:0) <p>\u521b\u5efaRecentsModel\u548cRecentTasksList</p> <p>com.android.quickstep.RecentTasksList.(RecentTasksList.java:123) com.android.quickstep.RecentsModel.(RecentsModel.java:94) com.android.quickstep.RecentsModel.(RecentsModel.java:86) com.android.quickstep.RecentsModel.r8lambda6vQaiFDqIiLIBNhYUBBc0ue2kH4(Unknown Source:2) com.android.quickstep.RecentsModelExternalSyntheticLambda0.get(D8SyntheticClass:0) com.android.launcher3.util.MainThreadInitializedObject.lambdaget0(MainThreadInitializedObject.java:56) com.android.launcher3.util.MainThreadInitializedObject.r8lambdaicoSB2GSttV1yd5beTvcp2Ed9FU(Unknown Source:0) com.android.launcher3.util.MainThreadInitializedObjectExternalSyntheticLambda1.get(D8SyntheticClass:0) com.android.launcher3.util.TraceHelper.allowIpcs(TraceHelper.java:92) com.android.launcher3.util.MainThreadInitializedObject.get(MainThreadInitializedObject.java:56) com.android.quickstep.views.RecentsView.(RecentsView.java:813) com.android.launcher3.statemanager.StatefulActivity.inflateRootView(StatefulActivity.java:72) com.android.launcher3.Launcher.setupViews(Launcher.java:1365) com.android.launcher3.uioverrides.QuickstepLauncher.setupViews(QuickstepLauncher.java:263) com.android.launcher3.Launcher.onCreate(Launcher.java:523) com.android.launcher3.uioverrides.QuickstepLauncher.onCreate(QuickstepLauncher.java:668) <p>\u83b7\u53d6TaskView\uff0c\u624b\u52bf\u4e0a\u6ed1\u89e6\u53d1</p> <p>com.android.quickstep.views.RecentsView.getTaskViewFromPool(RecentsView.java:2613) com.android.quickstep.views.RecentsView.applyLoadPlan(RecentsView.java:1821) com.android.quickstep.views.RecentsViewExternalSyntheticLambda21.accept(D8SyntheticClass:0) com.android.quickstep.RecentTasksList.lambdagetTasks3(RecentTasksList.java:185) com.android.quickstep.RecentTasksList.r8lambda6-PS2E-VkARt1ElIEKmm9qge-Ok(Unknown Source:0) com.android.quickstep.RecentTasksListExternalSyntheticLambda1.run(D8$SyntheticClass:0)</p>"}, {"location": "android/fws/launcher3/#_3", "title": "\u6570\u636e\u83b7\u53d6\u6d41\u7a0b", "text": "<p>\u4e0a\u9762\u83b7\u53d6TaskView\u4f1a\u8c03\u7528getTasks</p> <p>com.android.wm.shell.recents.IRecentTasks.getRecentTasks com.android.quickstep.SystemUiProxy.getRecentTasks com.android.quickstep.RecentTasksList.loadTasksInBackground com.android.quickstep.RecentTasksList.getTasks</p> <p>IRecentTasks\u662f\u5728SystemUI\u4e2d\uff0c\u5373\u4e0eSystemUI\u8fdb\u884c\u901a\u4fe1</p> <p>frameworks/base/packages/SystemUI/src/com/android/systemui/SystemUIInitializer.java</p> <p>android.app.ActivityTaskManager.getRecentTasks com.android.wm.shell.recents.RecentTasksController$RecentTasksImpl.getRecentTasks com.android.systemui.dagger.WMComponent.getRecentTasks com.android.systemui.SystemUIInitializer.init</p> <p>applyLoadPlan\u4e2d\u83b7\u53d6\u5230\u7684TaskView\u8fdb\u884c\u6570\u636ebind</p>"}, {"location": "android/fws/launcher3/#_4", "title": "\u6570\u636e\u6301\u4e45\u5316", "text": "<p>\u4eceatms\u4e2d\u83b7\u53d6\u7684task\u662f\u4fdd\u5b58\u5728\u54ea\u91cc\u7684\uff1f\u4ecegetRecentTasks\u6e90\u7801\u5165\u624b\uff0cActivityTaskManager\u6700\u7ec8\u8c03\u7528\u7684\u662f</p> <p>frameworks/base/services/core/java/com/android/server/wm/ActivityTaskManagerService.java</p> <p>\u4e2d\u7684getRecentTasks</p> <p><pre><code>public ParceledListSlice&lt;ActivityManager.RecentTaskInfo&gt; getRecentTasks(int maxNum, int flags,\n    int userId) {\n    //...\n    mRecentTasks.loadRecentTasksIfNeeded(userId);\n    synchronized (mGlobalLock) {\n        return mRecentTasks.getRecentTasks(maxNum, flags, allowed, userId, callingUid);\n    }\n}\n</code></pre> frameworks/base/services/core/java/com/android/server/wm/RecentTasks.java</p> <p>userId\u9ed8\u8ba4\u4e3a0,loadRecentTasksIfNeeded\u662f\u8fd8\u539f\u6570\u636e\u64cd\u4f5c <pre><code>void loadRecentTasksIfNeeded(int userId) {\n    AtomicBoolean userLoaded;\n    //...\n    final SparseBooleanArray persistedTaskIds =\n            mTaskPersister.readPersistedTaskIdsFromFileForUser(userId);\n    final TaskPersister.RecentTaskFiles taskFiles = TaskPersister.loadTasksForUser(userId);\n    synchronized (mService.mGlobalLock) {\n        restoreRecentTasksLocked(userId, persistedTaskIds, taskFiles);\n    }\n    //...\n}\n\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6task\u7684id\u96c6\u5408\n```java\nSparseBooleanArray readPersistedTaskIdsFromFileForUser(int userId) {\n    //...\n    reader = new BufferedReader(new FileReader(getUserPersistedTaskIdsFile(userId)));\n    while ((line = reader.readLine()) != null) {\n        for (String taskIdString : line.split(\"\\\\s+\")) {\n            int id = Integer.parseInt(taskIdString);\n            persistedTaskIds.put(id, true);\n        }\n    }\n    //...\n}\n</code></pre> \u5176\u4e2dgetUserPersistedTaskIdsFile\u83b7\u53d6\u7684File\u8def\u5f84\u4e3aEnvironment.getDataSystemDirectory()/system_de/userid/persisted_taskIds.txt\uff0c\u5373/data/system_de/0/persisted_taskIds.txt</p> <p>loadTasksForUser\u8bfb\u53d6\u7684\u76ee\u5f55\u6587\u4ef6\u4e3a/data/system_ce/0/recent_tasks/taskId_task.xml</p> <p>restoreRecentTasksLocked\u4e3b\u8981\u662f\u89e3\u6790xml\u6587\u4ef6\u751f\u6210\u5bf9\u5e94\u7684Task\u5bf9\u8c61 <pre><code>final ArrayList&lt;Task&gt; tasks = mTaskPersister.restoreTasksForUserLocked(userId, taskFiles,\n    existedTaskIds);//\u89e3\u6790xml\n//...\nmTasks.addAll(tasks);\n</code></pre> \u5bf9Task\u8fdb\u884c\u6821\u9a8c\u5e76\u8fd4\u56deRecentTaskInfo\u6570\u636e <pre><code>ParceledListSlice&lt;ActivityManager.RecentTaskInfo&gt; getRecentTasks(int maxNum, int flags,\n        boolean getTasksAllowed, int userId, int callingUid) {\n    return new ParceledListSlice&lt;&gt;(getRecentTasksImpl(maxNum, flags, getTasksAllowed,\n            userId, callingUid));\n}\nprivate ArrayList&lt;ActivityManager.RecentTaskInfo&gt; getRecentTasksImpl(int maxNum, int flags,\n            boolean getTasksAllowed, int userId, int callingUid) {\n    final ArrayList&lt;ActivityManager.RecentTaskInfo&gt; res = new ArrayList&lt;&gt;();\n    for (int i = 0; i &lt; size; i++) {\n        final Task task = mTasks.get(i);\n        //...\n    }\n    //...\n    return res;\n}\n</code></pre></p>"}, {"location": "android/fws/launcher3/#task", "title": "\u589e\u52a0\u548c\u5220\u9664Task", "text": "<p>\u5728frameworks/base/services/core/java/com/android/server/wm/RecentTasks.java</p> <p>\u6dfb\u52a0\u5806\u6808\u8c03\u8bd5 <pre><code>void add(Task task) {}\nvoid remove(Task task) {}\n</code></pre></p>"}, {"location": "android/fws/launcher3/#_5", "title": "\u7f29\u7565\u56fe\u83b7\u53d6", "text": "<p>\u6700\u7ec8\u8c03\u7528\u7684\u662f</p> <p>packages/SystemUI/shared/src/com/android/systemui/shared/system/ActivityManagerWrapper.java</p> <p>\u7684getTaskThumbnail\u65b9\u6cd5\uff0c\u63a5\u7740\u8c03\u7528atms\u4e2d\u7684getTaskSnapshot\uff0c\u7136\u540e\u8c03\u7528TaskSnapshotController</p> <p>frameworks/base/services/core/java/com/android/server/wm/TaskSnapshotController.java <pre><code>TaskSnapshot getSnapshot(int taskId, int userId, boolean restoreFromDisk,\n            boolean isLowResolution) {\n    return mCache.getSnapshot(taskId, userId, restoreFromDisk, isLowResolution\n            &amp;&amp; mPersistInfoProvider.enableLowResSnapshots());\n}\n</code></pre> frameworks/base/services/core/java/com/android/server/wm/TaskSnapshotCache.java <pre><code>TaskSnapshot getSnapshot(int taskId, int userId, boolean restoreFromDisk,\n            boolean isLowResolution) {\n    final TaskSnapshot snapshot = getSnapshot(taskId);//\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\n    if (snapshot != null) {\n        return snapshot;\n    }\n\n    if (!restoreFromDisk) {\n        return null;\n    }\n    return tryRestoreFromDisk(taskId, userId, isLowResolution);//\u4ece\u78c1\u76d8\u4e2d\u83b7\u53d6\n}\n</code></pre> \u78c1\u76d8\u76ee\u5f55\uff1adata/system_ce/0/snapshots/</p> <p>\u4fdd\u5b583\u79cd\u6587\u4ef6 1. taskId.jpg 2. taskId.proto 3. taskId_reduces.jpg(\u4f4e\u5206\u8fa8\u7387)</p>"}, {"location": "android/fws/launcher3/#_6", "title": "\u622a\u56fe\u7ebf\u7a0b", "text": "<p>\u662f\u5728wms\u670d\u52a1\u521b\u5efa\u7684\u65f6\u5019\u542f\u52a8\u7684</p> <p>frameworks/base/services/core/java/com/android/server/wm/WindowManagerService.java <pre><code>public void systemReady() {\n    //...\n    mSnapshotController.systemReady();\n    //...\n}\n</code></pre> \u5177\u4f53\u7ebf\u7a0b\u540d <pre><code>private final Thread mPersister = new Thread(\"TaskSnapshotPersister\")\n</code></pre> \u56db\u5faa\u73af\uff0c\u901a\u8fc7WriteQueueItem\u7684write\uff0c\u7531\u5b50\u7c7b\u5b9e\u73b0</p>"}, {"location": "android/fws/launcher3/#_7", "title": "\u4e0a\u6ed1\u624b\u52bf", "text": "<p>packages/apps/Launcher3/quickstep/src/com/android/quickstep/TouchInteractionService.java <pre><code>\u6ce8\u518c\u5168\u5c40\u89e6\u6478\u76d1\u542c\nprivate void initInputMonitor(String reason) {\n    //...\n    mInputMonitorCompat = new InputMonitorCompat(\"swipe-up\", mDeviceState.getDisplayId());\n    mInputEventReceiver = mInputMonitorCompat.getInputReceiver(Looper.getMainLooper(),\n            mMainChoreographer, this::onInputEvent);\n    //...\n}\n</code></pre> \u53ef\u4ee5\u4f7f\u7528adb shell dumpsys input\u67e5\u770b\u5230swipe-up <pre><code>0: name='[Gesture Monitor] swipe-up', inputChannelToken=android.os.BinderProxy@a8797d6 displayId=0\n</code></pre> \u5177\u4f53\u4e8b\u4ef6\u5904\u7406\u903b\u8f91\u5728\u5404\u4e2aConsumer\u4e2d\uff0c\u5982\u4e0a\u6ed1\u8fdb\u5165\u591a\u4efb\u52a1\u662fOverviewInputConsumer</p> <p>packages/apps/Launcher3/quickstep/src/com/android/quickstep/inputconsumers/OverviewInputConsumer.java</p> <p>\u5168\u5c4f\u5e94\u7528\u8fdb\u5165\u591a\u4efb\u52a1\u8d70OtherActivityInputConsumer</p> <p>\u8fd9\u4e2a\u8fdb\u5165\u591a\u4efb\u52a1\u5e94\u7528\u4e0d\u4f1a\u8c03\u7528onPause\u548conStop\uff0clauncher\u4f1a\u8c03\u7528onReStart,onStart\uff0conResume</p> <p>https://blog.csdn.net/learnframework/article/details/123032419</p> <p>https://blog.csdn.net/learnframework/article/details/132567567?spm=1001.2014.3001.5501</p>"}, {"location": "android/fws/launcher3_code/", "title": "Launcher3 code", "text": "<p>\u6700\u8fd1\u591a\u4efb\u52a1\u80cc\u666f\u900f\u660e\uff1a <pre><code>&lt;item name=\"overviewScrimColor\"&gt;#00000000&lt;/item&gt;\n</code></pre> \u5bfc\u81f4\u5361\u7247\u6a21\u7cca\uff1a\u70b9\u51fb\u67d0\u4e2a\u5361\u7247\u518d\u8fdbrecent\u754c\u9762\u590d\u73b0</p> <p>\u5361\u7247\u5706\u89d2 <pre><code>&lt;dimen name=\"task_corner_radius_override\"&gt;20dp&lt;/dimen&gt;\n</code></pre> https://blog.csdn.net/a396604593/article/details/127965396</p> <p>https://blog.csdn.net/u011897062/article/details/134787838</p>"}, {"location": "android/fws/systemui/", "title": "\u6e90\u7801\u5206\u6790", "text": ""}, {"location": "android/fws/systemui/#_1", "title": "\u542f\u52a8\u6d41\u7a0b", "text": "<p>frameworks/base/services/java/com/android/server/SystemServer.java <pre><code>try {\n    startSystemUi(context, windowManagerF);\n} catch (Throwable e) {\n    reportWtf(\"starting System UI\", e);\n}\n\nprivate static void startSystemUi(Context context, WindowManagerService windowManager) {\n    PackageManagerInternal pm = LocalServices.getService(PackageManagerInternal.class);\n    Intent intent = new Intent();\n    intent.setComponent(pm.getSystemUiServiceComponent());\n    intent.addFlags(Intent.FLAG_DEBUG_TRIAGED_MISSING);\n    //Slog.d(TAG, \"Starting service: \" + intent);\n    context.startServiceAsUser(intent, UserHandle.SYSTEM);\n    windowManager.onSystemUiStarted();\n}\n</code></pre> frameworks/base/services/core/java/com/android/server/pm/PackageManagerInternalBase.java <pre><code>public final ComponentName getSystemUiServiceComponent() {\n    return ComponentName.unflattenFromString(getContext().getResources().getString(\n            com.android.internal.R.string.config_systemUIServiceComponent));\n}\n</code></pre> frameworks/base/core/res/res/values/config.xml <pre><code>&lt;string name=\"config_systemUIServiceComponent\" translatable=\"false\"\n&gt;com.android.systemui/com.android.systemui.SystemUIService&lt;/string&gt;\n</code></pre> frameworks/base/packages/SystemUI/src/com/android/systemui/SystemUIService.java <pre><code>@Override\n    public void onCreate() {\n        super.onCreate();\n        // Start all of SystemUI\n        ((SystemUIApplication) getApplication()).startServicesIfNeeded();\n        //...\n}\n</code></pre> frameworks/base/packages/SystemUI/src/com/android/systemui/SystemUIApplication.java <pre><code>void startSecondaryUserServicesIfNeeded() {\n    String[] names = SystemUIFactory.getInstance().getSystemUIServiceComponentsPerUser(\n            getResources());\n    startServicesIfNeeded(/* metricsPrefix= */ \"StartSecondaryServices\", names);\n}\n\npublic String[] getSystemUIServiceComponentsPerUser(Resources resources) {\n        return resources.getStringArray(R.array.config_systemUIServiceComponentsPerUser);\n    }\n</code></pre> config_systemUIServiceComponentsPerUser\u5728 frameworks/base/packages/SystemUI/res/values/config.xml <pre><code>&lt;string-array name=\"config_systemUIServiceComponents\" translatable=\"false\"&gt;\n    &lt;item&gt;com.android.systemui.util.NotificationChannels&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.keyguard.KeyguardViewMediator&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.recents.Recents&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.volume.VolumeUI&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.statusbar.phone.StatusBar&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.usb.StorageNotification&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.power.PowerUI&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.media.RingtonePlayer&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.keyboard.KeyboardUI&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.shortcut.ShortcutKeyDispatcher&lt;/item&gt;\n    &lt;item&gt;@string/config_systemUIVendorServiceComponent&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.util.leak.GarbageMonitor$Service&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.LatencyTester&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.globalactions.GlobalActionsComponent&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.ScreenDecorations&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.biometrics.AuthController&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.SliceBroadcastRelayHandler&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.statusbar.notification.InstantAppNotifier&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.theme.ThemeOverlayController&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.accessibility.WindowMagnification&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.accessibility.SystemActions&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.toast.ToastUI&lt;/item&gt;\n    &lt;item&gt;com.android.systemui.wmshell.WMShell&lt;/item&gt;\n&lt;/string-array&gt;\n</code></pre> \u4e2d\u5b9a\u4e49\uff0c\u5c06\u5b9a\u4e49\u7684\u7ec4\u4ef6\u904d\u5386\u521b\u5efa <pre><code>private void startServicesIfNeeded(String metricsPrefix, String[] services) {\n    //...\n    mServices = new SystemUI[services.length];//\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u6240\u6709\u7ec4\u4ef6\n    //...\n    final int N = services.length;\n    for (int i = 0; i &lt; N; i++) {\n        String clsName = services[i];\n        //...\n        SystemUI obj = mComponentHelper.resolveSystemUI(clsName);\n        if (obj == null) {\n            Constructor constructor = Class.forName(clsName).getConstructor(Context.class);\n            obj = (SystemUI) constructor.newInstance(this);//\u901a\u8fc7\u53cd\u5c04\u521b\u5efa\n        }\n        mServices[i] = obj;\n        //...\n        mServices[i].start();//\u8c03\u7528start\u65b9\u6cd5\n        //...\n        if (mBootCompleteCache.isBootComplete()) {\n            mServices[i].onBootCompleted();\n        }\n    }\n    //...\n}\n</code></pre></p>"}, {"location": "android/fws/systemui/#systembar", "title": "SystemBar\u521b\u5efa", "text": "<p><pre><code>public void start() {\n    //...\n    mBarService = IStatusBarService.Stub.asInterface(\n        ServiceManager.getService(Context.STATUS_BAR_SERVICE));\n    RegisterStatusBarResult result = null;\n    try {\n        result = mBarService.registerStatusBar(mCommandQueue);\n    } catch (RemoteException ex) {\n        ex.rethrowFromSystemServer();\n    }\n\n    createAndAddWindows(result);\n    //...\n}\n</code></pre> \u5148\u5728StatusBarManagerService\u4e2d\u6ce8\u518c\u76d1\u542c\u83b7\u53d6result\uff0c\u7136\u540e\u521b\u5efa\u89c6\u56fe <pre><code>public void createAndAddWindows(@Nullable RegisterStatusBarResult result) {\n    makeStatusBarView(result);\n    mNotificationShadeWindowController.attach();\n    mStatusBarWindowController.attach();\n}\nprotected void makeStatusBarView(@Nullable      RegisterStatusBarResult result) {\n    //...\n    inflateStatusBarWindow();\n    //...\n}\n</code></pre> makeStatusBarView\u4e2d\u521b\u5efa\u6574\u4e2aSystemUI\u89c6\u56fe\uff0c\u72b6\u6001\u680f\u3001\u4e0b\u62c9\u680f\u3001\u5bfc\u822a\u680f\u3001\u9501\u5c4f\u7b49\uff0cinflateStatusBarWindow\u4e2d\u521d\u59cb\u5316StatusBarWindowModule <pre><code>private void inflateStatusBarWindow() {\n    mStatusBarComponent = mStatusBarComponentFactory.create();\n    //...\n    mNotificationShadeWindowView = mStatusBarComponent.getNotificationShadeWindowView();\n    mNotificationShadeWindowViewController = mStatusBarComponent\n            .getNotificationShadeWindowViewController();\n    mNotificationShadeWindowController.setNotificationShadeView(mNotificationShadeWindowView);\n    mNotificationShadeWindowViewController.setupExpandedStatusBar();\n    mNotificationPanelViewController = mStatusBarComponent.getNotificationPanelViewController();\n    mStatusBarComponent.getLockIconViewController().init();\n    mStackScrollerController = mStatusBarComponent.getNotificationStackScrollLayoutController();\n    mStackScroller = mStackScrollerController.getView();\n\n    mNotificationShelfController = mStatusBarComponent.getNotificationShelfController();\n    //...\n}\n</code></pre></p>"}, {"location": "android/fws/systemui/#expandedstatusbar", "title": "ExpandedStatusBar", "text": "<p>\u5176\u4e2dgetNotificationShadeWindowView\u5bf9\u5e94StatusBarWindowModule\u4e2d\u7684 <pre><code>public static NotificationShadeWindowView providesNotificationShadeWindowView(\n        LayoutInflater layoutInflater) {\n    NotificationShadeWindowView notificationShadeWindowView = (NotificationShadeWindowView)\n            layoutInflater.inflate(R.layout.super_notification_shade, /* root= */ null);\n    if (notificationShadeWindowView == null) {\n        throw new IllegalStateException(\n                \"R.layout.super_notification_shade could not be properly inflated\");\n    }\n\n    return notificationShadeWindowView;\n}\n</code></pre> \u7136\u540e\u518dmNotificationShadeWindowController.attach()\u4e2d\u6dfb\u52a0Window <pre><code>public void attach() {\n    mLp = new LayoutParams(\n        ViewGroup.LayoutParams.MATCH_PARENT,\n        ViewGroup.LayoutParams.MATCH_PARENT,\n        LayoutParams.TYPE_NOTIFICATION_SHADE,\n        LayoutParams.FLAG_NOT_FOCUSABLE\n                | LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING\n                | LayoutParams.FLAG_SPLIT_TOUCH\n                | LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH\n                | LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS,\n        PixelFormat.TRANSLUCENT);\n    //...\n}\n</code></pre></p>"}, {"location": "android/fws/systemui/#statusbar", "title": "StatusBar", "text": "<p><pre><code>protected void makeStatusBarView(@Nullable RegisterStatusBarResult result) {\n    //...\n    mStatusBarWindowController.getFragmentHostManager()\n        .addTagListener(CollapsedStatusBarFragment.TAG, (tag, fragment) -&gt; {\n            StatusBarFragmentComponent statusBarFragmentComponent =\n                    ((CollapsedStatusBarFragment) fragment).getStatusBarFragmentComponent();\n            //...\n            mStatusBarView = statusBarFragmentComponent.getPhoneStatusBarView();\n            mPhoneStatusBarViewController =\n                    statusBarFragmentComponent.getPhoneStatusBarViewController();\n            mNotificationPanelViewController.updatePanelExpansionAndVisibility();\n            setBouncerShowingForStatusBarComponents(mBouncerShowing);\n\n            mLightsOutNotifController.setLightsOutNotifView(\n                    mStatusBarView.findViewById(R.id.notification_lights_out));\n            mNotificationShadeWindowViewController.setStatusBarView(mStatusBarView);\n            checkBarModes();\n        }).getFragmentManager()\n        .beginTransaction()\n        .replace(R.id.status_bar_container,\n                mStatusBarComponent.createCollapsedStatusBarFragment(),\n                CollapsedStatusBarFragment.TAG)\n        .commit();\n    //...\n</code></pre> mStatusBarWindowController\u662f\u4eceStatusBar\u4e2d\u4f20\u5165\uff0c\u5728StatusBarWindowController\u6784\u9020\u65b9\u6cd5\u4e2d\u6709StatusBarWindowModule\uff0c\u8fd9\u4e2aModule\u4f1a\u52a0\u8f7dSystemUI\u7684\u6839\u5e03\u5c40 <pre><code>fun providesStatusBarWindowView(layoutInflater: LayoutInflater): StatusBarWindowView {\n    return layoutInflater.inflate(\n        R.layout.super_status_bar,\n        /* root= */null\n    ) as StatusBarWindowView?\n        ?: throw IllegalStateException(\n            \"R.layout.super_status_bar could not be properly inflated\"\n        )\n}\n</code></pre> super_status_bar.xml\u5e03\u5c40\u5982\u4e0b <pre><code>&lt;com.android.systemui.statusbar.window.StatusBarWindowView\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:sysui=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"&gt;\n\n    &lt;FrameLayout\n        android:id=\"@+id/status_bar_launch_animation_container\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" /&gt;\n    &lt;!--\u72b6\u6001\u680f\u5bb9\u5668--&gt;\n    &lt;FrameLayout\n        android:id=\"@+id/status_bar_container\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@drawable/system_bar_background\" /&gt;\n&lt;/com.android.systemui.statusbar.window.StatusBarWindowView&gt;\n</code></pre> CollapsedStatusBarFragment\u521b\u5efa\u8d70\u751f\u547d\u5468\u671f\u65b9\u6cd5 <pre><code>public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,\n        Bundle savedInstanceState) {\n    return inflater.inflate(R.layout.status_bar, container, false);\n}\n</code></pre> \u6dfb\u52a0\u5230Window\u4e2dmStatusBarWindowController.attach(); <pre><code>public void attach() {\n    mLp = getBarLayoutParams(mContext.getDisplay().getRotation());\n\n    mWindowManager.addView(mStatusBarWindowView, mLp);\n    mLpChanged.copyFrom(mLp);\n\n    mContentInsetsProvider.addCallback(this::calculateStatusBarLocationsForAllRotations);\n    calculateStatusBarLocationsForAllRotations();\n}\n</code></pre> \u5176\u4e2dmLp <pre><code>private WindowManager.LayoutParams getBarLayoutParamsForRotation(int rotation) {\n    int height = mBarHeight;\n    //...\n    WindowManager.LayoutParams lp = new WindowManager.LayoutParams(\n            WindowManager.LayoutParams.MATCH_PARENT,\n            height,\n            WindowManager.LayoutParams.TYPE_STATUS_BAR,\n            WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE\n                    | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH\n                    | WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS,\n            PixelFormat.TRANSLUCENT);\n    lp.privateFlags |= PRIVATE_FLAG_COLOR_SPACE_AGNOSTIC;\n    lp.token = new Binder();\n    lp.gravity = Gravity.TOP;\n    lp.setFitInsetsTypes(0 /* types */);\n    lp.setTitle(\"StatusBar\");\n    lp.packageName = mContext.getPackageName();\n    lp.layoutInDisplayCutoutMode = LAYOUT_IN_DISPLAY_CUTOUT_MODE_ALWAYS;\n    return lp;\n}\n</code></pre></p>"}, {"location": "android/fws/systemui/#navigationbar", "title": "NavigationBar", "text": "<p>\u4e5f\u5728StatusBar\u4e2d\u521b\u5efa\u4f46\u6dfb\u52a0\u5230Window\u6bd4StatusBar\u65e9\uff0cNavigationBar\u5728makeStatusBarView\u5c31\u521b\u5efa\u5e76\u6dfb\u52a0\u5230Window\u4e0a\uff0c\u800cStatusBar\u662f\u5728\u6267\u884cmStatusBarWindowController.attach()\u624d\u6dfb\u52a0 <pre><code>protected void makeStatusBarView(@Nullable RegisterStatusBarResult result) {\n    //...\n    try {\n        boolean hide_systembar = Settings.System.getInt(mContext.getContentResolver(),Settings.System.ALWAYS_HIDE_BAR,0) != 0;\n\n        if (DEBUG) Log.v(TAG, \"hasNavigationBar=\" + !hide_systembar);\n        if (!hide_systembar) {\n            createNavigationBar(result);\n        }\n    } catch (Exception ex) {\n        // no window manager? good luck with that\n    }\n    //...\n}\nprotected void createNavigationBar(@Nullable RegisterStatusBarResult result) {\n    mNavigationBarController.createNavigationBars(true /* includeDefaultDisplay */, result);\n}\n\nvoid createNavigationBar(Display display, Bundle savedState, RegisterStatusBarResult result) {\n    //...\n    NavigationBar navBar = mNavigationBarFactory.create(context);\n\n    mNavigationBars.put(displayId, navBar);\n    View navigationBarView = navBar.createView(savedState);\n    //...\n}\npublic View createView(Bundle savedState) {\n    mFrame = (NavigationBarFrame) LayoutInflater.from(mContext).inflate(\n            R.layout.navigation_bar_window, null);\n    View barView = LayoutInflater.from(mFrame.getContext()).inflate(\n            R.layout.navigation_bar, mFrame);\n    barView.addOnAttachStateChangeListener(this);\n    mNavigationBarView = barView.findViewById(R.id.navigation_bar_view);\n    mWindowManager.addView(mFrame,\n            getBarLayoutParams(mContext.getResources().getConfiguration().windowConfiguration\n                    .getRotation()));\n    //...\n    return barView;\n}\n</code></pre> getBarLayoutParams\u770b\u5230\u719f\u6089\u7684\u7a97\u53e3type <pre><code>private WindowManager.LayoutParams getBarLayoutParamsForRotation(int rotation) {\n    //\u5bf9\u65b9\u5411\u5904\u7406\n    WindowManager.LayoutParams lp = new WindowManager.LayoutParams(\n        width,\n        height,\n        WindowManager.LayoutParams.TYPE_NAVIGATION_BAR,\n        WindowManager.LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING\n                | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE\n                | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL\n                | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH\n                | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH\n                | WindowManager.LayoutParams.FLAG_SLIPPERY,\n        PixelFormat.TRANSLUCENT);\n    //\u5176\u4ed6\u53c2\u6570\u8bbe\u7f6e\n}\n</code></pre></p> <p>mDisplayCutout = getRootWindowInsets().getDisplayCutout() Rect bounds = mDisplayCutout.getBoundingRectTop();</p> <p>https://blog.csdn.net/ItJavawfc/article/details/144143621</p> <p>https://blog.csdn.net/weixin_44021334/article/details/139912125</p> <p>https://juejin.cn/column/6966496441099517982</p> <p>https://blog.csdn.net/weixin_65101089/article/details/140323108</p> <p>https://juejin.cn/user/1538972009657384/posts</p> <p>https://download.csdn.net/blog/column/2120739/123222195</p>"}, {"location": "android/fws/systemui_code/", "title": "\u6848\u4f8b", "text": ""}, {"location": "android/fws/systemui_code/#_1", "title": "\u4e0b\u62c9\u680f\u4fee\u6539", "text": "<p>\u5e95\u90e8\u8bbe\u7f6e\u548c\u5173\u673a\u6309\u94ae\u80cc\u666f\u4fee\u6539</p> <p>frameworks/base/packages/SystemUI/compose/features/src/com/android/systemui/qs/footer/ui/compose/FooterActions.kt <pre><code>val backgroundColor = /*colorAttr(R.attr.underSurface)*/Color.Transparent\nval contentColor = LocalAndroidColorScheme.current.onSurface\nval backgroundTopRadius = /*dimensionResource(R.dimen.qs_corner_radius)*/0F\n</code></pre></p>"}, {"location": "android/fws/systemui_code/#_2", "title": "\u4e0b\u62c9\u70c2\u76d1\u542c", "text": "<p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java <pre><code>mScrimController.setScrimVisibleListener(scrimsVisible -&gt; {\n//            mNotificationShadeWindowController.setScrimsVisibility(scrimsVisible);\n    if (scrimsVisible == ScrimController.OPAQUE) {\n        // \u4e0b\u62c9\u680f\u5c55\u5f00\n        SystemUIPluginManager.getInstance().onStatusBarExpand(true);\n    } else if (scrimsVisible == ScrimController.TRANSPARENT) {\n        // \u4e0b\u62c9\u680f\u6536\u8d77\u3001\u9501\u5c4f\n        SystemUIPluginManager.getInstance().onStatusBarExpand(false);\n    } else if (scrimsVisible == ScrimController.SEMI_TRANSPARENT) {\n        // \u9501\u5c4f\u4eae\u5c4f\n        if (mStatusBarStateController.isDreaming())\n            SystemUIPluginManager.getInstance().onStatusBarExpand(true);\n    }\n});\n</code></pre></p>"}, {"location": "android/fws/systemui_code/#_3", "title": "\u4e0b\u62c9\u680f\u9ad8\u65af\u6a21\u7cca", "text": "<p>frameworks/base/packages/SystemUI/src/com/android/systemui/scrim/ScrimView.java</p> <p>\u7981\u6b62\u7ed8\u5236\uff0c\u5c4f\u853donDraw\u4ee3\u7801\u5373\u53ef\uff0c\u4e0d\u7136\u4f1a\u7ed8\u5236\u5706\u89d2\u80cc\u666f</p> <p>\u4fee\u6539\u6700\u5927\u6a21\u7cca\u503c</p> <p>frameworks/base/packages/SystemUI/res/values/dimens.xml <pre><code>&lt;dimen name=\"max_window_blur_radius\"&gt;50px&lt;/dimen&gt;\n</code></pre></p> <p>frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/BlurUtils.kt</p> <p>\u9ad8\u65af\u6a21\u7cca\u5904\u7406\u7684\u5730\u65b9 <pre><code>fun applyBlur(viewRootImpl: ViewRootImpl?, radius: Int, opaque: Boolean) {\n    //...\n    createTransaction().use {\n        if (supportsBlursOnWindows()) {\n            it.setBackgroundBlurRadius(viewRootImpl.surfaceControl, radius)\n            //...\n        }\n        it.setOpaque(viewRootImpl.surfaceControl, opaque)\n        it.apply()\n    }\n}\n</code></pre> frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java</p> <p>\u5c4f\u853d\u5bf9ScrimView\u663e\u793a\u9690\u85cf\u76d1\u542c <pre><code>mScrimController.setScrimVisibleListener(scrimsVisible -&gt; {\n//   mNotificationShadeWindowController.setScrimsVisibility(scrimsVisible);\n});\n</code></pre> \u4e0b\u62c9\u6dfb\u52a0\u80cc\u666f</p> <p>frameworks/base/packages/SystemUI/res/layout/status_bar_expanded.xml <pre><code>&lt;com.android.systemui.shade.NotificationPanelView\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:systemui=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/notification_panel\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/transparent\"&gt;\n    &lt;View\n        android:id=\"@+id/status_bar_expanded_bg\"\n        android:layout_width=\"match_parent\"\n        android:background=\"#80000000\"\n        android:visibility=\"gone\"\n        android:layout_height=\"match_parent\"/&gt;\n    //...\n&lt;/com.android.systemui.shade.NotificationPanelView&gt;\n</code></pre> frameworks/base/packages/SystemUI/src/com/android/systemui/shade/NotificationPanelViewController.java <pre><code>private View mStatusBarExpandBg;\n\nvoid onFinishInflate() {\n    //...\n    mStatusBarExpandBg = mView.findViewById(R.id.status_bar_expanded_bg);\n    //...\n}\n\nvoid notifyExpandingStarted() {\n    if (!mExpanding) {\n        //...\n        if (!isFullyExpanded() &amp;&amp; mStatusBarExpandBg.getVisibility() == View.GONE) {\n            mStatusBarExpandBg.setVisibility(VISIBLE);\n        }\n    }\n}\n\nvoid notifyExpandingFinished() {\n    endClosing();\n    if (mExpanding) {\n        //...\n        if (mKeyguardStateController.isShowing() ||\n                (!isFullyExpanded() &amp;&amp; mStatusBarExpandBg.getVisibility() == VISIBLE)) {\n            mStatusBarExpandBg.setVisibility(View.GONE);\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/fws/app/environment/", "title": "\u73af\u5883\u642d\u5efa", "text": ""}, {"location": "android/fws/app/environment/#vendor", "title": "vendor(\u5382\u5546\u6e90\u7801)\u5b9a\u5236", "text": ""}, {"location": "android/fws/app/environment/#app", "title": "\u5b9a\u5236\u62d3\u5c55app", "text": "<p>\u4ee5oriole\u624b\u673a\u4e3a\u4f8b\uff1a</p> <p>aosp\u4e2d\uff1adevice/google/raviole/aosp_oriole.mk</p> <p>lineage\u4e2d\uff1adevice/google/raviole/lineage_oriole.mk</p> <p>\u6dfb\u52a0\u5f15\u5165 <pre><code>$(call inherit-product-if-exists, vendor/hfc/hfc.mk)\n</code></pre> \u65b0\u5efavendor/hfc/hfc.mk \u6dfb\u52a0\u5f15\u5165 <pre><code>$(call inherit-product-if-exists, vendor/hfc/apps/apps.mk)\n</code></pre> \u65b0\u5efaapps\u6587\u4ef6\u5939\uff0c\u65b0\u5efaapps.mk <pre><code>PRODUCT_PACKAGES += \\\n    QQInput \\\n    SystemUIPlugin\n</code></pre></p>"}, {"location": "android/fws/app/environment/#overlay", "title": "\u5b9a\u5236overlay", "text": ""}, {"location": "android/fws/app/environment/#_1", "title": "\u6dfb\u52a0\u5305\u540d\u767d\u540d\u5355", "text": "<p>\u7528\u4e8e\u5728framework.jar\u4e2d\u6dfb\u52a0\u81ea\u5df1\u7684\u5305\u540d\u4ee3\u7801</p> <p>\u8def\u5f84\uff1abuild/soong/scripts/check_boot_jars/package_allowed_list.txt</p> <p>\u5982\uff1a\u65b0\u589ecom.hfc.framework <pre><code># framework.jar\njavax\\.microedition\\.khronos\\.opengles\njavax\\.microedition\\.khronos\\.egl\n\nandroid\ncom.hfc.framework\n</code></pre></p>"}, {"location": "android/fws/app/environment/#apk", "title": "\u5185\u7f6eapk\u5230\u7cfb\u7edf", "text": "<p>\u7f16\u5199mk\u6587\u4ef6\uff0c\u5c06gradle\u7f16\u8bd1\u51fa\u6765\u7684apk\u91cd\u65b0\u524d\u9762\u6253\u5305\u6210\u7cfb\u7edfapk <pre><code>LOCAL_PATH:=$(call my-dir)\ninclude $(CLEAR_VARS)\nLOCAL_SRC_FILES := build/outputs/apk/release/myapp-release.apk\nLOCAL_MODULE_CLASS := APPS\n#\u53ef\u4ee5\u4e3auser\u3001eng\u3001tests\u3001optional\uff0coptional\u4ee3\u8868\u5728\u4efb\u4f55\u7248\u672c\u4e0b\u90fd\u7f16\u8bd1\nLOCAL_MODULE_TAGS := optional\n#\u7f16\u8bd1\u6a21\u5757\u7684\u540d\u79f0\nLOCAL_MODULE := MyApp\n#\u53ef\u4ee5\u4e3atestkey\u3001platform\u3001shared\u3001media\u3001PRESIGNED\uff08\u4f7f\u7528\u539f\u7b7e\u540d\uff09\uff0cplatform\u4ee3\u8868\u4e3a\u7cfb\u7edf\u5e94\u7528\nLOCAL_CERTIFICATE := platform\n#\u4e0d\u8bbe\u7f6e\u6216\u8005\u8bbe\u7f6e\u4e3afalse\uff0c\u5b89\u88c5\u4f4d\u7f6e\u4e3asystem/app\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3atrue\uff0c\u5219\u5b89\u88c5\u4f4d\u7f6e\u4e3asystem/priv-app\nLOCAL_PRIVILEGED_MODULE := false\n#module\u7684\u540e\u7f00\uff0c\u53ef\u4e0d\u8bbe\u7f6e\nLOCAL_MODULE_SUFFIX := $(COMMON_ANDROID_PACKAGE_SUFFIX)\n# \u5173\u95ed\u9884\u7f16\u8bd1\uff0c\u4e0d\u4f1a\u751f\u6210OAT\u6587\u4ef6\nLOCAL_DEX_PREOPT := true\nLOCAL_PRODUCT_MODULE := false\ninclude $(BUILD_PREBUILT)\n</code></pre> LOCAL_PRODUCT_MODULE\u4e3atrue\u4ea7\u51fa\u76ee\u5f55\u5728/product/\uff0c\u5426\u5219\u5728/system/\u4e0b</p> <p>\u7cfb\u7edf\u5e94\u7528\u767d\u540d\u5355\uff0c\u7f16\u8bd1\u955c\u50cf\u65f6\u5305\u542b\u81ea\u5df1\u7684apk\uff0c\u6700\u7ec8\u7f16\u8bd1\u6210system/app/Myapp</p> <p>build/make/target/product/handheld_system.mk <pre><code>PRODUCT_PACKAGES += \\\n    MyApp \\\n\nPRODUCT_SYSTEM_SERVER_APPS += \\\n    MyApp \\\n</code></pre></p> <p>\u5982\u679c\u60f3\u7f16\u8bd1\u5230\u5176\u4ed6\u76ee\u5f55handheld_product.mk\u548chandheld_system_ext.mk</p> <p>\u53c2\u8003\uff1ahttps://blog.csdn.net/etrospect/article/details/128235015</p>"}, {"location": "android/fws/app/environment/#mkbp", "title": "mk\u8f6cbp", "text": "<p>mk\u8bed\u6cd5\uff1ahttps://blog.csdn.net/u012514113/article/details/124384430</p> <p>\u4f7f\u7528androidmk\u5de5\u5177</p> <p>\u8def\u5f84\uff1aout/host/linux-x86/bin/androidmk</p> <p>\u6ca1\u6709\u5219\u6267\u884c <pre><code>m -j blueprint_tools\n</code></pre></p> <p>mk\u8f6cbp\u547d\u4ee4 <pre><code>androidmk /xxx/Android.mk &gt; /xxx/Andoroid.bp\n</code></pre></p> <p>\u9884\u88c5\u5e94\u7528\u53ef\u5378\u8f7d(\u5f85\u6d4b\u8bd5) <pre><code>LOCAL_PATH := $(call my-dir)\n\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE := Test\nLOCAL_SRC_FILES := Test.apk\nLOCAL_MODULE_CLASS := APPS\nLOCAL_MODULE_TAGS := optional\nLOCAL_CERTIFICATE := platform\nLOCAL_MODULE_SUFFIX := $(COMMON_ANDROID_PACKAGE_SUFFIX)\nLOCAL_MODULE_PATH := $(TARGET_OUT_DATA_APPS)//\u91cd\u70b9\u8fd9\u4e00\u53e5\n\ninclude $(BUILD_PREBUILT)\n</code></pre></p>"}, {"location": "android/fws/app/environment/#_2", "title": "\u751f\u6210\u7cfb\u7edf\u7b7e\u540d\u6587\u4ef6", "text": "<p>aosp\u6e90\u7801\u8def\u5f84\uff1abuild/target/product/security/</p> <p>platform.pk8</p> <p>platform.x509.pem <pre><code>openssl pkcs8 -in platform.pk8 -inform DER -outform PEM -out platform.pem -nocrypt\n</code></pre></p> <pre><code>openssl pkcs12 -export -in platform.x509.pem -inkey platform.pem -out platform.pk12 -name dev\n</code></pre> <pre><code>keytool -importkeystore -deststorepass 123456 -destkeystore platform.jks -srckeystore platform.pk12 -srcstoretype PKCS12 -srcstorepass 123456\n</code></pre> <p>build.gradle\u4e2d\u6dfb\u52a0 <pre><code>signingConfigs {\n    config {\n        storeFile file(\"platform.jks\")\n        storePassword '123456'\n        keyAlias 'dev'\n        keyPassword '123456'\n    }\n}\n\nbuildTypes {\n    release {\n        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        signingConfig signingConfigs.config\n    }\n}\n</code></pre> \u5728Androidmanifest.xml\u6dfb\u52a0 <pre><code>android:sharedUserId=\"android.uid.system\"\n</code></pre></p>"}, {"location": "android/fws/app/system_app/", "title": "\u9879\u76ee\u642d\u5efa", "text": ""}, {"location": "android/fws/app/system_app/#_1", "title": "\u521b\u5efa\u9879\u76ee", "text": "<p>Android Studio\u521b\u5efa\u666e\u901a\u5e94\u7528\u9879\u76ee\u5982SystemUIPlugin</p>"}, {"location": "android/fws/app/system_app/#_2", "title": "\u6dfb\u52a0\u5230\u7cfb\u7edf\u76ee\u5f55", "text": "<p>\u5185\u7f6e\u7cfb\u7edf\u5e94\u7528\uff0c\u7f16\u5199Android.bp(mk\u53ef\u53c2\u8003mk\u8f6cbp\u5e76\u6dfb\u52a0\u5230\u7f16\u8bd1\u6a21\u5757\u4e2d\uff0c\u5728vendor\u5b9a\u5236\u4e2d\u6dfb\u52a0SystemUIPlugin\u6a21\u5757 <pre><code>android_app_import {\n    name: \"SystemUIPlugin\",\n    certificate: \"platform\",\n    dex_preopt: {\n        enabled: true,\n    },\n    system_ext_specific: true,\n    privileged: true,\n    enforce_uses_libs: false,\n    apk: \"app/build/outputs/apk/release/app-release.apk\",\n}\n</code></pre> - \u6ce8\uff1a\u6b64\u5904\u5fc5\u987b\u4f7f\u7528gradle\u5148\u7f16\u8bd1\u51faapk\u624d\u80fd\u4f7f\u7528m SystemUIPlugin\u6216\u8005\u6574\u4f53\u7f16\u8bd1</p>"}, {"location": "android/fws/app/system_app/#gradle", "title": "gradle\u6dfb\u52a0\u7cfb\u7edf\u7b7e\u540d", "text": "<p>\u83b7\u53d6\u7cfb\u7edf\u7b7e\u540dplatform.jks\uff0cgradle\u5f15\u7528\u7b7e\u540d</p>"}, {"location": "android/fws/app/system_app/#fw", "title": "\u5f15\u7528fw\u63a5\u53e3", "text": "<p>out/target/common/obj/JAVA_LIBRARIES/framework-minus-apex_intermediates/classes.jar</p> <p>out/soong/.intermediates/frameworks/base/framework-minus-apex/android_common/7bd916565615329d50364be05485f3c9/combined/framework.jar</p> <p>\u7f16\u8bd1\u51faframework.jar\u6587\u4ef6\uff0c\u7f16\u8bd1\u547d\u4ee4\uff0c\u653e\u5230\u9879\u76eelibs\u4e2d\uff0cgradle\u914d\u7f6e <pre><code>gradle.projectsEvaluated {\n    tasks.withType&lt;JavaCompile&gt;().configureEach {\n        options.compilerArgs.add(\"-Xbootclasspath/p:${rootProject.projectDir}/${project.name}/libs/framework.jar\")\n    }\n}\n\ndependencies {\n    compileOnly(files(\"libs/framework.jar\"))\n}\n\ntasks.register(\"fwBuild\") {\n    val imlFile =\n        file(\"../.idea/modules/${project.name}/${rootProject.name}.${project.name}.main.iml\")\n    if (!imlFile.exists()) {\n        println(\"IML file not found: ${imlFile.absolutePath}\")\n        return@register\n    }\n\n    val document = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(imlFile)\n    val parsedXml = document.documentElement\n\n    val componentNodes = parsedXml.getElementsByTagName(\"component\")\n    val newModuleRootManager = (0 until componentNodes.length)\n        .asSequence()\n        .map { componentNodes.item(it) as Element }\n        .firstOrNull { it.getAttribute(\"name\") == \"NewModuleRootManager\" }\n\n    if (newModuleRootManager == null) {\n        println(\"NewModuleRootManager component not found\")\n        return@register\n    }\n\n    val orderEntries = newModuleRootManager.getElementsByTagName(\"orderEntry\")\n    val sdkEntry = (0 until orderEntries.length)\n        .asSequence()\n        .map { orderEntries.item(it) as Element }\n        .firstOrNull {\n            it.getAttribute(\"type\") == \"jdk\" &amp;&amp; it.getAttribute(\"jdkName\").startsWith(\"Android API\")\n        }\n\n    val frameworkEntry = (0 until orderEntries.length)\n        .asSequence()\n        .map { orderEntries.item(it) as Element }\n        .firstOrNull {\n            it.getAttribute(\"type\") == \"library\" &amp;&amp; it.getAttribute(\"name\").contains(\"framework\")\n        }\n\n    if (sdkEntry != null &amp;&amp; frameworkEntry != null) {\n        newModuleRootManager.removeChild(frameworkEntry)\n        newModuleRootManager.insertBefore(frameworkEntry, sdkEntry)\n\n        val transformer = TransformerFactory.newInstance().newTransformer()\n//        transformer.setOutputProperty(OutputKeys.INDENT, \"yes\") // \u542f\u7528\u7f29\u8fdb\n//        transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\") // \u8bbe\u7f6e\u7f29\u8fdb\u4e3a 4 \u4e2a\u7a7a\u683c\n        // \u5c06\u4fee\u6539\u540e\u7684 DOM \u5199\u56de .iml \u6587\u4ef6\n        transformer.transform(DOMSource(document), StreamResult(FileWriter(imlFile)))\n        println(\"IML file updated successfully\")\n    } else {\n        println(\"SDK entry or framework entry not found\")\n    }\n}\n\ntasks.named(\"preBuild\") {\n    dependsOn(\"fwBuild\")\n}\n</code></pre> \u6ce8\uff1a - fwBuild\u8fd9\u4e2atask\u6267\u884c\u4e2d\u9700\u8981\u68c0\u67e5\u548c\u4fee\u6539.idea\u7684\u8def\u5f84\u662f\u5426\u6b63\u786e\uff0cidea\u6ca1\u6709\u751f\u6210module\u76f8\u5173\u5f00\u542fidea\u914d\u7f6e - gradle\u4e2d\u7684java\u7248\u672c\u9700\u8981\u4f7f\u75281.8</p> <pre><code>compileOptions {\n    sourceCompatibility = JavaVersion.VERSION_1_8\n    targetCompatibility = JavaVersion.VERSION_1_8\n}\n</code></pre>"}, {"location": "android/fws/app/system_app/#fw_1", "title": "\u96c6\u6210\u5230fw", "text": "<p>\u751f\u6210jar</p> <p>framework\u5f15\u7528jar</p> <p>framework\uff1a\u53ea\u80fd\u5f15\u7528jar\uff0c\u65e0\u6cd5\u5f15\u7528aar</p>"}, {"location": "android/fws/app/system_app/#_3", "title": "\u4fdd\u6d3b", "text": "<p>\u5728application\u8282\u70b9\u4e0b\u6dfb\u52a0 <pre><code>android:persistent=\"true\"\n</code></pre> \u6ce8\uff1a \u6dfb\u52a0\u5b8c\u540e\u6ca1\u6cd5\u4f7f\u7528as\u8fd0\u884c\u9879\u76ee\uff0c\u4fee\u6539\u540epush\u5e76\u91cd\u542f\u8bbe\u5907\u751f\u6548</p>"}, {"location": "android/fws/wms/fws_freeform/", "title": "\u6e90\u7801", "text": ""}, {"location": "android/fws/wms/fws_freeform/#aosp15", "title": "aosp15\u65e0\u6cd5\u5f00\u542f\u81ea\u7531\u7a97\u53e3", "text": "<p>\u8bbe\u7f6e-\u5f00\u53d1\u8005\u9009\u9879-\u542f\u7528\u53ef\u81ea\u7531\u8c03\u6574\u7684\u7a97\u53e3\uff0c\u5f00\u542f(\u5bf9\u5e94\u4e0b\u9762DEVELOPMENT_ENABLE_FREEFORM_WINDOWS_SUPPORT)</p> <p>packages/apps/Launcher3/quickstep/src/com/android/quickstep/TaskShortcutFactory.java <pre><code>private boolean isAvailable(RecentsViewContainer container) {\n    return Settings.Global.getInt(\n            container.asContext().getContentResolver(),\n            Settings.Global.DEVELOPMENT_ENABLE_FREEFORM_WINDOWS_SUPPORT, 0) != 0\n            &amp;&amp; !enableDesktopWindowingMode();\n}\n</code></pre> \u5c06!enableDesktopWindowingMode()\u6539\u6210enableDesktopWindowingMode()</p>"}, {"location": "android/fws/wms/fws_freeform/#_1", "title": "\u81ea\u7531\u7a97\u53e3\u9ed1\u5c4f", "text": ""}, {"location": "android/fws/wms/fws_freeform/#_2", "title": "\u590d\u73b0\u65b9\u5f0f", "text": "<p>\u5207\u6362\u6210\u81ea\u7531\u7a97\u53e3\uff0c\u8fdb\u884c\u62d6\u62fd\uff0c\u518d\u70b9\u51fb\u5168\u5c4f</p>"}, {"location": "android/fws/wms/fws_freeform/#_3", "title": "\u5b9a\u4f4d\u8fc7\u7a0b", "text": "<p>1.\u6253\u5370\u5806\u6808\uff0c\u7a97\u53e3\u88c1\u526a\u6700\u7ec8\u8c03\u7528SurfaceControl\u7684nativeSetWindowCrop</p> <p>frameworks/base/core/java/android/view/SurfaceControl.java</p> <p>\u9f20\u6807\u53f3\u952e--Find Usages\uff0c\u627e\u5230\u6240\u6709\u8c03\u7528\u51fa\u6dfb\u52a0\u6253\u5370\uff0c\u7f16\u8bd1push\u540e\u4f7f\u7528adb logcat -c;adb logcat &gt; xx.txt\u65b9\u5f0f\u6293\u53d6\u65e5\u5fd7\u6587\u4ef6 <pre><code>if (sc.toString().contains(\"Setting\")) {\n    android.util.Log.e(\"yuli\", sc + \" setWindowCrop \" + crop, new Exception());\n}\n</code></pre> 2.\u4f7f\u7528winscope\u6293trace\u5b9a\u4f4d\u5230\u662f\u88c1\u526aWindowState\u7684\u95ee\u9898\uff0c\u70b9\u51fb\u5168\u5c4f\u65f6\u88c1\u526a\u6ca1\u6709\u88ab\u91cd\u7f6e</p> <p></p>"}, {"location": "android/fws/wms/fws_freeform/#_4", "title": "\u89e3\u51b3\u65b9\u6848", "text": "<p>frameworks/base/libs/WindowManager/Shell/src/com/android/wm/shell/windowdecor/TaskOperations.java</p> <p>\u70b9\u51fb\u5168\u5c4f\u6309\u94ae\u5b9e\u73b0\u65b9\u6cd5 <pre><code>void maximizeTask(RunningTaskInfo taskInfo, int containerWindowingMode) {\n    WindowContainerTransaction wct = new WindowContainerTransaction();\n    int targetWindowingMode = taskInfo.getWindowingMode() != WINDOWING_MODE_FULLSCREEN\n            ? WINDOWING_MODE_FULLSCREEN : WINDOWING_MODE_FREEFORM;\n    wct.setWindowingMode(taskInfo.token,\n            targetWindowingMode == containerWindowingMode\n                    ? WINDOWING_MODE_UNDEFINED : targetWindowingMode);\n    if (targetWindowingMode == WINDOWING_MODE_FULLSCREEN) {\n        wct.setBounds(taskInfo.token, null);\n    }\n    if (Transitions.ENABLE_SHELL_TRANSITIONS) {\n        mTransitionStarter.startWindowingModeTransition(targetWindowingMode, wct);\n    } else {\n        mSyncQueue.queue(wct);\n    }\n}\n</code></pre></p> <p>frameworks/base/services/core/java/com/android/server/wm/WindowState.java <pre><code>void prepareSurfaces() {\n    //...\n    mWinAnimator.prepareSurfaceLocked(getSyncTransaction());\n    //...\n}\n</code></pre> frameworks/base/services/core/java/com/android/server/wm/WindowStateAnimator.java <pre><code>void prepareSurfaceLocked(SurfaceControl.Transaction t) {\n    final WindowState w = mWin;\n    //...\n    //\u6dfb\u52a0\u8fd8\u539f\u64cd\u4f5c\n    if (w.getWindowingMode() == WindowConfiguration.WINDOWING_MODE_FULLSCREEN) {\n        t.setWindowCrop(getSurfaceControl(), 0, 0);\n    }\n}\n</code></pre></p>"}, {"location": "android/fws/wms/fws_log/", "title": "\u65e5\u5fd7", "text": ""}, {"location": "android/fws/wms/fws_log/#_1", "title": "\u65e5\u5fd7\u5206\u7c7b", "text": "<p>\u547d\u4ee4\u8fc7\u6ee4\u5982\uff1aadb logcat -b main</p> <p>\u9ed8\u8ba4main,system,crash,kernel</p> <ol> <li> <p>main: Log.i()</p> </li> <li> <p>system: Slog.i()</p> </li> <li> <p>radio</p> </li> <li> <p>events: ams\u5173\u952e\u65e5\u5fd7\uff0c\u67e5\u770b\u5e94\u7528\u7684\u751f\u547d\u5468\u671f\u60c5\u51b5adb logcat -b events</p> </li> <li> <p>crash</p> </li> <li> <p>default</p> </li> <li> <p>all</p> </li> </ol>"}, {"location": "android/fws/wms/fws_log/#protolog", "title": "ProtoLog", "text": "<p>adb shell wm enable-text/disable-text tag</p> <p>\u5176\u4e2dtag\u67e5\u627e\u6e90\u7801ProtoLog.v(tag,...)\u83b7\u53d6</p> <p>\u641c\u7d22wm_on\u53ef\u8fc7\u6ee4Activity\u56de\u8c03\uff0c\u66f4\u5168\u53ef\u4ee5\u76f4\u63a5\u641cwm_</p> <p>dumpsys package xxx</p>"}, {"location": "android/fws/wms/fws_log/#_2", "title": "\u6253\u5370\u5806\u6808", "text": "<pre><code>android.util.Log.i(TAG,  Log.getStackTraceString(new Throwable()));\nandroid.util.Log.d(TAG, \"xxx\", new Exception());\n</code></pre>"}, {"location": "android/fws/wms/fws_log/#_3", "title": "\u8de8\u8fdb\u7a0b\u6253\u5370", "text": "<p><pre><code>adb shell am trace-ipc start\n</code></pre> \u89e6\u53d1\u573a\u666f <pre><code>adb shell am trace-ipc stop --dump-file /data/local/ipc.txt \nadb pull /data/local/ipc.txt .\n</code></pre></p>"}, {"location": "android/fws/wms/fws_window_layer/", "title": "Fws window layer", "text": ""}, {"location": "android/fws/wms/fws_window_layer/#_1", "title": "\u7a97\u53e3\u5c42\u7ea7\u6570", "text": "<p>0-36\u517137\u5c42</p> <p>https://juejin.cn/post/7301955975338131495</p> <p>https://blog.csdn.net/q1165328963/article/details/127746382</p> <p>https://blog.csdn.net/CJohn1994/article/details/132794066</p> <p>https://blog.csdn.net/learnframework/article/details/129132667</p>"}, {"location": "android/fws/wms/fws_window_layer/#_2", "title": "\u547d\u4ee4\u5206\u6790\u5c42\u7ea7", "text": "<pre><code>adb shell dumpsys activity containers &gt; wms.txt\n</code></pre>"}, {"location": "android/fws/wms/fws_window_layer/#_3", "title": "\u6e90\u7801\u5206\u6790", "text": ""}, {"location": "android/fws/wms/fws_window_layer/#_4", "title": "\u6dfb\u52a0\u4e3b\u8981\u5c42\u7ea7", "text": "<p>frameworks/base/services/core/java/com/android/server/wm/DisplayContent.java <pre><code>DisplayContent(Display display, RootWindowContainer root,\n            @NonNull DeviceStateController deviceStateController) {\n    //...\n    configureSurfaces(pendingTransaction);\n    //...            \n}\n\nprivate void configureSurfaces(Transaction transaction) {\n    //...  \n    mDisplayAreaPolicy = mWmService.getDisplayAreaPolicyProvider().instantiate(\n                    mWmService, this /* content */, this /* root */,\n                    mImeWindowsContainer);\n    //... \n}\n</code></pre> frameworks/base/services/core/java/com/android/server/wm/DisplayAreaPolicy.java <pre><code>public DisplayAreaPolicy instantiate(WindowManagerService wmService,\n                DisplayContent content, RootDisplayArea root,\n                DisplayArea.Tokens imeContainer) {\n    //... \n    configureTrustedHierarchyBuilder(rootHierarchy, wmService, content);\n    //... \n}\nprivate void configureTrustedHierarchyBuilder(HierarchyBuilder rootHierarchy,WindowManagerService wmService, DisplayContent content) {\nrootHierarchy.addFeature(new Feature.Builder(wmService.mPolicy, \"WindowedMagnification\",\n    FEATURE_WINDOWED_MAGNIFICATION)\n    .upTo(TYPE_ACCESSIBILITY_MAGNIFICATION_OVERLAY)\n    .except(TYPE_ACCESSIBILITY_MAGNIFICATION_OVERLAY)\n    .setNewDisplayAreaSupplier(DisplayArea.Dimmable::new)\n    .build());\nif (content.isDefaultDisplay) {\nrootHierarchy.addFeature(new Feature.Builder(wmService.mPolicy, \"HideDisplayCutout\",\n    FEATURE_HIDE_DISPLAY_CUTOUT)\n    .all()\n    .except(TYPE_NAVIGATION_BAR, TYPE_NAVIGATION_BAR_PANEL, TYPE_STATUS_BAR,\n            TYPE_NOTIFICATION_SHADE)\n    .build())\n    .addFeature(new Feature.Builder(wmService.mPolicy, \"OneHanded\",FEATURE_ONE_HANDED)\n    .all()\n    .except(TYPE_NAVIGATION_BAR, TYPE_NAVIGATION_BAR_PANEL,TYPE_SECURE_SYSTEM_OVERLAY)\n    .build());\n    }\nrootHierarchy\n.addFeature(new Feature.Builder(wmService.mPolicy, \"FullscreenMagnification\",\nFEATURE_FULLSCREEN_MAGNIFICATION)\n    .all()\n    .except(TYPE_ACCESSIBILITY_MAGNIFICATION_OVERLAY, TYPE_INPUT_METHOD,\n            TYPE_INPUT_METHOD_DIALOG, TYPE_MAGNIFICATION_OVERLAY,\n            TYPE_NAVIGATION_BAR, TYPE_NAVIGATION_BAR_PANEL)\n    .build())\n.addFeature(new Feature.Builder(wmService.mPolicy, \"ImePlaceholder\",\n    FEATURE_IME_PLACEHOLDER)\n    .and(TYPE_INPUT_METHOD, TYPE_INPUT_METHOD_DIALOG)\n    .build());\n    }\n}\n</code></pre> upTo\uff1a\u7528\u6765\u8bbe\u7f6e\u56fe\u5c42\u5c42\u7ea7</p> <p>except\uff1a\u7528\u6765\u6392\u9664\u5c42\u7ea7</p> <p>\u5982\"WindowedMagnification\", \u7a97\u53e3\u7c7b\u578bFEATURE_WINDOWED_MAGNIFICATION</p> <p>upTo(TYPE_ACCESSIBILITY_MAGNIFICATION_OVERLAY)\uff0cTYPE_ACCESSIBILITY_MAGNIFICATION_OVERLAY\u5bf9\u5e94\u5c42\u7ea7\u662f32</p> <p>\u5bf9\u5e94\u67e5\u8be2\u6e90\u7801\u4f4d\u7f6e\uff1a</p> <p>frameworks/base/services/core/java/com/android/server/policy/WindowManagerPolicy.java</p> <p>\u53730-32</p> <p>except(TYPE_ACCESSIBILITY_MAGNIFICATION_OVERLAY),\u5373\u6392\u966432\uff0c\u5219\u4e3a0-31</p> <p>build\u7684\u65f6\u5019\u9ed8\u8ba4\u4f1a\u6392\u966436 <pre><code>private boolean mExcludeRoundedCorner = true;\nFeature build() {\n    if (mExcludeRoundedCorner) {\n        mLayers[mPolicy.getMaxWindowLayer()] = false;\n    }\n    //...\n}\n</code></pre> \u540c\u7406\u5176\u4ed6\u56fe\u5c42</p> <p>\"HideDisplayCutout\": all()\u53730-36</p> <p>except(TYPE_NAVIGATION_BAR(24), TYPE_NAVIGATION_BAR_PANEL(25), TYPE_STATUS_BAR(15),TYPE_NOTIFICATION_SHADE(17))</p> <p>0-14,16,18-23,26-35(build\u6392\u966436)</p> <p>\"OneHanded\": all()\u53730-36</p> <p>except(TYPE_NAVIGATION_BAR(24), TYPE_NAVIGATION_BAR_PANEL(25),TYPE_SECURE_SYSTEM_OVERLAY(33))</p> <p>0-23,26-32,34-35(build\u6392\u966436)</p> <p>\"FullscreenMagnification\": all()\u53730-36</p> <p>except(TYPE_ACCESSIBILITY_MAGNIFICATION_OVERLAY(32), TYPE_INPUT_METHOD(13),TYPE_INPUT_METHOD_DIALOG(14), TYPE_MAGNIFICATION_OVERLAY(28),TYPE_NAVIGATION_BAR(24), TYPE_NAVIGATION_BAR_PANEL(25))</p> <p>0-12,15-23,26-27,29-31,33-35(build\u6392\u966436)</p> <p>\"ImePlaceholder\": 0</p> <p>and(TYPE_INPUT_METHOD(13), TYPE_INPUT_METHOD_DIALOG(14))</p> <p>13-14</p>"}, {"location": "android/fws/wms/fws_window_layer/#_5", "title": "\u5f00\u59cb\u6784\u5efa\u5c42\u7ea7", "text": "<p><pre><code>public DisplayAreaPolicy instantiate(WindowManagerService wmService,\n                DisplayContent content, RootDisplayArea root,\n                DisplayArea.Tokens imeContainer) {\n    //... \n    return new DisplayAreaPolicyBuilder().setRootHierarchy(rootHierarchy).build(wmService);\n}\nResult build(WindowManagerService wmService) {\n    //... \n    mRootHierarchyBuilder.build(mDisplayAreaGroupHierarchyBuilders);\n    //... \n}\n\nprivate void build(@Nullable List&lt;HierarchyBuilder&gt; displayAreaGroupHierarchyBuilders) {\n    //... \n    //\u6839\u636e\u7b97\u6cd5\u5efa\u7acb\u6570\u7ed3\u6784\n    final int size = mFeatures.size();\n    for (int i = 0; i &lt; size; i++) {\n        if (featureArea == null || featureArea.mParent != areaForLayer[layer]) {\n            featureArea = new PendingArea(feature, layer, areaForLayer[layer]);\n            areaForLayer[layer].mChildren.add(featureArea);\n        }\n        areaForLayer[layer] = featureArea;\n        } else {\n            featureArea = null;\n        }\n    }\n    //... \n}\n</code></pre> WindowedMagnification: 0-31\uff0c\u76f4\u63a5\u662f\u5728Display\u4e0b\u6302\u8f7d</p> <p>HideDisplayCutout\uff1a0-14,16,18-23,26-35</p> <p></p> <ul> <li>\u5176\u4e2d32:35\u662f\u7531\u4e8eparent\u53ea\u80fd\u523031\u6240\u4ee5\u9700\u8981\u5728Display\u4e0b\u630232:35</li> </ul> <p>OneHanded\uff1a0-23,26-32,34-35</p> <p></p> <p>FullscreenMagnification\uff1a0-12,15-23,26-27,29-31,33-35</p> <p></p> <p>ImePlaceholder\uff1a13-14</p> <p></p> <p>\u56fe\u5c42\u663e\u793a\u603b\u7ed3</p> Feature\u540d\u79f0 \u5c42\u7ea7 \u7a97\u53e3\u7c7b\u578b WindowedMagnification 0-31 FEATURE_WINDOWED_MAGNIFICATION HideDisplayCutout 0-14,16-16,18-23,26-31,32-35 FEATURE_HIDE_DISPLAY_CUTOUT OneHanded 0-14,15-15,16-16,17-17,18-23,26-31,32-32,34-35 FEATURE_ONE_HANDED FullscreenMagnification 0-12,15-15,16-16,17-17,18-23,26-27,29-31,33-33,34-35 FEATURE_FULLSCREEN_MAGNIFICATION ImePlaceholder 13-14 FEATURE_IME_PLACEHOLDER"}, {"location": "android/fws/wms/fws_window_layer/#leaf", "title": "\u6784\u5efaLeaf\u5c42\u7ea7", "text": "<p><pre><code>//... \nPendingArea leafArea = null;\nint leafType = LEAF_TYPE_TOKENS;\nfor (int layer = 0; layer &lt; maxWindowLayerCount; layer++) {\n    int type = typeOfLayer(policy, layer);\n    if (leafArea == null || leafArea.mParent != areaForLayer[layer]\n            || type != leafType) {\n        leafArea = new PendingArea(null /* feature */, layer, areaForLayer[layer]);\n        areaForLayer[layer].mChildren.add(leafArea);\n        leafType = type;\n        if (leafType == LEAF_TYPE_TASK_CONTAINERS) {\n            addTaskDisplayAreasToApplicationLayer(areaForLayer[layer]);\n            addDisplayAreaGroupsToApplicationLayer(areaForLayer[layer],\n                    displayAreaGroupHierarchyBuilders);\n            leafArea.mSkipTokens = true;\n        } else if (leafType == LEAF_TYPE_IME_CONTAINERS) {\n            leafArea.mExisting = mImeContainer;\n            leafArea.mSkipTokens = true;\n        }\n    }\n    leafArea.mMaxLayer = layer;\n}\nroot.computeMaxLayer();\nroot.instantiateChildren(mRoot, displayAreaForLayer, 0, featureAreas);\nmRoot.onHierarchyBuilt(mFeatures, displayAreaForLayer, featureAreas);\n</code></pre> \u5176\u4e2d\u5bf9\u4e24\u79cd\u7c7b\u578b\u8fdb\u884c\u7279\u6b8a\u5904\u7406\uff0c\u5728typeOfLayer\u4e2d <pre><code>private static int typeOfLayer(WindowManagerPolicy policy, int layer) {\n    if (layer == APPLICATION_LAYER) {\n        return LEAF_TYPE_TASK_CONTAINERS;\n    } else if (layer == policy.getWindowLayerFromTypeLw(TYPE_INPUT_METHOD)\n            || layer == policy.getWindowLayerFromTypeLw(TYPE_INPUT_METHOD_DIALOG)) {\n        return LEAF_TYPE_IME_CONTAINERS;\n    } else {\n        return LEAF_TYPE_TOKENS;\n    }\n}\n</code></pre> APPLICATION_LAYER\u4e3a2, TYPE_INPUT_METHOD\u4e3a13, TYPE_INPUT_METHOD_DIALOG\u4e3a14\uff0c\u5176\u4ed6\u90fd\u7528PendingArea\u5904\u7406\uff0c\u8fd9\u4e24\u79cd\u5206\u522b\u4f7f\u7528APPLICATION_LAYER\u662f <pre><code>leafArea.mExisting = mTaskDisplayAreas.get(i);\nleafArea.mSkipTokens = true;\n</code></pre> INPUT\u662f <pre><code>leafArea.mExisting = mImeContainer;\nleafArea.mSkipTokens = true;\n</code></pre> PendingArea\u5728instantiateChildren\u4e2d\u8f6c\u6210DisplayArea <pre><code>void instantiateChildren(DisplayArea&lt;DisplayArea&gt; parent, DisplayArea.Tokens[] areaForLayer,\n        int level, Map&lt;Feature, List&lt;DisplayArea&lt;WindowContainer&gt;&gt;&gt; areas) {\n    //... \n    for (int i = 0; i &lt; mChildren.size(); i++) {\n        final PendingArea child = mChildren.get(i);\n        final DisplayArea area = child.createArea(parent, areaForLayer);\n        if (area == null) {\n            continue;\n        }\n        //... \n    }\n}\nprivate DisplayArea createArea(DisplayArea&lt;DisplayArea&gt; parent,\n        DisplayArea.Tokens[] areaForLayer) {\n    //... \n    if (mFeature == null) {\n        final DisplayArea.Tokens leaf = new DisplayArea.Tokens(parent.mWmService, type, \"Leaf:\" + mMinLayer + \":\" + mMaxLayer);//Leaf\u540d\u79f0\n        fillAreaForLayers(leaf, areaForLayer);\n        return leaf;\n    } else {\n        return mFeature.mNewDisplayAreaSupplier.create(parent.mWmService, type, mFeature.mName + \":\" + mMinLayer + \":\" + mMaxLayer, mFeature.mId);\n    }\n}\n</code></pre> \u9664\u4e86APPLICATION\u548cINPUT\u90fd\u662fLeafx</p> <p>APPLICATION\u540d\u5b57\u4e3aDefaultTaskDisplayArea</p> <p>INPUT\u540d\u5b57\u4e3aImeContainer</p> <p>\u76f8\u5173\u4ee3\u7801\u5982\u4e0b <pre><code>mImeWindowsContainer = ImeContainer(WindowManagerService wms) {\n    super(wms, Type.ABOVE_TASKS, \"ImeContainer\", FEATURE_IME);\n}\n//mImeWindowsContainer\u4f20\u9012\u7ed9imeContainer\nfinal TaskDisplayArea defaultTaskDisplayArea = new TaskDisplayArea(content, wmService, \"DefaultTaskDisplayArea\", FEATURE_DEFAULT_TASK_CONTAINER);\ntdaList.add(defaultTaskDisplayArea);\nrootHierarchy.setImeContainer(imeContainer).setTaskDisplayAreas(tdaList);\n</code></pre> </p>"}, {"location": "android/fws/wms/fws_window_layer/#windowtokentaskactivityrecordwindowstate", "title": "\u6784\u5efaWindowToken/Task/ActivityRecord/WindowState", "text": "<p>https://juejin.cn/post/7229587772217491511</p> <p></p>"}, {"location": "android/fws/wms/fws_window_layer/#surfaceflinger", "title": "SurfaceFlinger", "text": "<p>\u547d\u4ee4</p> <pre><code>adb shell dumpsys SurfaceFlinger &gt; surface.txt\n</code></pre>"}, {"location": "android/fws/wms/fws_window_layer/#winscope", "title": "winscope", "text": ""}, {"location": "android/fws/wms/fws_wms_tool/", "title": "\u5206\u6790\u5de5\u5177", "text": ""}, {"location": "android/fws/wms/fws_wms_tool/#_1", "title": "\u5e38\u7528\u547d\u4ee4", "text": ""}, {"location": "android/fws/wms/fws_wms_tool/#_2", "title": "\u5206\u6790\u5c42\u7ea7", "text": "<pre><code>adb shell dumpsys activity containers &gt; wms.txt\n</code></pre>"}, {"location": "android/fws/wms/fws_wms_tool/#surfaceflinger", "title": "\u5206\u6790SurfaceFlinger", "text": "<pre><code>adb shell dumpsys SurfaceFlinger &gt; surface.txt\n</code></pre>"}, {"location": "android/fws/wms/fws_wms_tool/#winscope", "title": "Winscope", "text": "<p>\u5b98\u65b9\u4ecb\u7ecd\uff1ahttps://source.android.google.cn/docs/core/graphics/tracing-win-transitions?hl=zh-cn#capture-traces-adb</p>"}, {"location": "android/fws/wms/fws_wms_tool/#aosp14", "title": "aosp14\u4e4b\u524d", "text": "<p>1.\u5f00\u53d1\u8005\u9009\u9879-\u5feb\u6377\u8bbe\u7f6e\u5f00\u53d1\u8005-Winscope\u8ddf\u8e2a</p> <p>2.\u95ee\u9898\u590d\u73b0\u64cd\u4f5c</p> <p>3.\u4fdd\u5b58\u4f4d\u7f6e: /data/misc/wmtrace/</p> <p>SurfaceFlinger\u76f8\u5173: layers_trace.wincope</p> <p>4.\u6253\u5f00prebuilts/misc/common/winscope/winscope.html</p> <p>5.\u5bfc\u5165wincope</p>"}, {"location": "android/fws/wms/fws_wms_tool/#_3", "title": "\u542f\u52a8\u8ddf\u8e2a", "text": "<pre><code>adb shell su root service call SurfaceFlinger 1025 i32 1\n</code></pre>"}, {"location": "android/fws/wms/fws_wms_tool/#_4", "title": "\u505c\u6b62\u8ddf\u8e2a", "text": "<pre><code>adb shell su root service call SurfaceFlinger 1025 i32 0\n</code></pre>"}, {"location": "android/fws/wms/fws_wms_tool/#_5", "title": "\u63d0\u53d6\u6587\u4ef6", "text": "<pre><code>adb pull /data/misc/wmtrace/layers_trace.winscope layers_trace.winscope\n</code></pre>"}, {"location": "android/fws/wms/fws_wms_tool/#aosp14lineageos21aosp15", "title": "aosp14/lineageos21/aosp15", "text": ""}, {"location": "android/fws/wms/fws_wms_tool/#_6", "title": "\u4e0b\u8f7d\u7279\u5b9a\u7248\u672c\u6e90\u7801", "text": "<p><pre><code>repo init -u https://mirrors.tuna.tsinghua.edu.cn/git/AOSP/platform/manifest -b android-14.0.0_r21\n</code></pre> \u4e0b\u8f7d\u67d0\u4e9b\u6a21\u5757\u5373\u53ef <pre><code>repo sync prebuilts/misc development frameworks/base frameworks/native frameworks/proto_logging frameworks/libs/systemui platform_testing external/protobuf\n</code></pre></p>"}, {"location": "android/fws/wms/fws_wms_tool/#npm", "title": "\u5b89\u88c5npm", "text": "<p><pre><code>sudo apt install npm\n</code></pre> \u67e5\u770bnode\u7248\u672c</p> <p>\u5982\u679c\u7248\u672c\u4f4e\u4e8e10.15.0\uff0c\u5219\u91c7\u7528\u4ee5\u4e0b\u65b9\u5f0f <pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash\n\nsource ~/.bashrc\n\nnvm install node\n</code></pre></p>"}, {"location": "android/fws/wms/fws_wms_tool/#_7", "title": "\u8fdb\u5165\u76ee\u5f55", "text": "<pre><code>cd development/tools/winscope\n</code></pre>"}, {"location": "android/fws/wms/fws_wms_tool/#vpn", "title": "\u5b89\u88c5\u4f9d\u8d56(\u6302vpn)", "text": "<pre><code>npm install\n</code></pre>"}, {"location": "android/fws/wms/fws_wms_tool/#_8", "title": "\u6784\u5efa", "text": "<pre><code>npm run build:all //aosp15\u6ca1\u6709\u8fd9\u4e2a\n\nnpm run build:prod\n</code></pre> <p>\u4e0b\u8f7d\u8d85\u65f6\u5982 <pre><code>INFO:root:Downloading /aosp14/external/perfetto/buildtools/linux64/clang.tgz from https://commondatastorage.googleapis.com/chromium-browser-clang/Linux_x64/clang-llvmorg-18-init-17730-gf670112a-5.tgz\n</code></pre> \u624b\u52a8\u4e0b\u8f7d\u5e76\u91cd\u547d\u540d\u653e\u5230/aosp14/external/perfetto/buildtools/linux64/clang.tgz\u4e2d\uff0c\u91cd\u65b0\u6267\u884cnpm run build:prod</p> <p>\u8fde\u63a5\u8d85\u65f6\u95ee\u9898\uff1a\u7ec8\u7aef\u65e0\u6cd5\u8fde\u63a5vpn</p>"}, {"location": "android/fws/wms/fws_wms_tool/#winscore", "title": "\u542f\u52a8winscore", "text": "<pre><code>npm run start\n</code></pre>"}, {"location": "android/fws/wms/fws_wms_tool/#_9", "title": "\u6355\u83b7\u8ddf\u8e2a\u8bb0\u5f55", "text": "<p>\u6253\u5f00\u8bbe\u7f6e-\u5f00\u53d1\u8005\u9009\u9879-\u7cfb\u7edf\u8ddf\u8e2a\u4e2d\u7684Winscore\u5f00\u5173\uff0c\u8fd9\u4e2a\u662f\u6700\u5b8c\u6574\u7684\u65b9\u5f0f <pre><code>python3 development/tools/winscope/src/adb/winscope_proxy.py\n</code></pre></p>"}, {"location": "android/fws/wms/fws_wms_tool/#winscore_1", "title": "\u627e\u4e0d\u5230Winscore\u5f00\u5173", "text": "<p>\u4f7f\u7528eng\u7248\u672c\uff0c\u4e3b\u8981\u662f\u786e\u4fddpackages/apps/Traceur/\u88ab\u7f16\u8bd1\u8fdb\u53bb\uff0c\u5177\u4f53\u5f15\u7528\u5728build/make/target/product/handheld_system.mk</p> <p>\u53c2\u8003\u535a\u5ba2\uff1ahttps://blog.csdn.net/ukynho/article/details/143023774</p>"}, {"location": "android/github/autosize/", "title": "Autosize", "text": ""}, {"location": "android/github/autosize/#_1", "title": "\u5c4f\u5e55\u9002\u914d", "text": "<p>https://github.com/JessYanCoding/AndroidAutoSize</p> <p>\u5f15\u5165\uff1a <pre><code>maven { url \"https://jitpack.io\" }\n\nimplementation(\"me.jessyan:autosize:1.2.1\")\n</code></pre></p> <p>\u5c0f\u7c73\u8bbe\u5907crash\u95ee\u9898 <pre><code>override fun getResources(): Resources {\n    val resources = super.getResources()\n    if (ThreadUtils.isMainThread()) {\n        AutoSizeCompat.autoConvertDensityOfGlobal(resources)\n    }\n    return resources\n}\n</code></pre></p> <p>dialog\u95ee\u9898 <pre><code>abstract class AutoSizeDialog : Dialog {\n    constructor(context: Context) : super(context)\n    constructor(context: Activity, themeResId: Int) : super(context, themeResId)\n    constructor(\n        context: Activity, cancelable: Boolean,\n        cancelListener: DialogInterface.OnCancelListener\n    ) : super(context, cancelable, cancelListener)\n\n    override fun show() {\n        window?.let {\n            it.attributes.width = initWinWidth()\n            it.attributes.height = initWinHeight()\n        }\n        super.show()\n    }\n    abstract fun initWinWidth(): Int\n    abstract fun initWinHeight(): Int\n}\n</code></pre></p>"}, {"location": "android/github/gif/", "title": "gif", "text": ""}, {"location": "android/github/gif/#view", "title": "\u5c01\u88c5view", "text": "<p>\u5f15\u7528glide</p> <p>\u81ea\u5b9a\u4e49\u5c5e\u6027 <pre><code>&lt;declare-styleable name=\"GifImageView\"&gt;\n    &lt;attr name=\"gif_src\" format=\"reference\"/&gt;\n&lt;/declare-styleable&gt;\n</code></pre> \u6e90\u7801 <pre><code>class GifImageView(context: Context, attrs: AttributeSet?) : AppCompatImageView(context, attrs) {\n    private val TAG = \"GifImageView\"\n\n    init {\n        val obtainStyledAttributes =\n            context.obtainStyledAttributes(attrs, R.styleable.GifImageView)\n        val drawable = obtainStyledAttributes.getResourceId(R.styleable.GifImageView_gif_src, 0)\n        if (drawable != 0) {\n            Glide.with(context).load(drawable).into(GifTarget(this, false))\n        }\n        obtainStyledAttributes.recycle()\n    }\n\n    fun loadGif(@DrawableRes resId: Int, isPlay: Boolean) {\n        if (drawable is GifDrawable) {\n            if (isPlay) {\n                (drawable as GifDrawable).start()\n                Log.d(TAG, \"start\")\n            } else{\n                (drawable as GifDrawable).stop()\n                Log.d(TAG, \"stop\")\n            }\n        } else {\n            Log.d(TAG, \"load\")\n            Glide.with(context).load(resId).into(GifTarget(this, isPlay))\n        }\n    }\n\n    fun pause() {\n        if (drawable is GifDrawable) {\n            (drawable as GifDrawable).let {\n                if (it.isRunning) {\n                    it.stop()\n                    Log.d(TAG, \"pause() called\")\n                } else {\n                    Log.d(TAG, \"not running\")\n                }\n            }\n        } else {\n            Log.d(TAG, \"can not to pause: drawable=$drawable\")\n        }\n    }\n\n    fun resume() {\n        if (drawable is GifDrawable) {\n            (drawable as GifDrawable).let {\n                if (!it.isRunning) {\n                    it.start()\n                    Log.d(TAG, \"resume() called\")\n                } else {\n                    Log.d(TAG, \"already run\")\n                }\n            }\n        } else {\n            Log.d(TAG, \"can not to resume: drawable=$drawable\")\n        }\n    }\n\n    private inner class GifTarget(\n        private val view: AppCompatImageView,\n        private val defaultPlay: Boolean = false\n    ) : CustomTarget&lt;Drawable&gt;() {\n        private val TAG = \"GifTarget\"\n        override fun onResourceReady(\n            resource: Drawable,\n            transition: Transition&lt;in Drawable&gt;?\n        ) {\n            Log.d(\n                TAG,\n                \"onResourceReady() called with: resource = $resource\"\n            )\n            view.setImageDrawable(resource)\n            if (resource is GifDrawable) {\n                if (defaultPlay) {\n                    resource.start()\n                    Log.d(TAG, \"onResourceReady start gif\")\n                } else {\n                    resource.stop()\n                    Log.d(TAG, \"onResourceReady stop gif\")\n                }\n            }\n        }\n\n        override fun onLoadCleared(placeholder: Drawable?) {\n            Log.d(TAG, \"onLoadCleared() called with: placeholder = $placeholder\")\n        }\n    }\n}\n</code></pre> GifTarget\uff1a\u5b9e\u73b0\u9ed8\u8ba4\u4e0d\u81ea\u52a8\u64ad\u653e</p> <p>xml\u4f7f\u7528 <pre><code>&lt;com.common.ui.GifImageView\n    android:layout_width=\"@dimen/dp24\"\n    android:layout_height=\"@dimen/dp24\"\n    app:gif_src=\"@drawable/xxx\" /&gt;\n</code></pre> gif_src\uff1agif\u8d44\u6e90\u56fe</p> <p>\u4ee3\u7801\u4e2d\u52a0\u8f7dgif\u56fe\uff1aloadGif</p>"}, {"location": "android/github/glide/", "title": "Glide", "text": ""}, {"location": "android/github/glide/#glide", "title": "Glide", "text": "<p>\u5b98\u65b9\u7f51\u5740\uff1ahttps://github.com/bumptech/glide</p> <p>Glide.with().load().into()</p> <p>with\uff1a\u7a7a\u767dFragment\u7ba1\u7406\u751f\u547d\u5468\u671f(ui\u7ebf\u7a0b\u624d\u4f1a\u521b\u5efa\u3001\u5982\u679c\u662fapplication\u4e5f\u4e0d\u521b\u5efa)\uff0c\u540c\u6b65\u5230RequestManager\u65b9\u4fbf\u7ba1\u7406\u7c7b\u4f3cImageViewTarget\u7b49\u7c7b</p> <p>load\uff1a\u6784\u5efa\u51faRequestBuilder\u5bf9\u8c61</p> <p>into\uff1a\u8fd0\u884c\u961f\u5217 \u7b49\u5f85\u961f\u5217 \u6d3b\u52a8\u7f13\u5b58 \u5185\u5b58\u7f13\u5b58 \u7f51\u7edc\u6a21\u578b</p> <p>\u6e90\u7801\u5206\u6790\uff1a</p> <p>https://blog.csdn.net/u013347784/article/details/125728996</p> <p>\u9ed8\u8ba4\u662f\u7f51\u7edc\u8bf7\u6c42\u662f\u4f7f\u7528HttpURLConnection</p> <p>\u6d3b\u52a8\u7f13\u5b58\u3001\u5185\u5b58\u7f13\u5b58\u3001\u78c1\u76d8\u7f13\u5b58</p>"}, {"location": "android/github/glide/#_1", "title": "\u5706\u5f62", "text": "<pre><code>apply(RequestOptions.circleCropTransform())\n</code></pre>"}, {"location": "android/github/glide/#_2", "title": "\u81ea\u5b9a\u4e49\u52a0\u8f7d", "text": "<p>\u89c1gif\u52a0\u8f7d\u6848\u4f8b</p>"}, {"location": "android/github/gson/", "title": "Gson", "text": ""}, {"location": "android/github/gson/#beanjson", "title": "bean\u8f6cjson", "text": "<pre><code>private val gson = Gson()\nfun beantojson(bean: Bean): String {\n    return gson.toJson(\n        ActionBean(\"xxx\", bean),\n        object : TypeToken&lt;ActionBean&lt;Bean&gt;&gt;() {}.type\n    )\n}\n</code></pre>"}, {"location": "android/github/gson/#_1", "title": "\u81ea\u5b9a\u4e49\u89e3\u6790", "text": "<p>1.\u5b9a\u4e49\u6570\u636e\u7c7b <pre><code>data class ActionBean&lt;T&gt;(\n    val action: String,\n    val data: T,\n)\n</code></pre> 2.\u5b9a\u4e49\u89e3\u6790\u5668 <pre><code>class ActionBeanDeserializer : JsonDeserializer&lt;ActionBean&lt;*&gt;&gt; {\n    override fun deserialize(\n        json: JsonElement?,\n        typeOfT: Type?,\n        context: JsonDeserializationContext\n    ): ActionBean&lt;*&gt; {\n    val jsonObject = json!!.asJsonObject\n    val action = jsonObject[\"action\"].asString\n    val dataElement = jsonObject[\"data\"]\n\n    if (\"xxx\" == action) {\n        return ActionBean&lt;Boolean&gt;(\n            action,\n            context.deserialize(dataElement, Boolean::class.java)\n        )\n    } else {\n        return ActionBean(\"\", 0, 0)\n    }\n</code></pre> 3.\u4f7f\u7528 <pre><code>private val recvGson = GsonBuilder()\n    .registerTypeAdapter(ActionBean::class.java, ActionBeanDeserializer())\n    .create()\nval actionBean = recvGson.fromJson(json, ActionBean::class.java)\n    when (actionBean.action) {\n        //todo\n    }\n</code></pre></p>"}, {"location": "android/github/lottie/", "title": "lottie", "text": ""}, {"location": "android/github/lottie/#lottie", "title": "lottie", "text": "<p>https://github.com/airbnb/lottie-android</p>"}, {"location": "android/github/lottie/#_1", "title": "\u4f7f\u7528\u65b9\u5f0f", "text": "<pre><code>implementation 'com.airbnb.android:lottie:6.6.0'\n</code></pre> <p>xml\u6dfb\u52a0\u5e03\u5c40 <pre><code>&lt;com.airbnb.lottie.LottieAnimationView\n    app:lottie_autoPlay=\"true\"\n    android:scaleX=\"1.3\"\n    android:scaleY=\"1.3\"\n    app:lottie_loop=\"true\"\n    app:lottie_fileName=\"ktv_count.json\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" /&gt;\n</code></pre> \u7f29\u653e\u4f7f\u7528scaleX\u548cscaleY</p> <p>lottie_autoPlay\uff1a\u81ea\u52a8\u64ad\u653e</p> <p>lottie_loop\uff1a\u662f\u5426\u5faa\u73af\u64ad\u653e</p> <p>lottie_fileName\uff1aassets\u6587\u4ef6\u5939\u4e2d\u7684json\u6587\u4ef6</p> <p>\u64ad\u653e\u52a8\u753b(\u524d\u63d0\u662fxml\u4e2d\u5df2\u7ecf\u5f15\u7528\u4e86json) <pre><code>binding.xxx.playAnimation()\n</code></pre> \u53d6\u6d88\u52a8\u753b <pre><code>if (binding.xxx.isAnimating)\n    binding.xxx.cancelAnimation()\n</code></pre> \u6682\u505c\u52a8\u753b <pre><code>binding.xxx.pauseAnimation()\n</code></pre> \u6062\u590d\u52a8\u753b <pre><code>binding.xxx.resumeAnimation()\n</code></pre> \u4ee3\u7801\u4e2d\u52a0\u8f7d\u52a8\u753b <pre><code>LottieCompositionFactory.fromAsset(context, lottieJson, null).addListener {\n    binding.xxx.setComposition(it)\n}\n</code></pre> \u76d1\u542c\u52a8\u753b <pre><code>binding.xxx.addAnimatorListener(object : AnimatorListenerAdapter(){\n    override fun onAnimationEnd(animation: Animator?) {\n    }\n})\n</code></pre> - \u5f85\u9a8c\u8bc1\u6700\u65b0\u7248\u672c\uff1a \u81ea\u5b9a\u4e49view\u4e2d\u4e0d\u8981\u4f7f\u7528findViewById\u83b7\u53d6LottieAnimationView\uff0c\u91c7\u7528getChildAt(index),\u539f\u56e0\u662factivity\u91cd\u542f\u65f6\uff0cdispatchrestoreInstanceState\u673a\u5236\u548cLottieAnimationView\u6062\u590d\u673a\u5236\u51b2\u7a81\u5bfc\u81f4</p>"}, {"location": "android/github/quick_adapter/", "title": "Quick adapter", "text": "<p>BaseRecyclerViewAdapterHelper\uff1ahttps://github.com/CymChad/BaseRecyclerViewAdapterHelper <pre><code>implementation\uff08\"io.github.cymchad:BaseRecyclerViewAdapterHelper4:4.1.2\")\n</code></pre></p>"}, {"location": "android/github/quick_adapter/#_1", "title": "\u57fa\u672c\u4f7f\u7528(\u5b98\u65b9\u6848\u4f8b)", "text": "<p><pre><code>class TestAdapter : BaseQuickAdapter&lt;Status, TestAdapter.VH&gt;() {\n\n    // \u81ea\u5b9a\u4e49ViewHolder\u7c7b\n    class VH(\n        parent: ViewGroup,\n        val binding: LayoutAnimationBinding = LayoutAnimationBinding.inflate(\n            LayoutInflater.from(parent.context), parent, false\n        ),\n    ) : RecyclerView.ViewHolder(binding.root)\n\n    override fun onCreateViewHolder(context: Context, parent: ViewGroup, viewType: Int): VH {\n        // \u8fd4\u56de\u4e00\u4e2a ViewHolder\n        return VH(parent)\n    }\n\n    override fun onBindViewHolder(holder: VH, position: Int, item: Status?) {\n        // \u8bbe\u7f6eitem\u6570\u636e\n    }\n}\n</code></pre> \u6ce8\uff1a\u6dfb\u52a0\u6570\u636e\u96c6\u5408\u5185\u90e8\u662f\u76f4\u63a5\u8d4b\u503c\u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u662f\u5f15\u7528\uff0c\u5982\u679c\u9700\u8981\u4fdd\u8bc1\u521d\u59cb\u6570\u636e\uff0c\u53efnew\u4e00\u4e2a\u96c6\u5408 <pre><code>rvAdapter.submitList(mutableListOf&lt;Media&gt;().also { it.addAll(imgUrls) })\n</code></pre></p>"}, {"location": "android/github/quick_adapter/#_2", "title": "\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a", "text": "<p><pre><code>class CustomLoadMoreAdapter(callback: OnTrailingListener) : TrailingLoadStateAdapter&lt;CustomLoadMoreAdapter.CustomVH&gt;() {\n\n    init {\n        setOnLoadMoreListener(callback)\n    }\n\n    override fun onCreateViewHolder(parent: ViewGroup, loadState: LoadState): CustomVH {\n        // \u521b\u5efa\u4f60\u81ea\u5df1\u7684 UI \u5e03\u5c40\n        val viewBinding =\n            XxxBinding.inflate(LayoutInflater.from(parent.context), parent, false)\n        return CustomVH(viewBinding).apply {\n            viewBinding.loadMoreLoadFailView.setOnClickListener {\n                // \u5931\u8d25\u91cd\u8bd5\u70b9\u51fb\u4e8b\u4ef6\n                invokeFailRetry()\n            }\n            viewBinding.loadMoreLoadCompleteView.setOnClickListener {\n                // \u52a0\u8f7d\u66f4\u591a\uff0c\u624b\u52a8\u70b9\u51fb\u4e8b\u4ef6\n                invokeLoadMore()\n            }\n        }\n    }\n\n    override fun onBindViewHolder(holder: CustomVH, loadState: LoadState) {\n        // \u6839\u636e\u52a0\u8f7d\u72b6\u6001\uff0c\u6765\u81ea\u5b9a\u4e49\u4f60\u7684 UI \u754c\u9762\n        when (loadState) {\n            is LoadState.NotLoading -&gt; {\n                if (loadState.endOfPaginationReached) {\n                    holder.viewBinding.loadMoreLoadCompleteView.visibility = View.GONE\n                    holder.viewBinding.loadMoreLoadingView.visibility = View.GONE\n                    holder.viewBinding.loadMoreLoadFailView.visibility = View.GONE\n                    holder.viewBinding.loadMoreLoadEndView.visibility = View.VISIBLE\n                } else {\n                    holder.viewBinding.loadMoreLoadCompleteView.visibility = View.VISIBLE\n                    holder.viewBinding.loadMoreLoadingView.visibility = View.GONE\n                    holder.viewBinding.loadMoreLoadFailView.visibility = View.GONE\n                    holder.viewBinding.loadMoreLoadEndView.visibility = View.GONE\n                }\n            }\n\n            is LoadState.Loading -&gt; {\n                holder.viewBinding.loadMoreLoadCompleteView.visibility = View.GONE\n                holder.viewBinding.loadMoreLoadingView.visibility = View.VISIBLE\n                holder.viewBinding.loadMoreLoadFailView.visibility = View.GONE\n                holder.viewBinding.loadMoreLoadEndView.visibility = View.GONE\n            }\n\n            is LoadState.Error -&gt; {\n                holder.viewBinding.loadMoreLoadCompleteView.visibility = View.GONE\n                holder.viewBinding.loadMoreLoadingView.visibility = View.GONE\n                holder.viewBinding.loadMoreLoadFailView.visibility = View.VISIBLE\n                holder.viewBinding.loadMoreLoadEndView.visibility = View.GONE\n            }\n\n            is LoadState.None -&gt; {\n                holder.viewBinding.loadMoreLoadCompleteView.visibility = View.GONE\n                holder.viewBinding.loadMoreLoadingView.visibility = View.GONE\n                holder.viewBinding.loadMoreLoadFailView.visibility = View.GONE\n                holder.viewBinding.loadMoreLoadEndView.visibility = View.GONE\n            }\n        }\n    }\n\n\n    class CustomVH(val viewBinding: XxxBinding) : RecyclerView.ViewHolder(viewBinding.root)\n}\n</code></pre> activity/fragment\u4e2d\u8c03\u7528 <pre><code>private val loadMoreAdapter by lazy {\n    CustomLoadMoreAdapter(object : TrailingLoadStateAdapter.OnTrailingListener {\n        override fun onLoad() {\n            // \u6267\u884c\u52a0\u8f7d\u66f4\u591a\u7684\u64cd\u4f5c\uff0c\u901a\u5e38\u90fd\u662f\u7f51\u7edc\u8bf7\u6c42\n            loadMoreData()\n        }\n\n        override fun onFailRetry() {\n            // \u52a0\u8f7d\u5931\u8d25\u540e\uff0c\u70b9\u51fb\u91cd\u8bd5\u7684\u64cd\u4f5c\uff0c\u901a\u5e38\u90fd\u662f\u7f51\u7edc\u8bf7\u6c42\n            loadMoreData()\n        }\n\n        override fun isAllowLoading(): Boolean {\n            // \u662f\u5426\u5141\u8bb8\u89e6\u53d1\u201c\u52a0\u8f7d\u66f4\u591a\u201d\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e0b\u62c9\u5237\u65b0\u7684\u65f6\u5019\u4e0d\u5141\u8bb8\u8fdb\u884c\u52a0\u8f7d\u66f4\u591a\n            return !binding.refreshLayout.isRefreshing\n        }\n    })\n}\nprivate val helper by lazy {\n    QuickAdapterHelper.Builder(xxAdapter)//\u5b9e\u9645\u6570\u636eadapter\n        .setTrailingLoadStateAdapter(loadMoreAdapter).build()\n}\n\nbinding.rv.adapter = helper.adapter\n</code></pre> \u914d\u7f6e\u52a0\u8f7d\u72b6\u6001 <pre><code>//\u521d\u59cb\u5316\nhelper.trailingLoadState = LoadState.None\n//\u6ca1\u6709\u6570\u636e\u52a0\u8f7d\nhelper.trailingLoadState = LoadState.NotLoading(true)\n\n//\u52a0\u8f7d\u4e2d\nLoadState.Loading\n//\u52a0\u8f7d\u51fa\u9519\nLoadState.Error\n</code></pre></p>"}, {"location": "android/github/rotation/", "title": "Rotation", "text": ""}, {"location": "android/github/rotation/#_1", "title": "\u65cb\u8f6c\u52a8\u753b", "text": "<p>\u6bcf\u96944s\u65cb\u8f6c360\uff0c\u65e0\u9650\u5faa\u73af <pre><code>class AlbumImageView(context: Context, attrs: AttributeSet?) : AppCompatImageView(context, attrs) {\n    private val TAG = \"AlbumImageView\"\n    private var rotationAnimator: ObjectAnimator =\n        ObjectAnimator.ofFloat(this, \"rotation\", 0f, 360f)\n\n    init {\n        rotationAnimator.setDuration(4000)\n        rotationAnimator.interpolator = LinearInterpolator()\n        rotationAnimator.repeatCount = ObjectAnimator.INFINITE\n        rotationAnimator.repeatMode = ObjectAnimator.RESTART\n    }\n\n    fun startAnim() {\n        if (!rotationAnimator.isStarted) {\n            rotationAnimator.start()\n            Log.d(TAG, \"startAnim() called\")\n        }\n    }\n\n    fun stopAnim() {\n        if (rotationAnimator.isRunning) {\n            rotationAnimator.cancel()\n            Log.d(TAG, \"stopAnim() called\")\n        }\n    }\n    fun pauseAnim() {\n        if (rotationAnimator.isRunning) {\n            rotationAnimator.pause()\n            Log.d(TAG, \"pauseAnim() called\")\n        }\n    }\n    fun resumeAnim() {\n        if (rotationAnimator.isPaused) {\n            rotationAnimator.resume()\n            Log.d(TAG, \"resumeAnim() called\")\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/im/aidl/", "title": "AIDL", "text": ""}, {"location": "android/im/aidl/#_1", "title": "\u652f\u6301\u6570\u636e\u7c7b\u578b", "text": "<p>java\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1aint\u3001long\u3001boolean\u3001float\u3001double\u3001char\u3001byte</p> <p>\u5bf9\u8c61\u7c7b\u578b\uff1aString\u3001CharSequence\u3001ArrayList\u3001HashMap</p> <p>\u81ea\u5b9a\u4e49\u7c7b\u578b\uff1aParcelable</p>"}, {"location": "android/im/aidl/#_2", "title": "\u65b9\u5411\u6807\u8bb0", "text": "<p>kotlin\u6570\u636e\u7c7b <pre><code>data class Person(var name: String, var age: Int)\n</code></pre> aidl\u6570\u636e\u7c7b <pre><code>package xxx;\nparcelable Person;\n</code></pre> \u6570\u636e\u63a5\u53e3 <pre><code>package xxx;\nimport xxx.Person;\ninterface IRemote {\n    void sendPerson(in Person person);\n    void sendPerson(out Person person);\n    void sendPerson(inout Person person);\n    oneway void sendPerson(in Person person);\n}\n</code></pre> in\uff1a\u4e0d\u5199\u9ed8\u8ba4\u6b64\u503c\uff0c\u7531cilent\u7aef\u6d41\u5411server\u7aef\uff0c\u5982client\u7aef\u53d1\u9001Person(\"A\", 20)\uff0cserver\u4fee\u6539\u540eclient\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd</p> <p>out\uff1a\u7531server\u7aef\u6d41\u5411client\u7aef\uff0c\u5982client\u7aef\u53d1\u9001Person(\"A\", 20)\uff0cserver\u5f97\u5230\u7684\u662fPerson(null, 0)\uff0cserver\u4fee\u6539\u540eclient\u540c\u6b65\u4fee\u6539</p> <p>inout\uff1a\u5bf9\u8c61\u53ef\u4ee5\u53cc\u5411\u6d41\u52a8</p> <p>oneway: \u5f02\u6b65</p>"}, {"location": "android/im/aidl/#_3", "title": "\u8fdb\u7a0b\u95f4\u901a\u4fe1", "text": ""}, {"location": "android/im/aidl/#_4", "title": "\u4e0d\u540c\u5e94\u7528", "text": ""}, {"location": "android/im/aidl/#ipc", "title": "ipc\u6a21\u5757", "text": "<p>\u5728aidl\u76ee\u5f55\u4e0bpackage\u76ee\u5f55\u4e0b\u521b\u5efa\u4e24\u4e2aaidl\u6587\u4ef6 <pre><code>package xxx;\ninterface IRemoteCallback {\n    void onMessageReceived(String message);\n}\n\npackage xxx;\nimport xxx.IRemoteCallback;\ninterface IRemote {\n    void sendMsg(String msg);\n    void registerCallback(in IRemoteCallback callback);\n    void unregisterCallback(in IRemoteCallback callback);\n}\n</code></pre> \u521b\u5efa\u7ba1\u7406\u7c7b\uff0c\u91c7\u7528java\u4ee3\u7801\u662f\u4e3a\u4e86\u517c\u5bb9\u6027\uff0c\u7531\u4e8e\u6b64\u6a21\u5757\u662f\u63d0\u4f9b\u51fa\u53bb\u7684\uff0c\u82e5\u662fkotlin\uff0c\u76ee\u6807\u9879\u76eekotlin\u7248\u672c\u53ef\u80fd\u4e0e\u5f53\u524d\u6a21\u5757\u4e0d\u540c\u5bfc\u81f4\u7f16\u8bd1\u51fa\u9519 <pre><code>public class IpcManager {\n    public static final String TAG = \"IpcManager\";\n\n    private IpcManager() {\n    }\n\n    public static IpcManager getInstance() {\n        return Holder.singleton;\n    }\n\n    private static class Holder {\n        private static final IpcManager singleton = new IpcManager();\n    }\n\n    private IRemote binder = null;\n    private ILeLinkCallback callback = null;\n\n    private final ServiceConnection serviceConnection = new ServiceConnection() {\n        @Override\n        public void onServiceConnected(ComponentName name, IBinder service) {\n            binder = IRemote.Stub.asInterface(service);\n            Log.d(TAG, \"onServiceConnected binder=\" + binder);\n            if (callback != null) {\n                try {\n                    binder.registerCallback(callback);\n                    Log.d(TAG, \"onServiceConnected register callback\");\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    Log.e(TAG, \"onServiceConnected error: \" + e.getMessage());\n                }\n            }\n        }\n\n        @Override\n        public void onServiceDisconnected(ComponentName name) {\n            if (callback != null) {\n                try {\n                    binder.unregisterCallback(callback);\n                    Log.d(TAG, \"onServiceDisconnected unregister callback\");\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    Log.e(TAG, \"onServiceDisconnected error: \" + e.getMessage());\n                }\n            }\n            binder = null;\n        }\n    };\n\n    public void init(Context context) {\n        if (binder != null) {\n            Log.e(TAG, \"IRemote already init\");\n            return;\n        }\n        Intent intent = new Intent();\n        intent.setAction(\"xxx.xxx.xxx\");//Server\u7aef\u4fdd\u6301\u4e00\u81f4\n        intent.setClassName(\"packageName\",\n            \"serviceClassName\");//Server\u7aefService\u7684\u4fe1\u606f\n        context.getApplicationContext().bindService(intent, serviceConnection,\n            Context.BIND_AUTO_CREATE);\n    }\n\n    public void sendMsg(String msg) {\n        try {\n            if (binder != null) {\n                binder.sendMsg(msg);\n                Log.d(TAG, \"sendMsg msg:\" + msg);\n            } else {\n                Log.e(TAG, \"sendMsg() error: binder is null\");\n            }\n        } catch (Exception e) {\n            Log.d(TAG, \"sendMsg() error: \" + e.getMessage());\n        }\n    }\n\n    public void subscribe(IRemoteCallback callback) {\n        this.callback = callback;\n        if (binder != null) {\n            try {\n                binder.registerCallback(callback);\n                Log.d(TAG, \"subscribe() called\");\n            } catch (Exception e) {\n                Log.e(TAG, \"subscribe() error: \" + e.getMessage());\n            }\n        } else {\n            Log.e(TAG, \"call init()\");\n        }\n    }\n\n    public void unSubscribe() {\n        if (binder != null &amp;&amp; callback != null) {\n            try {\n                binder.unregisterCallback(callback);\n                callback = null;\n                Log.d(TAG, \"unSubscribe() called\");\n            } catch (Exception e) {\n                Log.e(TAG, \"unSubscribe() error: \" + e.getMessage());\n            }\n        } else {\n            Log.e(TAG, \"call init()\");\n        }\n    }\n\n    public void destroy(Context context) {\n        if (binder == null) {\n            Log.e(TAG, \"IRemote not init\");\n            return;\n        }\n        context.getApplicationContext().unbindService(serviceConnection);\n    }\n}\n</code></pre></p>"}, {"location": "android/im/aidl/#server", "title": "server\u7aef", "text": "<p>\u4f9d\u8d56\u4e0a\u9762ipc\u6a21\u5757 <pre><code>api(project(\":ipc\"))\n</code></pre> \u521b\u5efa\u7ba1\u7406\u7c7b <pre><code>object AidlManager {\n    private val TAG = \"AidlManager\"\n\n    private val callbackList by lazy { RemoteCallbackList&lt;IRemoteCallback&gt;() }\n\n    fun onMessageReceived(msg: String?) {\n        val callbackCount = callbackList.beginBroadcast()\n        try {\n            for (i in 0 until callbackCount) {\n                log(TAG, \"aidl onMessageReceived() called $msg\")\n                callbackList.getBroadcastItem(i).onMessageReceived(msg)\n            }\n        } catch (e: RemoteException) {\n                log(TAG, \"onReceive: ${e.message}\")\n        } finally {\n            callbackList.finishBroadcast()\n        }\n    }\n\n    val binder: IRemote.Stub = object : IRemote.Stub() {\n        override fun sendMsg(msg: String) {\n            //\u5904\u7406\u6536\u5230client\u7684\u6d88\u606f\n        }\n\n        override fun registerCallback(callback: IRemoteCallback) {\n            try {\n                callbackList.register(callback)\n            } catch (e: Exception) {\n                e.printStackTrace()\n            }\n        }\n\n        override fun unregisterCallback(callback: IRemoteCallback) {\n            try {\n                callbackList.unregister(callback)\n            } catch (e: Exception) {\n                e.printStackTrace()\n            }\n        }\n    }\n}\n</code></pre> \u521b\u5efa\u670d\u52a1 <pre><code>class AidlServerService : Service() {\n\n    override fun onBind(intent: Intent): IBinder = AidlManager.binder\n\n    override fun onStartCommand(intent: Intent, flags: Int, startId: Int): Int {\n        super.onStartCommand(intent, flags, startId)\n        return START_STICKY\n    }\n}\n</code></pre> \u6e05\u5355\u6587\u4ef6\u914d\u7f6e <pre><code>&lt;service android:name=\"xxx\"\n    android:enabled=\"true\"\n    android:exported=\"true\"&gt;\n    &lt;intent-filter&gt;\n        &lt;action android:name=\"service.aidlserver\" /&gt;\n    &lt;/intent-filter&gt;\n&lt;/service&gt;\n</code></pre> server\u7aef\u4e3b\u52a8\u53d1\u6d88\u606f\u7ed9client <pre><code>AidlManager.onMessageReceived(\"xxx\")\n</code></pre></p>"}, {"location": "android/im/aidl/#client", "title": "client\u7aef", "text": "<p>\u4f9d\u8d56\u4e0a\u9762ipc\u6a21\u5757 <pre><code>api(project(\":ipc\"))\n</code></pre> \u6216\u8005\u4f9d\u8d56aar</p> <p>\u914d\u7f6e\u6e05\u5355\u6587\u4ef6\uff0cmanifest\u6807\u7b7e\u4e0b\u6dfb\u52a0\u5e94\u7528\u611f\u77e5\u80fd\u529b <pre><code>&lt;queries&gt;\n    &lt;package android:name=\"server\u5305\u540d\" /&gt;\n&lt;/queries&gt;\n</code></pre> \u4f7f\u7528 <pre><code>private val remoteCallback = object: IRemoteCallback(){\n    override fun onMessageReceived(msg: String?) {\n        //\u5904\u7406\u6536\u5230server\u7aef\u7684\u6d88\u606f\n    }\n}\nIpcManager.getInstance().init(applicationContext)\nIpcManager.getInstance().subscribe(remoteCallback)\n\n//\u53d6\u6d88\u56de\u8c03\nIpcManager.getInstance().unSubscribe()\n</code></pre> \u6ce8\uff1a</p> <ol> <li>registerCallback\u7684\u610f\u4e49\u5728\u4e8eserver\u4e5f\u53ef\u4e3b\u52a8sendMsg\u7ed9client(\u4e5f\u53ef\u4f7f\u7528\u5f02\u6b65)\uff0c\u5426\u5219\u76f4\u63a5\u5229\u7528\u8fd4\u56de\u503c\u5373\u53ef</li> <li>\u83b7\u53d6server\u6216\u8005client\u6807\u8bb0\u53ef\u901a\u8fc7getCallingPid()\u786e\u8ba4</li> </ol>"}, {"location": "android/im/aidl/#_5", "title": "\u540c\u5e94\u7528\u4e0d\u540c\u8fdb\u7a0b", "text": "<p>\u548c\u4e0d\u540c\u5e94\u7528\u7c7b\u4f3c\uff0c\u4e0d\u9700\u8981\u590d\u5236aidl(aar)\u548c\u914d\u7f6equeries</p>"}, {"location": "android/im/aidl/#_6", "title": "\u5176\u4ed6", "text": "<p>android studio\u4e0d\u80fd\u521b\u5efaaidl\u65e0\u6cd5\u65b0\u5efaAIDL\u6587\u4ef6</p>"}, {"location": "android/im/base/", "title": "\u57fa\u7840", "text": ""}, {"location": "android/im/base/#_1", "title": "\u8de8\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f", "text": "<ol> <li>AIDL+Service</li> <li>\u5e7f\u64ad</li> </ol>"}, {"location": "android/im/base/#_2", "title": "\u8de8\u8bbe\u5907\u901a\u4fe1", "text": "<ol> <li>Socket</li> </ol>"}, {"location": "android/im/bluetooth/", "title": "\u84dd\u7259", "text": ""}, {"location": "android/im/bluetooth/#_1", "title": "\u7ecf\u5178\u84dd\u7259", "text": ""}, {"location": "android/im/bluetooth/#_2", "title": "\u6dfb\u52a0\u6743\u9650", "text": "<pre><code>&lt;uses-permission android:name=\"android.permission.BLUETOOTH\"/&gt;\n&lt;uses-permission android:name=\"android.permission.BLUETOOTH_SCAN\"/&gt;\n&lt;uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\"/&gt;\n&lt;uses-permission android:name=\"android.permission.BLUETOOTH_CONNECT\"/&gt;\n&lt;uses-permission android:name=\"android.permission.BLUETOOTH_PRIVILEGED\"\n    tools:ignore=\"ProtectedPermissions\" /&gt;\n&lt;uses-permission android:name=\"android.permission.BLUETOOTH_ADVERTISE\"/&gt;\n&lt;uses-permission android:name=\"com.google.android.things.permission.MANAGE_BLUETOOTH\" /&gt;\n&lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/&gt;\n</code></pre>"}, {"location": "android/im/bluetooth/#_3", "title": "\u52a8\u6001\u7533\u8bf7\u6743\u9650", "text": ""}, {"location": "android/im/bluetooth/#xxpermissions", "title": "\u4f7f\u7528\u4e09\u65b9\u6743\u9650\u5e93XXPermissions", "text": "<pre><code>XXPermissions.with(this)\n    .permission(Permission.ACCESS_FINE_LOCATION)\n    .permission(Permission.Group.BLUETOOTH)\n    .request(object : OnPermissionCallback {\n        override fun onGranted(permissions: MutableList&lt;String&gt;, allGranted: Boolean) {\n            if (!allGranted) {\n                toast(\"\u83b7\u53d6\u90e8\u5206\u6743\u9650\u6210\u529f\uff0c\u4f46\u90e8\u5206\u6743\u9650\u672a\u6b63\u5e38\u6388\u4e88\")\n                return\n            }\n            if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.Q) {\n                val lm: LocationManager = getSystemService(Context.LOCATION_SERVICE) as LocationManager\n                if (!lm.isProviderEnabled(LocationManager.GPS_PROVIDER)){\n                    Toast.makeText(this@MainActivity, \"\u8bf7\u60a8\u5148\u5f00\u542fgps,\u5426\u5219\u84dd\u7259\u4e0d\u53ef\u7528\", Toast.LENGTH_SHORT).show()\n                        // \u521b\u5efa\u6307\u5411\u7cfb\u7edf\u5b9a\u4f4d\u670d\u52a1\u8bbe\u7f6e\u7684Intent\n                        val intent = Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS)\n                        // \u542f\u52a8\u8be5Intent\uff0c\u7528\u6237\u5c06\u88ab\u5e26\u5230\u7cfb\u7edf\u8bbe\u7f6e\u4e2d\u7684\u5b9a\u4f4d\u670d\u52a1\u9875\u9762\n                        startActivity(intent)\n                } else {\n                    if (!bluetoothAdapter.isEnabled) {\n                        startActivity(Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE))\n                    } else {\n                        if (Build.MODEL != SERVER_MODEL) {\n                            registerReceiver(receiver, BluetoothReceiver.markFilter())\n                            scanBluetooth()\n                        }\n                    }\n                }\n            }\n        }\n\n        override fun onDenied(permissions: MutableList&lt;String&gt;, doNotAskAgain: Boolean) {\n            if (doNotAskAgain) {\n                toast(\"\u88ab\u6c38\u4e45\u62d2\u7edd\u6388\u6743\uff0c\u8bf7\u624b\u52a8\u6388\u4e88\u5b9a\u4f4d\u9644\u8fd1\u6743\u9650\")\n                // \u5982\u679c\u662f\u88ab\u6c38\u4e45\u62d2\u7edd\u5c31\u8df3\u8f6c\u5230\u5e94\u7528\u6743\u9650\u7cfb\u7edf\u8bbe\u7f6e\u9875\u9762\n                XXPermissions.startPermissionActivity(this@MainActivity, permissions)\n            } else {\n                toast(\"\u83b7\u53d6\u6743\u9650\u5931\u8d25\")\n            }\n        }\n    })\n</code></pre>"}, {"location": "android/im/bluetooth/#_4", "title": "\u6ce8\u518c\u84dd\u7259\u5e7f\u64ad\u76d1\u542c", "text": "<pre><code>registerReceiver(receiver, BluetoothReceiver.markFilter())\n\n@SuppressLint(\"MissingPermission\")\nclass BluetoothReceiver(private val block: (device: BluetoothDevice?) -&gt; Unit) : BroadcastReceiver() {\n    private val TAG = \"BlueToothReceiver\"\n    override fun onReceive(context: Context, intent: Intent) {\n        when (intent.action) {\n            BluetoothDevice.ACTION_ACL_CONNECTED -&gt; Log.d(TAG, \"ACTION_ACL_CONNECTED\")\n            BluetoothDevice.ACTION_ACL_DISCONNECTED -&gt; Log.d(\n                TAG,\n                \"ACTION_ACL_DISCONNECTED\"\n            ) // \u8fde\u63a5\u65ad\u5f00\uff0c\u505c\u6b62\u901a\u4fe1\n            BluetoothDevice.ACTION_FOUND -&gt; {\n                // \u627e\u5230\u8bbe\u5907\n                val device =\n                    intent.getParcelableExtra&lt;BluetoothDevice&gt;(BluetoothDevice.EXTRA_DEVICE)\n                block(device)\n            }\n\n            BluetoothDevice.ACTION_BOND_STATE_CHANGED -&gt; {\n                // \u8fdc\u7a0b\u8bbe\u5907\u7684\u7ed1\u5b9a\u72b6\u6001\u53d1\u751f\u53d8\u5316\n                Log.d(TAG, \"ACTION_BOND_STATE_CHANGED\")\n                when ((intent.getParcelableExtra&lt;Parcelable&gt;(BluetoothDevice.EXTRA_DEVICE) as BluetoothDevice?)!!.bondState) {\n                    BluetoothDevice.BOND_NONE -&gt; {}\n                    BluetoothDevice.BOND_BONDING -&gt; {}\n                    BluetoothDevice.BOND_BONDED -&gt; {}\n                }\n            }\n        }\n    }\n\n    companion object {\n        /**\n         * \u8bbe\u7f6eIntent\u8fc7\u6ee4\u5668\n         *\n         * @return\n         */\n        fun markFilter(): IntentFilter {\n            val filter = IntentFilter()\n            filter.addAction(BluetoothDevice.ACTION_FOUND)\n            filter.addAction(BluetoothDevice.ACTION_BOND_STATE_CHANGED)\n            filter.addAction(BluetoothDevice.ACTION_ACL_CONNECTED)\n            filter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECTED)\n            return filter\n        }\n    }\n}\n</code></pre>"}, {"location": "android/im/bluetooth/#_5", "title": "\u542f\u52a8/\u5173\u95ed\u84dd\u7259\u670d\u52a1\u7aef", "text": "<p>BtServer <pre><code>btServer = BtServer(btServerListener)\nbtServer!!.startServer()\nbtServer?.close()\n</code></pre></p>"}, {"location": "android/im/bluetooth/#_6", "title": "\u542f\u52a8/\u5173\u95ed\u84dd\u7259\u5ba2\u6237\u7aef", "text": "<p>BtClinet <pre><code>btClient = BtClient(blueDev, object : BluetoothListener{\n    override fun onStart() {\n        MainScope().launch {\n            holder.binding.blueItemStatusTv.text = \"\u6b63\u5728\u8fde\u63a5...\"\n        }\n    }\n    override fun onMsgRecv(socket: BluetoothSocket?, msg: String) {\n        MainScope().launch {\n            block(true, msg)\n        }\n    }\n    override fun onError(error: String) {\n        MainScope().launch {\n            block(false, error)\n            holder.binding.blueItemStatusTv.text = \"\u5df2\u914d\u5bf9\"\n        }\n    }\n    override fun onConnected(msg: String) {\n        MainScope().launch {\n            holder.binding.blueItemStatusTv.text = \"\u5df2\u8fde\u63a5\"\n        }\n    }\n}).also {\n    MainScope().launch {\n        it.startClient()\n    }\n}\nblueAdapter?.close()\n</code></pre> \u5176\u4e2d\u76d1\u542c\u56de\u8c03 <pre><code>val BLUE_UUID = UUID.fromString(\"00001101-0000-1000-8000-00805F9B34FB\")\ninterface BluetoothListener {\n    fun onStart()\n    fun onMsgRecv(socket: BluetoothSocket?, msg: String)\n    fun onError(error: String)\n    fun onConnected(msg: String)\n}\n</code></pre> \u5ba2\u6237\u7aef\u4e00\u822c\u662f\u5217\u8868\u5f62\u5f0f\u5c55\u73b0</p> <p>\u6bcf\u4e2a\u84dd\u7259\u8bbe\u5907\u7c7bBluetoothDevice</p> <p>\u5730\u5740: blueDev.address</p> <p>\u540d\u79f0: blueDev.name</p> <p>\u5df2\u914d\u5bf9\uff1a blueDev.bondState == BluetoothDevice.BOND_BONDED</p> <p>\u83b7\u53d6\u5217\u8868\uff1a\u6ce8\u518c\u5e7f\u64ad\u540e\u56de\u8c03\u6dfb\u52a0\u8bbe\u5907 <pre><code>private val receiver = BluetoothReceiver {\n    it?.let { blueDev -&gt;\n        if (blueDev !in blueBeans &amp;&amp; blueDev.name != null) {\n            blueAdapter?.add(blueDev)\n            blueAdapter?.notifyItemInserted(blueBeans.size)\n        }\n    }\n}\n</code></pre> \u542f\u52a8\u84dd\u7259\u626b\u63cf\u540e\uff0c\u5e7f\u64ad\u624d\u4f1a\u56de\u8c03 <pre><code>fun scanBluetooth() {\n    blueBeans.clear()\n    blueAdapter?.notifyDataSetChanged()\n    val bondedDevices = bluetoothAdapter.bondedDevices // \u83b7\u53d6\u4ee5\u53ca\u914d\u5bf9\u7684\u8bbe\u5907\n    bondedDevices?.forEach { device -&gt;\n        blueBeans.add(device)\n        blueAdapter?.notifyItemInserted(blueBeans.size)\n    }\n    if (bluetoothAdapter.isDiscovering) {\n        bluetoothAdapter.cancelDiscovery()// \u53d6\u6d88\u626b\u63cf\n    }\n    bluetoothAdapter.startDiscovery()// \u5f00\u59cb\u626b\u63cf\n}\n</code></pre></p>"}, {"location": "android/im/bluetooth/#_7", "title": "\u5176\u4ed6", "text": "<p>\u83b7\u53d6ip\u5730\u5740 <pre><code>fun getIPAddress(): String? {\n    try {\n        val interfaces = NetworkInterface.getNetworkInterfaces()\n        while (interfaces.hasMoreElements()) {\n            val networkInterface = interfaces.nextElement()\n            if (networkInterface.name == sKeyInterfaceName) {\n                val addresses = networkInterface.inetAddresses\n                while (addresses.hasMoreElements()) {\n                    val inetAddress = addresses.nextElement()\n                    if (!inetAddress.isLoopbackAddress &amp;&amp; !inetAddress.isLinkLocalAddress\n                        &amp;&amp; inetAddress.isSiteLocalAddress\n                    ) {\n                        return inetAddress.hostAddress\n                    }\n                }\n            }\n        }\n    } catch (e: Exception) {\n        e.printStackTrace()\n    }\n    return null\n}\n</code></pre> \u5224\u65ad\u662f\u5426\u662fIP\u5730\u5740 <pre><code>fun isIPv4Address(ipString: String): Boolean {\n    // IPv4 \u5730\u5740\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5339\u914d\u5f62\u5982 \"0.0.0.0\" \u81f3 \"255.255.255.255\" \u7684\u683c\u5f0f\n    val ipv4Regex = \"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\"\n    val pattern = Pattern.compile(ipv4Regex)\n    return pattern.matcher(ipString).matches()\n}\n</code></pre></p>"}, {"location": "android/im/broadcast_receiver/", "title": "\u5e7f\u64ad", "text": ""}, {"location": "android/im/broadcast_receiver/#_1", "title": "\u5f00\u673a\u81ea\u542f\u5e7f\u64ad", "text": ""}, {"location": "android/im/broadcast_receiver/#_2", "title": "\u58f0\u660e\u6743\u9650\u548c\u6ce8\u518c", "text": "<pre><code>&lt;uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" /&gt;\n\n&lt;receiver\n    android:name=\".bridge.BridgeBroadcastReceiver\"\n    android:exported=\"true\"&gt;\n    &lt;intent-filter&gt;\n        &lt;action android:name=\"android.intent.action.BOOT_COMPLETED\" /&gt;\n    &lt;/intent-filter&gt;\n&lt;/receiver&gt;\n</code></pre>"}, {"location": "android/im/broadcast_receiver/#_3", "title": "\u56de\u8c03\u76d1\u542c", "text": "<p>\u5f00\u542f\u81ea\u542f\u540e\u53ef\u4ee5\u542f\u52a8\u670d\u52a1 <pre><code>class BridgeBroadcastReceiver : BroadcastReceiver() {\n    override fun onReceive(context: Context?, intent: Intent?) {\n        intent?.let {\n            when (it.action) {\n                Intent.ACTION_BOOT_COMPLETED -&gt; {\n                    ServiceManager.bindService()\n                }\n            }\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/im/flow_bus/", "title": "FlowBus", "text": "<p>\u9002\u7528\u4e8e\u5e94\u7528\u5185\u901a\u4fe1 <pre><code>object FlowBus {\n    private const val TAG = \"FlowBus\"\n    private val busMap = mutableMapOf&lt;String, EventBus&lt;*&gt;&gt;()\n    private val busStickMap = mutableMapOf&lt;String, StickEventBus&lt;*&gt;&gt;()\n\n    @Synchronized\n    fun &lt;T&gt; with(key: String): EventBus&lt;T&gt; {\n        var eventBus = busMap[key]\n        if (eventBus == null) {\n            eventBus = EventBus&lt;T&gt;(key)\n            busMap[key] = eventBus\n        }\n        return eventBus as EventBus&lt;T&gt;\n    }\n\n    @Synchronized\n    fun &lt;T&gt; withStick(key: String): StickEventBus&lt;T&gt; {\n        var eventBus = busStickMap[key]\n        if (eventBus == null) {\n            eventBus = StickEventBus&lt;T&gt;(key)\n            busStickMap[key] = eventBus\n        }\n        return eventBus as StickEventBus&lt;T&gt;\n    }\n\n    private fun removeEventBus(key: String, isSticky: Boolean) {\n        if (isSticky) {\n            busStickMap.remove(key)\n        } else {\n            busMap.remove(key)\n        }\n    }\n\n    //\u771f\u6b63\u5b9e\u73b0\u7c7b\n    open class EventBus&lt;T&gt;(private val key: String) : DefaultLifecycleObserver {\n\n        //\u79c1\u6709\u5bf9\u8c61\u7528\u4e8e\u53d1\u9001\u6d88\u606f\n        private val _events: MutableSharedFlow&lt;T&gt; by lazy {\n            obtainEvent()\n        }\n\n        //\u66b4\u9732\u7684\u516c\u6709\u5bf9\u8c61\u7528\u4e8e\u63a5\u6536\u6d88\u606f\n        val events = _events.asSharedFlow()\n\n        open fun obtainEvent(): MutableSharedFlow&lt;T&gt; =\n            MutableSharedFlow(0, 1, BufferOverflow.DROP_OLDEST)\n\n        //\u4e3b\u7ebf\u7a0b\u63a5\u6536\u6570\u636e\n        fun register(lifecycleOwner: LifecycleOwner, action: (t: T) -&gt; Unit) {\n            lifecycleOwner.lifecycle.addObserver(this)\n            lifecycleOwner.lifecycleScope.launch {\n                events.collect {\n                    try {\n                        action(it)\n                    } catch (e: Exception) {\n                        e.printStackTrace()\n                        Log.e(TAG, \"FlowBus - Error:$e\")\n                    }\n                }\n            }\n        }\n\n        //\u534f\u7a0b\u4e2d\u53d1\u9001\u6570\u636e\n        suspend fun post(event: T) {\n            _events.emit(event)\n        }\n\n        //\u4e3b\u7ebf\u7a0b\u53d1\u9001\u6570\u636e\n        fun post(scope: CoroutineScope, event: T) {\n            scope.launch {\n                _events.emit(event)\n            }\n        }\n\n        override fun onDestroy(owner: LifecycleOwner) {\n            Log.w(TAG, \"FlowBus - \u81ea\u52a8onDestroy\")\n            val subscriptCount = _events.subscriptionCount.value\n            if (subscriptCount &lt;= 0)\n                removeEventBus(key, this is StickEventBus)\n        }\n    }\n\n    class StickEventBus&lt;T&gt;(key: String) : EventBus&lt;T&gt;(key) {\n        override fun obtainEvent(): MutableSharedFlow&lt;T&gt; =\n            MutableSharedFlow(1, 1, BufferOverflow.DROP_OLDEST)\n    }\n}\n</code></pre></p>"}, {"location": "android/im/flow_bus/#_1", "title": "\u57fa\u672c\u4f7f\u7528", "text": "<p>kotlin\u4e2d\u53d1\u9001\u6d88\u606f <pre><code>FlowBus.with&lt;String&gt;(\"xxx\").post(mainScope, \"aaa\")\n</code></pre> xxx\u4f5c\u4e3a\u552f\u4e00\u6807\u5fd7</p> <p>String\u7c7b\u578b\u5bf9\u5e94aaa</p> <p>mainScope\u4e3a\u534f\u7a0b\u73af\u5883</p> <p>\u63a5\u6536\u6d88\u606f(\u4e00\u822c\u5728Activity\u6216\u8005Fragment\u4e2d\u4f7f\u7528)</p> <p><pre><code>FlowBus.with&lt;String&gt;(\"xxx\").register(this) { content-&gt;\n    //\u5904\u7406\u6d88\u606f\n}\n</code></pre> this\u4e3aLifecycleOwner java\u4e2d <pre><code>FlowBus.INSTANCE.with(\"xxx\").register(this, o -&gt; {\n    int x = (Integer) o;\n    return null;\n});\n</code></pre></p> <p>View\u4e2d\u63a5\u6536\u4f7f\u7528</p>"}, {"location": "android/im/localsocket/", "title": "LocalSocket", "text": "<p>LocalSocket\u662f\u5b89\u5353\u7279\u6709\uff0c\u5254\u9664\u91ccSocket\u7f51\u7edc\u90e8\u5206</p> <p>app\u4e2d\u4e00\u822c\u65e0\u6cd5\u4f7f\u7528\uff0cjava\u5c42\u4f7f\u7528</p>"}, {"location": "android/im/localsocket/#_1", "title": "\u5c01\u88c5\u597d\u7684\u5de5\u5177", "text": "<p>LocalSocketClientHandler</p> <p>Client</p> <p>LocalSocketServerHandler</p> <p>MsgListener</p>"}, {"location": "android/im/localsocket/#client", "title": "client\u7aef", "text": "<p>\u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61 <pre><code>private val clientHandler by lazy { LocalSocketClientHandler() }\n</code></pre> \u542f\u52a8\u5ba2\u6237\u7aef <pre><code>clientHandler.start(\"xxx\")//\u548c\u670d\u52a1\u7aef\u4fdd\u6301\u76f8\u540c\u540d\u5b57\n</code></pre> \u53d1\u9001\u6d88\u606f <pre><code>clientHandler.send(\"xxx\")\n</code></pre> \u8bbe\u7f6e\u76d1\u542c <pre><code>localSocketServerHandler.setMsgListener(object : MsgListener {\n    override fun onMsgReceive(msg: String, client: LocalSocket) {\n        //TODO\uff1a\u5904\u7406\u63a5\u6536\u5230\u6d88\u606f\n    }\n\n    override fun onConnect(client: LocalSocket) {\n        //TODO\uff1a\u8fde\u63a5\u6210\u529f\n    }\n\n    override fun onClose(client: LocalSocket) {\n        //TODO\uff1a\u5ba2\u6237\u7aef\u5173\u95ed\n    }\n})\n</code></pre> \u5173\u95ed\u5ba2\u6237\u7aef <pre><code>clientHandler.closeClient()\n</code></pre></p>"}, {"location": "android/im/localsocket/#server", "title": "server\u7aef", "text": "<p>\u521b\u5efa\u670d\u52a1\u7aef\u5bf9\u8c61 <pre><code>private val localSocketServerHandler by lazy { LocalSocketServerHandler() }\n</code></pre> \u542f\u52a8\u670d\u52a1\u7aef <pre><code>localSocketServerHandler.start(\"xxx\")\n</code></pre> \u53d1\u9001\u6d88\u606f <pre><code>localSocketServerHandler.send(\"xxx\")\n</code></pre> \u8bbe\u7f6e\u76d1\u542c <pre><code>localSocketServerHandler.setMsgListener(object : MsgListener {\n    override fun onMsgReceive(msg: String, client: LocalSocket) {\n        //TODO\uff1a\u5904\u7406\u63a5\u6536\u5230\u6d88\u606f\n    }\n\n    override fun onConnect(client: LocalSocket) {\n        //TODO\uff1a\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\n    }\n\n    override fun onClose(client: LocalSocket) {\n        //TODO\uff1a\u6709\u5ba2\u6237\u7aef\u5173\u95ed\n    }\n})\n</code></pre> \u5173\u95ed\u670d\u52a1\u7aef <pre><code>localSocketServerHandler.closeServer()\n</code></pre></p>"}, {"location": "android/im/netty/", "title": "Netty", "text": "<p><pre><code>MediaScannerConnection.scanFile(\n    ProxyApplication.getINSTANCE(),\n    arrayOf(imageMsg),\n    arrayOf(\"image/jpeg\")\n) { path: String?, uri: Uri? -&gt;\n    // \u56fe\u7247\u626b\u63cf\u5b8c\u6bd5\uff0c\u7528\u6765\u4fdd\u8bc1\u56fe\u7247\u5199\u5165\u5b8c\u6574\u540e\u7ee7\u7eed\u5176\u4ed6\u64cd\u4f5c\n}\n</code></pre> netty\u53ef\u4ee5\u4e0eSocket\u6df7\u5408\u4f7f\u7528\uff0c\u5373client\u662fnetty\u7f16\u5199\uff0cserver\u662fsocket\u7f16\u5199\uff0c\u53cd\u4e4b\u4ea6\u53ef</p>"}, {"location": "android/im/netty/#_1", "title": "\u6dfb\u52a0\u4f9d\u8d56", "text": "<pre><code>dependencies {\n    api (\"io.netty:netty-all:5.0.0.Alpha2\")\n}\n</code></pre>"}, {"location": "android/im/netty/#_2", "title": "\u5c01\u88c5\u7684\u5de5\u5177", "text": ""}, {"location": "android/im/netty/#_3", "title": "\u670d\u52a1\u7aef", "text": "<p>com/hfc/netty/StringServerHandler</p> <p>com/hfc/netty/StringServerListener</p>"}, {"location": "android/im/netty/#_4", "title": "\u5ba2\u6237\u7aef", "text": "<p>com/hfc/netty/StringClientHandler</p> <p>com/hfc/netty/StringClientListener</p>"}, {"location": "android/im/netty/#_5", "title": "\u57fa\u7c7b", "text": "<p>com/hfc/netty/base/BaseHandler</p> <p>com/hfc/netty/base/SimpleChannelHandler</p> <p>com/hfc/netty/base/SimpleListener</p>"}, {"location": "android/im/netty/#_6", "title": "\u7b80\u5355\u4f7f\u7528", "text": "<p>StringServerHandler\u548cStringClientHandler\u662f\u57fa\u4e8eString\u6d88\u606f\u5c01\u88c5\uff0c\u6d88\u606f\u89e3\u6790\u662f\u901a\u8fc7\u6362\u884c\u7b26</p>"}, {"location": "android/im/netty/#server", "title": "server\u7aef", "text": "<p>\u542f\u52a8\u670d\u52a1\uff0c\u53c2\u6570port\u4e0d\u4f20\u9ed8\u8ba41235 <pre><code>StringServerHandler.startServer()\n</code></pre> \u5173\u95ed\u670d\u52a1 <pre><code>StringServerHandler.close()\n</code></pre> \u8bbe\u7f6e\u76d1\u542c <pre><code>StringServerHandler.registerListener(object : StringServerListener {\n    override fun channelActive() {\n        lifecycleScope.launch {\n            // \u5efa\u7acb\u8fde\u63a5\u5b8c\u6210\n        }\n    }\n\n    override fun channelInActive(msg: String) {\n        lifecycleScope.launch {\n            // \u65ad\u5f00\u8fde\u63a5\n        }\n    }\n\n    override fun messageReceived(msg: String) {\n        lifecycleScope.launch {\n            // \u6536\u5230\u6d88\u606f\n        }\n    }\n})\n</code></pre> \u53d1\u9001\u6d88\u606f <pre><code>StringServerHandler.sendMsg(msg)\n</code></pre></p>"}, {"location": "android/im/netty/#client", "title": "client\u7aef", "text": "<p>\u542f\u52a8\u670d\u52a1\uff0c\u53c2\u6570ip\u5730\u5740\uff0c\u5fc5\u4f20String\u7c7b\u578b\uff0cport\u4e0d\u4f20\u9ed8\u8ba41235 <pre><code>StringClientHandler.startClient(ipStr)\n</code></pre> \u5173\u95ed\u670d\u52a1 <pre><code>StringClientHandler.close()\n</code></pre> \u8bbe\u7f6e\u76d1\u542c <pre><code>StringClientHandler.registerListener(object : StringClientHandler {\n    override fun channelActive() {\n        lifecycleScope.launch {\n            // \u5efa\u7acb\u8fde\u63a5\u5b8c\u6210\n        }\n    }\n\n    override fun channelInActive(msg: String) {\n        lifecycleScope.launch {\n            when (msg) {\n                \"ConnectException\" -&gt; {\n                    // \u670d\u52a1\u5668\u7aef\u672a\u542f\u52a8\n                }\n                else -&gt; {\n                    // \u670d\u52a1\u5668\u7aef\u5173\u95ed\n                }\n            }\n}\n    }\n\n    override fun messageReceived(msg: String) {\n        lifecycleScope.launch {\n            // \u6536\u5230\u6d88\u606f\n        }\n    }\n})\n</code></pre> \u53d1\u9001\u6d88\u606f <pre><code>StringClientHandler.sendMsg(msg)\n</code></pre></p>"}, {"location": "android/im/netty/#_7", "title": "\u81ea\u5b9a\u4e49\u6d88\u606f\u4f53", "text": "<p>\u4ee5\u4f20\u9012bitmap\u548cStirng\u4e3a\u4f8b</p> <ol> <li> <p>Listener\u63a5\u53e3\u7f16\u5199\uff0c\u7ee7\u627fSimpleListener <pre><code>fun messageReceived(bitmap: Bitmap)\nfun messageReceived(msg: String)\n</code></pre></p> </li> <li> <p>\u7f16\u5199Handler\uff0c\u7ee7\u627fBaseHandler&lt;\u4e0a\u9762Listener&gt;\uff0c\u7f16\u5199\u542f\u52a8\u51fd\u6570\u548c\u53d1\u9001\u6d88\u606f\u51fd\u6570 <pre><code>fun startServer(port: Int = 1234) {\n    buildTcpServer(port) { socketChannel -&gt;\n        socketChannel.pipeline().addLast(ByteArrayMessageEncoder())\n        socketChannel.pipeline().addLast(ByteArrayMessageDecoder())\n        socketChannel.pipeline()\n            .addLast(object :\n                SimpleChannelHandler&lt;ByteArrayMessage, ByteArrayServerListener&gt;(listener, this) {\n                override fun messageReceived(\n                    ctx: ChannelHandlerContext,\n                    msg: ByteArrayMessage\n                ) {\n                    when (msg.type) {\n                        0 -&gt; {\n                            //\u8f6c\u6210Bitmap\n                        }\n\n                        1 -&gt; {\n                            //\u8f6c\u6210String\n                        }\n                    }\n                }\n            })\n        }\n    }\n\n    fun sendMsg(msg: ByteArrayMessage) {\n        checkHandlerContext {\n            mainScope.launch {\n                withContext(Dispatchers.IO) {\n                    it.writeAndFlush(msg)\n                }\n            }\n        }\n    }\n</code></pre> \u5177\u4f53\u89c1</p> </li> </ol>"}, {"location": "android/im/netty/#_8", "title": "\u81ea\u5b9a\u4e49\u89e3\u7801\u5668", "text": "<p>com/hfc/netty/decoder/ByteArrayMessageDecoder</p>"}, {"location": "android/im/netty/#_9", "title": "\u81ea\u5b9a\u4e49\u7f16\u7801\u5668", "text": "<p>com/hfc/netty/encoder/ByteArrayMessageEncoder</p>"}, {"location": "android/im/netty/#_10", "title": "\u81ea\u5b9a\u4e49\u6570\u636e\u5305", "text": "<p>com/hfc/netty/pack/ByteArrayMessage</p>"}, {"location": "android/im/netty/#_11", "title": "\u81ea\u5b9a\u4e49\u5ba2\u6237\u7aef", "text": "<p>com/hfc/netty/ByteArrayClientHandler</p> <p>com/hfc/netty/ByteArrayClientListener</p>"}, {"location": "android/im/netty/#_12", "title": "\u81ea\u5b9a\u4e49\u670d\u52a1\u7aef", "text": "<p>com/hfc/netty/ByteArrayServerHandler</p> <p>com/hfc/netty/StringServerHandler</p> <p>\u53d1\u9001\u56fe\u7247\u5b57\u8282 <pre><code>private val imgs = listOf(R.mipmap.test1, R.mipmap.test2, R.mipmap.test3)\nlifecycleScope.launch {\n    val bitmapsFlow: List&lt;ByteArrayMessage&gt; = imgs.asFlow()\n        .map { resourceId -&gt;\n            BitmapFactory.decodeResource(resources, resourceId)\n        }.map { bitmap -&gt;\n            val baos = ByteArrayOutputStream().apply {\n                bitmap.compress(Bitmap.CompressFormat.PNG, 100, this)\n            }\n            val byte = baos.toByteArray()\n            ByteArrayMessage(byte, byte.size)\n        }\n        .flowOn(Dispatchers.IO)\n        .toList()\n    AlbumClientHandler.sendMsg(bitmapsFlow)\n}\n</code></pre></p>"}, {"location": "android/im/netty/#_13", "title": "\u5168\u65b0\u5c01\u88c5", "text": ""}, {"location": "android/im/netty/#_14", "title": "\u81ea\u5b9a\u4e49\u89e3\u7801\u5668", "text": "<p>CustomMessageDecoder</p>"}, {"location": "android/im/netty/#_15", "title": "\u81ea\u5b9a\u4e49\u7f16\u7801\u5668", "text": "<p>CustomMessageEncoder</p>"}, {"location": "android/im/netty/#_16", "title": "\u81ea\u5b9a\u4e49\u6570\u636e\u5305", "text": "<p>CustomMessage</p>"}, {"location": "android/im/netty/#_17", "title": "\u81ea\u5b9a\u4e49\u5ba2\u6237\u7aef", "text": "<p>NettyClient</p> <p>ClientHandler</p>"}, {"location": "android/im/netty/#_18", "title": "\u81ea\u5b9a\u4e49\u670d\u52a1\u7aef", "text": "<p>NettyServer</p> <p>ServerHandler</p>"}, {"location": "android/im/netty/#_19", "title": "\u76d1\u542c\u56de\u8c03", "text": "<p>IHandlerCallback</p>"}, {"location": "android/im/netty/#_20", "title": "\u81ea\u52a8\u8fde\u63a5\u529f\u80fd", "text": "<p>\u81ea\u52a8\u83b7\u53d6ip\uff1a</p> <p>NsdManager</p> <p>Server\u7aef <pre><code>class NsdServerActivity : AppCompatActivity() {\n    private val nettyServer by lazy { NettyServer() }\n    private val binding by lazy { ActivityNsdServerBinding.inflate(layoutInflater) }\n    private val mainScope by lazy { MainScope() }\n    private val devices by lazy { mutableListOf&lt;String&gt;() }\n\n    private val nettyCallback by lazy {\n        object : IHandlerCallback {\n            override fun channelActive(deviceName: String) {\n                mainScope.launch {\n                    if (!devices.contains(deviceName)) {\n                        devices.add(deviceName)\n                    }\n                    binding.txtDevice.text = \"\u8bbe\u5907\uff1a$devices\"\n                }\n            }\n\n            override fun channelInActive(deviceName: String, extraMsg: String) {\n                if (deviceName == \"\") {\n                    Log.d(\n                        \"ServerHandler\",\n                        \"ServerHandler connect error\"\n                    )\n                    return\n                }\n                mainScope.launch {\n                    if (devices.contains(deviceName)) {\n                        devices.remove(deviceName)\n                    }\n                    binding.txtDevice.text = \"\u8bbe\u5907\uff1a$devices\"\n                }\n            }\n\n            override fun onReceive(msg: CustomMessage) {\n                mainScope.launch {\n                    binding.txtMsg.text = \"\u6765\u81ea${msg.name}\u7684\u6d88\u606f${msg.content},\u7c7b\u578b\u4e3a${msg.type}\"\n                    if (msg.bitmap != null) {\n                        binding.imgShow.setImageBitmap(msg.bitmap)\n                    }\n                }\n            }\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(binding.root)\n        NsdExtManager.init(this)\n        binding.btnNsdConnect.setOnCheckedChangeListener { buttonView, isChecked -&gt;\n            if (isChecked) {\n                NsdExtManager.startServer(1222) { isRegistered: Boolean, msg: String -&gt;\n                    if (isRegistered) {\n                        nettyServer.start(1222, nettyCallback)\n                    } else {\n                        nettyServer.stop()\n                    }\n                }\n            } else {\n                NsdExtManager.stopServer()\n                nettyServer.stop()\n            }\n        }\n        binding.btnSendStr.setOnClickListener {\n            nettyServer.sendMessageByName(CustomMessage(\"samsung\", \"music\", \"action:play\", null))\n        }\n        binding.btnSendAll.setOnClickListener {\n            nettyServer.sendMessageByAll(CustomMessage(\"Server\",\"controller\", \"action:volume_up\", null))\n        }\n        binding.btnSendBitmap.setOnClickListener {\n            nettyServer.sendMessageByName(CustomMessage(\"samsung\", \"guess\", \"\",\n                BitmapFactory.decodeResource(resources, R.mipmap.test1)))\n        }\n    }\n}\n</code></pre> Client\u7aef <pre><code>class NsdClientActivity : AppCompatActivity() {\n    private val binding by lazy { ActivityNsdClientBinding.inflate(layoutInflater) }\n    private val nsdClient by lazy { NettyClient() }\n    private val mainScope by lazy { MainScope() }\n    private val nettyCallback by lazy { object : IHandlerCallback {\n        override fun channelActive(deviceName: String) {\n            mainScope.launch {\n                binding.txtMsg.text = \"\u5efa\u7acb\u8fde\u63a5\"\n                binding.btnNsdConnect.isChecked = true\n            }\n        }\n\n        override fun channelInActive(deviceName: String, extraMsg: String) {\n            mainScope.launch {\n                binding.txtMsg.text = \"\u65ad\u5f00\u8fde\u63a5\"\n                binding.btnNsdConnect.isChecked = false\n            }\n        }\n\n        override fun onReceive(msg: CustomMessage) {\n            mainScope.launch {\n                binding.txtMsg.text = \"\u6765\u81ea${msg.name}\u7684\u6d88\u606f${msg.content},\u7c7b\u578b\u4e3a${msg.type}\"\n                if (msg.bitmap != null) {\n                    binding.imgShow.setImageBitmap(msg.bitmap)\n                }\n            }\n        }\n    } }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(binding.root)\n        NsdExtManager.init(this)\n        binding.btnNsdConnect.setOnCheckedChangeListener { button, isChecked -&gt;\n            if (!button.isPressed) return@setOnCheckedChangeListener\n            if (isChecked) {\n                NsdExtManager.startClient { ip, port -&gt;\n                    nsdClient.start(ip, port, nettyCallback)\n                }\n            } else {\n                NsdExtManager.stopClient()\n                nsdClient.stop()\n            }\n        }\n        binding.btnSendStr.setOnClickListener {\n            nsdClient.sendMessage(CustomMessage(Build.BRAND, \"music\", \"action:pause\", null))\n        }\n        binding.btnSendBitmap.setOnClickListener {\n            nsdClient.sendMessage(CustomMessage(Build.BRAND, \"guess\", \"\",\n                BitmapFactory.decodeResource(resources, R.mipmap.test3)))\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/im/nfc/", "title": "nfc", "text": ""}, {"location": "android/im/nfc/#_1", "title": "\u7406\u8bba", "text": ""}, {"location": "android/im/nfc/#nfc", "title": "NFC\u6807\u7b7e", "text": "<ul> <li>\u4e00\u79cd\u5185\u7f6eNFC\u82af\u7247\u7684\u5c0f\u578b\u7535\u5b50\u6807\u7b7e</li> <li>\u53ef\u4ee5\u5b58\u50a8\u4fe1\u606f\uff0c\u5982\u7f51\u5740\u3001\u6587\u5b57\u3001\u7535\u8bdd\u53f7\u7801\u6216\u7279\u5b9a\u6307\u4ee4</li> <li>\u4e0d\u9700\u8981\u7535\u6c60</li> <li>NFC\u529f\u80fd\u7684\u8bbe\u5907\uff08\u5982\u667a\u80fd\u624b\u673a\uff09\u9760\u8fd1\u65f6\uff0c\u53ef\u4ee5\u65e0\u7ebf\u65b9\u5f0f\u6fc0\u6d3b\u5e76\u4ea4\u6362\u4fe1\u606f</li> </ul>"}, {"location": "android/im/nfc/#_2", "title": "\u5e94\u7528\u573a\u666f", "text": "<p>\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4ea7\u54c1\u9632\u4f2a\u3001\u4fe1\u606f\u67e5\u8be2\u3001\u5e7f\u544a\u4e92\u52a8\u3001\u667a\u80fd\u5bb6\u5c45\u63a7\u5236\u3001\u4ee5\u53ca\u5b9e\u73b0\u5feb\u901f\u8bbe\u7f6e\u624b\u673a\uff08\u5982\u5207\u6362\u9759\u97f3\u6a21\u5f0f\u3001\u5f00\u542fWi-Fi\u7b49\uff09</p> <p>\u5de5\u4f5c\u539f\u7406\u57fa\u4e8eISO 14443A\u6216ISO 15693\u534f\u8bae\uff0c\u901a\u5e38\u572813.56MHz\u7684\u9ad8\u9891\u4e0b\u8fd0\u4f5c\uff0c\u8bfb\u5199\u8ddd\u79bb\u4e00\u822c\u57281-10\u5398\u7c73\u4e4b\u95f4</p>"}, {"location": "android/im/nfc/#nfc_1", "title": "\u624b\u673anfc\u6a21\u5757", "text": "<ul> <li>\u8fd1\u573a\u901a\u4fe1\u6a21\u5757\uff0c\u9700\u8981\u6253\u901a\u9a71\u52a8\u5982pn7160</li> <li>\u7ed3\u5408RFID\uff08\u5c04\u9891\u8bc6\u522b\uff09\u548c\u65e0\u7ebf\u901a\u4fe1\u6280\u672f</li> </ul>"}, {"location": "android/im/nfc/#_3", "title": "\u5e94\u7528\u573a\u666f", "text": "<p>\u79fb\u52a8\u652f\u4ed8\u3001\u6570\u636e\u4f20\u8f93\u3001\u65e0\u7ebf\u914d\u5bf9\uff08\u5982\u84dd\u7259\u97f3\u7bb1\u3001\u8033\u673a\uff09\u4ee5\u53ca\u6a21\u62df\u5b9e\u4f53\u5361\u7247\uff08\u5982\u516c\u4ea4\u5361\u3001\u95e8\u7981\u5361\uff09\u7b49\u529f\u80fd</p>"}, {"location": "android/im/nfc/#_4", "title": "\u57fa\u672c\u4f7f\u7528", "text": ""}, {"location": "android/im/nfc/#_5", "title": "\u58f0\u660e\u6743\u9650", "text": "<pre><code>&lt;uses-permission android:name=\"android.permission.NFC\" /&gt;\n\n&lt;uses-feature\n    android:name=\"android.hardware.nfc\"\n    android:required=\"true\" /&gt;\n</code></pre>"}, {"location": "android/im/nfc/#nfc_2", "title": "nfc\u9002\u914d\u5668", "text": "<p>\u5fc5\u987b\u4f9d\u8d56\u4e8eactivity\uff0c\u5982\u679c\u83b7\u53d6\u4e0d\u5230\u5219\u8bbe\u5907\u4e0d\u652f\u6301nfc <pre><code>val nfcAdapter = NfcAdapter.getDefaultAdapter(activity)\nif (nfcAdapter == null) {\n    Toast.makeText(activity, \"\u8bbe\u5907\u4e0d\u652f\u6301NFC\", Toast.LENGTH_SHORT).show()\n}\n</code></pre></p>"}, {"location": "android/im/nfc/#nfc_3", "title": "\u5f00\u542fnfc", "text": "<p>\u5982\u679cnfc\u6ca1\u5f00\u542f\uff0c\u53ef\u8df3\u8f6c\u5230\u8bbe\u7f6e\u754c\u9762\u5f00\u542f <pre><code>if (!nfcAdapter.isEnabled) {\n    Toast.makeText(activity, \"NFC\u672a\u5f00\u542f\uff0c\u8bf7\u5f00\u542fNFC\u529f\u80fd\", Toast.LENGTH_SHORT).show()\n    val intent = Intent(Settings.ACTION_NFC_SETTINGS)\n    activity.startActivity(intent)\n}\n</code></pre></p>"}, {"location": "android/im/nfc/#nfc_4", "title": "\u68c0\u6d4bnfc\u6807\u7b7e\u7b49\u8bbe\u5907", "text": "<p>\u65b9\u5f0f\u4e00\uff1areader\u6a21\u5f0f\uff0c\u5141\u8bb8\u5728\u540e\u53f0\u68c0\u6d4b(\u4e5f\u9700\u8981activity) <pre><code>// \u5f00\u542f\nval flags = NfcAdapter.FLAG_READER_NFC_A or\n        NfcAdapter.FLAG_READER_NFC_B or\n        NfcAdapter.FLAG_READER_NFC_F or\n        NfcAdapter.FLAG_READER_NFC_V or\n        NfcAdapter.FLAG_READER_NFC_BARCODE\nnfcAdapter?.enableReaderMode(activity, { tag -&gt; }, flags, null)\n\n// \u5173\u95ed\nnfcAdapter?.disableReaderMode(activity)\n</code></pre></p> <p>\u65b9\u5f0f\u4e8c\uff1a\u5206\u53d1\u6a21\u5f0f\uff0c\u754c\u9762\u663e\u793a\u65f6\u9996\u5148\u62e6\u622a\uff0c\u5426\u5219\u8d70\u7cfb\u7edf <pre><code>// \u5f00\u542f\nval intent = Intent(activity, activity::class.java).apply {\n    addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)\n}\nval pendingIntent = PendingIntent.getActivity(\n    activity, 0, intent,\n    PendingIntent.FLAG_MUTABLE or PendingIntent.FLAG_UPDATE_CURRENT\n)\nnfcAdapter.enableForegroundDispatch(\n    activity,\n    pendingIntent,\n    intentFiltersArray,\n    techListsArray\n)\n// \u5173\u95ed\nnfcAdapter.disableForegroundDispatch(activity)\n</code></pre> \u5728activity\u4e2d\u91cd\u5199onNewIntent <pre><code>override fun onNewIntent(intent: Intent) {\n    super.onNewIntent(intent)\n    handleIntent(intent)\n}\n\nprivate fun handleIntent(intent: Intent?) {\n    intent?.let {\n        if (NfcAdapter.ACTION_NDEF_DISCOVERED == it.action) {\n            it.getParcelableArrayExtra(NfcAdapter.EXTRA_NDEF_MESSAGES)?.let { rawMessages -&gt;\n\n            }\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/im/nfc/#activity", "title": "Activity\u4f7f\u7528", "text": "<p>\u4e00\u822c\u5728onResume\u548conPause\u4e2d\u5f00\u542fnfc\u68c0\u6d4b <pre><code>public override fun onResume() {\n    super.onResume()\n//        NfcManager.enableNfcDispatcher(this)\n    NfcManager.enableNfcReaderMode(this) {\n        it?.let { message -&gt;\n        }\n    }\n}\n\npublic override fun onPause() {\n    super.onPause()\n    NfcManager.disableNfcDispatcher(this)\n//        NfcManager.disableNfcReaderMode(this)\n}\n</code></pre></p>"}, {"location": "android/im/nfc/#_6", "title": "\u89e3\u6790\u6807\u7b7e", "text": "<p>\u4ee5\u6587\u672c\u5185\u5bb9\u4e3a\u4f8b\uff0c\u5176\u4ed6\u8fd8\u6709\uff1aURL\u3001\u7535\u8bdd\u3001\u540d\u7247\u3001\u84dd\u7259\u3001WIFI\u3001\u5e94\u7528\u3001\u4f4d\u7f6e\u3001\u6570\u636e\u3001\u6536\u85cf\u5939\u7b49 <pre><code>val ndef = Ndef.get(tag)\nif (ndef != null) {\n    ndef.connect()\n    try {\n        ndef.cachedNdefMessage.records.forEach { record -&gt;\n            if (record.tnf == NdefRecord.TNF_WELL_KNOWN &amp;&amp;\n                record.type.contentEquals(NdefRecord.RTD_TEXT)\n            ) {\n                try {\n                    val payload = record.payload\n                    val textEncoding = if ((payload[0].toInt() and 0x80) == 0) \"UTF-8\" else \"UTF-16\"\n                    val languageSize = payload[0].toInt() and 0x3F\n                    String(\n                        payload, languageSize + 1,\n                        payload.size - languageSize - 1, Charset.forName(textEncoding)\n                    )\n                } catch (e: UnsupportedEncodingException) {\n                    Log.e(TAG, \"Unsupported Encoding\", e)\n                }\n            } else {\n                /* \u53ef\u4ee5\u5728\u8fd9\u91cc\u6dfb\u52a0\u5bf9\u5176\u4ed6\u7c7b\u578bNDEF\u8bb0\u5f55\u7684\u652f\u6301 */\n                Log.e(TAG, \"other type: ${record.type}\" )\n            }\n        }\n    } finally {\n        ndef.close()\n    }\n}\n</code></pre></p>"}, {"location": "android/im/nfc/#_7", "title": "\u5de5\u5177\u7c7b", "text": "<p>NfcManager</p>"}, {"location": "android/im/nfc/#nfc_5", "title": "nfc\u5199\u6570\u636e", "text": "<p>\u8d2d\u4e70nfc\u6807\u7b7e\u8d34</p> <p>\u5de5\u5177\uff1a\u4e0b\u8f7dNFC\u6807\u7b7e\u52a9\u624b</p>"}, {"location": "android/im/nsdmanager/", "title": "Nsdmanager", "text": ""}, {"location": "android/im/nsdmanager/#ip", "title": "\u81ea\u52a8\u83b7\u53d6ip", "text": "<pre><code>object NsdExtManager {\n    private const val TAG = \"NdsExtManager\"\n    private const val SERVICE_TYPE = \"_http._tcp\"\n    private var nsdManager: NsdManager? = null\n    private var registrationListener: RegistrationListener? = null\n    private var discoveryListener: DiscoveryListener? = null\n    private var resolveListener: NsdManager.ResolveListener? = null\n    private var serviceInfoCallback: ServiceInfoCallback? = null\n    private var serverIp: String? = null\n    private var serverPort: Int = 0\n    private var callback: ((ip: String, port: Int) -&gt; Unit)? = null\n\n    fun init(context: Context) {\n        nsdManager = context.getSystemService(Context.NSD_SERVICE) as NsdManager\n    }\n\n    fun stopServer() {\n        registrationListener?.let {\n            nsdManager?.unregisterService(it)\n        }\n    }\n\n    fun startClient(block: (ip: String, port: Int) -&gt; Unit) {\n        callback = block\n        discoveryListener = object : DiscoveryListener {\n            override fun onDiscoveryStarted(regType: String) {\n                Log.d(TAG, \"Service discovery started\")\n            }\n\n            override fun onServiceFound(serviceInfo: NsdServiceInfo) {\n                Log.d(TAG, \"Service found: ${serviceInfo.serviceType}\")\n                if (serviceInfo.serviceType == \"$SERVICE_TYPE.\") {\n                    serviceFound(serviceInfo)\n                }\n            }\n\n            override fun onServiceLost(serviceInfo: NsdServiceInfo) {\n                Log.d(TAG, \"Service lost: \" + serviceInfo.serviceName)\n            }\n\n            override fun onDiscoveryStopped(serviceType: String) {\n                Log.d(TAG, \"Discovery stopped: $serviceType\")\n            }\n\n            override fun onStartDiscoveryFailed(serviceType: String, errorCode: Int) {\n                Log.e(TAG, \"Discovery failed: Error code:$errorCode\")\n                nsdManager!!.stopServiceDiscovery(this)\n            }\n\n            override fun onStopDiscoveryFailed(serviceType: String, errorCode: Int) {\n                Log.e(TAG, \"Discovery failed: Error code:$errorCode\")\n                nsdManager!!.stopServiceDiscovery(this)\n            }\n        }\n\n        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {\n            serviceInfoCallback = object : ServiceInfoCallback {\n                override fun onServiceInfoCallbackRegistrationFailed(errorCode: Int) {\n                    Log.d(\n                        TAG,\n                        \"onServiceInfoCallbackRegistrationFailed() called with: errorCode = $errorCode\"\n                    )\n                }\n\n                override fun onServiceUpdated(serviceInfo: NsdServiceInfo) {\n                    Log.d(TAG, \"onServiceUpdated() called with: serviceInfo = $serviceInfo\")\n                    getServerIp(serviceInfo)\n                }\n\n                override fun onServiceLost() {\n                    Log.d(TAG, \"onServiceLost() called\")\n                }\n\n                override fun onServiceInfoCallbackUnregistered() {\n                    Log.d(TAG, \"onServiceInfoCallbackUnregistered() called\")\n                }\n            }\n        }\n\n        resolveListener = object : NsdManager.ResolveListener {\n            override fun onResolveFailed(serviceInfo: NsdServiceInfo, errorCode: Int) {\n                Log.e(TAG, \"Resolve failed: $errorCode\")\n            }\n\n            override fun onServiceResolved(serviceInfo: NsdServiceInfo) {\n                Log.d(TAG, \"Service resolved: $serviceInfo\")\n                getServerIp(serviceInfo)\n            }\n        }\n\n        nsdManager!!.discoverServices(SERVICE_TYPE, NsdManager.PROTOCOL_DNS_SD, discoveryListener)\n    }\n\n    fun stopClient() {\n        discoveryListener?.let {\n            nsdManager?.stopServiceDiscovery(it)\n        }\n    }\n\n    private fun serviceFound(serviceInfo: NsdServiceInfo) {\n        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {\n            serviceInfoCallback?.let {\n                try {\n                    nsdManager?.registerServiceInfoCallback(\n                        serviceInfo, Executors.newSingleThreadExecutor(),\n                        it\n                    )\n                } catch (e: Exception) {\n                    Log.e(TAG, \"registerServiceInfoCallback error: ${e.message}\")\n                }\n            }\n        } else {\n            try {\n                nsdManager?.resolveService(serviceInfo, resolveListener)\n            } catch (e: Exception) {\n                e.printStackTrace()\n            }\n        }\n    }\n\n    private fun getServerIp(serviceInfo: NsdServiceInfo) {\n        val host = if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {\n            serviceInfo.hostAddresses.filterIsInstance&lt;Inet4Address&gt;()[0]\n        } else {\n            serviceInfo.host\n        }\n        serverIp = host.hostAddress\n        serverPort = serviceInfo.port\n        Log.d(TAG, \"IP Address: $serverIp, Port: $serverPort\")\n        serverIp?.let {\n            callback?.invoke(it, serverPort)\n        }\n    }\n\n    fun startServer(port: Int, block: (isRegistered: Boolean, msg: String) -&gt; Unit) {\n        val serviceInfo = NsdServiceInfo()\n        serviceInfo.serviceName = \"${Build.BRAND}-Service\"\n        serviceInfo.serviceType = SERVICE_TYPE\n        serviceInfo.port = port\n        registrationListener = object : RegistrationListener {\n            override fun onServiceRegistered(nsdServiceInfo: NsdServiceInfo) {\n                Log.d(TAG, \"Service registered: \" + nsdServiceInfo.serviceName)\n                block(true, nsdServiceInfo.serviceName)\n            }\n\n            override fun onRegistrationFailed(serviceInfo: NsdServiceInfo, errorCode: Int) {\n                Log.e(TAG, \"Registration failed: $errorCode\")\n                block(false, \"${serviceInfo.serviceName} error: $errorCode\")\n            }\n\n            override fun onServiceUnregistered(serviceInfo: NsdServiceInfo) {\n                Log.d(TAG, \"Service unregistered: \" + serviceInfo.serviceName)\n                block(false, serviceInfo.serviceName)\n            }\n\n            override fun onUnregistrationFailed(serviceInfo: NsdServiceInfo, errorCode: Int) {\n                Log.e(TAG, \"Unregistration failed: $errorCode\")\n            }\n        }\n        nsdManager!!.registerService(serviceInfo, NsdManager.PROTOCOL_DNS_SD, registrationListener)\n    }\n}\n</code></pre>"}, {"location": "android/im/nsdmanager/#_1", "title": "\u4f7f\u7528", "text": "<p>Server\u7aef\u542f\u52a8 <pre><code>NsdExtManager.startServer(1222) { isRegistered: Boolean, msg: String -&gt;\n    if (isRegistered) {\n\n    } else {\n\n    }\n}\n</code></pre> Server\u7aef\u5173\u95ed <pre><code>NsdExtManager.stopServer()\n</code></pre> Client\u7aef\u542f\u52a8 <pre><code>NsdExtManager.startClient { ip, port -&gt;\n}\n</code></pre> Client\u7aef\u5173\u95ed <pre><code>NsdExtManager.stopClient()\n</code></pre></p> <p></p>"}, {"location": "android/im/service/", "title": "Service", "text": ""}, {"location": "android/im/service/#_1", "title": "\u524d\u53f0\u670d\u52a1", "text": ""}, {"location": "android/im/service/#_2", "title": "\u58f0\u660e\u6743\u9650\u548c\u6ce8\u518c", "text": "<p>\u5176\u4e2d\u7535\u91cf\u4f18\u5316\u7528\u4e8e\u4fdd\u6d3b\u76f8\u5173\uff0cWAKE_LOCK\u7528\u6765\u4fdd\u8bc1\u4f20\u8f93\u6570\u636e\u65f6\u4fdd\u8bc1cpu\u6d3b\u8dc3\u4e5f\u7528\u4e8e\u4fdd\u6301\u5e38\u4eae <pre><code>&lt;uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\" /&gt;\n&lt;uses-permission android:name=\"android.permission.NOTIFICATION_SERVICE\" /&gt;\n&lt;uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" /&gt;\n&lt;uses-permission android:name=\"android.permission.FOREGROUND_SERVICE_DATA_SYNC\" /&gt;\n&lt;uses-permission android:name=\"android.permission.VIBRATE\" /&gt;\n&lt;uses-permission android:name=\"android.permission.WAKE_LOCK\" /&gt;\n&lt;uses-permission android:name=\"android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS\" /&gt;\n\n&lt;service\n    android:name=\".bridge.BridgeService\"\n    android:enabled=\"true\"\n    android:exported=\"true\"\n    android:foregroundServiceType=\"dataSync\" /&gt;\n</code></pre></p>"}, {"location": "android/im/service/#_3", "title": "\u542f\u52a8\u670d\u52a1", "text": "<pre><code>private fun startService() {\n    val intent = Intent(ProxyApplication.application, BridgeService::class.java)\n    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)\n    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {\n        ProxyApplication.application.startForegroundService(intent)\n    } else {\n        ProxyApplication.application.startService(intent)\n    }\n}\n</code></pre>"}, {"location": "android/im/service/#_4", "title": "\u521b\u5efa\u901a\u77e5", "text": "<p>\u524d\u53f0\u670d\u52a1\u5fc5\u987b\u521b\u5efa\u901a\u77e5 <pre><code>private val BRIDGE_CHANNEL_ID = \"channel_xx\"\nprivate val BRIDGE_CHANNEL_NAME = \"BridgeService\"\nprivate val BRIDGE_NOTIFICATION_ID = 1\n\nprivate val notificationManager by lazy {\n    getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager\n}\n\n override fun onCreate() {\n    super.onCreate()\n    createNotificationForForegroundService()\n}\n\noverride fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {\n    Log.i(TAG, \"onStartCommand: $intent\")\n    intent?.let {\n\n    }\n    return START_STICKY\n}\n\n@SuppressLint(\"RemoteViewLayout\")\nfun createNotificationForForegroundService() {\n    // \u9002\u914d8.0\u53ca\u4ee5\u4e0a\n    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O &amp;&amp;\n        notificationManager.getNotificationChannel(BRIDGE_CHANNEL_ID) == null\n    ) {\n        val channel = NotificationChannel(\n            BRIDGE_CHANNEL_ID,\n            BRIDGE_CHANNEL_NAME,\n            NotificationManager.IMPORTANCE_DEFAULT\n        )\n        notificationManager.createNotificationChannel(channel)\n    }\n\n    // \u9002\u914d12.0\u53ca\u4ee5\u4e0a\n    val flag = if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.S) {\n        PendingIntent.FLAG_IMMUTABLE\n    } else {\n        PendingIntent.FLAG_UPDATE_CURRENT\n    }\n\n    // \u6dfb\u52a0\u81ea\u5b9a\u4e49\u901a\u77e5view\n    val views = RemoteViews(packageName, R.layout.notification_bridge)\n\n    // \u521b\u5efaBuilder\n    val builder: NotificationCompat.Builder = NotificationCompat.Builder(\n        this, BRIDGE_CHANNEL_ID)\n        .setSmallIcon(R.mipmap.ic_launcher)\n        .setAutoCancel(true)\n        .setCustomContentView(views)\n        .setPriority(1000)\n\n    val type = if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R) {\n        ServiceInfo.FOREGROUND_SERVICE_TYPE_DATA_SYNC\n    } else {\n        0\n    }\n    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.Q) {\n        startForeground(BRIDGE_NOTIFICATION_ID, builder.build(), type)\n    }\n}\n</code></pre></p>"}, {"location": "android/im/udp/", "title": "Udp", "text": ""}, {"location": "android/im/udp/#_1", "title": "\u670d\u52a1\u7aef", "text": "<pre><code>object UdpTask {\n    private val timer by lazy { Timer() }\n    private val timerTask by lazy {\n        object : TimerTask() {\n            override fun run() {\n                Log.d(\"yuli\", \"schedule to send ip\")\n                try {\n                    udpSocket.send(sendPacket)\n                } catch (e: Exception) {\n                    Log.e(\"yuli\", \"run: ${e.message}\")\n                }\n            }\n        }\n    }\n    private val udpSocket by lazy {\n        DatagramSocket().apply { broadcast = true }\n    }\n    private val helloMsg by lazy { \"hello\".toByteArray() }\n\n    private val sendPacket by lazy {\n        DatagramPacket(\n            helloMsg,\n            helloMsg.size,\n            InetAddress.getByName(\"255.255.255.255\"),\n            12344\n        )\n    }\n\n    fun sayHelloForJava() {\n        MainScope().launch {\n            sayHello()\n        }\n    }\n\n    suspend fun sayHello(){\n        try {\n            sayHelloInner()\n        } catch (e: Exception) {\n            e.printStackTrace()\n            Log.e(\"yuli\", \"run: ${e.message}\")\n        } finally {\n            udpSocket.close()\n            Log.d(\"yuli\", \"close socket\")\n        }\n    }\n\n    private suspend fun sayHelloInner() {\n        withContext(Dispatchers.IO) {\n            udpSocket.send(sendPacket)\n            timer.scheduleAtFixedRate(timerTask, 1000, 1000)\n        }\n\n        withContext(Dispatchers.IO) {\n            Log.d(\"yuli\", \"ready while to receive ok\")\n            while (true) {\n                val receiveData = ByteArray(1024)\n                val receivePacket = DatagramPacket(receiveData, receiveData.size)\n\n                udpSocket.receive(receivePacket)\n                val responseMessage = String(receivePacket.data, 0, receivePacket.length)\n                Log.d(\"yuli\", \"receive: $responseMessage\")\n                if (\"ok\" == responseMessage) {\n                    timer.cancel()\n                    break\n                }\n            }\n        }\n    }\n\n    fun stop(){\n        timer.cancel()\n        try {\n            udpSocket.close()\n        } catch (e: Exception) {\n            e.printStackTrace()\n        }\n    }\n}\n</code></pre>"}, {"location": "android/im/udp/#_2", "title": "\u5ba2\u6237\u7aef", "text": "<pre><code>object UdpTask {\n    private val udpSocket by lazy {\n        DatagramSocket(12344).apply { broadcast = true }\n    }\n\n    fun receiveHelloForJava(callback: (String) -&gt; Unit) {\n        MainScope().launch {\n            receiveHello(callback)\n        }\n    }\n\n    suspend fun receiveHello(callback: (String) -&gt; Unit) {\n        try {\n            receiveHelloInner(callback)\n        } catch (e: Exception) {\n            e.printStackTrace()\n        } finally {\n            udpSocket.close()\n            Log.d(\"yuli\", \"close socket\")\n        }\n    }\n\n    private suspend fun receiveHelloInner(callback: (String) -&gt; Unit) {\n        withContext(Dispatchers.IO) {\n            while (true) {\n                val receiveData = ByteArray(1024)\n                val receivePacket = DatagramPacket(receiveData, receiveData.size)\n\n                udpSocket.receive(receivePacket)\n                val ip = receivePacket.address.hostAddress ?: \"\"\n                Log.e(\"yuli\", \"recvIp: $ip\")\n                if (ip.isNotEmpty()) {\n                    callback(ip)\n                    val confirm = \"ok\".toByteArray()\n                    val packet = DatagramPacket(confirm, confirm.size,\n                        receivePacket.address,\n                        receivePacket.port)\n                    udpSocket.send(packet)\n                    Log.e(\"yuli\", \"send ok\")\n                    break\n                }\n            }\n        }\n    }\n}\n</code></pre>"}, {"location": "android/im/udp/#ip", "title": "\u81ea\u52a8\u83b7\u53d6ip\u529f\u80fd", "text": "<pre><code>object UdpExtManager {\n    private const val TAG = \"UdpExtManager\"\n    private val isClientRunning: AtomicBoolean = AtomicBoolean(false)\n    private val isServerRunning: AtomicBoolean = AtomicBoolean(false)\n    private val ioScope = CoroutineScope(Dispatchers.IO)\n    private var clientScope: Job? = null\n    private var serverScope: Job? = null\n\n    fun startClient() {\n        clientScope = ioScope.launch {\n            try {\n                isClientRunning.set(true)\n                val group = InetAddress.getByName(\"239.255.255.250\")\n                val socket = MulticastSocket(1998)\n                socket.joinGroup(group)\n                val buffer = ByteArray(1024)\n                val packet = DatagramPacket(buffer, buffer.size)\n                Log.d(TAG, \"Received SSDP message start: \")\n                while (isClientRunning.get()) {\n                    socket.receive(packet)\n                    val received =\n                        String(packet.data, 0, packet.length)\n                    Log.d(TAG, \"Received SSDP message: $received\")\n                }\n                socket.close()\n            } catch (e: IOException) {\n                e.printStackTrace()\n                isClientRunning.set(false)\n            }\n        }\n    }\n\n    fun stopClient() {\n        isClientRunning.set(false)\n        clientScope?.cancel()\n    }\n\n    fun startServer(ipAddress: String?) {\n        Log.d(TAG, \"get IP address $ipAddress\")\n        if (ipAddress == null) {\n            return\n        }\n        val message: String = ipAddress\n\n        // \u4f7f\u7528UDP\u591a\u64ad\u53d1\u9001\u6d88\u606f\n        serverScope = ioScope.launch {\n            isServerRunning.set(true)\n            try {\n                val group =\n                    InetAddress.getByName(replaceLastWith255(ipAddress))\n                val socket = DatagramSocket()\n                socket.broadcast = true\n                val msgBytes = message.toByteArray()\n                val packet =\n                    DatagramPacket(msgBytes, msgBytes.size, group, 1998)\n                while (isServerRunning.get()) {\n                    socket.send(packet)\n                    delay(10000L)\n                }\n                Log.d(TAG, \"SSDP broadcast sent.\")\n                socket.close()\n            } catch (e: Exception) {\n                e.printStackTrace()\n                Log.d(TAG, \"Failed to send SSDP broadcast.\")\n                isServerRunning.set(false)\n            }\n        }\n    }\n\n    fun stopServer() {\n        isServerRunning.set(false)\n        serverScope?.cancel()\n    }\n\n    private fun replaceLastWith255(ipAddress: String): String? {\n        val segments = ipAddress.split(\"\\\\.\".toRegex()).dropLastWhile { it.isEmpty() }\n            .toTypedArray()\n        if (segments.size != 4) {\n            Log.d(TAG, \"Invalid IP address format: $ipAddress\")\n        }\n        segments[3] = \"255\"\n        return java.lang.String.join(\".\", *segments)\n    }\n}\n</code></pre>"}, {"location": "android/interview/android_base/", "title": "android\u57fa\u7840", "text": ""}, {"location": "android/interview/android_base/#activity", "title": "Activity\u7684\u542f\u52a8\u6a21\u5f0f\u6709\u54ea\u4e9b\u4ee5\u53ca\u5e94\u7528\u573a\u666f", "text": "<p>\u4efb\u52a1\u6808\u5c31\u662fTask\uff0c\u4f7f\u7528adb shell dumpsys activity activities\u6216\u8005adb shell dumpsys window\u53ef\u67e5\u770b\uff0c\u8fc7\u6ee4Task display areas in top down Z order</p> <p>standard\u200b</p> <p>\u6bcf\u6b21\u542f\u52a8Activity\u65f6\uff0c\u65e0\u8bba\u8be5Activity\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e\u4efb\u52a1\u6808\u4e2d\uff0c\u90fd\u4f1a\u5728\u5f53\u524d\u4efb\u52a1\u6808\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Activity\u5b9e\u4f8b\u3002Activity\u7684\u9ed8\u8ba4\u542f\u52a8\u6a21\u5f0f</p> <p>\u5e94\u7528\u573a\u666f\uff1a</p> <p>\u72ec\u7acb\u64cd\u4f5c\uff1a\u5f53\u6bcf\u6b21\u542f\u52a8\u90fd\u9700\u8981\u4e00\u4e2a\u65b0\u7684Activity\u5b9e\u4f8b\u6765\u5904\u7406\u72ec\u7acb\u7684\u64cd\u4f5c\u65f6\uff0c\u5982\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u8be6\u60c5\u9875\u9762</p> <p>\u200bsingleTop</p> <p>\u5982\u679c\u76ee\u6807Activity\u5df2\u7ecf\u4f4d\u4e8e\u4efb\u52a1\u6808\u7684\u9876\u90e8\uff0c\u5219\u4e0d\u4f1a\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\uff0c\u800c\u662f\u590d\u7528\u6808\u9876\u7684\u5b9e\u4f8b\uff0c\u5e76\u8c03\u7528\u5176onNewIntent()\u65b9\u6cd5\u3002 \u5982\u679c\u76ee\u6807Activity\u4e0d\u5728\u6808\u9876\uff0c\u5219\u4f1a\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\u5e76\u538b\u5165\u6808\u4e2d</p> <p>\u5e94\u7528\u573a\u666f\uff1a</p> <ol> <li>\u200b\u901a\u77e5\u70b9\u51fb\uff1a\u5f53\u5e94\u7528\u63a5\u6536\u5230\u901a\u77e5\uff0c\u7528\u6237\u70b9\u51fb\u901a\u77e5\u540e\u6253\u5f00\u67d0\u4e2aActivity\uff0c\u5982\u679c\u8be5Activity\u5df2\u7ecf\u5728\u6808\u9876\uff08\u5982\u6b63\u5728\u8fd0\u884c\u7684\u804a\u5929\u754c\u9762\uff09\uff0c\u5219\u590d\u7528\u8be5\u5b9e\u4f8b\uff0c\u907f\u514d\u91cd\u590d\u521b\u5efa\u3002</li> <li>\u200b\u8fd4\u56de\u6808\u4f18\u5316\uff1a\u5728\u67d0\u4e9b\u9700\u8981\u4f18\u5316\u8fd4\u56de\u6808\u884c\u4e3a\u7684\u573a\u666f\uff0c\u907f\u514d\u7528\u6237\u591a\u6b21\u70b9\u51fb\u8fd4\u56de\u6309\u94ae\u65f6\u91cd\u590d\u51fa\u73b0\u76f8\u540c\u7684Activity</li> </ol> <p>\u200bsingleTask\u200b</p> <p>\u5728\u6574\u4e2a\u4efb\u52a1\u6808\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u76ee\u6807Activity\u7684\u5b9e\u4f8b\uff0c\u5219\u590d\u7528\u8be5\u5b9e\u4f8b\uff0c\u5e76\u5c06\u5176\u4e0a\u9762\u7684\u6240\u6709Activity\u51fa\u6808\uff08\u5373\u6e05\u9664\u5176\u4e4b\u4e0a\u7684\u6240\u6709Activity\uff09\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\u5e76\u7f6e\u4e8e\u65b0\u7684\u4efb\u52a1\u6808\u4e2d\u3002\u8be5\u6a21\u5f0f\u4e0b\u7684Activity\u53ea\u4f1a\u5b58\u5728\u4e8e\u4e00\u4e2a\u4efb\u52a1\u6808\u4e2d</p> <p>\u5e94\u7528\u573a\u666f\uff1a</p> <ol> <li>\u200b\u4e3b\u754c\u9762Activity\uff1a\u901a\u5e38\u7528\u4e8e\u5e94\u7528\u7684\u4e3b\u754c\u9762\uff0c\u786e\u4fdd\u65e0\u8bba\u4ece\u54ea\u91cc\u542f\u52a8\uff0c\u90fd\u53ea\u6709\u4e00\u4e2a\u4e3b\u754c\u9762\u5b9e\u4f8b\uff0c\u5e76\u4e14\u6e05\u7a7a\u4e4b\u524d\u7684\u4efb\u52a1\u6808\u3002</li> <li>\u200b\u9700\u8981\u72ec\u7acb\u4efb\u52a1\u6808\u7684Activity\uff1a\u5982\u6d4f\u89c8\u5668\u7684\u4e3b\u754c\u9762\uff0c\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5e76\u4e14\u7ba1\u7406\u5176\u4efb\u52a1\u6808\u3002</li> </ol> <p>\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6etaskAffinity\u6765\u5b9e\u73b0\u7c7b\u4f3c\u200bsingleInstance\u200b\u5355\u72ec\u4efb\u52a1\u6808\u6548\u679c\uff0c\u4f46\u200bsingleInstance\u6a21\u5f0f\u4e0b\u53ea\u6709\u81ea\u8eabActivity\uff0c\u800c\u200bsingleTask\u200b\u6a21\u5f0f\u518d\u542f\u52a8\u4f1a\u548c\u5b83\u653e\u540c\u4e00\u4e2a\u4efb\u52a1\u6808\u4e2d\uff0c\u5982ActivityA\u542f\u52a8ActivityB\uff0c\u7531\u4e8eActivityA\u662f\u5728taskAffinity\u4e3acom.xx\u4e2d\u6240\u4ee5\u4f1a\u65b0\u5efa\u4e00\u4e2a\u4efb\u52a1\u6808\uff0c\u4f46ActivityB\u518d\u542f\u52a8ActivityC\u5c31\u4f1a\u5728\u540c\u4e00\u4e2a\u4efb\u52a1\u6808</p> <p>Task   -ActivityRecord(ActivityC:standard)   -ActivityRecord(ActivityB:singleTask)</p> <p>Task   -ActivityRecord(ActivityA:standard, taskAffinity=com.xx)</p> <p>\u200bsingleInstance\u200b</p> <p>\u8be5\u6a21\u5f0f\u4e0b\u7684Activity\u59cb\u7ec8\u5355\u72ec\u5b58\u5728\u4e8e\u4e00\u4e2a\u72ec\u7acb\u7684\u4efb\u52a1\u6808\u4e2d\uff0c\u4e0d\u5141\u8bb8\u5176\u4ed6Activity\u4e0e\u5176\u5171\u4eab\u4efb\u52a1\u6808\u3002 \u65e0\u8bba\u4ece\u54ea\u4e2a\u4efb\u52a1\u6808\u542f\u52a8\u8be5Activity\uff0c\u90fd\u4f1a\u5c06\u5176\u7f6e\u4e8e\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\u6808\u4e2d\uff0c\u5e76\u4e14\u8be5\u4efb\u52a1\u6808\u4e2d\u53ea\u6709\u8fd9\u4e00\u4e2aActivity\u3002\u5f53\u518d\u6b21\u542f\u52a8\u8be5Activity\u65f6\uff0c\u4f1a\u590d\u7528\u5df2\u5b58\u5728\u7684\u5b9e\u4f8b\uff0c\u5e76\u5c06\u5176\u4efb\u52a1\u6808\u5e26\u5230\u524d\u53f0\u3002</p> <p>\u5e94\u7528\u573a\u666f\uff1a</p> <ol> <li>\u200b\u9700\u8981\u72ec\u7acb\u8fd0\u884c\u7684Activity\uff1a\u5982\u5168\u5c4f\u7684\u89c6\u9891\u64ad\u653e\u5668\u3001\u7535\u8bdd\u62e8\u53f7\u754c\u9762\u7b49\uff0c\u9700\u8981\u72ec\u5360\u4e00\u4e2a\u4efb\u52a1\u6808\uff0c\u907f\u514d\u88ab\u5176\u4ed6Activity\u5e72\u6270\u3002</li> <li>\u200b\u5355\u4f8b\u6a21\u5f0f\u7684Activity\uff1a\u786e\u4fdd\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5b58\u5728\uff0c\u9002\u7528\u4e8e\u9700\u8981\u5168\u5c40\u552f\u4e00\u8bbf\u95ee\u70b9\u7684Activity\u3002</li> </ol> <p>singleInstancePerTask</p> <p>Android 12 \u5f15\u5165\u7684\u4e00\u79cd\u65b0\u7684 Activity \u542f\u52a8\u6a21\u5f0f\uff0c\u5b83\u5728\u4f20\u7edf\u7684 standard\u3001singleTop\u3001singleTask \u548c singleInstance \u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u66f4\u7075\u6d3b\u7684\u4efb\u52a1\u6808\u7ba1\u7406\u65b9\u5f0f</p> <p>\u4e0e\u200bsingleInstance\u200b\u533a\u522b\u662f\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eflag\uff1aFLAG_ACTIVITY_MULTIPLE_TASK \u6216 FLAG_ACTIVITY_NEW_DOCUMENT\u6765\u8fbe\u5230\u591a\u4e2a\u4efb\u52a1\u6808\u5206\u522b\u521b\u5efa\u5b9e\u4f8b</p> <p>\u5e94\u7528\u573a\u666f\uff1a</p> <p>\u9002\u7528\u4e8e\u9700\u8981\u72ec\u7acb\u4efb\u52a1\u6808\u7684 Activity\uff0c\u4f8b\u5982\uff1a</p> <p>\u6587\u6863\u7f16\u8f91\u5e94\u7528\u4e2d\u7684\u6587\u6863\u67e5\u770b\u754c\u9762\u3002</p> <p>\u591a\u7a97\u53e3\u6a21\u5f0f\u4e0b\u9700\u8981\u72ec\u7acb\u8fd0\u884c\u7684 Activity</p> <p>\u4f8b\u5982\uff0c\u6d4f\u89c8\u5668\u5e94\u7528\u4e2d\u6bcf\u4e2a\u6807\u7b7e\u9875\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u4efb\u52a1\u6808\u8fd0\u884c</p>"}, {"location": "android/interview/android_base/#onsaveinstancestate", "title": "\u8bf4\u4e0bonSaveInstanceState()\u65b9\u6cd5\u7684\u4f5c\u7528\u4ee5\u53ca\u4f55\u65f6\u4f1a\u88ab\u8c03\u7528", "text": "<p>\u4f5c\u7528:\u4fdd\u5b58\u7528\u6237\u754c\u9762\u72b6\u6001\u6570\u636e\u7b49\uff1a\u4f8b\u5982\uff0c\u4fdd\u5b58\u7528\u6237\u5728\u6587\u672c\u6846\u4e2d\u8f93\u5165\u7684\u5185\u5bb9\u3001\u9009\u4e2d\u7684\u5217\u8868\u9879\u3001\u6eda\u52a8\u4f4d\u7f6e\u7b49</p> <ul> <li>\u200b\u914d\u7f6e\u66f4\u6539\uff1a\u5982\u5c4f\u5e55\u65cb\u8f6c\u3001\u8bed\u8a00\u66f4\u6539\u7b49\uff0c\u5bfc\u81f4Activity\u88ab\u9500\u6bc1\u5e76\u91cd\u65b0\u521b\u5efa\u3002</li> <li>\u200b\u7cfb\u7edf\u8d44\u6e90\u4e0d\u8db3\uff1a\u5f53\u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u53ef\u80fd\u4f1a\u9500\u6bc1\u540e\u53f0\u7684Activity\u4ee5\u91ca\u653e\u8d44\u6e90\u3002</li> <li>\u200b\u7528\u6237\u64cd\u4f5c\uff1a\u4f8b\u5982\u7528\u6237\u6309\u4e0bHome\u952e\uff0cActivity\u8fdb\u5165\u540e\u53f0\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u9500\u6bc1Activity\u4ee5\u56de\u6536\u5185\u5b58</li> </ul> <p>android Honeycomb(11)\u4e4b\u524d\u662fonPause\u4e4b\u524d\u8c03\u7528</p> <p>android p(28)\u4e4b\u524donStop\u4e4b\u524d\u8c03\u7528\uff0c\u5426\u6d4bonStop\u4e4b\u540e\u8c03\u7528</p> <p>onRestoreInstanceState\u662f\u5728onStart\u4e4b\u540eonPostCreate\u4e4b\u524d\u8c03\u7528</p>"}, {"location": "android/interview/android_base/#activity_1", "title": "Activity\u7684\u751f\u547d\u5468\u671f", "text": "<p>\u542f\u52a8</p> <p>\u6807\u51c6\u7248\uff1aonCreate-&gt;onStart-&gt;onResume</p> <p>onAttachBaseContext-&gt;onCreate-&gt;onStart-&gt;onPostCreate-&gt;onResume-&gt;onPostResume-&gt;onAttachedToWindow-&gt;onWindowFocusChanged</p> <p>\u9500\u6bc1</p> <p>\u6807\u51c6\u7248\uff1aonPause-&gt;onStop-&gt;onDestroy</p> <p>onPause-&gt;onWindowFocusChanged-&gt;onStop-&gt;onDestroy-&gt;onDetachedFromWindow</p> <p>\u62d3\u5c55</p> <p>ActivityA\u542f\u52a8\u53e6\u4e00\u4e2aActivityB\u4f1a\u8c03\u7528\u54ea\u4e9b\u65b9\u6cd5\uff1f\u5982\u679cB\u662f\u900f\u660e\u4e3b\u9898\u7684\u6216DialogActivity</p> <p>ActivityA\u7684onPause-&gt;ActivityB\u7684onCreate-&gt;onStart-&gt;onResume-&gt;ActivityA\u7684onStop \u5982\u679cB\u662f\u900f\u660e\u4e3b\u9898\u7684\u53c8\u6216\u5219\u662f\u4e2aDialogActivity\u65f6\uff1a\u5219\u4e0d\u4f1a\u56de\u8c03A\u7684onStop</p> <p>onPasue\u4fa7\u91cd\u70b9\u662f\u5426\u53ef\u64cd\u4f5c</p> <p>onStop\u4fa7\u91cd\u70b9\u662f\u5426\u53ef\u89c1</p> <p>ActivityB\u8fd4\u56deActivityA\u4f1a\u8c03\u7528\u54ea\u4e9b\u65b9\u6cd5</p> <p>ActivityB\u7684onPause-&gt;ActivityA\u7684onRestart-&gt;onCreate-&gt;onStart-&gt;onResume-&gt;ActivityB\u7684onStop-&gt;onDestroy</p>"}, {"location": "android/interview/android_base/#activity_2", "title": "Activity\u6a2a\u7ad6\u5c4f\u5207\u6362\u7684\u751f\u547d\u5468\u671f", "text": "<p>onPause-&gt;onStop-&gt;onSaveInstanceState-&gt;onDestroy-&gt;onCreate-&gt;onStart-&gt;onRestoreInstanceState-&gt;onResume</p>"}, {"location": "android/interview/android_base/#fragment", "title": "Fragment\u7684\u751f\u547d\u5468\u671f", "text": "<p>onAttach-&gt;onCreate-&gt;onCreateView-&gt;onViewCreated-&gt;onStart-&gt;onResume</p> <p>onPause-&gt;onStop-&gt;onDestroyView-&gt;onDestroy-&gt;onDetach</p> <p>\u7ed3\u5408Activity</p> <p>onCreate(A)-&gt;onAttach(F)-&gt;onCreate(F)-&gt;onCreateView(F)-&gt;onViewCreated(F)-&gt;onStart(F)-&gt;onStart(A)-&gt;onResume(A)-&gt;onReume(F)</p> <p>onPause(F)-&gt;onPause(A)-&gt;onStop(F)-&gt;onStop(A)-&gt;onDestroyView(F)-&gt;onDestroy(F)-&gt;onDetach(F)-&gt;onDestroy(A)</p>"}, {"location": "android/interview/android_base/#fragmentaddreplaceshowhide", "title": "\u7ba1\u7406Fragment\u4e2d\u7684add\u3001replace\u3001show\u548chide\u7684\u533a\u522b", "text": "<ul> <li>add() \u200b\u7528\u9014\uff1a\u5c06\u4e00\u4e2a\u65b0\u7684Fragment\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\u3002</li> </ul> <p>\u200b\u884c\u4e3a\uff1a\u65b0\u7684Fragment\u4f1a\u88ab\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\uff0c\u4f46\u4e0d\u4f1a\u79fb\u9664\u6216\u9500\u6bc1\u73b0\u6709\u7684Fragment\u3002</p> <p>\u200b\u751f\u547d\u5468\u671f\uff1a\u65b0\u7684Fragment\u4f1a\u7ecf\u5386onAttach\u3001onCreate\u3001onCreateView\u3001onViewCreated\u3001onStart\u548conResume\u7b49\u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002</p> <p>\u200b\u9002\u7528\u573a\u666f\uff1a\u5f53\u4f60\u5e0c\u671b\u5728\u540c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u4fdd\u7559\u591a\u4e2aFragment\uff0c\u5e76\u4e14\u53ef\u80fd\u9700\u8981\u9891\u7e41\u5207\u6362\u5b83\u4eec\u65f6\uff0c\u4f7f\u7528add\u65b9\u6cd5\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u91cd\u65b0\u521b\u5efaFragment\u3002</p> <ul> <li>replace()</li> </ul> <p>\u200b\u7528\u9014\uff1a\u7528\u4e00\u4e2a\u65b0\u7684Fragment\u66ff\u6362\u5bb9\u5668\u4e2d\u7684\u73b0\u6709Fragment\u3002</p> <p>\u200b\u884c\u4e3a\uff1a\u5f53\u524d\u7684Fragment\u4f1a\u88ab\u79fb\u9664\uff0c\u65b0\u7684Fragment\u4f1a\u88ab\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\u3002</p> <p>\u200b\u751f\u547d\u5468\u671f\uff1a\u5f53\u524d\u7684Fragment\u4f1a\u7ecf\u5386onPause\u3001onStop\u3001onDestroyView\u3001onDestroy\u548conDetach\u7b49\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff0c\u65b0\u7684Fragment\u4f1a\u7ecf\u5386onAttach\u3001onCreate\u3001onCreateView\u3001onViewCreated\u3001onStart\u548conResume\u7b49\u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002</p> <p>\u200b\u9002\u7528\u573a\u666f\uff1a\u5f53\u4f60\u5e0c\u671b\u5b8c\u5168\u66ff\u6362\u5f53\u524d\u7684Fragment\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u4fdd\u7559\u5176\u72b6\u6001\u65f6\uff0c\u4f7f\u7528replace\u65b9\u6cd5\u3002</p> <ul> <li>show()</li> </ul> <p>\u200b\u7528\u9014\uff1a\u663e\u793a\u4e00\u4e2a\u5df2\u7ecf\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\u7684Fragment\u3002</p> <p>\u200b\u884c\u4e3a\uff1a\u5c06\u6307\u5b9a\u7684Fragment\u7684\u89c6\u56fe\u8bbe\u7f6e\u4e3a\u53ef\u89c1\u3002</p> <p>\u200b\u751f\u547d\u5468\u671f\uff1aonHiddenChanged\u56de\u8c03\u3002</p> <p>\u200b\u9002\u7528\u573a\u666f\uff1a\u5f53\u4f60\u5e0c\u671b\u5728\u591a\u4e2aFragment\u4e4b\u95f4\u5207\u6362\uff0c\u5e76\u4e14\u5e0c\u671b\u4fdd\u7559\u5b83\u4eec\u7684\u72b6\u6001\u65f6\uff0c\u4f7f\u7528show\u548chide\u65b9\u6cd5\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002</p> <ul> <li>hide()</li> </ul> <p>\u200b\u7528\u9014\uff1a\u9690\u85cf\u4e00\u4e2a\u5df2\u7ecf\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\u7684Fragment\u3002</p> <p>\u200b\u884c\u4e3a\uff1a\u5c06\u6307\u5b9a\u7684Fragment\u7684\u89c6\u56fe\u8bbe\u7f6e\u4e3a\u4e0d\u53ef\u89c1\u3002</p> <p>\u200b\u751f\u547d\u5468\u671f\uff1aonHiddenChanged\u56de\u8c03\u3002</p> <p>\u200b\u9002\u7528\u573a\u666f\uff1a\u5f53\u4f60\u5e0c\u671b\u5728\u591a\u4e2aFragment\u4e4b\u95f4\u5207\u6362\uff0c\u5e76\u4e14\u5e0c\u671b\u4fdd\u7559\u5b83\u4eec\u7684\u72b6\u6001\u65f6\uff0c\u4f7f\u7528show\u548chide\u65b9\u6cd5\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd</p> <p>onHiddenChanged\u662f\u5728onStart\u4e4b\u540eonResume\u4e4b\u524d</p>"}, {"location": "android/interview/android_base/#fragment_1", "title": "Fragment\u6a2a\u7ad6\u5c4f\u5207\u6362\u7684\u751f\u547d\u5468\u671f", "text": "<p>onPause-&gt;onStop-&gt;onSaveInstanceState-&gt;onDestroyView-&gt;onDestroy-&gt;onDetach-&gt;onAttach-&gt;onCreate-&gt;onCreateView-&gt;onViewCreated-&gt;onViewStateRestored-&gt;onStart-&gt;onRestoreInstanceState-&gt;onResume</p> <p>\u91cd\u5efa\u751f\u547d\u5468\u671fFragment\u4f18\u5148\u4e8eActivity\uff0c\u5982onAttach-&gt;onCreate(F)-&gt;onCreate(A)</p>"}, {"location": "android/interview/android_base/#fragment_2", "title": "\u5982\u4f55\u5904\u7406\u91cd\u5efa\u5bfc\u81f4Fragment\u91cd\u53e0", "text": "<ol> <li> <p>\u914d\u7f6e\u6e05\u5355\u6587\u4ef6\uff0c\u5982\u5c4f\u5e55\u65cb\u8f6candroid:configChanges=\"screenSize|orientation\"</p> </li> <li> <p>\u521b\u5efaFragmnet\u4f7f\u7528tag\u914d\u5408add\u3001show\u3001hide\u65b9\u5f0f <pre><code>val bt = supportFragmentManager.beginTransaction()\nval fragment = supportFragmentManager.findFragmentByTag(\"blankFragment\")\nif (fragment == null) {\n    bt.add(R.id.fragment, blankFragment, \"blankFragment\")\n        .show(blankFragment)\n        .commitNowAllowingStateLoss()\n} else {\n    supportFragmentManager.beginTransaction()\n        .show(blankFragment)\n        .commitNowAllowingStateLoss()\n}\n</code></pre></p> </li> </ol>"}, {"location": "android/interview/android_base/#fragmentpageradapterfragmentstatepageradapter", "title": "FragmentPagerAdapter\u4e0eFragmentStatePagerAdapter\u7684\u533a\u522b", "text": "<p>\u4e8c\u8005\u90fd\u7ee7\u627fPagerAdapter\uff0c\u7ed3\u5408ViewPager\u4f7f\u7528</p> <p>FragmentPagerAdapter</p> <ul> <li> <p>\u4e0d\u4f1a\u9500\u6bc1 Fragment\uff0c\u4ec5\u8c03\u7528 onPause() \u548c onStop()\uff0c\u89c6\u56fe\u4f1a\u88ab\u9500\u6bc1\u4f46\u5b9e\u4f8b\u4fdd\u7559\u5728 FragmentManager \u4e2d</p> </li> <li> <p>\u9002\u7528\u4e8e\u5c11\u91cf\u3001\u9759\u6001\u7684\u9875\u9762\uff0c\u4f8b\u5982\u4e00\u7ec4\u56fa\u5b9a\u7684\u6807\u7b7e\u9875\u3002\u7531\u4e8e\u5b83\u4fdd\u7559\u6240\u6709 Fragment \u5b9e\u4f8b\uff0c\u5185\u5b58\u5360\u7528\u8f83\u9ad8\uff0c\u4f46\u5207\u6362\u9875\u9762\u65f6\u6027\u80fd\u8f83\u597d</p> </li> </ul> <p>\u200bFragmentStatePagerAdapte</p> <ul> <li> <p>\u4f1a\u9500\u6bc1\u4e0d\u518d\u663e\u793a\u7684 Fragment\uff0c\u8c03\u7528 onDestroyView() \u548c onDestroy()\uff0c\u4f46\u901a\u8fc7 onSaveInstanceState() \u4fdd\u5b58\u72b6\u6001\uff0c\u4ee5\u4fbf\u6062\u590d</p> </li> <li> <p>\u9002\u7528\u4e8e\u5927\u91cf\u3001\u52a8\u6001\u7684\u9875\u9762\uff0c\u4f8b\u5982\u65b0\u95fb\u5217\u8868\u6216\u56fe\u7247\u6d4f\u89c8\u3002\u5b83\u4f1a\u9500\u6bc1\u4e0d\u518d\u9700\u8981\u7684 Fragment\uff0c\u4ec5\u4fdd\u7559\u72b6\u6001\u4fe1\u606f\uff0c\u4ece\u800c\u8282\u7701\u5185\u5b58\uff0c\u4f46\u5207\u6362\u9875\u9762\u65f6\u53ef\u80fd\u4f1a\u6709\u7a0d\u5fae\u7684\u6027\u80fd\u5f00\u9500</p> </li> </ul> <p>\u53ef\u4ee5\u4f7f\u7528ViewPager2\u4ee3\u66ffViewPager+FragmentStatePagerAdapter</p>"}, {"location": "android/interview/android_base/#service", "title": "Service\u7684\u751f\u547d\u5468\u671f\u4ee5\u53ca\u542f\u52a8\u9500\u6bc1\u65b9\u5f0f", "text": "<p>\u200bstartService()</p> <p>\u9996\u6b21\u542f\u52a8\uff1aonCreate() -&gt; onStartCommand() </p> <p>\u591a\u6b21\u542f\u52a8\uff1aonStartCommand() </p> <p>stopService()/stopSelf()</p> <p>onDestroy()</p> <p>\u200bbindService()</p> <p>onCreate() -&gt; onBind()</p> <p>unbindService()</p> <p>onDestroy()</p>"}, {"location": "android/interview/android_base/#onstartcommand", "title": "onStartCommand\u8fd4\u56de\u503c\u6709\u5565\u4f5c\u7528", "text": "<p>START_STICKY(\u9ed8\u8ba4)\uff1a\u7ec8\u6b62\u670d\u52a1\uff0c\u7cfb\u7edf\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u521b\u5efa\u670d\u52a1\u5e76\u8c03\u7528onStartCommand\uff0c\u4f46\u4e0d\u4f1a\u91cd\u65b0\u4f20\u9012\u6700\u540e\u4e00\u4e2aIntent\uff0c\u800c\u662f\u4f20\u9012\u4e00\u4e2a\u7a7a\u7684Intent</p> <p>\u9002\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u9700\u8981\u6301\u7eed\u8fd0\u884c\u4f46\u4e0d\u4f9d\u8d56\u4e8e\u7279\u5b9aIntent\u7684\u670d\u52a1\uff0c\u4f8b\u5982\u540e\u53f0\u97f3\u4e50\u64ad\u653e\u5668</p> <p>START_REDELIVER_INTENT\uff1a\u7ec8\u6b62\u670d\u52a1\uff0c\u7cfb\u7edf\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u521b\u5efa\u670d\u52a1\u5e76\u8c03\u7528onStartCommand\uff0c\u540c\u65f6\u91cd\u65b0\u4f20\u9012\u6700\u540e\u4e00\u4e2aIntent</p> <p>\u200b\u9002\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u9700\u8981\u786e\u4fdd\u6bcf\u6b21\u542f\u52a8\u547d\u4ee4\u90fd\u80fd\u88ab\u6267\u884c\u7684\u670d\u52a1\uff0c\u4f8b\u5982\u6587\u4ef6\u4e0b\u8f7d\u6216\u6570\u636e\u540c\u6b65</p> <p>START_NOT_STICKY\uff1a\u7ec8\u6b62\u670d\u52a1\uff0c\u4e14\u6ca1\u6709\u65b0\u7684\u542f\u52a8\u547d\u4ee4\uff08Intent\uff09\u9700\u8981\u4f20\u9012\uff0c\u7cfb\u7edf\u4e0d\u4f1a\u81ea\u52a8\u91cd\u542f\u8be5\u670d\u52a1\u3002</p> <p>\u9002\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u4e00\u6b21\u6027\u4efb\u52a1\u6216\u5bf9\u5b9e\u65f6\u6027\u8981\u6c42\u4e0d\u9ad8\u7684\u4efb\u52a1</p> <p>START_STICKY_COMPATIBILITY: START_STICKY\u7684\u517c\u5bb9\u7248\u672c</p>"}, {"location": "android/interview/android_base/#activity-fragment", "title": "Activity \u4e0e Fragment \u4e4b\u95f4\u5e38\u89c1\u7684\u51e0\u79cd\u901a\u4fe1\u65b9\u5f0f", "text": "<p>\u9759\u6001\u53d8\u91cf\u3001\u5168\u5c40\u5e94\u7528\u7c7b(\u5355\u4f8b)\u3001\u6570\u636e\u5e93\u3001\u200b\u63a5\u53e3\u56de\u8c03\u3001\u200b\u5e7f\u64ad\u3001ViewModel\u548cLiveData</p>"}, {"location": "android/interview/android_base/#intent", "title": "Intent\u4f20\u9012\u6570\u636e\u6709\u5927\u5c0f\u9650\u5236\u5417", "text": "<p>\u7531\u4e8eIntent\u4f20\u8f93\u6570\u636e\u5e95\u5c42\u662f\u57fa\u4e8ebinder\u7684\uff0c\u800cbinder\u6570\u636e\u4f20\u8f93\u5927\u5c0f\u9650\u5236\u7ea61M\uff0c\u5177\u4f53\u770b\u6e90\u7801</p> <p>/frameworks/native/libs/binder/ProcessState.cpp <pre><code>#define BINDER_VM_SIZE ((1 * 1024 * 1024) - sysconf(_SC_PAGE_SIZE) * 2)\n</code></pre></p> <p>android\u9875\u9762\u5927\u5c0f\u4e3a4k\uff0c\u6240\u4ee5\u6700\u7ec8\u6570\u503c\u4e3a1M-8k</p> <p>\u901a\u8fc7adb shell getconf PAGESIZE\u67e5\u770b\u8bbe\u5907\u9875\u9762\u5927\u5c0f</p>"}, {"location": "android/interview/android_base/#serialzableparcelable", "title": "Serialzable\u548cParcelable\u7684\u533a\u522b", "text": "\u7279\u6027 Serializable Parcelable \u5b9e\u73b0\u590d\u6742\u5ea6 \u7b80\u5355\uff0c\u53ea\u9700\u5b9e\u73b0\u63a5\u53e3 \u590d\u6742\uff0c\u9700\u624b\u52a8\u5b9e\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5 \u6027\u80fd \u8f83\u4f4e\uff0c\u57fa\u4e8e\u53cd\u5c04\uff0c\u901f\u5ea6\u6162 \u9ad8\u6548\uff0c\u4e13\u4e3aAndroid\u4f18\u5316\uff0c\u901f\u5ea6\u5feb \u5185\u5b58\u6d88\u8017 \u8f83\u9ad8\uff0c\u53cd\u5c04\u673a\u5236\u5360\u7528\u66f4\u591a\u5185\u5b58 \u8f83\u4f4e\uff0c\u76f4\u63a5\u64cd\u4f5cParcel\u5bf9\u8c61 \u4f7f\u7528\u573a\u666f \u5bf9\u8c61\u6301\u4e45\u5316\u3001\u7f51\u7edc\u4f20\u8f93 Android\u7ec4\u4ef6\u95f4\u9ad8\u6548\u6570\u636e\u4f20\u9012 \u4ee3\u7801\u7ef4\u62a4 \u6613\u4e8e\u7ef4\u62a4 \u7ef4\u62a4\u6210\u672c\u8f83\u9ad8\uff0c\u7c7b\u7ed3\u6784\u53d8\u5316\u9700\u624b\u52a8\u66f4\u65b0 \u8de8\u5e73\u53f0\u80fd\u529b \u652f\u6301\u8de8Java\u5e73\u53f0 \u4ec5\u9650Android\u5e73\u53f0 \u5b89\u5168\u6027 \u53cd\u5c04\u53ef\u80fd\u5e26\u6765\u5b89\u5168\u9690\u60a3 \u66f4\u597d\u5730\u63a7\u5236\u5e8f\u5217\u5316\u8fc7\u7a0b\uff0c\u5b89\u5168\u6027\u8f83\u9ad8"}, {"location": "android/interview/android_base/#contentprovider", "title": "\u7b80\u5355\u4ecb\u7ecd\u4e0bContentProvider\u662f\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u5171\u4eab\u7684", "text": "<p>\u4e3b\u8981\u662f\u57fa\u4e8e\u200bURI\uff08\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff09\u200b\u548c\u200bBinder\u673a\u5236\u6765\u5b9e\u73b0\u8de8\u8fdb\u7a0b\u7684\u6570\u636e\u5171\u4eab</p> <p>\u200bURI \u6807\u8bc6\u6570\u636e\uff1aContentProvider\u4f7f\u7528URI\u6765\u552f\u4e00\u6807\u8bc6\u5176\u7ba1\u7406\u7684\u6570\u636e\u3002</p> <p>URI \u7684\u683c\u5f0f\u901a\u5e38\u4e3a content:///\uff0c\u5176\u4e2d  \u662f ContentProvider \u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0c \u6307\u5411\u5177\u4f53\u7684\u6570\u636e\u96c6\u6216\u6570\u636e\u9879\u3002\u5ba2\u6237\u7aef\u5e94\u7528\u901a\u8fc7URI\u627e\u5230\u5bf9\u5e94\u7684ContentProvider\u5e76\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u3002 <p>\u200bBinder \u673a\u5236\uff1aContentProvider \u7684\u5e95\u5c42\u5b9e\u73b0\u4f9d\u8d56\u4e8e Android \u7684 Binder \u673a\u5236\uff0c\u8fd9\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u8de8\u8fdb\u7a0b\u901a\u4fe1\uff08IPC\uff09\u673a\u5236\u3002Binder \u5141\u8bb8\u4e0d\u540c\u8fdb\u7a0b\u95f4\u7684\u5bf9\u8c61\u8c03\u7528\uff0c\u4f7f\u5f97ContentProvider\u80fd\u591f\u5b89\u5168\u5730\u5728\u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u548c\u8c03\u7528\u65b9\u6cd5\u3002</p> <p>\u200b\u6570\u636e\u5b58\u50a8\uff1a\u867d\u7136 ContentProvider \u53ef\u4ee5\u57fa\u4e8e\u591a\u79cd\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\uff08\u5982 SQLite \u6570\u636e\u5e93\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u7f51\u7edc\u7b49\uff09\uff0c\u4f46\u5176\u6838\u5fc3\u63a5\u53e3\u548c\u64cd\u4f5c\u65b9\u6cd5\u5bf9\u5f00\u53d1\u8005\u662f\u900f\u660e\u7684\u3002\u5f00\u53d1\u8005\u53ea\u9700\u5b9e\u73b0 ContentProvider \u7684\u62bd\u8c61\u65b9\u6cd5\uff08\u5982 query()\u3001insert()\u3001update()\u3001delete() \u7b49\uff09\uff0c\u800c\u4e0d\u9700\u8981\u5173\u5fc3\u5e95\u5c42\u6570\u636e\u5b58\u50a8\u7684\u5177\u4f53\u5b9e\u73b0</p>"}, {"location": "android/interview/android_base/#intentfilter", "title": "IntentFilter\u662f\u4ec0\u4e48\uff1f\u6709\u54ea\u4e9b\u4f7f\u7528\u573a\u666f", "text": "<p>IntentFilter\u901a\u8fc7\u5b9a\u4e49Action\u3001Category\u3001Data\u7b49\u5143\u7d20\uff0c\u63cf\u8ff0\u7ec4\u4ef6\u80fd\u591f\u5904\u7406\u7684Intent\u7c7b\u578b\u548c\u6570\u636e\u683c\u5f0f</p> <p>\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\uff1a\u9690\u5f0f\u542f\u52a8\u5e94\u7528\uff0c\u5982\u6253\u5f00\u7f51\u9875\u3001\u7535\u8bdd\u7b49</p> <p>\u5904\u7406\u7cfb\u7edf\u5e7f\u64ad\uff1a\u76d1\u542c\u7cfb\u7edf\u5e7f\u64ad\uff0c\u5982\u7f51\u7edc\u6539\u53d8\uff0c\u4eae/\u706d\u5c4f</p> <p>\u5b9e\u73b0\u5206\u4eab\u529f\u80fd\uff1a\u5b9a\u4e49\u652f\u6301\u89e3\u6790\u7684MIME\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u54cd\u5e94\u7cfb\u7edf\u5206\u4eab\u529f\u80fd</p>"}, {"location": "android/interview/android_base/#context", "title": "Context\u7684\u4f5c\u7528", "text": "<p>Application: \u7528\u4e8e\u8bbf\u95ee\u5e94\u7528\u7a0b\u5e8f\u8303\u56f4\u5185\u7684\u8d44\u6e90\u6216\u5728\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u65f6\u521d\u59cb\u5316\u4e00\u4e9b\u5168\u5c40\u8bbe\u7f6e</p> <p>Activity: \u542f\u52a8\u65b0\u7684 Activity\u3001\u663e\u793a\u5bf9\u8bdd\u6846\u3001\u4ee5\u53ca\u4e0e\u7528\u6237\u754c\u9762\u76f8\u5173\u7684\u8d44\u6e90\u8bbf\u95ee</p> <p>Service: \u4e0d\u80fd\u7528\u4e8e\u521b\u5efa\u5bf9\u8bdd\u6846\u6216\u8fdb\u884c\u89c6\u56fe\u586b\u5145</p> <p>BroadcastReceiver: \u751f\u547d\u5468\u671f\u4ec5\u9650\u4e8e\u63a5\u6536\u8fc7\u7a0b\uff0c\u7528\u4e8e\u5728\u63a5\u6536\u5230\u5e7f\u64ad\u65f6\u6267\u884c\u4e00\u4e9b\u77ed\u6682\u7684\u64cd\u4f5c</p> <p>\u200bContentProvider\uff1a\u4e0d\u80fd\u7528\u4e8e\u521b\u5efa\u5bf9\u8bdd\u6846\u6216\u8fdb\u884c\u89c6\u56fe\u586b\u5145</p>"}, {"location": "android/interview/android_base/#intentservice", "title": "IntentService\u7684\u5e94\u7528\u573a\u666f\u548c\u4f7f\u7528\u59ff\u52bf", "text": "<p>\u540e\u53f0\u6570\u636e\u5904\u7406\uff1a\u4ece\u7f51\u7edc\u4e0b\u8f7d\u6570\u636e\u3001\u89e3\u6790 JSON \u6587\u4ef6\u3001\u5904\u7406\u56fe\u50cf\u7b49</p> <p>\u6279\u91cf\u4efb\u52a1\u6267\u884c\uff1a\u6309\u987a\u5e8f\u5904\u7406\u4e00\u7cfb\u5217\u7528\u6237\u8bf7\u6c42\u3001\u66f4\u65b0\u591a\u4e2a\u6570\u636e\u5e93\u8bb0\u5f55\u7b49</p> <p>\u5b9a\u671f\u4efb\u52a1\uff1a\u5b9a\u65f6\u66f4\u65b0\u6570\u636e\u3001\u53d1\u9001\u63a8\u9001\u901a\u77e5\u7b49</p> <p>\u4efb\u52a1\u961f\u5217\u7ba1\u7406\uff1a\u5f53\u53d1\u9001\u591a\u4e2a Intent \u65f6\uff0c\u5b83\u4eec\u4f1a\u6309\u7167\u5230\u8fbe\u7684\u987a\u5e8f\u4f9d\u6b21\u6267\u884c</p> <p>onHandleIntent()\u83b7\u53d6\u6570\u636e</p>"}, {"location": "android/interview/android_base/#activityrunonuithread", "title": "\u8c08\u8c08\u4f60\u5bf9 Activity.runOnUiThread \u7684\u7406\u89e3", "text": "<p>runOnUiThread\u7684\u5b9e\u73b0\u57fa\u4e8eAndroid\u7684Handler\u673a\u5236\u3002\u6bcf\u4e2aActivity\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5173\u8054\u7684Handler\u5bf9\u8c61\uff08mHandler\uff09\uff0c\u8be5 Handler \u7ed1\u5b9a\u5230\u4e3b\u7ebf\u7a0b\u7684 Looper\u3002\u5f53\u8c03\u7528 runOnUiThread \u65f6\uff0c\u5982\u679c\u7ebf\u7a0b\u4e0d\u5728\u4e0d\u7ebf\u7a0b\u5219\u8c03\u7528mHandler.post\uff0c\u5426\u5219\u76f4\u63a5\u8c03\u7528\u4f20\u5165Runnable\u7684run\u65b9\u6cd5 <pre><code>public final void runOnUiThread(Runnable action) {\n    if (Thread.currentThread() != mUiThread) {\n        mHandler.post(action);\n    } else {\n        action.run();\n    }\n}\n</code></pre></p>"}, {"location": "android/interview/android_base/#ui", "title": "\u5b50\u7ebf\u7a0b\u80fd\u5426\u66f4\u65b0UI", "text": "<p>\u89c1\u5b50\u7ebf\u7a0b</p>"}, {"location": "android/interview/android_fws/", "title": "android\u8fdb\u9636", "text": ""}, {"location": "android/interview/android_fws/#android", "title": "Android\u7684\u4e8b\u4ef6\u5206\u53d1\u673a\u5236", "text": "<p>\u89c1\u4e8b\u4ef6\u5206\u53d1</p>"}, {"location": "android/interview/android_fws/#handlerthread", "title": "HandlerThread\u7684\u4f7f\u7528\u573a\u666f\u548c\u7528\u6cd5", "text": "<p>\u89c1HandlerThread</p>"}, {"location": "android/interview/android_fws/#handler", "title": "Handler\u76f8\u5173\u95ee\u9898", "text": "<p>\u89c1Handler</p> <p>HandlerThread\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u5b58\u5728\uff1f</p> <p>\u7b80\u8ff0\u4e0b Handler \u673a\u5236\u7684\u603b\u4f53\u539f\u7406\uff1f</p> <p>Looper \u5b58\u5728\u54ea\uff1f\u5982\u4f55\u53ef\u4ee5\u4fdd\u8bc1\u7ebf\u7a0b\u72ec\u6709\uff1f</p> <p>\u5982\u4f55\u7406\u89e3 ThreadLocal \u7684\u4f5c\u7528\uff1f</p> <p>\u4e3b\u7ebf\u7a0b Main Looper \u548c\u4e00\u822c Looper \u7684\u5f02\u540c\uff1f</p> <p>Handler \u6216\u8005\u8bf4 Looper \u5982\u4f55\u5207\u6362\u7ebf\u7a0b\uff1f</p> <p>Looper \u7684 loop() \u6b7b\u5faa\u73af\u4e3a\u4ec0\u4e48\u4e0d\u5361\u6b7b\uff1f</p> <p>Looper \u7684\u7b49\u5f85\u662f\u5982\u4f55\u80fd\u591f\u51c6\u786e\u5524\u9192\u7684\uff1f</p> <p>Message \u5982\u4f55\u83b7\u53d6\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bbe\u8ba1\uff1f</p>"}, {"location": "android/interview/android_fws/#ams", "title": "AMS\u76f8\u5173", "text": "<p>ActivityManagerService\u662f\u4ec0\u4e48\uff1f\u4ec0\u4e48\u65f6\u5019\u521d\u59cb\u5316\u7684\uff1f\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f</p> <p>ActivityThread\u662f\u4ec0\u4e48?ApplicationThread\u662f\u4ec0\u4e48?\u4ed6\u4eec\u7684\u533a\u522b</p> <p>Instrumentation\u662f\u4ec0\u4e48\uff1f\u548cActivityThread\u662f\u4ec0\u4e48\u5173\u7cfb\uff1f</p> <p>ActivityManagerService\u548czygote\u8fdb\u7a0b\u901a\u4fe1\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002</p> <p>\u624b\u5199\u5b9e\u73b0\u7b80\u5316\u7248AMS</p>"}, {"location": "android/interview/android_fws/#binder", "title": "Binder\u76f8\u5173", "text": "<p>Binder\u6709\u4ec0\u4e48\u4f18\u52bf</p> <p>Binder\u662f\u5982\u4f55\u505a\u5230\u4e00\u6b21\u62f7\u8d1d\u7684</p> <p>MMAP\u7684\u5185\u5b58\u6620\u5c04\u539f\u7406\u4e86\u89e3\u5417</p> <p>Binder\u673a\u5236\u662f\u5982\u4f55\u8de8\u8fdb\u7a0b\u7684</p> <p>\u8bf4\u8bf4\u56db\u5927\u7ec4\u4ef6\u7684\u901a\u4fe1\u673a\u5236 </p>"}, {"location": "android/interview/data_struct/", "title": "\u6570\u636e\u7ed3\u6784\u7b97\u6cd5", "text": ""}, {"location": "android/interview/data_struct/#listsetmap", "title": "\u8c08\u8c08List,Set,Map\u7684\u533a\u522b", "text": "<p>List\uff1a\u6709\u5e8f\u7684\u96c6\u5408\uff0c\u5141\u8bb8\u91cd\u590d\u5143\u7d20\uff0c\u4e3b\u8981\u5b9e\u73b0\u7c7b\u200bArrayList\u548c\u200bLinkedList</p> <p>Set\uff1a\u4e0d\u4fdd\u8bc1\u987a\u5e8f(LinkedHashSet\u548cTreeSet\u9664\u5916)\uff0c\u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\uff0c\u4e3b\u8981\u5b9e\u73b0\u7c7b\u200bHashSet\u3001LinkedHashSet\u548cTreeSet</p> <p>Map\uff1a\u952e\u503c\u5bf9\uff0ckey\u4e0d\u5141\u8bb8\u91cd\u590d\uff0cvalue\u5141\u8bb8\u91cd\u590d\uff0c\u4e0d\u4fdd\u8bc1\u987a\u5e8f(LinkedHashMap\u548cTreeMap\u9664\u5916)\uff0c\u4e3b\u8981\u5b9e\u73b0\u7c7bHashMap\u3001LinkedHashMap\u548cTreeMap</p>"}, {"location": "android/interview/data_struct/#_1", "title": "\u5404\u4e2a\u96c6\u5408\u7684\u65f6\u95f4\u590d\u6742\u5ea6", "text": "\u7279\u6027 ArrayList LinkedList HashSet LinkedHashSet TreeSet HashMap LinkedHashMap TreeMap \u200b\u63d2\u5165 O(1) O(1) O(1) O(1) O(log n) O(1) O(1) O(log n) \u200b\u5220\u9664 O(n) O(1) O(1) O(1) O(log n) O(1) O(1) O(log n) \u200b\u67e5\u627e O(1) O(n) O(1) O(1) O(log n) O(1) O(1) O(log n) \u200b\u8bbf\u95ee\u5143\u7d20 O(1) O(n) \u4e0d\u652f\u6301 \u4e0d\u652f\u6301 \u4e0d\u652f\u6301 \u4e0d\u652f\u6301 \u4e0d\u652f\u6301 \u4e0d\u652f\u6301 \u200b\u6709\u5e8f\u6027 \u63d2\u5165\u987a\u5e8f \u63d2\u5165\u987a\u5e8f \u65e0\u5e8f \u63d2\u5165\u987a\u5e8f \u81ea\u7136\u987a\u5e8f\u6216\u81ea\u5b9a\u4e49 \u65e0\u5e8f \u63d2\u5165\u987a\u5e8f \u7136\u987a\u5e8f\u6216\u81ea\u5b9a\u4e49"}, {"location": "android/interview/data_struct/#arraylistlinkedlist", "title": "\u8c08\u8c08ArrayList\u548cLinkedList\u7684\u533a\u522b", "text": "<p>\u200bArrayList\uff1a</p> <ul> <li>\u57fa\u4e8e\u52a8\u6001\u6570\u7ec4\u5b9e\u73b0\uff0c\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee\u3002</li> <li>\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u5728\u5217\u8868\u4e2d\u95f4\u4f4d\u7f6e\u65f6\u6548\u7387\u8f83\u4f4e\u3002</li> </ul> <p>\u200bLinkedList\uff1a</p> <ul> <li>\u57fa\u4e8e\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\uff0c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u6548\u7387\u9ad8\u3002</li> <li>\u968f\u673a\u8bbf\u95ee\u6548\u7387\u8f83\u4f4e\u3002</li> </ul>"}, {"location": "android/interview/data_struct/#hashmaphashtable", "title": "\u8bf7\u8bf4\u4e00\u4e0bHashMap\u4e0eHashTable\u7684\u533a\u522b", "text": "<p>HashMap\uff1a\u975e\u7ebf\u7a0b\u5b89\u5168\uff0ckey/value\u5141\u8bb8null\u503c\uff0c\u521d\u59cb\u5bb9\u91cf\u4e3a16\uff0c\u6bcf\u6b21\u6269\u5bb9\u4e3a2\u500d</p> <p>\u200bHashTable\uff1a\u7ebf\u7a0b\u5b89\u5168(synchronized)\uff0c\u4e0d\u5141\u8bb8null\u503c\uff0c\u521d\u59cb\u5bb9\u91cf\u4e3a11\uff0c\u6bcf\u6b21\u6269\u5bb9\u4e3a\u539f\u6765\u76842n+1</p>"}, {"location": "android/interview/data_struct/#arraylist", "title": "\u8c08\u4e00\u8c08ArrayList\u7684\u6269\u5bb9\u673a\u5236", "text": "<p>\u89c1ArrayList</p>"}, {"location": "android/interview/data_struct/#hashmap", "title": "HashMap\u7684\u5b9e\u73b0\u539f\u7406", "text": "<p>\u89c1HashMap</p> <p>\u54c8\u5e0c\u8868\u6307\u7684\u662f</p> <ul> <li>\u200b\u54c8\u5e0c\u6876\u6570\u7ec4\uff08Node[] table\uff09\u200b\uff1a\u8fd9\u662f\u5b58\u50a8\u952e\u503c\u5bf9\u7684\u6838\u5fc3\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9 <li>\u200b\u8282\u70b9\u7c7b\uff08Node\uff09\u200b\uff1a\u7528\u4e8e\u8868\u793a\u54c8\u5e0c\u8868\u4e2d\u7684\u6bcf\u4e2a\u952e\u503c\u5bf9\uff0c\u5305\u542b\u952e\u3001\u503c\u3001\u54c8\u5e0c\u7801\u548c\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5f15\u7528 <li>\u200b\u54c8\u5e0c\u51fd\u6570\uff08hash\u65b9\u6cd5\uff09\u200b\uff1a\u7528\u4e8e\u8ba1\u7b97\u952e\u7684\u54c8\u5e0c\u503c\uff0c\u5e76\u5c06\u5176\u6620\u5c04\u5230\u6570\u7ec4\u7684\u7d22\u5f15\u4f4d\u7f6e</li>"}, {"location": "android/interview/data_struct/#linkedhashmap", "title": "\u8bf7\u7b80\u8ff0LinkedHashMap\u7684\u5de5\u4f5c\u539f\u7406\u548c\u4f7f\u7528\u65b9\u5f0f", "text": "<p>\u548cHashMap\u7c7b\u4f3c\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684,\u9664\u4e86\u54c8\u5e0c\u8868\u7ef4\u62a4\u4e86\u4e00\u4e2a\u53cc\u5411\u94fe\u8868,LRU\uff08\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\uff09\u7f13\u5b58\uff0c\u901a\u8fc7\u91cd\u5199removeEldestEntry\uff0c\u89c1LinkedHashMap</p> <p>\u4f7f\u7528\u65b9\u5f0f\u548cHashMap\u76f8\u540c</p>"}, {"location": "android/interview/data_struct/#concurrenthashmap", "title": "\u8c08\u8c08\u5bf9\u4e8eConcurrentHashMap\u7684\u7406\u89e3", "text": "<p>\u9ad8\u6027\u80fd\u3001\u7ebf\u7a0b\u5b89\u5168\u7684\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u76f8\u6bd4HashTable\u548cCollections.synchronizedMap()\uff0cConcurrentHashMap\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u5e76\u53d1\u6027\u80fd\uff0c\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4\u6216\u6027\u80fd\u74f6\u9888</p> <p>\u200bJDK 1.7\uff1a\u4f7f\u7528\u5206\u6bb5\u9501\uff08Segment\uff09\u673a\u5236\uff0c\u5c06\u6570\u636e\u5206\u6210\u591a\u4e2a\u6bb5\uff0c\u6bcf\u4e2a\u6bb5\u72ec\u7acb\u52a0\u9501\uff0c\u4ece\u800c\u63d0\u9ad8\u5e76\u53d1\u5ea6\u3002</p> <p>\u200bJDK 1.8\uff1a\u79fb\u9664\u4e86\u5206\u6bb5\u9501\uff0c\u91c7\u7528 CAS + synchronized\u673a\u5236\uff0c\u76f4\u63a5\u4f7f\u7528Node[] table\u7ed3\u6784\uff0c\u7b80\u5316\u4e86\u6570\u636e\u7ed3\u6784\u5e76\u63d0\u9ad8\u4e86\u6027\u80fd <p>\u6269\u5bb9\u673a\u5236\u548cHashMap\u76f8\u540c\uff0c\u533a\u522b\u662fHashMap\u6269\u5bb9\u662f\u5355\u7ebf\u7a0b\uff0c\u5b83\u662f\u591a\u7ebf\u7a0b\uff0c\u5e76\u53d1\u6269\u5bb9\u6027\u80fd\u5f71\u54cd\u66f4\u5c11 \u4ec0\u4e48\u662f\u5192\u6ce1\u6392\u5e8f\uff1f\u5982\u4f55\u4f18\u5316\uff1f</p> <p>\u8bf7\u8bf4\u4e00\u8bf4HashMap\uff0cSparseArrary\u539f\u7406\uff0cSparseArrary\u76f8\u6bd4HashMap\u7684\u4f18\u70b9\u3001ConcurrentHashMap\u5982\u4f55\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\uff1f</p> <p>\u8bf7\u8bf4\u4e00\u8bf4HashMap\u539f\u7406\uff0c\u5b58\u53d6\u8fc7\u7a0b\uff0c\u4e3a\u4ec0\u4e48\u7528\u7ea2\u9ed1\u6811\uff0c\u7ea2\u9ed1\u6811\u4e0e\u5b8c\u5168\u4e8c\u53c9\u6811\u5bf9\u6bd4\uff0cHashTab\u3001concurrentHashMap\uff0cconcurrent\u5305\u91cc\u6709\u5565?</p> <p>\u8bf7\u8bf4\u4e00\u8bf4hashmap put()\u5e95\u5c42\u539f\u7406,\u53d1\u751f\u51b2\u7a81\u65f6\uff0c\u5982\u4f55\u53bb\u6dfb\u52a0(\u987a\u7740\u94fe\u8868\u53bb\u904d\u5386\uff0c\u6328\u4e2a\u6bd4\u8f83key\u503c\u662f\u5426\u4e00\u81f4\uff0c\u5982\u679c\u4e00\u81f4\uff0c\u5c31\u8986\u76d6\u66ff\u6362\uff0c\u4e0d\u4e00\u81f4\u904d\u5386\u7ed3\u675f\u540e\uff0c\u63d2\u5165\u8be5\u4f4d\u7f6e) \uff1f</p> <p>\u8bf7\u7528 Java \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u94fe\u8868\uff1f</p> <p>\u5982\u4f55\u53cd\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\uff1f</p> <p>\u8c08\u8c08\u4f60\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u7406\u89e3\uff1f</p> <p>\u8c08\u4e00\u8c08\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u94fe\u8868\u6210\u73af\uff1f</p> <p>\u4ec0\u4e48\u662f\u7ea2\u9ed1\u6811\uff1f\u4e3a\u4ec0\u4e48\u8981\u7528\u7ea2\u9ed1\u6811\uff1f</p> <p>\u4ec0\u4e48\u662f\u5feb\u901f\u6392\u5e8f\uff1f\u5982\u4f55\u4f18\u5316\uff1f</p> <p>\u8bf4\u8bf4\u5faa\u73af\u961f\u5217\uff1f</p> <p>\u5982\u4f55\u5224\u65ad\u5355\u94fe\u8868\u4ea4\u53c9</p> <p>\u5982\u4f55\u8fd0\u2f64\u2f06\u5206\u67e5\u627e\u7b97\u6cd5</p> <p>\u5982\u4f55\u2fbc\u6548\u89e3\u51b3\u63a5\u2fac\u2f54\u95ee\u9898</p> <p>\u2f06\u5206\u67e5\u627e\u2fbc\u6548\u5224\u5b9a\u2f26\u5e8f\u5217</p> <p>\u5982\u4f55\u53bb\u9664\u6709\u5e8f\u6570\u7ec4\u7684\u91cd\u590d\u5143\u7d20</p> <p>\u5982\u4f55\u5bfb\u627e\u6700\u2ed3\u56de\u2f42\u2f26\u4e32</p> <p>\u5982\u4f55\u2fbc\u6548\u8fdb\u2f8f\u6a21\u5e42\u8fd0\u7b97</p> <p>\u5982\u4f55\u8fd0\u7528\u8d2a\u5fc3\u601d\u60f3\u5e7f\u57df\u73a9\u8df3\u8dc3\u6e38\u620f</p> <p>\u5982\u4f55\u2fbc\u6548\u5224\u65ad\u56de\u2f42\u94fe\u8868</p> <p>\u5982\u4f55\u5728\u65e0\u7ebf\u5e8f\u5217\u4e2d\u968f\u673a\u62bd\u53d6\u5143\u7d20</p> <p>\u5982\u4f55\u5224\u5b9a\u62ec\u53f7\u5408\u6cd5\u6027</p> <p>\u5982\u4f55\u5bfb\u627e\u7f3a\u5931\u548c\u91cd\u590d\u7684\u5143\u7d20</p>"}, {"location": "android/interview/java_kotlin/", "title": "java/kotlin", "text": ""}, {"location": "android/interview/java_kotlin/#_1", "title": "\u62bd\u8c61\u7c7b\u4e0e\u63a5\u53e3\u7684\u533a\u522b", "text": "\u5b9a\u4e49 \u5b9e\u73b0 \u6210\u5458\u7279\u6027 \u6784\u9020\u5668 \u200b\u62bd\u8c61\u7c7b \u4f7f\u7528abstract\u5173\u952e\u5b57 \u4e00\u4e2a\u7c7b\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u4f7f\u7528extends\u5173\u952e\u5b57 \u5305\u542b\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u62bd\u8c61\u65b9\u6cd5\u548c\u975e\u62bd\u8c61\u65b9\u6cd5,\u62bd\u8c61\u65b9\u6cd5\u5fc5\u987b\u5728\u5b50\u7c7b\u4e2d\u88ab\u5b9e\u73b0\uff0c\u975e\u62bd\u8c61\u65b9\u6cd5\u53ef\u4ee5\u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0 \u53ef\u4ee5\u6709\u6784\u9020\u5668\uff0c\u4f46\u4e0d\u80fd\u5b9e\u4f8b\u5316 \u200b\u63a5\u53e3 \u4f7f\u7528interface\u5173\u952e\u5b57 \u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff0c\u4f7f\u7528implements\u5173\u952e\u5b57 \u53ea\u80fd\u5305\u542b\u5e38\u91cf\u548c\u62bd\u8c61\u65b9\u6cd5,Java8\u5f00\u59cb\uff0c\u63a5\u53e3\u53ef\u4ee5\u5305\u542b\u9ed8\u8ba4\u65b9\u6cd5(default\u5173\u952e\u5b57)\u548c\u9759\u6001\u65b9\u6cd5 \u4e0d\u80fd\u6709\u6784\u9020\u5668"}, {"location": "android/interview/java_kotlin/#_2", "title": "\u7c7b\u548c\u5bf9\u8c61\u7684\u533a\u522b\uff0c\u751f\u547d\u5468\u671f", "text": "<p>\u200b\u5b9a\u4e49\uff1a</p> <p>\u200b\u7c7b\uff1a\u7c7b\u662f\u5bf9\u4e00\u7ec4\u5177\u6709\u76f8\u540c\u5c5e\u6027\u548c\u884c\u4e3a\u7684\u5bf9\u8c61\u7684\u62bd\u8c61\u63cf\u8ff0\uff0c\u662f\u521b\u5efa\u5bf9\u8c61\u7684\u6a21\u677f\u3002\u7c7b\u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u6210\u5458\u53d8\u91cf\uff09\u548c\u884c\u4e3a\uff08\u6210\u5458\u51fd\u6570\uff09</p> <p>\u200b\u5bf9\u8c61\uff1a\u5bf9\u8c61\u662f\u7c7b\u7684\u5177\u4f53\u5b9e\u4f8b\uff0c\u662f\u6839\u636e\u7c7b\u7684\u5b9a\u4e49\u521b\u5efa\u7684\u5b9e\u4f53\u3002\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5c5e\u6027\u548c\u72b6\u6001</p> <p>\u200b\u5173\u7cfb\uff1a</p> <p>\u7c7b\u662f\u5bf9\u8c61\u7684\u62bd\u8c61\uff0c\u5bf9\u8c61\u662f\u7c7b\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u62e5\u6709\u7c7b\u4e2d\u5b9a\u4e49\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u4f46\u5176\u5177\u4f53\u7684\u72b6\u6001\u53ef\u80fd\u4e0d\u540c</p> <p>\u200b\u4f7f\u7528\uff1a</p> <p>\u7c7b\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\uff0c\u5fc5\u987b\u901a\u8fc7\u521b\u5efa\u5bf9\u8c61\u6765\u4f7f\u7528\u3002\u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u901a\u8fc7\u5bf9\u8c61\u53ef\u4ee5\u8bbf\u95ee\u548c\u64cd\u4f5c\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5</p> <p>\u7c7b\u7684\u751f\u547d\u5468\u671f</p> <ul> <li>\u200b\u52a0\u8f7d\uff1a\u5c06\u7c7b\u7684\u4e8c\u8fdb\u5236\u6d41\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5e76\u751f\u6210\u5bf9\u5e94\u7684Class\u5bf9\u8c61</li> <li>\u200b\u9a8c\u8bc1\uff1a\u786e\u4fdd\u52a0\u8f7d\u7684\u7c7b\u6587\u4ef6\u683c\u5f0f\u6b63\u786e\uff0c\u7b26\u5408JVM\u89c4\u8303</li> <li>\u200b\u51c6\u5907\uff1a\u4e3a\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u8d4b\u4e88\u521d\u59cb\u503c</li> <li>\u200b\u89e3\u6790\uff1a\u5c06\u7b26\u53f7\u5f15\u7528\u8f6c\u6362\u4e3a\u76f4\u63a5\u5f15\u7528</li> <li>\u200b\u521d\u59cb\u5316\uff1a\u8c03\u7528\u7c7b\u7684\u6784\u9020\u5668\u65b9\u6cd5\uff0c\u5bf9\u9759\u6001\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u6267\u884c\u9759\u6001\u521d\u59cb\u5316\u5757</li> <li>\u200b\u4f7f\u7528\uff1a\u7c7b\u88ab\u52a0\u8f7d\u540e\uff0c\u53ef\u4ee5\u88ab\u7a0b\u5e8f\u4f7f\u7528\uff0c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f</li> <li>\u200b\u5378\u8f7d\uff1a\u7c7b\u52a0\u8f7d\u5668\u88ab\u56de\u6536\u65f6\uff0c\u7c7b\u624d\u4f1a\u88ab\u5378\u8f7d</li> </ul> <p>\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f</p> <ul> <li>\u521b\u5efa\uff08Created\uff09\u200b\uff1a\u4f7f\u7528 new \u5173\u952e\u5b57\u521b\u5efa\u5bf9\u8c61\uff0c\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u8c03\u7528\u6784\u9020\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\u3002</li> <li>\u200b\u5e94\u7528\uff08InUse\uff09\u200b\uff1a\u5bf9\u8c61\u81f3\u5c11\u88ab\u4e00\u4e2a\u5f3a\u5f15\u7528\u6301\u6709\uff0c\u5904\u4e8e\u53ef\u8bbf\u95ee\u72b6\u6001\uff0c\u7a0b\u5e8f\u6b63\u5728\u4f7f\u7528\u8be5\u5bf9\u8c61\u3002</li> <li>\u200b\u4e0d\u53ef\u89c1\uff08Invisible\uff09\u200b\uff1a\u5bf9\u8c61\u4e0d\u518d\u88ab\u7a0b\u5e8f\u7684\u4efb\u4f55\u5f3a\u5f15\u7528\u6301\u6709\uff0c\u4f46\u7531\u4e8e\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\uff08\u5982\u9759\u6001\u53d8\u91cf\u3001\u7ebf\u7a0b\u6216 JNI \u5f15\u7528\uff09\u4ecd\u7136\u5b58\u5728\u3002</li> <li>\u200b\u4e0d\u53ef\u8fbe\uff08Unreachable\uff09\u200b\uff1a\u5bf9\u8c61\u4e0d\u518d\u88ab\u4efb\u4f55\u5f3a\u5f15\u7528\u6301\u6709\uff0c\u4e14\u6ca1\u6709\u4efb\u4f55 GC Root \u5f15\u7528\u5b83\uff0c\u6b64\u65f6\u5bf9\u8c61\u53ef\u4ee5\u88ab\u5783\u573e\u56de\u6536\u5668\u56de\u6536\u3002</li> <li>\u200b\u6536\u96c6\uff08Collected\uff09\u200b\uff1a\u5783\u573e\u56de\u6536\u5668\u51c6\u5907\u56de\u6536\u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\u679c\u5bf9\u8c61\u91cd\u5199\u4e86 finalize() \u65b9\u6cd5\uff0c\u6b64\u65f6\u4f1a\u6267\u884c\u8be5\u65b9\u6cd5\u3002</li> <li>\u200b\u7ec8\u7ed3\uff08Finalized\uff09\u200b\uff1a\u5bf9\u8c61\u7b49\u5f85\u5783\u573e\u56de\u6536\u5668\u5b8c\u6210\u56de\u6536\u8fc7\u7a0b\u3002</li> <li>\u200b\u5bf9\u8c61\u7a7a\u95f4\u91cd\u65b0\u5206\u914d\uff08Deallocated\uff09\u200b\uff1a\u5783\u573e\u56de\u6536\u5668\u56de\u6536\u5bf9\u8c61\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u5c06\u5176\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u5bf9\u8c61</li> </ul>"}, {"location": "android/interview/java_kotlin/#gc-root", "title": "\u4ec0\u4e48\u662fGC Root\uff0c\u5e38\u89c1\u6709\u54ea\u4e9b", "text": "<p>\u6307\u7684\u662f\u5783\u573e\u56de\u6536\u8fc7\u7a0b\u4e2d\u4f5c\u4e3a\u6839\u8282\u70b9\u7684\u5bf9\u8c61\u3002\u8fd9\u4e9b\u5bf9\u8c61\u662f GC \u7b97\u6cd5\u5f00\u59cb\u904d\u5386\u4ee5\u786e\u5b9a\u54ea\u4e9b\u5bf9\u8c61\u662f\u201c\u53ef\u8fbe\u7684\u201d\u8d77\u70b9</p> <p>\u5e38\u89c1\uff1a</p> <ul> <li>\u865a\u62df\u673a\u6808\uff08Java Stack\uff09\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u5f15\u7528\u7684\u5bf9\u8c61\u3002</li> <li>\u65b9\u6cd5\u533a\u4e2d\u7c7b\u9759\u6001\u5c5e\u6027\u5f15\u7528\u7684\u5bf9\u8c61\u3002</li> <li>\u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61\u3002</li> <li>\u672c\u5730\u65b9\u6cd5\u6808\uff08Native Method Stack\uff09\u4e2d JNI\uff08Java Native Interface\uff09\u5f15\u7528\u7684\u5bf9\u8c61\u3002</li> <li>\u88ab\u6fc0\u6d3b\u7684 Java \u7ebf\u7a0b\u3002</li> <li>\u88ab\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\u7684\u7c7b\u7b49</li> </ul>"}, {"location": "android/interview/java_kotlin/#java", "title": "Java\u6210\u5458\u53d8\u91cf\uff0c\u5c40\u90e8\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u533a\u522b", "text": "<p>\u5b9a\u4e49</p> <ul> <li>\u200b\u6210\u5458\u53d8\u91cf\uff1a\u5b9a\u4e49\u5728\u7c7b\u4e2d\uff0c\u4f46\u5728\u65b9\u6cd5\u3001\u6784\u9020\u51fd\u6570\u6216\u4ee3\u7801\u5757\u4e4b\u5916\u7684\u53d8\u91cf\u3002\u6210\u5458\u53d8\u91cf\u53ef\u4ee5\u662f\u5b9e\u4f8b\u53d8\u91cf\u6216\u9759\u6001\u53d8\u91cf\u3002</li> <li>\u200b\u5c40\u90e8\u53d8\u91cf\uff1a\u5b9a\u4e49\u5728\u65b9\u6cd5\u3001\u6784\u9020\u51fd\u6570\u6216\u4ee3\u7801\u5757\u5185\u90e8\u7684\u53d8\u91cf\u3002\u5c40\u90e8\u53d8\u91cf\u4e0d\u80fd\u88ab\u8bbf\u95ee\u4fee\u9970\u7b26\uff08\u5982public\u3001private\uff09\u4fee\u9970\uff0c\u4e5f\u4e0d\u80fd\u88abstatic\u4fee\u9970\u3002</li> <li>\u200b\u9759\u6001\u53d8\u91cf\uff1a\u4f7f\u7528static\u5173\u952e\u5b57\u4fee\u9970\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5c5e\u4e8e\u7c7b\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002\u9759\u6001\u53d8\u91cf\u5728\u7c7b\u52a0\u8f7d\u65f6\u521d\u59cb\u5316\uff0c\u4e14\u53ea\u6709\u4e00\u4efd\u526f\u672c\u3002</li> </ul> <p>\u5b58\u50a8</p> <ul> <li>\u200b\u6210\u5458\u53d8\u91cf\uff1a\u5982\u679c\u672a\u4f7f\u7528static\u4fee\u9970\uff0c\u5b58\u50a8\u5728\u5806\u5185\u5b58\u4e2d\uff0c\u4e0e\u5bf9\u8c61\u5b9e\u4f8b\u4e00\u8d77\u5206\u914d\u7a7a\u95f4\uff1b\u5982\u679c\u4f7f\u7528static\u4fee\u9970\uff0c\u5b58\u50a8\u5728\u65b9\u6cd5\u533a\uff08\u6216\u79f0\u4e3a\u9759\u6001\u5b58\u50a8\u533a\uff09\u3002</li> <li>\u200b\u5c40\u90e8\u53d8\u91cf\uff1a\u5b58\u50a8\u5728\u6808\u5185\u5b58\u4e2d\uff0c\u968f\u7740\u65b9\u6cd5\u7684\u8c03\u7528\u800c\u521b\u5efa\uff0c\u65b9\u6cd5\u6267\u884c\u7ed3\u675f\u540e\u88ab\u9500\u6bc1\u3002</li> <li>\u200b\u9759\u6001\u53d8\u91cf\uff1a\u5b58\u50a8\u5728\u65b9\u6cd5\u533a\uff0c\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u540c\u4e00\u4efd\u9759\u6001\u53d8\u91cf\u3002</li> </ul> <p>\u751f\u547d\u5468\u671f</p> <ul> <li>\u200b\u6210\u5458\u53d8\u91cf\uff1a\u5b9e\u4f8b\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4e0e\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u4e00\u81f4\uff0c\u5bf9\u8c61\u88ab\u521b\u5efa\u65f6\u521b\u5efa\uff0c\u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\u9500\u6bc1\uff1b\u9759\u6001\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4e0e\u7c7b\u7684\u751f\u547d\u5468\u671f\u4e00\u81f4\uff0c\u7c7b\u52a0\u8f7d\u65f6\u521b\u5efa\uff0c\u7c7b\u5378\u8f7d\u65f6\u9500\u6bc1\u3002</li> <li>\u200b\u5c40\u90e8\u53d8\u91cf\uff1a\u751f\u547d\u5468\u671f\u4ec5\u9650\u4e8e\u65b9\u6cd5\u3001\u6784\u9020\u51fd\u6570\u6216\u4ee3\u7801\u5757\u7684\u6267\u884c\u671f\u95f4\uff0c\u65b9\u6cd5\u6267\u884c\u7ed3\u675f\u540e\u81ea\u52a8\u9500\u6bc1\u3002</li> <li>\u200b\u9759\u6001\u53d8\u91cf\uff1a\u751f\u547d\u5468\u671f\u4ece\u7c7b\u52a0\u8f7d\u5f00\u59cb\uff0c\u5230\u7c7b\u5378\u8f7d\u7ed3\u675f\u3002</li> </ul> <p>\u4f5c\u7528\u57df</p> <ul> <li>\u200b\u6210\u5458\u53d8\u91cf\uff1a\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u7c7b\uff0c\u53ef\u4ee5\u5728\u7c7b\u7684\u4efb\u4f55\u65b9\u6cd5\u4e2d\u8bbf\u95ee\u3002</li> <li>\u200b\u5c40\u90e8\u53d8\u91cf\uff1a\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u5b9a\u4e49\u5b83\u7684\u65b9\u6cd5\u3001\u6784\u9020\u51fd\u6570\u6216\u4ee3\u7801\u5757\u5185\u90e8\u3002</li> <li> <p>\u200b\u9759\u6001\u53d8\u91cf\uff1a\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\u3002 \u9ed8\u8ba4\u503c</p> </li> <li> <p>\u200b\u6210\u5458\u53d8\u91cf\uff1a\u5982\u679c\u672a\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5b9e\u4f8b\u53d8\u91cf\u4f1a\u6709\u9ed8\u8ba4\u503c\uff08\u5982int\u4e3a0\uff0cboolean\u4e3afalse\uff0c\u5f15\u7528\u7c7b\u578b\u4e3anull\uff09\uff1b\u9759\u6001\u53d8\u91cf\u540c\u6837\u6709\u9ed8\u8ba4\u503c\u3002</p> </li> <li>\u200b\u5c40\u90e8\u53d8\u91cf\uff1a\u6ca1\u6709\u9ed8\u8ba4\u503c\uff0c\u5fc5\u987b\u663e\u5f0f\u521d\u59cb\u5316\u540e\u624d\u80fd\u4f7f\u7528\u3002</li> <li>\u200b\u9759\u6001\u53d8\u91cf\uff1a\u5982\u679c\u672a\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u4f1a\u6709\u9ed8\u8ba4\u503c\u3002</li> </ul> <p>\u8bbf\u95ee\u4fee\u9970\u7b26</p> <ul> <li>\u200b\u6210\u5458\u53d8\u91cf\uff1a\u53ef\u4ee5\u88abpublic\u3001private\u3001protected\u6216\u9ed8\u8ba4\u8bbf\u95ee\u4fee\u9970\u7b26\u4fee\u9970\u3002</li> <li>\u200b\u5c40\u90e8\u53d8\u91cf\uff1a\u4e0d\u80fd\u88ab\u8bbf\u95ee\u4fee\u9970\u7b26\u4fee\u9970\u3002</li> <li>\u200b\u9759\u6001\u53d8\u91cf\uff1a\u53ef\u4ee5\u88abpublic\u3001private\u3001protected\u6216\u9ed8\u8ba4\u8bbf\u95ee\u4fee\u9970\u7b26\u4fee\u9970\u3002</li> </ul>"}, {"location": "android/interview/java_kotlin/#javakotlin", "title": "\u5185\u90e8\u7c7b\u6709\u54ea\u4e9b\uff0cjava\u548ckotlin\u5185\u90e8\u7c7b\u7684\u533a\u522b", "text": "<ul> <li> <p>\u6210\u5458\u5185\u90e8\u7c7b: \u5b9a\u4e49\u5728\u53e6\u4e00\u4e2a\u7c7b\u7684\u5185\u90e8\uff0c\u4f46\u4e0d\u5728\u65b9\u6cd5\u5185\u90e8\u3002 \u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\uff08\u5305\u62ec\u79c1\u6709\u6210\u5458\uff09\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\u9700\u8981\u5916\u90e8\u7c7b\u7684\u5b9e\u4f8b\uff1a\u5916\u90e8\u7c7b\u540d.\u5185\u90e8\u7c7b\u540d \u53d8\u91cf\u540d = \u5916\u90e8\u7c7b\u5b9e\u4f8b.new \u5185\u90e8\u7c7b\u540d();</p> </li> <li> <p>\u200b\u9759\u6001\u5185\u90e8\u7c7b\uff08Static Nested Class\uff09\u200b\uff1a\u4f7f\u7528static\u5173\u952e\u5b57\u4fee\u9970\u7684\u5185\u90e8\u7c7b\u3002\u4e0d\u4f9d\u8d56\u4e8e\u5916\u90e8\u7c7b\u7684\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5916\u90e8\u7c7b\u540d\u8bbf\u95ee\u3002\u53ea\u80fd\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u9759\u6001\u6210\u5458\uff0c\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\u4e0d\u9700\u8981\u5916\u90e8\u7c7b\u7684\u5b9e\u4f8b\uff1a\u5916\u90e8\u7c7b\u540d.\u5185\u90e8\u7c7b\u540d \u53d8\u91cf\u540d = new \u5916\u90e8\u7c7b\u540d.\u5185\u90e8\u7c7b\u540d();</p> </li> <li> <p>\u200b\u5c40\u90e8\u5185\u90e8\u7c7b\u200b\uff1a\u5b9a\u4e49\u5728\u65b9\u6cd5\u5185\u90e8\u7684\u7c7b\u3002\u53ea\u80fd\u5728\u8be5\u65b9\u6cd5\u5185\u90e8\u4f7f\u7528\uff0c\u5bf9\u5916\u90e8\u4e0d\u53ef\u89c1\u3002\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\uff0c\u4f46\u53ea\u80fd\u8bbf\u95ee\u65b9\u6cd5\u4e2d\u7684final\u6216effectively final\u5c40\u90e8\u53d8\u91cf\u3002\u521b\u5efa\u5b9e\u4f8b\u65f6\u76f4\u63a5\u5728\u65b9\u6cd5\u5185\u90e8\uff1a\u5185\u90e8\u7c7b\u540d \u53d8\u91cf\u540d = new \u5185\u90e8\u7c7b\u540d();</p> </li> <li> <p>\u200b\u533f\u540d\u5185\u90e8\u7c7b\u200b\uff1a\u6ca1\u6709\u540d\u5b57\u7684\u5185\u90e8\u7c7b\uff0c\u901a\u5e38\u7528\u4e8e\u521b\u5efa\u5b9e\u73b0\u67d0\u4e2a\u63a5\u53e3\u6216\u7ee7\u627f\u67d0\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002\u9002\u7528\u4e8e\u4e00\u6b21\u6027\u4f7f\u7528\u7684\u573a\u666f\uff0c\u5982\u4e8b\u4ef6\u5904\u7406\u3002\u5b9a\u4e49\u548c\u5b9e\u4f8b\u5316\u540c\u65f6\u8fdb\u884c\uff0c\u901a\u5e38\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u76f4\u63a5\u5b9e\u73b0\u63a5\u53e3\u6216\u7ee7\u627f\u7c7b</p> </li> </ul> <p>kotlin\u4e2d\u9ed8\u8ba4\u7684\u5185\u90e8\u7c7b\u662fjava\u4e2d\u7684\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u4f7f\u7528inner\u4fee\u9970class\u540e\u624d\u662fjava\u4e2d\u7684\u6210\u5458\u5185\u90e8\u7c7b</p>"}, {"location": "android/interview/java_kotlin/#_3", "title": "\u53cd\u5c04\u673a\u5236\u539f\u7406\u548c\u5e94\u7528\u573a\u666f", "text": "<p>\u53cd\u5c04\u7684\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u865a\u62df\u673a\uff08\u5982 JVM\uff09\u63d0\u4f9b\u7684\u5e95\u5c42\u652f\u6301\u3002</p> <p>\u200b\u5143\u6570\u636e\u5b58\u50a8\uff1a\u5728\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u7c7b\u7684\u5143\u6570\u636e\uff08\u5982\u65b9\u6cd5\u3001\u5b57\u6bb5\u3001\u6784\u9020\u51fd\u6570\u7b49\uff09\u5199\u5165\u5230\u5b57\u8282\u7801\u6587\u4ef6\uff08\u5982 .class \u6587\u4ef6\uff09\u4e2d\u3002JVM \u5728\u52a0\u8f7d\u7c7b\u65f6\uff0c\u4f1a\u89e3\u6790\u8fd9\u4e9b\u5143\u6570\u636e\u5e76\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u4f9b\u53cd\u5c04\u673a\u5236\u4f7f\u7528\u3002</p> <p>\u200b\u53cd\u5c04 API \u7684\u5b9e\u73b0\uff1aJava \u7684\u53cd\u5c04 API\uff08\u5982 java.lang.reflect \u5305\u4e2d\u7684\u7c7b\uff09\u662f\u5bf9 JVM \u63d0\u4f9b\u7684\u5e95\u5c42\u63a5\u53e3\u7684\u5c01\u88c5\u3002\u8fd9\u4e9b\u5e95\u5c42\u63a5\u53e3\u5141\u8bb8 Java \u7a0b\u5e8f\u8bbf\u95ee\u548c\u64cd\u4f5c JVM \u5185\u90e8\u5b58\u50a8\u7684\u7c7b\u5143\u6570\u636e\u3002 \u4f8b\u5982\uff0cClass \u7c7b\u63d0\u4f9b\u4e86\u8bbf\u95ee\u7c7b\u5143\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7 JVM \u7684\u5185\u90e8\u673a\u5236\u5b9e\u73b0\u7684\u3002</p> <p>aosp\u5bf9\u53cd\u5c04\u7684\u9650\u5236</p> <p>\u200bDex-level\u9650\u5236\uff1a\u4eceAndroid 9.0\uff08Pie\uff09\u5f00\u59cb\uff0cAOSP\u5728\u7f16\u8bd1\u65f6\u4f1a\u5bf9\u88ab@hide\u6ce8\u89e3\u7684\u65b9\u6cd5\u8fdb\u884c\u6807\u8bb0\uff0c\u5e76\u5728\u8fd0\u884c\u65f6\u963b\u6b62\u5bf9\u8fd9\u4e9b\u65b9\u6cd5\u7684\u53cd\u5c04\u8bbf\u95ee\u3002\u8fd9\u4e9b\u6807\u8bb0\u4f7f\u5f97\u7cfb\u7edf\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u8bc6\u522b\u5e76\u9650\u5236\u5bf9\u9690\u85cfAPI\u7684\u8bbf\u95ee\u3002</p> <p>\u200bHidden API Enforcement\uff1aAndroid 9.0\u5f15\u5165\u4e86\u9690\u85cfAPI\u6267\u884c\u7b56\u7565\uff0c\u5c06\u9690\u85cfAPI\u5206\u4e3a\u7070\u540d\u5355\u3001\u9ed1\u540d\u5355\u7b49\u7c7b\u522b\u3002\u5bf9\u4e8e\u9ed1\u540d\u5355\u4e2d\u7684API\uff0c\u7cfb\u7edf\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\uff08\u5982NoSuchMethodError\uff09\uff0c\u963b\u6b62\u5e94\u7528\u901a\u8fc7\u53cd\u5c04\u8bbf\u95ee\u8fd9\u4e9b\u65b9\u6cd5\u3002</p> <p>\u200b\u6743\u9650\u63a7\u5236\u548c\u7b7e\u540d\u673a\u5236\uff1a\u67d0\u4e9b\u9690\u85cfAPI\u9700\u8981\u7279\u5b9a\u7684\u6743\u9650\u6216\u7cfb\u7edf\u7b7e\u540d\u624d\u80fd\u8bbf\u95ee\u3002\u53ea\u6709\u7cfb\u7edf\u5e94\u7528\u6216\u5177\u6709\u7cfb\u7edf\u7b7e\u540d\u7684\u5e94\u7528\u624d\u80fd\u901a\u8fc7\u53cd\u5c04\u8c03\u7528\u8fd9\u4e9b\u53d7\u4fdd\u62a4\u7684\u65b9\u6cd5\u3002</p> <p>\u200b\u8fd0\u884c\u65f6\u68c0\u67e5\uff1a\u7cfb\u7edf\u5728\u8fd0\u884c\u65f6\u4f1a\u68c0\u67e5\u8c03\u7528\u6808\u7684\u53ef\u4fe1\u5ea6\uff0c\u53ea\u6709\u6765\u81ea\u53ef\u4fe1\u6765\u6e90\uff08\u5982\u7cfb\u7edf\u7c7b\uff09\u7684\u8c03\u7528\u624d\u4f1a\u88ab\u5141\u8bb8\u3002\u8fd9\u9632\u6b62\u4e86\u6076\u610f\u5e94\u7528\u901a\u8fc7\u53cd\u5c04\u7b49\u65b9\u5f0f\u7ed5\u8fc7\u9650\u5236</p> <p>\u57fa\u4e8e\u53cd\u5c04\u5e38\u89c1\u4e09\u65b9\u5e93\uff1aShadow\u3001ARouter\u3001Retrofit\u3001EventBus\u3001Gson\u3001FastJson\u3001Moshi\u7b49</p>"}, {"location": "android/interview/java_kotlin/#finalstaticsynchronized", "title": "\u8bb2\u8bb2final\uff0cstatic\uff0csynchronized\u5173\u952e\u5b57", "text": "<p>final: \u8868\u793a\u201c\u6700\u7ec8\u7684\u201d\u6216\u201c\u4e0d\u53ef\u6539\u53d8\u7684\u201d,\u53ef\u4ee5\u4fee\u9970\u7c7b\u3001\u65b9\u6cd5\u548c\u53d8\u91cf</p> <p>\u4fee\u9970\u7c7b\uff1a\u6b64\u7c7b\u4e0d\u53ef\u88ab\u7ee7\u627f\uff0c\u5982String\u7c7b\u3002kotlin\u4e2d\u9ed8\u8ba4\u4e0d\u80fd\u88ab\u7ee7\u627f\u9700\u4f7f\u7528open/abstract\u5173\u952e\u5b57</p> <p>\u4fee\u9970\u65b9\u6cd5\uff1a\u6b64\u65b9\u6cd5\u4e0d\u53ef\u88ab\u91cd\u5199\u3002kotlin\u4e2d\u9ed8\u8ba4\u4e0d\u80fd\u88ab\u91cd\u5199\u9700\u4f7f\u7528open\u5173\u952e\u5b57</p> <p>\u4fee\u9970\u53d8\u91cf\uff1a\u6b64\u53d8\u91cf\u53ea\u80fd\u88ab\u8d4b\u503c\u4e00\u6b21\uff0c\u4e0d\u53ef\u88ab\u91cd\u65b0\u8d4b\u503c\u3002kotlin\u4e2d\u4f7f\u7528val\u4ee3\u66ff\uff0c\u533a\u522b\u662f\u58f0\u660e\u65f6val\u5fc5\u987b\u8d4b\u503c\uff0cfinal\u53ef\u4ee5\u5148\u58f0\u660e\u518d\u6784\u9020\u65b9\u6cd5\u4e2d\u8d4b\u503c\u6216\u58f0\u660e\u65f6\u8d4b\u503c</p> <p>static\uff1a\u8868\u793a\u201c\u9759\u6001\u7684\u201d\u6216\u201c\u5c5e\u4e8e\u7c7b\u7684\u201d\uff0c\u53ef\u4ee5\u4fee\u9970\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u4ee3\u7801\u5757\u548c\u5d4c\u5957\u7c7b</p> <p>\u5e38\u91cf\uff1afinal static,\u5728kotlin\u4e2d\u4f7f\u7528const val(\u53ea\u80fd\u5728object\u6216\u8005companion object\u6216\u8005\u7c7b\u5916\u4f7f\u7528)</p> <p>synchronized\uff1a\u7528\u4e8e\u5b9e\u73b0\u7ebf\u7a0b\u540c\u6b65\uff0c\u786e\u4fdd\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\u662f\u5b89\u5168\u7684</p> <p>\u540c\u6b65\u65b9\u6cd5\uff1a\u65b9\u6cd5\u5728\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u88ab\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee</p> <p>\u540c\u6b65\u4ee3\u7801\u5757\uff1a\u4ee3\u7801\u5757\u5728\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u88ab\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee</p> <p>\u9759\u6001\u540c\u6b65\u65b9\u6cd5\uff1a\u9759\u6001\u65b9\u6cd5\u9501\u5b9a\u7684\u662f\u7c7b\u7684Class\u5bf9\u8c61\uff0c\u786e\u4fdd\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6267\u884c\u8be5\u7c7b\u7684\u9759\u6001\u540c\u6b65\u65b9\u6cd5</p> <p>kotlin\u4e2d\u540c\u6b65\u65b9\u6cd5\u53ea\u80fd\u4f7f\u7528@Synchronized</p>"}, {"location": "android/interview/java_kotlin/#stringstringbufferstringbuilder", "title": "\u8bf7\u7b80\u8ff0\u4e00\u4e0bString\u3001StringBuffer\u548cStringBuilder", "text": "\u53ef\u53d8\u6027 \u200b\u7ebf\u7a0b\u5b89\u5168 \u200b\u6027\u80fd \u200b\u9002\u7528\u573a\u666f String \u4e0d\u53ef\u53d8\u7684\uff0c\u6bcf\u6b21\u521b\u5efa\u65b0\u7684String\u5bf9\u8c61\uff0c\u539f\u5bf9\u8c61\u88ab\u4e22\u5f03 \u7ebf\u7a0b\u5b89\u5168 \u6027\u80fd\u8f83\u4f4e \u5b57\u7b26\u4e32\u5185\u5bb9\u4e0d\u7ecf\u5e38\u53d8\u5316 StringBuffer \u53ef\u53d8\u7684,\u539f\u6709\u5bf9\u8c61\u4e0a\u8fdb\u884c\u4fee\u6539 \u7ebf\u7a0b\u5b89\u5168 \u7531\u4e8e\u540c\u6b65\u673a\u5236\uff0c\u6027\u80fd\u7565\u4f4e\u4e8eStringBuilder \u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u9891\u7e41\u4fee\u6539\u5b57\u7b26\u4e32 StringBuilder \u53ef\u53d8\u7684 \u65b9\u6cd5\u6ca1\u6709\u540c\u6b65\u673a\u5236,\u7ebf\u7a0b\u4e0d\u5b89\u5168 \u6027\u80fd\u6700\u9ad8 \u5355\u7ebf\u7a0b\u73af\u5883\u4e0b\u9891\u7e41\u4fee\u6539\u5b57\u7b26\u4e32"}, {"location": "android/interview/java_kotlin/#equalshashcode", "title": "\u201cequals\u201d\u4e0e\u201c==\u201d\u3001\u201chashCode\u201d\u7684\u533a\u522b\u548c\u4f7f\u7528\u573a\u666f", "text": "<p>\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u4f7f\u7528equals\uff0c==\u662f\u6bd4\u8f83\u503c\u662f\u5426\u76f8\u7b49</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f15\u7528\u7c7b\u578b\u4f7f\u7528equals\u548c==\u6548\u679c\u76f8\u540c\uff0c\u6bd4\u8f83\u7684\u662f\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740</p> <p>hashCode\u548cequals\u4f5c\u7528\u7c7b\u4f3c\uff0c\u7528\u6765\u5bf9\u6bd4\u4e24\u4e2a\u5bf9\u8c61\u5185\u5bb9\u662f\u5426\u76f8\u7b49</p> <ul> <li>hashcode \u76f8\u7b49\uff0cequals\u4e0d\u4e00\u5b9a\u76f8\u7b49</li> <li>equals \u76f8\u7b49\uff0chashcode\u4e00\u5b9a\u76f8\u7b49</li> <li>hashcode \u4e0d\u76f8\u7b49\uff0cequals\u4e00\u5b9a\u4e0d\u76f8\u7b49</li> </ul> <p>hashCode\u9ed8\u8ba4\u662f\u57fa\u4e8e\u5bf9\u8c61\u5185\u5b58\u5730\u5740\uff0c\u76f8\u7b49\u60c5\u51b5\u4e3a\u54c8\u5e0c\u51b2\u7a81\u65f6\u548c\u5185\u5b58\u5730\u5740\u91cd\u7528\u65f6</p> <p>\u91cd\u5199hashCode\u662f\u4e3a\u4e86\u5728HashMap,HashSet\u7b49\u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\u96c6\u5408\u6bd4\u8f83\u5bf9\u8c61\u65f6\u53ef\u80fd\u8bef\u5224</p>"}, {"location": "android/interview/java_kotlin/#java_1", "title": "Java\u4e2d\u6df1\u62f7\u8d1d\u4e0e\u6d45\u62f7\u8d1d\u7684\u533a\u522b", "text": "<p>\u89c1\u62f7\u8d1d</p>"}, {"location": "android/interview/java_kotlin/#errorexception", "title": "\u8c08\u8c08Error\u548cException\u7684\u533a\u522b", "text": "<p>Error\u548cException\u90fd\u662fThrowable\u7c7b\u7684\u5b50\u7c7b\uff0c\u90fd\u53ef\u4ee5\u88ab\u629b\u51fa(throw)\u548c\u6355\u83b7(try catch)</p> <p>Exception\uff1a\u8868\u793a\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u53ef\u4ee5\u88ab\u9884\u6599\u5230\u7684\u5f02\u5e38\u60c5\u51b5\uff0c\u5e94\u8be5\u88ab\u6355\u83b7\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\uff0c\u5206\u4e3a\u4e24\u7c7b</p> <p>\u7f16\u8bd1\u65f6\u5f02\u5e38\uff1a\u7f16\u8bd1\u5668\u5f3a\u5236\u8981\u6c42\u5904\u7406\uff0c\u4f8b\u5982IOException\uff0c\u5fc5\u987b\u901a\u8fc7try-catch\u6216throws\u58f0\u660e</p> <p>\u8fd0\u884c\u65f6\u5f02\u5e38\uff1a\u7f16\u8bd1\u5668\u4e0d\u5f3a\u5236\u5904\u7406\uff0c\u901a\u5e38\u7531\u4ee3\u7801\u903b\u8f91\u9519\u8bef\u5bfc\u81f4\uff0c\u4f8b\u5982NullPointerException</p> <p>\u200bError\uff1a\u8868\u793a\u7cfb\u7edf\u7ea7\u7684\u4e0d\u53ef\u6062\u590d\u9519\u8bef\uff0c\u901a\u5e38\u662fJVM\u6216\u7cfb\u7edf\u8d44\u6e90\u5f15\u53d1\u7684\u4e25\u91cd\u95ee\u9898\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u901a\u8fc7\u4ee3\u7801\u8fdb\u884c\u5904\u7406\u6216\u6062\u590d\u3002\u4f8b\u5982OutOfMemoryError\u3001StackOverflowError\uff0c\u4e0d\u5e94\u8be5\u88ab\u6355\u83b7\u6216\u5904\u7406</p>"}, {"location": "android/interview/java_kotlin/#java_2", "title": "\u8c08\u8c08\u4f60\u5bf9Java\u6cdb\u578b\u4e2d\u7c7b\u578b\u64e6\u9664\u7684\u7406\u89e3\uff0c\u5e76\u8bf4\u8bf4\u5176\u5c40\u9650\u6027", "text": "<p>\u6cdb\u578b\u7c7b\u578b\u53c2\u6570\uff08\u5982 \uff09\u4f1a\u88ab\u66ff\u6362\u4e3a\u8fb9\u754c\u7c7b\u578b\uff08\u9ed8\u8ba4\u4e3a Object\uff0c\u6216\u7528\u6237\u6307\u5b9a\u7684\u4e0a\u9650\u7c7b\u578b\uff0c\u5982  \u66ff\u6362\u4e3a Number\uff09\u3002\u4f8b\u5982\uff0cList \u548c List \u5728\u7f16\u8bd1\u540e\u90fd\u4f1a\u53d8\u6210 List\uff0c\u5176 Class \u5bf9\u8c61\u76f8\u540c\uff08ArrayList.class\uff09\u3002 <p>Java 1.5 \u5f15\u5165\u6cdb\u578b\u65f6\uff0c\u9700\u8981\u4fdd\u8bc1\u65e7\u7248\u672c\u975e\u6cdb\u578b\u4ee3\u7801\u4ecd\u80fd\u8fd0\u884c\uff0c\u907f\u514d\u4fee\u6539 JVM \u5e95\u5c42\u673a\u5236</p> <p>\u5c40\u9650\u6027</p> <ul> <li>\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\u4e22\u5931</li> <li>\u65e0\u6cd5\u521b\u5efa\u6cdb\u578b\u6570\u7ec4</li> <li>\u65e0\u6cd5\u5b9e\u73b0\u57fa\u4e8e\u6cdb\u578b\u7684\u91cd\u8f7d</li> <li>\u4e0d\u5b89\u5168\uff0c\u901a\u8fc7\u53cd\u5c04\u53ef\u4ee5\u7ed5\u8fc7\u6cdb\u578b\u9650\u5236\uff0c\u5411 List \u63d2\u5165 String \u5bf9\u8c61 <p>\u6cdb\u578b\u57fa\u672c\u77e5\u8bc6</p>"}, {"location": "android/interview/java_kotlin/#string", "title": "String\u4e3a\u4ec0\u4e48\u8981\u8bbe\u8ba1\u6210\u4e0d\u53ef\u53d8\u7684", "text": "<p>\u5b89\u5168\u6027\uff1a\u7531\u4e8e\u5b57\u7b26\u4e32\u5728\u7a0b\u5e8f\u4e2d\u7ecf\u5e38\u7528\u4e8e\u5b58\u50a8\u654f\u611f\u4fe1\u606f\uff08\u5982\u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32\u3001\u5bc6\u7801\u7b49\uff09\uff0c\u4e0d\u53ef\u53d8\u6027\u786e\u4fdd\u4e86\u8fd9\u4e9b\u4fe1\u606f\u5728\u4f20\u9012\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u88ab\u610f\u5916\u4fee\u6539\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\u3002</p> <p>\u200b\u7ebf\u7a0b\u5b89\u5168\uff1a\u4e0d\u53ef\u53d8\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u5728\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5b89\u5168\u5730\u5171\u4eab\uff0c\u800c\u4e0d\u9700\u8981\u989d\u5916\u7684\u540c\u6b65\u673a\u5236\u3002\u8fd9\u7b80\u5316\u4e86\u5e76\u53d1\u7f16\u7a0b\uff0c\u907f\u514d\u4e86\u6570\u636e\u7ade\u4e89\u548c\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002</p> <p>\u200b\u6027\u80fd\u4f18\u5316\uff1a\u4e0d\u53ef\u53d8\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u88ab\u7f13\u5b58\u548c\u91cd\u7528\u3002Java\u4e2d\u7684\u5b57\u7b26\u4e32\u6c60\uff08String Pool\uff09\u673a\u5236\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e00\u70b9\uff0c\u591a\u4e2a\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ece\u800c\u8282\u7701\u5185\u5b58\u7a7a\u95f4\u3002\u6b64\u5916\uff0c\u4e0d\u53ef\u53d8\u6027\u8fd8\u4f7f\u5f97\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u53ef\u4ee5\u88ab\u7f13\u5b58\uff0c\u63d0\u9ad8\u4e86\u54c8\u5e0c\u8868\u7684\u67e5\u627e\u6548\u7387\u3002</p> <p>\u200b\u54c8\u5e0c\u8868\u7684\u4f7f\u7528\uff1a\u7531\u4e8e\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5b83\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u5178\u7684\u952e\uff08keys\uff09\u6216\u96c6\u5408\uff08sets\uff09\u7684\u5143\u7d20\u3002\u5982\u679c\u5b57\u7b26\u4e32\u662f\u53ef\u53d8\u7684\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u54c8\u5e0c\u503c\u53ef\u80fd\u4f1a\u968f\u7740\u5185\u5bb9\u7684\u6539\u53d8\u800c\u6539\u53d8\uff0c\u5bfc\u81f4\u65e0\u6cd5\u6b63\u786e\u5730\u5728\u54c8\u5e0c\u8868\u4e2d\u67e5\u627e\u548c\u6bd4\u8f83\u3002</p> <p>\u200b\u7b80\u5316\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff1a\u4e0d\u53ef\u53d8\u6027\u4f7f\u5f97\u5b57\u7b26\u4e32\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u66f4\u52a0\u7b80\u5355\u548c\u4e00\u81f4\u3002\u5f00\u53d1\u4eba\u5458\u4e0d\u9700\u8981\u8003\u8651\u5b57\u7b26\u4e32\u5728\u591a\u4e2a\u5730\u65b9\u88ab\u4fee\u6539\u7684\u60c5\u51b5\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u6f5c\u5728\u7684\u9519\u8bef</p>"}, {"location": "android/interview/java_kotlin/#java_3", "title": "\u8bf4\u8bf4\u4f60\u5bf9Java\u6ce8\u89e3\u7684\u7406\u89e3", "text": "<p>\u89c1\u6ce8\u89e3\u4f7f\u7528</p>"}, {"location": "android/interview/java_kotlin/#java_4", "title": "Java\u4e2d\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u6709\u54ea\u4e9b", "text": "<p>\u542f\u52a8\u7ebf\u7a0b\u7684\u65b9\u5f0f</p>"}, {"location": "android/interview/java_kotlin/#_4", "title": "\u8bf4\u4e00\u4e0b\u7ebf\u7a0b\u7684\u51e0\u79cd\u72b6\u6001", "text": "<p>\u7ebf\u7a0b\u72b6\u6001</p>"}, {"location": "android/interview/java_kotlin/#_5", "title": "\u5982\u4f55\u5b9e\u73b0\u591a\u7ebf\u7a0b\u4e2d\u7684\u540c\u6b65", "text": "<ol> <li>\u200b\u4f7f\u7528synchronized\u5173\u952e\u5b57</li> <li>\u4f7f\u7528ReentrantLock\u7c7b</li> <li>\u4f7f\u7528volatile\u5173\u952e\u5b57</li> <li>\u4f7f\u7528\u539f\u5b50\u7c7b\uff0c\u5982AtomicInteger\u3001AtomicLong\u7b49</li> <li>\u4f7f\u7528Semaphore\u7c7b</li> <li>\u4f7f\u7528CountDownLatch\u548cCyclicBarrier</li> </ol>"}, {"location": "android/interview/java_kotlin/#_6", "title": "\u8c08\u8c08\u7ebf\u7a0b\u6b7b\u9501\uff0c\u5982\u4f55\u6709\u6548\u7684\u907f\u514d\u7ebf\u7a0b\u6b7b\u9501", "text": "<p>\u6307\u4e24\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u56e0\u4e89\u593a\u8d44\u6e90\u800c\u9020\u6210\u7684\u4e00\u79cd\u4e92\u76f8\u7b49\u5f85\u7684\u73b0\u8c61</p> <ul> <li>\u200b\u56fa\u5b9a\u52a0\u9501\u987a\u5e8f\uff1a\u786e\u4fdd\u6240\u6709\u7ebf\u7a0b\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u83b7\u53d6\u9501\uff0c\u6253\u7834\u5faa\u73af\u7b49\u5f85\u6761\u4ef6\u3002</li> <li>\u200b\u4f7f\u7528\u8d85\u65f6\u673a\u5236\uff1a\u5728\u83b7\u53d6\u9501\u65f6\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u8d85\u8fc7\u65f6\u95f4\u540e\u653e\u5f03\u83b7\u53d6\u9501\u5e76\u91ca\u653e\u5df2\u6301\u6709\u7684\u9501\u3002</li> <li>\u200b\u907f\u514d\u5d4c\u5957\u9501\uff1a\u5c3d\u91cf\u907f\u514d\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u540c\u65f6\u83b7\u53d6\u591a\u4e2a\u9501\uff0c\u5982\u679c\u5fc5\u987b\u83b7\u53d6\u591a\u4e2a\u9501\uff0c\u786e\u4fdd\u6309\u7167\u56fa\u5b9a\u7684\u987a\u5e8f\u83b7\u53d6\u3002</li> <li>\u200b\u4f7f\u7528\u6b7b\u9501\u68c0\u6d4b\u5de5\u5177\uff1a\u5229\u7528\u5de5\u5177\u5982 JProfiler\u3001VisualVM \u7b49\u68c0\u6d4b\u548c\u89e3\u51b3\u6b7b\u9501\u95ee\u9898\u3002</li> <li>\u200b\u51cf\u5c11\u5171\u4eab\u8d44\u6e90\uff1a\u5c3d\u91cf\u51cf\u5c11\u8fdb\u7a0b\u95f4\u5171\u4eab\u8d44\u6e90\u7684\u6570\u91cf\uff0c\u6216\u8005\u91c7\u7528\u526f\u672c\u800c\u4e0d\u662f\u5171\u4eab\u8d44\u6e90\u7684\u65b9\u5f0f</li> </ul>"}, {"location": "android/interview/java_kotlin/#_7", "title": "\u8c08\u8c08\u7ebf\u7a0b\u963b\u585e\u7684\u539f\u56e0", "text": "<p>\u7ebf\u7a0b\u963b\u585e\u662f\u6307\u7ebf\u7a0b\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7531\u4e8e\u67d0\u4e9b\u6761\u4ef6\u672a\u6ee1\u8db3\u800c\u6682\u505c\u6267\u884c\u7684\u72b6\u6001</p> <p>\u539f\u56e0</p> <ol> <li>\u200b\u7b49\u5f85I/O\u64cd\u4f5c\uff1a\u7ebf\u7a0b\u8fdb\u884c\u8f93\u5165/\u8f93\u51fa\u64cd\u4f5c\uff08\u5982\u8bfb\u5199\u6587\u4ef6\u3001\u7f51\u7edc\u901a\u4fe1\uff09\u65f6\uff0c\u5982\u679c\u64cd\u4f5c\u4e0d\u80fd\u7acb\u5373\u5b8c\u6210\uff0c\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230I/O\u64cd\u4f5c\u5b8c\u6210\u6216\u53d1\u751f\u9519\u8bef\u3002</li> <li>\u200b\u540c\u6b65\u7b49\u5f85\uff1a\u7ebf\u7a0b\u5728\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\uff08\u5982\u540c\u6b65\u4ee3\u7801\u5757\u6216\u65b9\u6cd5\uff09\u65f6\uff0c\u5982\u679c\u65e0\u6cd5\u83b7\u5f97\u6240\u9700\u7684\u9501\uff0c\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u83b7\u53d6\u5230\u9501\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002</li> <li>\u7761\u7720\u7b49\u5f85\uff1a\u7ebf\u7a0b\u8c03\u7528Thread.sleep(int n)\u65b9\u6cd5\u540e\uff0c\u4f1a\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff0c\u6682\u505c\u6267\u884c\u6307\u5b9a\u7684\u65f6\u95f4\uff0c\u65f6\u95f4\u7ed3\u675f\u540e\u7ebf\u7a0b\u6062\u590d\u8fd0\u884c\u3002</li> <li>\u200b\u7b49\u5f85\u4fe1\u53f7\uff1a\u7ebf\u7a0b\u8c03\u7528\u5bf9\u8c61\u7684wait()\u65b9\u6cd5\u540e\uff0c\u4f1a\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528\u8be5\u5bf9\u8c61\u7684notify()\u6216notifyAll()\u65b9\u6cd5\u5c06\u5176\u5524\u9192\u3002</li> <li>\u200b\u7b49\u5f85\u8fde\u63a5\uff1a\u5728\u7f51\u7edc\u7f16\u7a0b\u4e2d\uff0c\u7ebf\u7a0b\u5728\u5c1d\u8bd5\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\uff08\u5982\u8c03\u7528Socket.connect()\uff09\u65f6\uff0c\u5982\u679c\u8fde\u63a5\u672a\u6210\u529f\uff0c\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u8fde\u63a5\u5efa\u7acb\u6216\u53d1\u751f\u5f02\u5e38\u3002</li> <li>\u200b\u8bfb\u53d6\u6570\u636e\uff1a\u7ebf\u7a0b\u4ece\u8f93\u5165\u6d41\uff08\u5982Socket\u7684\u8f93\u5165\u6d41\uff09\u8bfb\u53d6\u6570\u636e\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u6570\u636e\uff0c\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u8bfb\u53d6\u5230\u8db3\u591f\u7684\u6570\u636e\u6216\u53d1\u751f\u5f02\u5e38\u3002</li> <li>\u200b\u5199\u5165\u6570\u636e\uff1a\u7ebf\u7a0b\u5411\u8f93\u51fa\u6d41\uff08\u5982Socket\u7684\u8f93\u51fa\u6d41\uff09\u5199\u5165\u6570\u636e\u65f6\uff0c\u5982\u679c\u8f93\u51fa\u7f13\u51b2\u533a\u5df2\u6ee1\uff0c\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u6570\u636e\u88ab\u5b8c\u5168\u5199\u5165\u6216\u53d1\u751f\u5f02\u5e38\u3002</li> <li>\u200b\u5173\u95ed\u8fde\u63a5\uff1a\u7ebf\u7a0b\u5728\u5173\u95ed\u5957\u63a5\u5b57\uff08\u5982\u8c03\u7528Socket.close()\uff09\u65f6\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u5ef6\u8fdf\u5173\u95ed\uff0c\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u6240\u6709\u6570\u636e\u53d1\u9001\u5b8c\u6bd5\u6216\u8d85\u8fc7\u5ef6\u8fdf\u65f6\u95f4</li> </ol>"}, {"location": "android/interview/java_kotlin/#threadrunstart", "title": "\u8bf7\u8c08\u8c08Thread\u4e2drun()\u4e0estart()\u7684\u533a\u522b", "text": "<p>run\u65b9\u6cd5\uff1a\u4e0d\u4f1a\u521b\u5efa\u7ebf\u7a0b\uff0c\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u88ab\u591a\u6b21\u8c03\u7528</p> <p>start\u65b9\u6cd5\uff1ajvm\u4f1a\u521b\u5efa\u7ebf\u7a0b\uff0c\u53ea\u80fd\u8c03\u7528\u4e00\u6b21</p>"}, {"location": "android/interview/java_kotlin/#synchronizedvolatile", "title": "synchronized\u548cvolatile\u5173\u952e\u5b57\u7684\u533a\u522b", "text": "<p>\u89c1synchronized vs volatile</p>"}, {"location": "android/interview/java_kotlin/#javanotifynotifyall", "title": "java\u7ebf\u7a0b\u4e2dnotify\u548cnotifyAll\u6709\u4ec0\u4e48\u533a\u522b", "text": "<p>notify()\uff1a\u5524\u9192\u5728\u6b64\u5bf9\u8c61\u76d1\u89c6\u5668\u4e0a\u7b49\u5f85\u7684\u5355\u4e2a\u7ebf\u7a0b\u3002</p> <p>\u5982\u679c\u6709\u591a\u4e2a\u7ebf\u7a0b\u5728\u5bf9\u8c61\u76d1\u89c6\u5668\u4e0a\u7b49\u5f85\uff0cnotify() \u65b9\u6cd5\u4f1a\u968f\u673a\u4e00\u4e2a\u7ebf\u7a0b\u5524\u9192\uff0c\u88ab\u5524\u9192\u7684\u7ebf\u7a0b\u9700\u8981\u91cd\u65b0\u83b7\u53d6\u5bf9\u8c61\u7684\u9501\uff0c\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002</p> <p>notifyAll()\uff1a\u5524\u9192\u5728\u6b64\u5bf9\u8c61\u76d1\u89c6\u5668\u4e0a\u7b49\u5f85\u7684\u6240\u6709\u7ebf\u7a0b\u3002 \u6240\u6709\u7ebf\u7a0b\u88ab\u5524\u9192\u540e\uff0c\u5b83\u4eec\u90fd\u9700\u8981\u91cd\u65b0\u83b7\u53d6\u5bf9\u8c61\u7684\u9501\uff0c\u7136\u540e\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002 \u5728\u7ade\u4e89\u9501\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u83b7\u5f97\u9501\u5e76\u7ee7\u7eed\u6267\u884c\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c06\u518d\u6b21\u8fdb\u5165\u7b49\u5f85\u72b6\u6001</p>"}, {"location": "android/interview/java_kotlin/#_8", "title": "\u4ec0\u4e48\u662f\u7ebf\u7a0b\u6c60\uff1f\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6c60\uff1f", "text": "<p>\u89c1\u7ebf\u7a0b\u6c60</p>"}, {"location": "android/interview/java_kotlin/#java_5", "title": "\u8c08\u4e00\u8c08java\u7ebf\u7a0b\u5e38\u89c1\u7684\u51e0\u79cd\u9501\uff1f", "text": "<p>\u9501\u7684\u5206\u7c7b</p>"}, {"location": "android/interview/java_kotlin/#sleepwait", "title": "\u8c08\u4e00\u8c08\u7ebf\u7a0bsleep()\u548cwait()\u7684\u533a\u522b\uff1f", "text": "<p>sleep vs wait</p>"}, {"location": "android/interview/java_kotlin/#threadlocal", "title": "\u8c08\u8c08ThreadLocal\u7528\u6cd5\u548c\u539f\u7406", "text": "<p>ThreadLocal</p>"}, {"location": "android/interview/java_kotlin/#java_6", "title": "\u8c08\u4e00\u8c08JAVA\u5783\u573e\u56de\u6536\u673a\u5236", "text": "<ul> <li>\u65b0\u751f\u4ee3\u200b\uff1a\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u9996\u5148\u5206\u914d\u5728\u65b0\u751f\u4ee3\u3002\u5206\u4e3aEden\u533a\u548c\u4e24\u4e2aSurvivor\u533a\uff08S0\u548cS1\uff09</li> <li>\u200b\u8001\u5e74\u4ee3\u200b\uff1a\u7ecf\u8fc7\u591a\u6b21\u5783\u573e\u56de\u6536\u540e\u4ecd\u7136\u5b58\u6d3b\u7684\u5bf9\u8c61\u4f1a\u88ab\u79fb\u52a8\u5230\u8001\u5e74\u4ee3\uff0c\u4e00\u822c\u5b58\u5728\u4e8e\u5806\u4e2d</li> <li>\u200b\u6c38\u4e45\u4ee3\u6216\u200b\u5143\u7a7a\u95f4\u200b\uff1a\u7528\u4e8e\u5b58\u50a8\u7c7b\u7684\u5143\u6570\u636e\u4fe1\u606f\uff08\u5728Java8\u53ca\u4ee5\u540e\u7248\u672c\u4e2d\uff0c\u6c38\u4e45\u4ee3\u88ab\u5143\u7a7a\u95f4\u53d6\u4ee3\uff0c\u5143\u7a7a\u95f4\u4f7f\u7528\u672c\u5730\u5185\u5b58\uff09\uff0c\u662f\u65b9\u6cd5\u533a\u7684\u5b9e\u73b0</li> </ul> <p>\u6c38\u4e45\u4ee3\u662f\u56fa\u5b9a\u7a7a\u95f4\uff0c\u5143\u7a7a\u95f4\u53d7\u9650\u4e8e\u7cfb\u7edf\u53ef\u7528\u5185\u5b58</p> <p>\u5783\u573e\u56de\u6536\u7b97\u6cd5</p> <ul> <li>\u6807\u8bb0-\u6e05\u9664</li> <li>\u590d\u5236</li> <li>\u6807\u8bb0-\u6574\u7406</li> <li>\u5206\u4ee3\u6536\u96c6</li> </ul> <p>\u5783\u573e\u56de\u6536\u5668</p> <ul> <li>Serial\u5783\u573e\u56de\u6536\u5668</li> <li>Parallel \u5783\u573e\u56de\u6536\u5668</li> <li>CMS\u5783\u573e\u56de\u6536\u5668</li> <li>G1\u5783\u573e\u56de\u6536\u5668</li> <li>ZGC\u548cShenandoah</li> </ul> <p>Android\u4e3b\u8981\u4f7f\u7528ART GC\uff0c\u5305\u62ec\u5e76\u53d1\u6807\u8bb0-\u6e05\u9664\uff08CMS\uff09\u56de\u6536\u5668\u548cG1</p>"}, {"location": "android/interview/java_kotlin/#_9", "title": "\u4ec0\u4e48\u662f\u5f3a\u3001\u8f6f\u3001\u5f31\u3001\u865a\u5f15\u7528\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b", "text": "<p>\u5f3a\u5f15\u7528</p> <p>\u200b\u5b9a\u4e49\uff1a\u5f3a\u5f15\u7528\u662f\u6700\u5e38\u89c1\u7684\u5f15\u7528\u7c7b\u578b\uff0c\u53ea\u8981\u5bf9\u8c61\u5b58\u5728\u5f3a\u5f15\u7528\uff0c\u5783\u573e\u56de\u6536\u5668\u5c31\u4e0d\u4f1a\u56de\u6536\u8be5\u5bf9\u8c61\u3002</p> <p>\u200b\u5783\u573e\u56de\u6536\u884c\u4e3a\uff1a\u5373\u4f7f\u5185\u5b58\u4e0d\u8db3\uff0cJVM\u4e5f\u4e0d\u4f1a\u56de\u6536\u5177\u6709\u5f3a\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u800c\u662f\u629b\u51faOutOfMemoryError\u5f02\u5e38\u3002</p> <p>\u200b\u4f7f\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u5927\u591a\u6570\u666e\u901a\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5982\u6210\u5458\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u7b49\u3002</p> <p>\u8f6f\u5f15\u7528</p> <p>\u200b\u5b9a\u4e49\uff1a\u8f6f\u5f15\u7528\u901a\u8fc7SoftReference\u7c7b\u5b9e\u73b0\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e9b\u8fd8\u6709\u7528\u4f46\u975e\u5fc5\u987b\u7684\u5bf9\u8c61\u3002</p> <p>\u200b\u5783\u573e\u56de\u6536\u884c\u4e3a\uff1a\u5728\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u5783\u573e\u56de\u6536\u5668\u4f1a\u56de\u6536\u8f6f\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\u3002\u5185\u5b58\u5145\u8db3\u65f6\uff0c\u8f6f\u5f15\u7528\u5bf9\u8c61\u4e0d\u4f1a\u88ab\u56de\u6536\u3002</p> <p>\u200b\u4f7f\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u5b9e\u73b0\u5185\u5b58\u654f\u611f\u7684\u7f13\u5b58\uff0c\u5982\u56fe\u7247\u7f13\u5b58\u3001\u6570\u636e\u7f13\u5b58\u7b49\u3002</p> <p>\u5f31\u5f15\u7528</p> <p>\u200b\u5b9a\u4e49\uff1a\u5f31\u5f15\u7528\u901a\u8fc7WeakReference\u7c7b\u5b9e\u73b0\uff0c\u6bd4\u8f6f\u5f15\u7528\u66f4\u5f31\u3002</p> <p>\u200b\u5783\u573e\u56de\u6536\u884c\u4e3a\uff1a\u65e0\u8bba\u5185\u5b58\u662f\u5426\u5145\u8db3\uff0c\u53ea\u8981\u5783\u573e\u56de\u6536\u5668\u8fd0\u884c\uff0c\u5f31\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\u5c31\u4f1a\u88ab\u56de\u6536\u3002</p> <p>\u200b\u4f7f\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u89e3\u51b3\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\uff0c\u5982WeakHashMap\u4e2d\u7684\u952e\uff0c\u6216\u8005\u7528\u4e8e\u76d1\u542c\u5668\u7684\u7ba1\u7406\u3002</p> <p>\u865a\u5f15\u7528</p> <p>\u200b\u5b9a\u4e49\uff1a\u865a\u5f15\u7528\u901a\u8fc7PhantomReference\u7c7b\u5b9e\u73b0\uff0c\u662f\u6700\u5f31\u7684\u4e00\u79cd\u5f15\u7528\u7c7b\u578b\u3002</p> <p>\u200b\u5783\u573e\u56de\u6536\u884c\u4e3a\uff1a\u865a\u5f15\u7528\u65e0\u6cd5\u901a\u8fc7get()\u65b9\u6cd5\u83b7\u53d6\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u5bf9\u8c61\u88ab\u56de\u6536\u65f6\uff0c\u865a\u5f15\u7528\u4f1a\u88ab\u52a0\u5165\u5230\u5173\u8054\u7684\u5f15\u7528\u961f\u5217\u4e2d\u3002</p> <p>\u200b\u4f7f\u7528\u573a\u666f\uff1a\u4e3b\u8981\u7528\u4e8e\u8ddf\u8e2a\u5bf9\u8c61\u88ab\u5783\u573e\u56de\u6536\u7684\u6d3b\u52a8\uff0c\u6267\u884c\u4e00\u4e9b\u6e05\u7406\u64cd\u4f5c\uff0c\u5982\u91ca\u653e\u8d44\u6e90\u3001\u8bb0\u5f55\u65e5\u5fd7\u7b49</p>"}, {"location": "android/interview/java_kotlin/#jvmdalvikart", "title": "JVM\u3001Dalvik\u3001ART\u4e09\u8005\u7684\u539f\u7406\u548c\u533a\u522b", "text": "<p>JVM</p> <p>\u200b\u5b9a\u4e49\u4e0e\u4f5c\u7528\uff1aJVM\u662fJava\u865a\u62df\u673a\u7684\u7f29\u5199\uff0c\u5b83\u662fJava\u5e73\u53f0\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u6267\u884cJava\u5b57\u8282\u7801\u6587\u4ef6\uff08.class\u6587\u4ef6\uff09\u3002JVM\u4e3aJava\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u72ec\u7acb\u4e8e\u5e95\u5c42\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u884c\u73af\u5883\uff0c\u5b9e\u73b0\u4e86\u201c\u4e00\u6b21\u7f16\u5199\uff0c\u5230\u5904\u8fd0\u884c\u201d\u7684\u8de8\u5e73\u53f0\u7279\u6027\u3002</p> <p>\u200b\u4e3b\u8981\u529f\u80fd\uff1aJVM\u7684\u4e3b\u8981\u529f\u80fd\u5305\u62ec\u5b57\u8282\u7801\u7f16\u8bd1\u3001\u5185\u5b58\u7ba1\u7406\u548c\u5783\u573e\u56de\u6536\u3002\u5b83\u4f7f\u7528\u5373\u65f6\u7f16\u8bd1\uff08JIT\uff09\u6280\u672f\u5c06\u5b57\u8282\u7801\u8f6c\u6362\u4e3a\u672c\u5730\u673a\u5668\u7801\uff0c\u4ee5\u63d0\u9ad8\u8fd0\u884c\u65f6\u6027\u80fd\u3002</p> <p>Dalvik\u865a\u62df\u673a</p> <p>\u200b\u5b9a\u4e49\u4e0e\u4f5c\u7528\uff1aDalvik\u865a\u62df\u673a\u662fAndroid\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u79cd\u865a\u62df\u673a\u6280\u672f\uff0c\u4e13\u95e8\u7528\u4e8e\u6267\u884cAndroid\u5e94\u7528\u7a0b\u5e8f\u7684\u5b57\u8282\u7801\uff08.dex\u6587\u4ef6\uff09\u3002\u5b83\u9488\u5bf9\u79fb\u52a8\u8bbe\u5907\u7684\u8d44\u6e90\u9650\u5236\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u5177\u6709\u8f83\u4f4e\u7684\u5185\u5b58\u5360\u7528\u548c\u9ad8\u6548\u7684\u7535\u6c60\u4f7f\u7528\u3002</p> <p>\u200b\u5de5\u4f5c\u539f\u7406\uff1aDalvik\u865a\u62df\u673a\u57fa\u4e8e\u5bc4\u5b58\u5668\u67b6\u6784\uff0c\u4f7f\u7528.dex\u6587\u4ef6\u683c\u5f0f\u5b58\u50a8\u548c\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u3002\u5b83\u5728\u8fd0\u884c\u65f6\u4f9d\u8d56\u5373\u65f6\u7f16\u8bd1\u5668\uff08JIT\uff09\u5c06\u90e8\u5206\u5b57\u8282\u7801\u5b9e\u65f6\u7f16\u8bd1\u4e3a\u672c\u5730\u673a\u5668\u7801\uff0c\u4ee5\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002</p> <p>Dalvik\u865a\u62df\u673a\u4ec5\u652f\u630132\u4f4d\u67b6\u6784</p> <p>ART</p> <p>\u200b\u5b9a\u4e49\u4e0e\u4f5c\u7528\uff1aART\u662fAndroid 5.0\uff08Lollipop\uff09\u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\u7684\u9ed8\u8ba4\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u53d6\u4ee3\u4e86Dalvik\u865a\u62df\u673a\u3002ART\u901a\u8fc7\u9884\u5148\u7f16\u8bd1\uff08AOT\uff09\u6280\u672f\u5c06\u5b57\u8282\u7801\u7f16\u8bd1\u4e3a\u672c\u5730\u673a\u5668\u7801\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u4e86\u5e94\u7528\u7684\u542f\u52a8\u901f\u5ea6\u548c\u8fd0\u884c\u6548\u7387\u3002</p> <p>\u200b\u5de5\u4f5c\u539f\u7406\uff1aART\u5728\u5e94\u7528\u5b89\u88c5\u65f6\u5c31\u9884\u5148\u5c06\u5b57\u8282\u7801\u7f16\u8bd1\u4e3a\u673a\u5668\u7801\uff0c\u6539\u8fdb\u4e86\u5185\u5b58\u5206\u914d\u548c\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u5185\u5b58\u7ba1\u7406\u3002</p> <p>\u5728Android 8.0\u4e4b\u524d\uff0cART\u4f1a\u5c06dex\u6587\u4ef6\u4f18\u5316\u5e76\u7f16\u8bd1\u6210odex\u6587\u4ef6\uff0codex\u6587\u4ef6\u5305\u542b\u4e86\u7ecf\u8fc7AOT\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u4ee5\u53cadex\u7684\u5b8c\u6574\u5185\u5bb9</p> <p>\u4eceAndroid 8.0\u5f00\u59cb\uff0codex\u6587\u4ef6\u4e2d\u7684dex\u5185\u5bb9\u88ab\u79fb\u52a8\u5230\u4e86.vdex\u6587\u4ef6\u4e2d\uff0c\u800codex\u6587\u4ef6\u5219\u4e3b\u8981\u5305\u542b\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\uff0c\u5f15\u5165.xdex\u7528\u4e8e\u652f\u630164\u4f4d\u67b6\u6784</p> <p>ART\u8fd8\u4f1a\u751f\u6210.art\u6587\u4ef6\uff0c\u7528\u4e8e\u52a0\u901f\u8fd0\u884c\u65f6\u52a0\u8f7dodex\u4e2d\u70ed\u70b9\u4ee3\u7801\u7684\u901f\u5ea6\uff0c\u5305\u542b\u4e86\u7c7b\u4fe1\u606f\u548codex\u4e2d\u70ed\u70b9\u65b9\u6cd5\u7684\u7d22\u5f15</p> <p>ART\u4f7f\u7528dex2oat\u5de5\u5177\u5c06dex\u6587\u4ef6\u7f16\u8bd1\u6210.oat\u6587\u4ef6\uff0c\u8fd9\u662f\u4e00\u4e2aELF\u683c\u5f0f\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u9884\u7f16\u8bd1\u540e\u7684\u673a\u5668\u7801</p> <p>\u4e09\u8005\u7684\u533a\u522b</p> <ul> <li>\u200b\u7f16\u8bd1\u65b9\u5f0f\uff1aJVM\u4f7f\u7528\u5373\u65f6\u7f16\u8bd1\uff08JIT\uff09\u6280\u672f\uff0c\u800cDalvik\u865a\u62df\u673a\u4e5f\u4f7f\u7528JIT\uff0c\u4f46ART\u4f7f\u7528\u9884\u5148\u7f16\u8bd1\uff08AOT\uff09\u6280\u672f\u3002 \u200b\u6027\u80fd\uff1a\u7531\u4e8eART\u4f7f\u7528AOT\u7f16\u8bd1\uff0c\u5176\u6027\u80fd\u901a\u5e38\u4f18\u4e8e\u4f7f\u7528JIT\u7f16\u8bd1\u7684Dalvik\u865a\u62df\u673a\u3002</li> <li>\u200b\u5185\u5b58\u7ba1\u7406\uff1aART\u63d0\u4f9b\u4e86\u66f4\u9ad8\u6548\u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\u65f6\u3002</li> <li>\u200b\u5b89\u88c5\u65f6\u95f4\uff1a\u7531\u4e8eAOT\u7f16\u8bd1\uff0cART\u7684\u5e94\u7528\u7a0b\u5e8f\u5b89\u88c5\u65f6\u95f4\u53ef\u80fd\u6bd4Dalvik\u66f4\u957f\u3002</li> <li>\u200b\u517c\u5bb9\u6027\uff1aDalvik\u865a\u62df\u673a\u4e0e\u65e7\u7684\u5e94\u7528\u7a0b\u5e8f\u517c\u5bb9\u6027\u66f4\u597d\uff0c\u800cART\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u65e7\u7248\u672c\u7684Android\u7cfb\u7edf\u4e2d</li> </ul>"}, {"location": "android/interview/java_kotlin/#javakotlin_1", "title": "java/kotlin\u4e2d\u7684\u5355\u4f8b", "text": "<p>\u89c1\u8bbe\u8ba1\u6a21\u5f0f</p>"}, {"location": "android/interview/java_kotlin/#kotlin", "title": "Kotlin\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u6709\u9690\u5f0f\u8f6c\u6362\u5417", "text": "<p>\u6ca1\u6709\uff0c\u9700\u8981\u663e\u793a\u8f6c\u5316\uff0c\u5982 <pre><code>val byteNum: Byte = 13\nval intNum: Int = byteNum.toInt() // \u6b63\u786e\n</code></pre></p> <p>java\u4e2d\u6709\uff0c\u5982float a = 1;</p>"}, {"location": "android/interview/java_kotlin/#kotlinanyjavaobject", "title": "\u8bf4\u8bf4Kotlin\u4e2d\u7684Any\u4e0eJava\u4e2d\u7684Object\u6709\u4f55\u5f02\u540c", "text": "<p>\u5728Java\u4e2d\uff0cObject\u662f\u6240\u6709\u5f15\u7528\u7c7b\u7684\u8d85\u7c7b\uff0c\u662f\u7c7b\u5c42\u7ea7\u7684\u6839\u3002</p> <p>\u5728Kotlin\u4e2d\uff0cAny\u662f\u6240\u6709\u975e\u7a7a\u7c7b\u578b\u7684\u8d85\u7c7b\uff0c\u4e5f\u662f\u7c7b\u5c42\u7ea7\u7684\u6839</p> <p>Any\u53ea\u63d0\u4f9b\u4e86toString()\u3001equals()\u548chashCode()\u65b9\u6cd5</p>"}, {"location": "android/interview/java_kotlin/#kotlin_1", "title": "Kotlin\u4e2d\u96c6\u5408\u904d\u5386\u6709\u54ea\u51e0\u79cd\u65b9\u5f0f", "text": "<p>for\u5faa\u73af\u904d\u5386\u3001forEach\u9ad8\u9636\u51fd\u6570\u3001map\u6620\u5c04\u3001\u200bfilter\u8fc7\u6ee4\u3001\u200bflatMap\u6241\u5e73\u5316\u6620\u5c04\u3001\u8fed\u4ee3\u5668\u904d\u5386\u3001\u60f0\u6027\u8ba1\u7b97(asSequence)\u3001\u5e76\u53d1\u904d\u5386(parallelStream)</p>"}, {"location": "android/interview/java_kotlin/#kotlinlet", "title": "Kotlin\u5185\u7f6e\u6807\u51c6\u51fd\u6570let\u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1f", "text": "<pre><code>inline &lt;T,R&gt; fun T.let(block:(T)-&gt; R):R {\n    return block(this)\n}\n</code></pre>"}, {"location": "android/interview/java_kotlin/#kotlinrun", "title": "Kotlin\u8bed\u8a00\u7684run\u9ad8\u9636\u51fd\u6570\u7684\u539f\u7406\u662f\u4ec0\u4e48\uff1f", "text": "<pre><code>inline &lt;R&gt; fun T.let(block:T.()-&gt; R):R {\n    return block()\n}\n</code></pre>"}, {"location": "android/interview/java_kotlin/#kotlincoroutines", "title": "\u8bf7\u8c08\u8c08Kotlin\u4e2d\u7684Coroutines\uff0c\u5b83\u4e0e\u7ebf\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u6709\u54ea\u4e9b\u4f18\u70b9", "text": "<p>\u534f\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u533a\u522b</p> <p>\u200b\u8d44\u6e90\u6d88\u8017\uff1a</p> <p>\u200b\u7ebf\u7a0b\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u901a\u5e38\u5360\u7528\u7ea61MB\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u7684\u5f00\u9500\u8f83\u5927\uff0c\u5c24\u5176\u662f\u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\u5bb9\u6613\u5bfc\u81f4\u5185\u5b58\u6ea2\u51fa\uff08OOM\uff09\u3002</p> <p>\u200b\u534f\u7a0b\uff1a\u534f\u7a0b\u662f\u8f7b\u91cf\u7ea7\u7684\uff0c\u5185\u5b58\u5360\u7528\u8fdc\u5c0f\u4e8e\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u5728\u5355\u4e2a\u7ebf\u7a0b\u4e2d\u521b\u5efa\u6210\u5343\u4e0a\u4e07\u4e2a\u534f\u7a0b\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u5185\u5b58\u6d88\u8017\u3002 \u200b\u8c03\u5ea6\u673a\u5236\uff1a</p> <p>\u200b\u7ebf\u7a0b\uff1a\u7ebf\u7a0b\u7684\u8c03\u5ea6\u7531\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\uff0c\u5c5e\u4e8e\u62a2\u5360\u5f0f\u8c03\u5ea6\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u548c\u901a\u4fe1\u8f83\u4e3a\u590d\u6742\uff0c\u9700\u8981\u4f7f\u7528\u9501\u3001\u4fe1\u53f7\u91cf\u7b49\u673a\u5236\u3002 \u200b\u534f\u7a0b\uff1a\u534f\u7a0b\u7684\u8c03\u5ea6\u7531\u7f16\u7a0b\u8bed\u8a00\u6216\u6846\u67b6\u81ea\u884c\u7ba1\u7406\uff0cKotlin\u534f\u7a0b\u901a\u8fc7\u6302\u8d77\u51fd\u6570\u5b9e\u73b0\u975e\u62a2\u5360\u5f0f\u7684\u534f\u4f5c\u8c03\u5ea6\uff0c\u534f\u7a0b\u95f4\u7684\u901a\u4fe1\u548c\u6570\u636e\u4f20\u9012\u66f4\u52a0\u4fbf\u6377\u3002 \u200b\u7f16\u7a0b\u6a21\u578b\uff1a</p> <p>\u200b\u7ebf\u7a0b\uff1a\u591a\u7ebf\u7a0b\u7f16\u7a0b\u901a\u5e38\u4ee5\u5171\u4eab\u72b6\u6001\u548c\u9501\u4e3a\u57fa\u7840\uff0c\u7f16\u5199\u5e76\u53d1\u4ee3\u7801\u8f83\u4e3a\u590d\u6742\uff0c\u5bb9\u6613\u5f15\u53d1\u6b7b\u9501\u548c\u7ade\u6001\u6761\u4ef6\u3002 \u200b\u534f\u7a0b\uff1a\u534f\u7a0b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7ed3\u6784\u5316\u5e76\u53d1\u7f16\u7a0b\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u6302\u8d77\u51fd\u6570\u7684\u8c03\u7528\u5b9e\u73b0\u4ee3\u7801\u7684\u6682\u505c\u548c\u6062\u590d\uff0c\u4f7f\u5f97\u5f02\u6b65\u7f16\u7a0b\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4</p>"}, {"location": "android/interview/other/", "title": "\u5176\u4ed6", "text": ""}, {"location": "android/interview/other/#_1", "title": "\u97f3\u89c6\u9891\u65b9\u9762", "text": "<p>\u600e\u4e48\u505a\u5230\u76f4\u64ad\u79d2\u5f00\u4f18\u5316\uff1f</p> <p>\u6570\u5b57\u56fe\u50cf\u6ee4\u6ce2\u6709\u54ea\u4e9b\u65b9\u6cd5\uff1f</p> <p>\u56fe\u50cf\u53ef\u4ee5\u63d0\u53d6\u7684\u7279\u5f81\u6709\u54ea\u4e9b\uff1f</p> <p>FFMPEG:\u56fe\u7247\u5982\u4f55\u5408\u6210\u89c6\u9891</p> <p>\u5e38\u89c1\u7684\u97f3\u89c6\u9891\u683c\u5f0f\u6709\u54ea\u4e9b\uff1f</p> <p>\u8bf7\u53d9\u8ff0MPEG\u89c6\u9891\u57fa\u672c\u7801\u6d41\u7ed3\u6784\uff1f</p> <p>\u8bf4\u4e00\u8bf4ffffmpeg\u7684\u6570\u636e\u7ed3\u6784\uff1f</p> <p>\u5982\u4f55\u964d\u4f4e\u5ef6\u8fdf\uff1f\u5982\u4f55\u4fdd\u8bc1\u6d41\u7545\u6027\uff1f\u5982\u4f55\u89e3\u51b3\u5361\u987f\uff1f\u89e3\u51b3\u7f51\u7edc\u6296\u52a8\uff1f</p> <p>\u5e73\u65f6\u8bf4\u7684\u8f6f\u89e3\u548c\u786c\u89e3\uff0c\u5177\u4f53\u662f\u4ec0\u4e48\uff1f</p>"}, {"location": "android/interview/other/#flutter", "title": "Flutter\u65b9\u9762", "text": "<p>Dart \u8bed\u8a00\u7684\u7279\u6027\uff1f</p> <p>Dart \u591a\u4efb\u52a1\u5982\u4f55\u5e76\u884c\u7684\uff1f</p> <p>dart\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff1f</p> <p>Flutter \u7279\u6027\u6709\u54ea\u4e9b\uff1f</p> <p>Widget \u548c element \u548c RenderObject \u4e4b\u95f4\u7684\u5173\u7cfb\uff1f</p> <p>\u4f7f\u7528mixins\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\uff1f</p> <p>Stream \u4e24\u79cd\u8ba2\u9605\u6a21\u5f0f\uff1f</p> <p>Flutter\u4e2d\u7684Widget\u3001State\u3001Context \u7684\u6838\u5fc3\u6982\u5ff5\uff1f\u662f\u4e3a\u4e86\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff1f</p> <p>\u8bf4\u4e00\u4e0bHot Reload\uff0cHot Restart\uff0c\u70ed\u66f4\u65b0\u4e09\u8005\u7684\u533a\u522b\u548c\u539f\u7406</p> <p>Flutter \u5982\u4f55\u4e0e Android iOS \u901a\u4fe1\uff1f</p> <p>\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662f\u72b6\u6001\u7ba1\u7406\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u5b83\uff1f</p>"}, {"location": "android/java/java_annotation/", "title": "\u6ce8\u89e3", "text": ""}, {"location": "android/java/java_annotation/#1", "title": "1.\u57fa\u672c\u4f7f\u7528", "text": "<p><pre><code>@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.SOURCE)\npublic @interface MyAnnotation {\n    String value();\n}\n</code></pre> value\u6bd4\u8f83\u7279\u6b8a\uff0c\u5728\u4f7f\u7528\u65f6\u65e0\u9700\u6307\u5b9a <pre><code>@MyAnnotation(\"MyClass\")\npublic class MyClass {\n\uff5d\n</code></pre> \u5982\u679c\u6362\u6210\u522b\u7684\u540d\u5b57\u5982id\uff0c\u5219\u9700\u8981\u5982\u4e0b\u5199\u6cd5 <pre><code>@MyAnnotation(id = \"MyClass\")\npublic class MyClass {\n\uff5d\n</code></pre> \u5982\u679c\u662f\u591a\u4e2a\u5143\u7d20\u5219\u5fc5\u987b\u5168\u90e8\u4ee5xxx = aa\uff0cyyy = bb\u5199\u6cd5</p>"}, {"location": "android/java/java_annotation/#target", "title": "@Target", "text": "<p>\u4f5c\u7528\u4e8e\u4ec0\u4e48\u5bf9\u8c61\u4e0a\uff0c\u5982\u4e0b\u8868\u793a\u53ef\u4ee5\u4f5c\u7528\u5728\u7c7b\u4e0a\u3001\u5c5e\u6027\u4e0a\u3001\u65b9\u6cd5\u4e0a <pre><code>@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD})\n</code></pre></p> <ul> <li>ElementType.ANNOTATION_TYPE \u53ef\u4ee5\u5e94\u7528\u4e8e\u6ce8\u89e3\u7c7b\u578b\u3002</li> <li>ElementType.CONSTRUCTOR \u53ef\u4ee5\u5e94\u7528\u4e8e\u6784\u9020\u51fd\u6570\u3002</li> <li>ElementType.FIELD \u53ef\u4ee5\u5e94\u7528\u4e8e\u5b57\u6bb5\u6216\u5c5e\u6027\u3002</li> <li>ElementType.LOCAL_VARIABLE \u53ef\u4ee5\u5e94\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\u3002</li> <li>ElementType.METHOD \u53ef\u4ee5\u5e94\u7528\u4e8e\u65b9\u6cd5\u7ea7\u6ce8\u89e3\u3002</li> <li>ElementType.PACKAGE \u53ef\u4ee5\u5e94\u7528\u4e8e\u5305\u58f0\u660e\u3002</li> <li>ElementType.PARAMETER \u53ef\u4ee5\u5e94\u7528\u4e8e\u65b9\u6cd5\u7684\u53c2\u6570\u3002</li> <li>ElementType.TYPE \u53ef\u4ee5\u5e94\u7528\u4e8e\u7c7b\u7684\u4efb\u4f55\u5143\u7d20\u3002</li> </ul>"}, {"location": "android/java/java_annotation/#retention", "title": "@Retention", "text": "<ul> <li>RetentionPolicy.SOURCE\u4ec5\u4fdd\u7559\u5728\u6e90\u7ea7\u522b\u4e2d\uff0c\u5e76\u88ab\u7f16\u8bd1\u5668\u5ffd\u7565</li> <li>RetentionPolicy.CLASS\u5728\u7f16\u8bd1\u65f6\u7531\u7f16\u8bd1\u5668\u4fdd\u7559\uff0c\u4f46 Java \u865a\u62df\u673a(JVM)\u4f1a\u5ffd\u7565</li> <li>RetentionPolicy.RUNTIME\u7531 JVM \u4fdd\u7559\uff0c\u56e0\u6b64\u8fd0\u884c\u65f6\u73af\u5883\u53ef\u4ee5\u4f7f\u7528\u5b83</li> </ul>"}, {"location": "android/java/java_annotation/#inherited", "title": "@Inherited", "text": "<p>\u6ce8\u89e3\u4f5c\u2f64\u88ab\u2f26\u7c7b\u7ee7\u627f</p>"}, {"location": "android/java/java_annotation/#_1", "title": "\u573a\u666f", "text": "<p>SOURCE\uff1a</p> <p>1.APT\u6280\u672f\uff0c\u4e00\u822c\u7528\u4e8e\u751f\u6210\u8f85\u52a9\u7c7b\uff0c\u4f8b\u5982Arouter\u3001butterKnidnife\u7b49\u6846\u67b6</p> <p>\u4e3a\u5565APT\u53ea\u9700\u8981SOURCE\u7ea7\u522b\uff0c\u56e0\u4e3a\u6ce8\u89e3\u7a0b\u5e8f\u8fd0\u884c\u65f6\u673a\u662f\u5728javac\u89e3\u6790\u6e90\u7801\u7684\u65f6\u5019\uff0cSOURCE\u6ce8\u89e3\u7ea7\u522b\u521a\u597d\u662f\u4fdd\u7559\u5230\u6e90\u7801\u7ea7\u522b\uff0c\u5373\u80fd\u88ab\u89e3\u6790\u5230</p> <p>2.\u8bed\u6cd5\u68c0\u67e5\uff0c\u6bd4\u5982@IntDef\u3001DrawableRes\u3001@Override\u7b49</p> <p>CLASS\uff1a 1.AspectJ\u3001\u70ed\u4fee\u590dRoubust</p> <p>RUNTIME\uff1a \u4e00\u822c\u7ed3\u5408\u53cd\u5c04\u6280\u672f\uff0c\u5982Retrofit</p> <p>TypeVariable     \u6cdb\u578b\u7c7b\u578b\u53d8\u91cf\u3002\u53ef\u4ee5\u6cdb\u578b\u4e0a\u4e0b\u9650\u7b49\u4fe1\u606f\uff1b</p> <p>ParameterizedType     \u5177\u4f53\u7684\u6cdb\u578b\u7c7b\u578b\uff0c\u53ef\u4ee5\u83b7\u5f97\u5143\u6570\u636e\u4e2d\u6cdb\u578b\u7b7e\u540d\u7c7b\u578b(\u6cdb\u578b\u771f\u5b9e\u7c7b\u578b)</p> <p>GenericArrayType     \u5f53\u9700\u8981\u63cf\u8ff0\u7684\u7c7b\u578b\u662f\u6cdb\u578b\u7c7b\u7684\u6570\u7ec4\u65f6\uff0c\u6bd4\u5982List[],Map[]\uff0c\u6b64\u63a5\u53e3\u4f1a\u4f5c\u4e3aType\u7684\u5b9e\u73b0\u3002</p> <p>WildcardType     \u901a\u914d\u7b26\u6cdb\u578b\uff0c\u83b7\u5f97\u4e0a\u4e0b\u9650\u4fe1\u606f\uff1b</p>"}, {"location": "android/java/java_base/", "title": "\u57fa\u7840\u6982\u5ff5", "text": ""}, {"location": "android/java/java_base/#_1", "title": "\u8fdb\u7a0b\u548c\u7ebf\u7a0b", "text": "<p>\u8fdb\u7a0b\uff1a\u7a0b\u5e8f\u8fd0\u884c\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d</p> <p>\u8d44\u6e90\uff1aCPU\u3001\u5185\u5b58\u7a7a\u95f4\u3001\u78c1\u76d8IO\u7b49</p> <p>\u8fdb\u7a0b\u548c\u8fdb\u7a0b\u4e4b\u95f4\u72ec\u7acb\uff0c\u8fdb\u7a0b\u4e2d\u7531\u591a\u6761\u7ebf\u7a0b\u5171\u4eab\u5168\u90e8\u8d44\u6e90</p> <p>\u7ebf\u7a0b\uff1aCPU\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u4f9d\u8d56\u4e8e\u8fdb\u7a0b\u800c\u5b58\u5728</p>"}, {"location": "android/java/java_base/#cpu", "title": "CPU\u65f6\u95f4\u7247\u8f6e\u8f6c\u673a\u5236", "text": "<p>\u4e00\u79cd\u7b97\u6cd5\uff0c\u53c8\u79f0RR\u8c03\u5ea6\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u88ab\u5206\u914d\u4e00\u4e2a\u65f6\u95f4\u6bb5(\u65f6\u95f4\u7247)\uff0c\u662f\u8fdb\u7a0b\u5141\u8bb8\u8fd0\u884c\u7684\u65f6\u95f4</p>"}, {"location": "android/java/java_base/#_2", "title": "\u5e76\u884c\u548c\u5e76\u53d1", "text": "<p>\u5e76\u884c\uff1a\u540c\u65f6\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u5982\u8fb9\u5403\u996d\u8fb9\u6253\u7535\u8bdd</p> <p>\u5e76\u53d1\uff1a\u4ea4\u66ff\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1</p>"}, {"location": "android/java/java_base/#_3", "title": "\u9ad8\u5e76\u53d1\u7f16\u7a0b\u4f18\u52bf", "text": "<ol> <li>\u5145\u5206\u5229\u7528CPU\u8d44\u6e90</li> <li>\u52a0\u5feb\u54cd\u5e94\u7528\u6237\u7684\u65f6\u95f4\uff0c\u5982\u767e\u5ea6\u4e91\u4e0b\u8f7d\u591a\u4e2a\u6587\u4ef6</li> <li>\u4ee3\u7801\u6a21\u5757\u5316\u3001\u5f02\u6b65\u5316\u3001\u7b80\u5355\u5316</li> </ol> <p>OS\u9650\u5236</p> <p>Linux\u6bcf\u4e2a\u8fdb\u7a0b\u6700\u591a1000\u4e2a\u7ebf\u7a0b\uff0cWindow\u6700\u591a2000\u4e2a\u7ebf\u7a0b</p>"}, {"location": "android/java/java_base/#threadlocal", "title": "ThreadLocal", "text": "<p>\u7ebf\u7a0b\u7ea7\u522b\u53d8\u91cf\uff0c\u5e76\u53d1\u6a21\u5f0f\u4e0b\u662f\u7edd\u5bf9\u5b89\u5168\u7684\u53d8\u91cf</p> <p></p> <p>\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\uff1aThread t = Thread.currentThread();</p> <p>\u80fd\u4fdd\u8bc1\u6bcf\u4e00\u4e2athread\u4e2d\u6709\u72ec\u7acb\u4e00\u4efd <pre><code>object : ThreadLocal&lt;String&gt;(){\n    override fun initialValue(): String? {\n        return \"123\"\n    }\n}\n</code></pre> \u5185\u5b58\u6cc4\u6f0f\u539f\u56e0</p> <p></p> <p>sThreadLocal\u5982\u679c\u8bbe\u7f6enull\u5373\u7b2c\u4e00\u4e2ax\u53ef\u4ee5\u65ad\u5f00\uff0cKey\u662f\u5f31\u5f15\u7528\u5373\u7b2c\u4e8c\u4e2ax\u53ef\u4ee5\u65ad\u5f00\uff0c\u5982\u679cThread\u4e00\u76f4\u6267\u884c\u5219Value\u662f\u5f3a\u5f15\u7528\u4e0d\u4f1a\u88abgc\u56de\u6536\uff0c\u6240\u4ee5\u53ca\u65f6remove\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f</p>"}, {"location": "android/java/java_base/#_4", "title": "\u540c\u6b65\u3001\u5f02\u6b65\u3001\u963b\u585e\u3001\u975e\u963b\u585e", "text": "<p>\u540c\u6b65\u548c\u5f02\u6b65\u3001\u963b\u585e\u548c\u975e\u963b\u585e\u672c\u8d28\u4e0a\u662f\u4e00\u5bf9\u76f8\u5bf9\u7684\u6982\u5ff5\u3002</p> <p>\u5728\u8fdb\u7a0b\u901a\u4fe1\u8fd9\u4e2a\u5c42\u9762\uff0c\u540c\u6b65\u548c\u5f02\u6b65\u9488\u5bf9\u7684\u662f\u53d1\u9001\u65b9\u800c\u8a00\uff0c\u53d6\u51b3\u4e8e\u5c06\u6570\u636e\u5199\u5230\u5185\u6838\u7f13\u51b2\u533a\u8fdb\u7a0b\u7684\u884c\u4e3a\uff0c\u7ee7\u7eed\u7b49\u5f85\u53d1\u9001\u5219\u4e3a\u540c\u6b65\uff0c\u53cd\u4e4b\u5373\u4e3a\u5f02\u6b65\u3002</p> <p>\u5728\u8fdb\u7a0b\u901a\u4fe1\u8fd9\u4e2a\u5c42\u9762\uff0c\u963b\u585e\u975e\u963b\u585e\u9488\u5bf9\u7684\u662f\u63a5\u6536\u65b9\u800c\u8a00\uff0c\u53d6\u51b3\u4e8e\u5c06\u5185\u6838\u4e2d\u7684\u6570\u636e\u80fd\u5426\u7acb\u5373\u62f7\u8d1d\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u5982\u679c\u4e0d\u80fd\u76f4\u63a5\u62f7\u8d1d\u5219\u4e3a\u963b\u585e\uff0c\u53cd\u4e4b\u5219\u4e3a\u975e\u963b\u585e</p> <p>\u540c\u6b65\u5f02\u6b65\u662f\u8f93\u5165\u5230\u7ed3\u679c\u9700\u4e0d\u9700\u8981\u7b49\u5f85\u51b3\u5b9a\uff0c\u963b\u585e\u548c\u975e\u963b\u585e\u662f\u4e00\u79cd\u72b6\u6001\u7531\u7b49\u5f85\u7ed3\u679c\u65f6\u662f\u5426\u53ef\u4ee5\u505a\u5176\u4ed6\u4e8b\u60c5\u51b3\u5b9a</p>"}, {"location": "android/java/java_base/#_5", "title": "\u963b\u585e\u961f\u5217", "text": "<p>\u4e00\u822c\u7528\u6765\u89e3\u51b3\u751f\u4ea7\u6d88\u8d39\u8005\u95ee\u9898</p> <p>BlockingQueue</p> <p>add\u548cremove\u4e0d\u963b\u585e\uff0c\u4f46add\u65f6\u6ee1\u4e86\u6216\u8005remove\u65f6\u6ca1\u6570\u636e\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38</p> <p>offer\u548cpoll\u4e0d\u963b\u585e\uff0coffer\u65f6\u6ee1\u4e86\u8fd4\u56de\u503c\u4e3afalse\uff0cpoll\u65f6\u6ca1\u6570\u636e\u4f1a\u8fd4\u56denull</p> <p>put\u548ctake\u4f1a\u963b\u585e</p>"}, {"location": "android/java/java_base/#_6", "title": "\u5e38\u7528\u963b\u585e\u961f\u5217", "text": "<p>ArrayBlockingQueue\uff1a\u6570\u636e\u7ed3\u6784\uff0c\u6709\u754c</p> <p>LinkedBlockingQueue\uff1a\u94fe\u8868\u7ed3\u6784\uff0c\u6709\u754c</p> <p>PriorityBlockingQueue\uff1a\u4f18\u5148\u7ea7\u6392\u5217\uff0c\u65e0\u754c</p> <p>DelayQueue\uff1a\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u65e0\u754c</p> <p>SynchronousQueue\uff1a\u4e0d\u5b58\u50a8\u5143\u7d20</p> <p>LinkedTransferQueue\uff1a\u94fe\u8868\u7ed3\u6784\uff0c\u65e0\u754c</p> <p>LinkedBlockingDeque\uff1a\u94fe\u8868\u7ed3\u6784\uff0c\u53cc\u5411</p> <p>\u6709\u754c\uff1a\u5bb9\u91cf\u6709\u9650\uff0c\u5373\u6ee1\u4e86\u540e\u4f1a\u88ab\u963b\u585e</p> <p>\u65e0\u754c\uff1a\u5bb9\u91cf\u65e0\u9650\uff0c\u5373\u4e0d\u4f1a\u88ab\u963b\u585e</p>"}, {"location": "android/java/java_basic/", "title": "\u57fa\u7840", "text": ""}, {"location": "android/java/java_basic/#fieldproperty", "title": "field\u548cproperty\u533a\u522b", "text": "<p>field\uff1a\u5b57\u6bb5 property\uff1a\u5c5e\u6027 property = field + get/set\u65b9\u6cd5 <pre><code>B.class.getDeclaredFields(); // field\u83b7\u53d6\nIntrospector.getBeanInfo(B.class); // property\u83b7\u53d6\n</code></pre></p>"}, {"location": "android/java/java_basic/#_1", "title": "\u9759\u6001\u5c5e\u6027\u548c\u9759\u6001\u65b9\u6cd5", "text": "<p>\u53ef\u4ee5\u88ab\u5b50\u7c7b\u7ee7\u627f</p> <p>\u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u88ab\u91cd\u5199</p> <p>\u4e24\u8005\u90fd\u53ef\u4ee5\u88ab\u8986\u76d6 <pre><code>class Parent {\n    public static int a = 0;\n\n    public static void findA() {\n        System.out.println(\"parent\");\n    }\n}\n\nclass Child extends Parent {\n}\n\nChild.findA();//parent\nSystem.out.println(Child.a);//0\n</code></pre> \u5b50\u7c7b\u4fee\u6539 <pre><code>class Child extends Parent {\n    public static int a = 1;\n\n    public static void findA() {\n        System.out.println(\"child\");\n    }\n}\nChild.findA();//child\nSystem.out.println(Child.a);//1\n</code></pre></p>"}, {"location": "android/java/java_collection/", "title": "\u6570\u636e\u7ed3\u6784", "text": "<p>java\u4e2d\u6240\u6709\u6570\u636e\u7ed3\u6784\u90fd\u662f\u57fa\u4e8e\u6570\u7ec4\u548c\u94fe\u8868\u5b9e\u73b0</p> <p>\u6570\u7ec4\uff1a\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4</p> <p>\u94fe\u8868\uff1aLinkedList</p> <p>\u5176\u4ed6\u6570\u636e\u7ed3\u6784</p> <p>\u5806\uff1aHeap\uff0c\u672c\u8d28\u662f\u4e8c\u53c9\u6811\u7684\u7279\u6027\u6765\u7ef4\u62a4\u4e00\u7ef4\u6570\u7ec4\uff0c\u548c\u6811\u7684\u533a\u522b\uff1a\u4e0d\u662f\u7528\u6307\u9488\u5b9e\u73b0\uff0c\u5185\u5b58\u7531\u4e8e\u6811\uff0c\u591a\u7528\u4e8e\u6392\u5e8f</p> <p>\u5806\u6392\u5e8f\uff1a\u4e8c\u53c9\u6811\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff1alength/2-1</p> <p>\u5927\u9876\u5806\u3001\u5c0f\u9876\u5806</p> <p>\u6808\uff1aStack</p> <p>\u961f\u5217\uff1aQueue</p> <p>\u6811\uff1aTree\uff0c\u57fa\u4e8e\u6307\u9488\u5b9e\u73b0</p> <p>\u56fe\uff1aGraph\uff0c\u6709\u5411\u65e0\u73af\u56fe</p> <p>\u6563\u5217\u8868\uff1aHash</p>"}, {"location": "android/java/java_collection/#arraylist", "title": "ArrayList\u89e3\u6790", "text": "<p>\u4f7f\u7528\u4e0d\u540c\u6784\u9020\u65b9\u6cd5\u7684\u533a\u522b <pre><code>public ArrayList() {\n    this.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;\n}\nArrayList(int initialCapacity)\n</code></pre> \u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5 <pre><code>private static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {};\n\nthis.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;\n</code></pre> \u4f1a\u521d\u59cb\u5316elementData\u6570\u7ec4\uff0c\u957f\u5ea6\u4e3a0\uff0c\u53ef\u4ee5\u770b\u51faArrayList\u662f\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0</p> <p>\u4f7f\u7528\u6709\u53c2\u6784\u9020\u65b9\u6cd5 <pre><code>private static final Object[] EMPTY_ELEMENTDATA = {}\n\nif (initialCapacity &gt; 0) {\n    this.elementData = new Object[initialCapacity];\n} else if (initialCapacity == 0) {\n    this.elementData = EMPTY_ELEMENTDATA;//\u548c\u9ed8\u8ba4\u6709\u533a\u522b\n} else {\n    throw new IllegalArgumentException(\"Illegal Capacity: \"+\n                                        initialCapacity);\n}\n</code></pre> \u5982\u679cinitialCapacity\u4f200\u5c31\u548c\u9ed8\u8ba4\u6784\u9020\u4e00\u6837\uff0c\u5982\u679c\u5927\u4e8e0\u5c31\u4f1a\u521d\u59cb\u5316\u957f\u5ea6\u4e3ainitialCapacity\u7684\u6570\u7ec4</p>"}, {"location": "android/java/java_collection/#_1", "title": "\u95ee\u9898\u63a2\u8ba8", "text": "<p>\u65e2\u7136\u53ef\u4ee5\u8bbe\u7f6e\u521d\u59cb\u5316\u6570\u7ec4\u957f\u5ea6\uff0c\u662f\u4e0d\u662f\u610f\u5473\u7740\u5c31\u53ef\u4ee5add(1, xxx)\uff0c\u4e0d\u4e00\u5b9a\u4ece\u7b2c0\u4e2a\u5f00\u59cb\u6dfb\u52a0\u6570\u636e\uff1f</p> <p>\u7b54\u6848\u662f\u9519\u8bef\u7684\uff0c\u5f53\u6211\u4eec\u8c03\u7528add\u65b9\u6cd5\u65f6\u76f4\u63a5\u62a5\u4e0b\u6807\u8d8a\u754c <pre><code>private int size;\npublic void add(int index, E element) {\n    if (index &gt; size || index &lt; 0)\n        throw new IndexOutOfBoundsException(outOfBoundsMsg(index));\n\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    System.arraycopy(elementData, index, elementData, index + 1,\n                        size - index);\n    elementData[index] = element;\n    size++;\n}\n</code></pre> \u539f\u56e0\u662fthis.size\u5e76\u6ca1\u6709\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u521d\u59cb\u5316\u6b64\u65f6\u4e3a0\uff0cindex\u5982\u679c\u662f0\u5c31\u6ca1\u95ee\u9898\uff0cthis.size\u5c06\u6b63\u5e38\u8d4b\u503c</p> <p>initialCapacity\u610f\u4e49\u4f55\u5728\uff1f</p> <p>\u6539\u53d8elementData\u5927\u5c0f\uff0c\u5373\u6b64\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5f53\u8c03\u7528add(xx)\u662f\u4f1a\u8c03\u7528ensureCapacityInternal\u65b9\u6cd5 <pre><code>private static final int DEFAULT_CAPACITY = 10;\nprivate void ensureCapacityInternal(int minCapacity) {\n    if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {\n        minCapacity = Math.max(DEFAULT_CAPACITY, minCapacity);\n    }\n\n    ensureExplicitCapacity(minCapacity);\n}\nprivate void ensureExplicitCapacity(int minCapacity) {\n    modCount++;\n    if (minCapacity - elementData.length &gt; 0)\n        grow(minCapacity);\n}\n</code></pre> minCapacity\u662fthis.size+1\uff0c\u5982\u679c\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u5219minCapacity\u5c31\u662f10\uff0cif\u6761\u4ef6\u6210\u7acb <pre><code>private static final int MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8;\nprivate void grow(int minCapacity) {\n    int oldCapacity = elementData.length;\n    int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);\n    if (newCapacity - minCapacity &lt; 0)\n        newCapacity = minCapacity;\n    if (newCapacity - MAX_ARRAY_SIZE &gt; 0)\n        newCapacity = hugeCapacity(minCapacity);\n    elementData = Arrays.copyOf(elementData, newCapacity);\n}\n</code></pre> \u8fd9\u91cc\u56e0\u4e3a\u6570\u7ec4\u957f\u5ea6\u662f0\uff0c\u9ed8\u8ba4\u6784\u9020\u7684\u8bddoldCapacity=0\uff0cminCapacity\u4e3a10\uff0c\u5219newCapacity=10\uff0celementData\u6269\u5bb9\u621010\u4e2a\u5bb9\u91cf\u5927\u5c0f\u3002\u4e0b\u6b21add\u65f6size\u53d8\u6210\u4e861\uff0cminCapacity=size+1=2\uff0c\u5219minCapacity - elementData.length=-8\uff0c\u4e0d\u4f1a\u8c03\u7528grow\u3002\u7b49\u5230size=10\u65f6\uff0cminCapacity=11\uff0c\u53c8\u8fdb\u5165grow\uff0cnewCapacity=10+10/2=15</p>"}, {"location": "android/java/java_collection/#_2", "title": "\u603b\u7ed3", "text": "<p>1.ArrayList\u9ed8\u8ba4\u5bb9\u91cf\u662f10</p> <p>2.this.size\u8868\u793a\u7684\u662f\u5bb9\u5668\u6b63\u771f\u7684\u6570\u636e\u4e2a\u6570\uff0c\u5e76\u4e0d\u662f\u7528\u6765\u8868\u793a\u5bb9\u91cf\u5927\u5c0f</p> <p>3.initialCapacity\u4fee\u6539\u9ed8\u8ba4\u5bb9\u91cf\uff0c\u4f18\u70b9\u662f\u53ef\u4ee5\u7528\u6765\u4f18\u5316\u6269\u5bb9\u6b21\u6570</p> <p>4.ArrayList\u6700\u5927\u5bb9\u91cf\u4e3aInteger.MAX_VALUE - 8</p> <p>-8\u7684\u539f\u56e0\u662f\u5bf9\u8c61\u5934\u5927\u5c0f\u9700\u898132 byte=8 int</p> <p>5.\u4e0b\u6b21\u6269\u5bb9\u5927\u7ea6\u4e3a\u539f\u6765\u76841.5\u500d(\u53ef\u80fd\u9664\u4e0d\u5c3d\uff0c\u598213-&gt;19\u7ea61.46)</p> <p>6.\u9664\u4e86\u6784\u9020\u65b9\u6cd5\u8bbe\u7f6e\u5bb9\u91cf\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7ensureCapacity(int minCapacity)</p> <p>\u6ce8\u610f\uff1a\u7406\u8bba\u5f53\u5bb9\u91cf\u53d8\u6210\u6700\u5927\u503c\u540e\u5982\u679c\u518dadd\u4f1a\u53d8\u6210Integer.MAX_VALUE\uff0c\u518dadd\u65f6minCapacity\u4f1a\u53d8\u6210\u8d1f\u6570\u5bfc\u81f4\u5185\u5b58\u6ea2\u51fa\uff0c\u5b9e\u9645\u5185\u5b58\u65e9\u5c31\u4e0d\u591f\u8fbe\u4e0d\u5230Integer.MAX_VALUE - 8 <pre><code>private static int hugeCapacity(int minCapacity) {\n    if (minCapacity &lt; 0) // overflow\n        throw new OutOfMemoryError();\n    return (minCapacity &gt; MAX_ARRAY_SIZE) ?\n        Integer.MAX_VALUE :\n        MAX_ARRAY_SIZE;\n}\n</code></pre> \u83b7\u53d6\u5bf9\u8c61\u5185\u5b58\u5927\u5c0f</p> <p>https://repo.maven.apache.org/maven2/org/apache/lucene/lucene-core/ <pre><code>ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;();\nlong listSize = RamUsageEstimator.sizeOfCollection(list);\nlist.add(\"100\");\nlong itemSize = RamUsageEstimator.sizeOfCollection(list);\nlong oneSize = itemSize - listSize;\ndouble intMaxSize = oneSize * Integer.MAX_VALUE * 1.0 / 1024 / 1024 / 1024;\nSystem.out.println(oneSize + \",\" + intMaxSize);\n</code></pre></p>"}, {"location": "android/java/java_collection/#hashmap", "title": "HashMap", "text": "<p>\u6784\u9020\u65b9\u6cd5 <pre><code>static final float DEFAULT_LOAD_FACTOR = 0.75f;\npublic HashMap() {\n    this.loadFactor = DEFAULT_LOAD_FACTOR;\n}\npublic HashMap(int initialCapacity, float loadFactor) {\n    //...\n    if (initialCapacity &gt; MAXIMUM_CAPACITY)\n        initialCapacity = MAXIMUM_CAPACITY;\n    //...\n    this.loadFactor = loadFactor;\n    this.threshold = tableSizeFor(initialCapacity);\n}\n</code></pre></p> <p>tableSizeFor\u7528\u6765\u4fdd\u8bc1\u5bb9\u91cf\u662f2\u7684\u500d\u6570 <pre><code>static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30;\nstatic final int tableSizeFor(int cap) {\n    int n = cap - 1;\n    n |= n &gt;&gt;&gt; 1;\n    n |= n &gt;&gt;&gt; 2;\n    n |= n &gt;&gt;&gt; 4;\n    n |= n &gt;&gt;&gt; 8;\n    n |= n &gt;&gt;&gt; 16;\n    return (n &lt; 0) ? 1 : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n}\n</code></pre> &gt;&gt;&gt;\u662f\u65e0\u7b26\u53f7\u53f3\u79fb\uff0c&gt;&gt;\u662f\u4f4d\u79fb <pre><code>System.out.println(tableSizeFor(16));\nSystem.out.println(tableSizeFor(21));\nSystem.out.println(tableSizeFor(43));\n\u8f93\u51fa\uff1a16\u300132\u300164\n</code></pre> put\u65b9\u6cd5\u89e3\u6790 <pre><code>static final int TREEIFY_THRESHOLD = 8;\nfinal V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i;\n    if ((tab = table) == null || (n = tab.length) == 0)\n        n = (tab = resize()).length;//\u9996\u6b21\u6269\u5bb9\n    if ((p = tab[i = (n - 1) &amp; hash]) == null)\n        tab[i] = newNode(hash, key, value, null);//\u6ca1\u6709\u53d1\u751fhash\u78b0\u649e\u5c31\u76f4\u63a5\u5b58\u5230\u6570\u7ec4\u4e2d\n    else {\n        //\u51fa\u73b0\u78b0\u649e\u5373\u6570\u7ec4\u4e2d\u5df2\u7ecf\u6709\u503c\n        Node&lt;K,V&gt; e; K k;\n        if (p.hash == hash &amp;&amp;\n            ((k = p.key) == key || (key != null &amp;&amp; key.equals(k))))\n            e = p;//key\u662f\u540c\u4e00\u4e2a\uff0c\u76f4\u63a5\u8d4b\u503c\n        else if (p instanceof TreeNode)\n            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value);//\u4f7f\u7528\u7ea2\u9ed1\u6811\u4fdd\u5b58\n        else {\n            for (int binCount = 0; ; ++binCount) {\n                if ((e = p.next) == null) {\n                    p.next = newNode(hash, key, value, null);\n                    if (binCount &gt;= TREEIFY_THRESHOLD - 1)\n                        treeifyBin(tab, hash);//\u5982\u679c\u94fe\u8868\u6570\u91cf\u90fd\u8d85\u8fc78\u4e2a\u5c31\u8f6c\u6210\u7ea2\u9ed1\u6811\u4fdd\u5b58\n                    break;\n                }\n                //...\n            }//\u4f7f\u7528\u94fe\u8868\u4fdd\u5b58\n        }\n        if (e != null) {\n            V oldValue = e.value;\n            if (!onlyIfAbsent || oldValue == null)\n                e.value = value;\n            afterNodeAccess(e);\n            return oldValue;//key\u76f8\u540c\uff0c\u8fd4\u56de\u88ab\u8986\u76d6\u7684value\u503c\n        }\n    }\n    //...\n    if (++size &gt; threshold)// \u8fbe\u5230\u603b\u5bb9\u91cf\u76840.75\u65f6\u4f1a\u6269\u5bb9\n        resize();\n    return null;\n}\n</code></pre></p> <p>resize\u65b9\u6cd5\u7528\u6765\u6269\u5bb9 <pre><code>static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4;//16\nnewCap = DEFAULT_INITIAL_CAPACITY;\nnewThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);\nthreshold = newThr;\nNode&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])new Node[newCap];//\u521d\u59cb\u5316\u957f\u5ea6\u4e3a16\u7684\u6570\u7ec4\n</code></pre> \u4e0b\u6b21\u6269\u5bb9\u770bthreshold\u5927\u5c0f\uff0c\u9ed8\u8ba4\u662f0.75*16=12\uff0c\u5373\u5f53\u5bb9\u91cf\u4e3a12\u65f6\u4f1a\u8fdb\u884c\u4e00\u6b21\u6269\u5bb9</p> <p>\u8f6c\u5316\u7ea2\u9ed1\u6811\u7684\u524d\u63d0\uff1a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u94fe\u8868\u957f\u5ea6\u5927\u4e8e8\u4e14\u6570\u7ec4\u672c\u8eab\u957f\u5ea6&gt;64</p> <p>\u4e3a\u4ec0\u4e48\u662f8\u800c\u4e0d\u662fTREEIFY_THRESHOLD - 1=7\uff0c\u56e0\u4e3abinCount\u662f\u4ece0\u5f00\u59cb\u7684 <pre><code>final void treeifyBin(Node&lt;K,V&gt;[] tab, int hash) {\n    int n, index; Node&lt;K,V&gt; e;\n    if (tab == null || (n = tab.length) &lt; MIN_TREEIFY_CAPACITY)//64\n        resize();\n    else if ((e = tab[index = (n - 1) &amp; hash]) != null) {\n        TreeNode&lt;K,V&gt; hd = null, tl = null;\n        do {\n            TreeNode&lt;K,V&gt; p = replacementTreeNode(e, null);\n            if (tl == null)\n                hd = p;\n            else {\n                p.prev = tl;\n                tl.next = p;\n            }\n            tl = p;\n        } while ((e = e.next) != null);\n        if ((tab[index] = hd) != null)\n            hd.treeify(tab);\n    }\n}\n</code></pre> \u81ea\u5b9a\u4e49\u9996\u6b21\u6269\u5bb9\u5927\u5c0f\u6d41\u7a0b(\u6269\u5bb9\u9488\u5bf9\u7684\u662f\u6570\u7ec4\uff0c\u5e76\u975e\u5bb9\u91cf\u5927\u5c0f\uff0c\u5bb9\u91cf=size)</p> <p>\u8c03\u7528\u4e24\u4e2a\u53c2\u6570\u6784\u9020\u65b9\u6cd5 <pre><code>new HashMap&lt;&gt;(27, 0.5F)\n\n-&gt;HashMap()\nthis.loadFactor = 0.5;\nthis.threshold = tableSizeFor(27);//32\n\n-&gt;resize()\nint newCap, newThr = 0;\nint oldThr = threshold;//32\nelse if (oldThr &gt; 0) \n    newCap = oldThr;//32\nif (newThr == 0) {\n    float ft = (float)newCap * loadFactor;//32*0.5=16\n    newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (float)MAXIMUM_CAPACITY ?\n                (int)ft : Integer.MAX_VALUE);//16\n}\nthreshold = newThr;\nNode&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])new Node[newCap];\ntable = newTab;\n</code></pre></p> <p>\u4e0b\u6b21\u6269\u5bb9\u90fd\u662f\u539f\u6765\u76842\u500d <pre><code>int oldThr = threshold;\nelse if ((newCap = oldCap &lt;&lt; 1) &lt; MAXIMUM_CAPACITY &amp;&amp;\n    oldCap &gt;= DEFAULT_INITIAL_CAPACITY)\nnewThr = oldThr &lt;&lt; 1;\n</code></pre></p>"}, {"location": "android/java/java_collection/#sparsearray", "title": "SparseArray", "text": "<p>\u4e8c\u5206\u67e5\u627e\u6cd5\u3001\u7ed3\u6784\u662f\u4e24\u4e2a\u6570\u7ec4\uff0c\u9ed8\u8ba4\u5bb9\u91cf\u662f10(\u975e\u96c6\u5408\u5927\u5c0f) <pre><code>private int[] mKeys;\nprivate Object[] mValues;\npublic SparseArray() {\n    this(10);\n}\n</code></pre></p> <p>\u6269\u5bb9\u673a\u5236\uff0c\u5982\u679c\u521d\u59cb\u5bb9\u91cf\u5c0f\u4e8e4\u76f4\u63a5\u6269\u5bb9\u62108\uff0c\u5426\u5219\u90fd\u662f\u6269\u5bb9\u6210\u539f\u6765\u76842\u500d <pre><code>public static int growSize(int currentSize) {\n    return currentSize &lt;= 4 ? 8 : currentSize * 2;\n}\n</code></pre></p>"}, {"location": "android/java/java_collection/#concurrenthashmap", "title": "ConcurrentHashMap", "text": ""}, {"location": "android/java/java_collection/#linkedhashmap", "title": "LinkedHashMap", "text": "<p>\u7ee7\u627f\u4e8eHashMap <pre><code>val map = object : LinkedHashMap&lt;String, String&gt;() {\n    override fun removeEldestEntry(eldest: MutableMap.MutableEntry&lt;String, String&gt;): Boolean {\n        return size &gt; 3\n    }\n}\n</code></pre> \u9650\u5236map\u5927\u5c0f\uff0cFIFO\u6dd8\u6c70\u673a\u5236\uff0c\u4e0a\u9762\u8d85\u8fc73\u4e2a\u540e\u4f1a\u4ece\u7b2c0\u4e2a\u5f00\u59cb\u79fb\u9664\uff0c\u6b64\u65b9\u6cd5\u662f\u5728\u7236\u7c7bHashMap\u4e2d\u7684afterNodeInsertion\u91cc\u9762\u8c03\u7528\u7684</p>"}, {"location": "android/java/java_collection/#_3", "title": "\u7b97\u6cd5", "text": ""}, {"location": "android/java/java_collection/#_4", "title": "\u4e8c\u5206\u67e5\u627e", "text": "<p>\u524d\u63d0\uff1a\u5df2\u7ecf\u6709\u5e8f\u6392\u5217</p>"}, {"location": "android/java/java_collection/#_5", "title": "\u6392\u5e8f\u7b97\u6cd5", "text": "<p>\u5192\u6ce1\u3001\u9009\u62e9\u3001\u63d2\u5165\u3001\u5f52\u5e76\u3001\u5806\u3001\u5feb\u901f\u3001\u5e0c\u5c14\u3001\u8ba1\u6570\u3001\u57fa\u6570\u3001\u6876\u6392\u5e8f</p>"}, {"location": "android/java/java_collection/#_6", "title": "\u5192\u6ce1\u6392\u5e8f", "text": "<p>\u6838\u5fc3\u601d\u60f3\uff1a\u4e24\u4e24\u6bd4\u8f83\uff0c\u5c06\u6700\u5c0f\u7684\u6216\u6700\u5927\u7684\u6392\u5230\u6700\u540e</p> <p>\u6bd4\u5982\uff1a5 8 1 75 \u5347\u5e8f</p> <p>\u7b2c\u4e00\u8f6e\uff1a5,8 8,1-&gt;1,8 8,75\u53d8\u62105 1 8 75\uff0c\u6b64\u65f675\u65e0\u9700\u6bd4\u8f83</p> <p>\u7b2c\u4e8c\u8f6e\uff1a5,1-&gt;1,5 5,8\u53d8\u62101 5 8 75\uff0c\u6b64\u65f68\u4e5f\u65e0\u9700\u6bd4\u8f83</p> <p>\u7b2c\u4e09\u8f6e\uff1a1,5\u7ed3\u675f</p> <p>\u6240\u4ee5\u8f6e\u6570\u662f\u6570\u7ec4\u957f\u5ea6-1\uff0c\u6bcf\u8f6e\u6bd4\u8f83\u6b21\u6570\u662f\u6570\u7ec4\u957f\u5ea6-1-\u7b2c\u51e0\u8f6e</p> <pre><code>fun bubbleSort(arr: IntArray, isAsc: Boolean) {\n    if (arr.isNotEmpty()) {\n        for (i in arr.indices) {\n            for (j in 0 until arr.size - 1 - i) {\n                val asc = if (isAsc) arr[j + 1] &gt; arr[j]\n                else arr[j + 1] &lt; arr[j]\n                if (asc) {\n                    val temp = arr[j + 1]\n                    arr[j + 1] = arr[j]\n                    arr[j] = temp\n                }\n            }\n        }\n    }\n    println(arr.contentToString())\n}\n</code></pre>"}, {"location": "android/java/java_collection/#_7", "title": "\u9009\u62e9\u6392\u5e8f", "text": "<p>\u6838\u5fc3\u601d\u60f3\uff1a\u627e\u5230\u6700\u5927\u6216\u6700\u5c0f\u503c\u7528\u4e0b\u6807\u8bb0\u5f55\uff0c\u653e\u5230\u6700\u524d\u9762</p> <p>\u6bd4\u5982\uff1a5 8 1 75 \u5347\u5e8f(\u627e\u6700\u5c0f\u503c) \u4e0b\u6807index</p> <p>\u7b2c\u4e00\u8f6e\uff1aindex = 2\uff0c1\u548c5\u4ea4\u6362\uff0c\u6b64\u65f6\u53d8\u62108 5 75</p> <p>\u7b2c\u4e8c\u8f6e\uff1aindex = 1\uff0c8\u548c5\u4ea4\u6362\uff0c\u6b64\u65f6\u53d8\u62108 75</p> <p>\u7b2c\u4e09\u8f6e\uff1aindex = 0\u7ed3\u675f</p> <pre><code>fun selectSort(arr: IntArray, isAsc: Boolean) {\n    for (i in arr.indices) {\n        var index: Int = i\n        for (j in i+1 until arr.size) {\n            val asc = if (isAsc) arr[j] &lt; arr[index]\n            else arr[j] &gt; arr[index]\n            if (asc) {\n                index = j\n            }\n        }\n        val temp = arr[index]\n        arr[index] = arr[i]\n        arr[i] = temp\n    }\n    println(arr.contentToString())\n}\n</code></pre>"}, {"location": "android/java/java_genericity/", "title": "\u6cdb\u578b", "text": ""}, {"location": "android/java/java_genericity/#1", "title": "1.\u6cdb\u578b\u5b9a\u4e49", "text": ""}, {"location": "android/java/java_genericity/#_1", "title": "\u6cdb\u578b\u7c7b", "text": "<pre><code>public class NormalGeneric&lt;K&gt; {\n    private K data;\n}\n</code></pre>"}, {"location": "android/java/java_genericity/#_2", "title": "\u6cdb\u578b\u63a5\u53e3", "text": "<pre><code>public interface Genertor&lt;T&gt; {\n    public T next();\n}\n</code></pre>"}, {"location": "android/java/java_genericity/#_3", "title": "\u63a5\u53e3\u5b9e\u73b0\u4e00", "text": "<pre><code>public class ImplGenertor&lt;T&gt; implements Genertor&lt;T&gt; {\n    @Override\n    public T next() {\n        return null;\n    }\n}\n</code></pre>"}, {"location": "android/java/java_genericity/#_4", "title": "\u63a5\u53e3\u5b9e\u73b0\u4e8c", "text": "<pre><code>public class ImplGenertor2 implements Genertor&lt;String&gt; {\n    @Override\n    public String next() {\n        return null;\n    }\n}\n</code></pre>"}, {"location": "android/java/java_genericity/#_5", "title": "\u6cdb\u578b\u65b9\u6cd5", "text": "<p><pre><code>public class GenericMethod {\n    public &lt;T&gt; T genericMethod(T...a){\n        return a[a.length/2];\n    }\n}\n</code></pre> \u6ce8\uff1a\u6709<code>&lt;T&gt;</code>\u624d\u662f\u6cdb\u578b\u65b9\u6cd5\uff0c\u4e14\u548c\u6cdb\u578b\u7c7b\u65e0\u5173\uff0c\u5982 <pre><code>public class GenericMethod&lt;T&gt; {\n    public &lt;T&gt; T genericMethod(T...a){\n        return a[a.length/2];\n    }\n}\n</code></pre> \u6b64\u5904\u7c7b\u4e2d\u7684T\u548c\u65b9\u6cd5\u4e2d\u7684T\u6beb\u65e0\u5173\u8054</p>"}, {"location": "android/java/java_genericity/#2", "title": "2.\u6cdb\u578b\u9650\u5b9a", "text": "<p>\u5229\u7528extends\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u662f\u7c7b\u6216\u63a5\u53e3\uff0c\u82e5\u6709\u7c7b\u5219\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u4e14\u5fc5\u987b\u6392\u5217\u5728\u9996\u4e2a <pre><code>public static &lt;T extends ArrayList &amp; Comparable&gt; T min(T a, T b){\n    if(a.compareTo(b)&gt;0) return a; else return b;\n}\n</code></pre></p>"}, {"location": "android/java/java_genericity/#3", "title": "3.\u6cdb\u578b\u5c40\u9650\u6027\u3001\u7ea6\u675f", "text": "<p>1.\u4e0d\u80fd\u5b9e\u4f8b\u5316\u5373new <pre><code>new T();\n</code></pre> 2.static\u4fee\u9970\u4e2d\u4e0d\u53ef\u4f7f\u7528\uff0c\u5982\u4e0b\u7f16\u8bd1\u62a5\u9519\uff0c\u9664\u4e86\u9759\u6001\u6cdb\u578b\u65b9\u6cd5\u5982\u4e0a\u9762min\u65b9\u6cd5 <pre><code>private static T instance;\nprivate static void getInstance(T t){}\n</code></pre> \u4e0d\u53ef\u4f7f\u7528\u539f\u56e0\uff1a\u9759\u6001\u5148\u4e8e\u5bf9\u8c61\u521b\u5efa\uff0c\u6cdb\u578b\u662f\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u624d\u786e\u5b9a</p> <p>3.\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0d\u5141\u8bb8\u4f5c\u4e3a\u6cdb\u578b\u53c2\u6570\u4f20\u5165 <pre><code>Restrict&lt;int&gt;\n</code></pre> 4.\u4e0d\u5141\u8bb8\u4f7f\u7528instanceof\u5224\u65ad\uff0c\u5982\u4e0b\u7f16\u8bd1\u62a5\u9519 <pre><code>if(restrict instanceof Restrict&lt;Double&gt;)\n</code></pre> 5.\u6570\u7ec4\u53ef\u4ee5\u7533\u660e\u4f46\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u5982\u4e0b\u7b2c2\u884c\u7f16\u8bd1\u62a5\u9519 <pre><code>Restrict&lt;Double&gt;[] restrictArray;\nRestrict&lt;Double&gt;[] restricts = new Restrict&lt;Double&gt;[10];\n</code></pre> 6.\u4e0d\u80fd\u4f7f\u7528\u5728extends Exception/Throwable\u4e2d\uff0c\u5982\u4e0b\u7f16\u8bd1\u62a5\u9519 <pre><code>class Problem&lt;T&gt; extends Exception{\n}\n</code></pre> 7.\u4e0d\u80fd\u6355\u83b7\u6cdb\u578b\u5f02\u5e38 <pre><code>public &lt;T extends Throwable&gt; void doWork(T x){//\u4e0d\u62a5\u9519\n    try{\n\n    }catch(T t){//\u7f16\u8bd1\u62a5\u9519\n        //do sth;\n    }\n}\n</code></pre> \u6b63\u786e\u5199\u6cd5 <pre><code>public &lt;T extends Throwable&gt; void doWorkSuccess(T t) throws T{\n    try{\n\n    }catch(Throwable e){\n        throw t;\n    }\n}\n</code></pre></p>"}, {"location": "android/java/java_genericity/#4", "title": "4.\u6cdb\u578b\u4e2d\u7684\u7ee7\u627f\u548c\u901a\u914d\u7b26", "text": "<p><pre><code>Pair&lt;Employee&gt;\u548cPair&lt;Worker&gt;\u6ca1\u6709\u4efb\u4f55\u7ee7\u627f\u5173\u7cfb\npublic class Worker extends Employee {\n}\npublic class Pair&lt;T&gt; {\n    Pair&lt;Employee&gt; employeePair = new Pair&lt;Worker&gt;();//\u7f16\u8bd1\u62a5\u9519\n}\n</code></pre> \u6b63\u786e\u65b9\u5f0f <pre><code>private class ExtendPair&lt;T&gt; extends Pair&lt;T&gt;{\n}\npublic class Pair&lt;T&gt; {\n    Pair&lt;String&gt; pair = new ExtendPair&lt;&gt;();\n}\n</code></pre></p>"}, {"location": "android/java/java_genericity/#_6", "title": "\u901a\u914d\u7b26\u4ea7\u751f\u539f\u56e0", "text": "<p><pre><code>public class Fruit{}\npublic class Orange extends Fruit {}\npublic class GenericType&lt;T&gt; {}\npublic static void print(GenericType&lt;Fruit&gt; p){}\npublic static void use(){\nGenericType&lt;Fruit&gt; a = new GenericType&lt;&gt;();\nprint(a);\nGenericType&lt;Orange&gt; b = new GenericType&lt;&gt;();\n//print(b);//Orange\u5c5e\u4e8eFruit\u4f46\u4e0d\u80fd\u4f7f\u7528\u4e0d\u5408\u7406\n}\n</code></pre> \u4f7f\u7528\u901a\u914d\u7b26\u89e3\u51b3\uff0c\u5982\u4e0b <pre><code>public static void print(GenericType&lt;? extends Fruit&gt; p){}\n</code></pre> \u6b64\u5904\u9650\u5b9a\u4e86\u4e0a\u754c\u4e3aFruit\uff0c\u5982 <pre><code>public class Fruit extends Food{}\nprint(new GenericType&lt;Food&gt;());//\u7f16\u8bd1\u62a5\u9519\uff0c\u8d85\u8fc7\u6cdb\u578b\u4e0a\u754c\uff0c\u6700\u5927\u662fFruit\nprint(new GenericType&lt;Fruit&gt;());//\u7f16\u8bd1\u901a\u8fc7\n</code></pre> \u6ce8\uff1a?\u4e00\u822c\u4f7f\u7528\u5728\u53d8\u91cf\u4e2d</p>"}, {"location": "android/java/java_genericity/#_7", "title": "\u901a\u914d\u7b26\u7f3a\u9677", "text": "<p><pre><code>public class GenericType&lt;T&gt; {\n    private T data;\n    public T getData() {\n        return data;\n    }\n    public void setData(T data) {\n        this.data = data;\n    }\n}\nGenericType&lt;? extends Fruit&gt; c = new GenericType&lt;&gt;();\nc.setData(new Orange());//\u62a5\u9519\nc.setData(new Fruit());//\u62a5\u9519\nc.setData(null);//\u7f16\u8bd1\u901a\u8fc7\nFruit x = c.getData();//\u7f16\u8bd1\u901a\u8fc7\n</code></pre> \u6ce8\uff1anull\u662f\u53ef\u4ee5set\u7684</p> <p>extends\u9650\u5236\u4e0a\u754c\uff0c\u4e0b\u754c\u4f7f\u7528super <pre><code>public static void print(GenericType&lt;? super Fruit&gt; p){}\npublic class Fruit extends Food{}\nprint(new GenericType&lt;Orange&gt;());//\u7f16\u8bd1\u62a5\u9519\uff0c\u6ca1\u8fbe\u5230\u4e0b\u754c\uff0c\u81f3\u5c11\u662fFruit\nprint(new GenericType&lt;Fruit&gt;());//\u7f16\u8bd1\u901a\u8fc7\n</code></pre> \u79bb\u8c31\u73b0\u8c61 <pre><code>GenericType&lt;? super Fruit&gt; c = new GenericType&lt;&gt;();\nc.setData(new Orange());//\u7f16\u8bd1\u901a\u8fc7\nc.setData(new Fruit());//\u7f16\u8bd1\u901a\u8fc7\nc.setData(new Food());//\u62a5\u9519\nObject x = c.getData();//\u7f16\u8bd1\u901a\u8fc7\n</code></pre></p>"}, {"location": "android/java/java_genericity/#_8", "title": "\u603b\u7ed3", "text": "<p>1.\u5bf9\u4e8e\u65b9\u6cd5\u6765\u8bf4(print)\uff0c? extends X\u53ea\u80fd\u4f20&lt;=X\u7c7b\u578b\uff0c? super X\u53ea\u80fd\u4f20&gt;=X\u7c7b\u578b</p> <p>2.\u5bf9\u4e8e\u5b9e\u4f8b\u6765\u8bf4</p> <p>? extends X\u80fd\u5b89\u5168\u8bfb\u53d6(get)\uff0cnull\u53ef\u4ee5set</p> <p>? super X\u80fd\u5b89\u5168\u5199\u5165(set)\uff0cget\u53ea\u80fd\u62ff\u5230Object\uff0cset\u53ea\u80fd\u4f20&lt;=X\u7684\u7c7b</p> <p>?\u8868\u793a\u65e0\u9650\u5236\uff0cGenericType&lt;?&gt;</p> <p>3.\u53ea\u80fd\u7533\u660e\u5728\u53d8\u91cf\u4e2d(\u4e34\u65f6\u53d8\u91cf\u3001\u65b9\u6cd5\u53c2\u6570\u53d8\u91cf\u3001\u6210\u5458\u53d8\u91cf\u7b49)</p>"}, {"location": "android/java/java_genericity/#5", "title": "5.\u865a\u62df\u673a\u6cdb\u578b\u5b9e\u73b0(\u4f2a\u6cdb\u578b\uff1a\u7c7b\u578b\u64e6\u9664)", "text": "<p>\u5373\u6cdb\u578b\u53ea\u5728\u7f16\u8bd1\u5668\u6709\u6548 <pre><code>public class GenericRaw&lt;T&gt; {\n    private T data;\n    public T getData() {\n        return data;\n    }\n    public void setData(T data) {\n        this.data = data;\n    }\n}\n</code></pre> \u865a\u62df\u673a\u7f16\u8bd1\u540e\u4f1a\u5c06T\u7528Object\u4ee3\u66ff <pre><code>public class GenericRaw&lt;T extends ArrayList &amp; Comparable&gt; {\n    private T data;\n    public T getData() {\n        return data;\n    }\n    public void setData(T data) {\n        this.data = data;\n    }\n    public void test(){\n        data.compareTo()\n        //((Comparable)data).compareTo()\n    }\n}\n</code></pre> \u865a\u62df\u673a\u7f16\u8bd1\u540e\u4f1a\u5c06T\u7528ArrayList\u4ee3\u66ff\uff0c\u5728\u4f7f\u7528\u5230Comparable\u76f8\u5173\u65b9\u6cd5\u65f6\uff0c\u81ea\u52a8\u63d2\u5165\u5f3a\u8f6c\u4ee3\u7801\uff0c\u5982\u4e0a\u9762test\u65b9\u6cd5\u4e2d \u5bf9\u4e8e\u91cd\u8f7d\u65b9\u6cd5 <pre><code>public static String method(List&lt;String&gt; stringList){\n    return \"OK\";\n}\npublic static Integer method(List&lt;Integer&gt; stringList){\n    return 1;\n}\n</code></pre> \u5bf9\u4e8e\u7f16\u8bd1\u5668\u6765\u8bf4\u4e0a\u9762\u4e24\u4e2a\u65b9\u6cd5\u4e0d\u5c5e\u4e8e\u91cd\u8f7d\uff0c\u901a\u8fc7\u65b9\u6cd5\u540d+\u65b9\u6cd5\u53c2\u6570 \u7531\u4e8e\u6cdb\u578b\u64e6\u9664\u6b64\u5904\u65b9\u6cd5\u53c2\u6570\u88ab\u8ba4\u5b9a\u4e3a\u4e00\u81f4</p> <p>\u4e86\u89e3\uff1a\u6cdb\u578b\u64e6\u9664\uff0c\u539f\u59cb\u6cdb\u578b\u7c7b\u578b\u5176\u5b9e\u5b58\u5728\u4e8eSignature\u4e2d\uff0c\u6cdb\u578b\u64e6\u9664\u4e5f\u662f\u4e3a\u4e86\u517c\u5bb9jdk1.5\u4e4b\u524d\u7248\u672c(\u6ca1\u6709\u6cdb\u578b\u6982\u5ff5)</p>"}, {"location": "android/java/java_genericity/#6", "title": "6.\u6cdb\u578b\u7684\u597d\u5904", "text": "<p>1.\u591a\u79cd\u6570\u636e\u7c7b\u578b\u6267\u884c\u76f8\u540c\u7684\u4ee3\u7801</p> <p>2.\u907f\u514d\u7c7b\u578b\u5f3a\u8f6c\u62a5\u7c7b\u578b\u8f6c\u5316\u5f02\u5e38</p>"}, {"location": "android/java/java_jvm/", "title": "\u865a\u62df\u673a", "text": ""}, {"location": "android/java/java_jvm/#jdkjrejvm", "title": "JDK\u3001JRE\u3001JVM", "text": "<p>jdk\u5305\u542bjre\u548cjvm</p> <p>jdk\u63d0\u4f9b\u5de5\u5177\uff1ajava\u3001javac\u3001javap\u7b49\u5de5\u5177</p> <p>jre\u5305\u542bjava\u7c7b\u5e93\u548cjvm</p> <p>jvm\u662f\u4e00\u79cd\u89c4\u8303\uff0cClassloader\u7528\u6765\u52a0\u8f7dclass\uff0c\u7136\u540e\u4f7f\u7528\u89e3\u6790\u5668\u7ffb\u8bd1\u4ee3\u7801</p> <p>jvm\u662f\u7528c++\u8bed\u8a00\u7f16\u5199</p> <p>\u89e3\u91ca\u6267\u884c\uff1a\u7528c++\u89e3\u91ca\u5668\u53bb\u89e3\u6790class\u4e2d\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\u7ecf\u8fc7\u7ffb\u8bd1\u901f\u5ea6\u4f1a\u6162\u4e00\u70b9</p> <p>JIT\u6267\u884c\uff1aclass\u4ee3\u7801\u7ffb\u8bd1\u6210\u6c47\u7f16\u7801(codecache)\uff0c\u901f\u5ea6\u76f8\u5bf9\u6bd4\u8f83\u5feb</p> <p>jvm\u53ea\u63a5\u6536\u5b57\u8282\u7801(class)\u548c\u5f00\u53d1\u8bed\u8a00\u65e0\u5173\u6027(kotlin,groovy\u7b49\u6700\u7ec8\u8f6c\u6210\u5b57\u8282\u7801\u5373\u53ef)\uff0c\u8de8\u5e73\u53f0(\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u6709\u5bf9\u5e94JDK)</p> <p>\u53ea\u8981\u7b26\u5408jvm\u89c4\u8303\u53ef\u4ee5\u81ea\u884c\u5f00\u53d1jvm</p>"}, {"location": "android/java/java_jvm/#jvm", "title": "Jvm\u7684\u5185\u5b58\u533a\u57df", "text": "<p>\u6267\u884cjava\u7a0b\u5e8f\u65f6\u4f1a\u628a\u5185\u5b58\u5206\u4e3a\u4e94\u4e2a\u533a\u57df\uff1a\u865a\u62df\u673a\u6808\u3001\u672c\u5730\u65b9\u6cd5\u6808\u3001\u65b9\u6cd5\u533a\u3001\u5806\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668</p> <p></p> <p>\u8fd0\u884c\u65f6\u6570\u636e\u533a\u6839\u636e\u7ebf\u7a0b\u5212\u5206\uff1a\u7ebf\u7a0b\u5171\u4eab\u533a\u548c\u7ebf\u7a0b\u79c1\u6709\u533a</p> <p></p> <p>\u7ebf\u7a0b\u5171\u4eab\u533a(\u88ab\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\uff0c\u6709\u4e14\u53ea\u6709\u4e00\u4efd)\uff1a\u65b9\u6cd5\u533a\u548c\u5806</p> <p>\u7ebf\u7a0b\u79c1\u6709\u533a\uff1a\u591a\u4e2a\u7ebf\u7a0b</p> <p>\u9664\u4e86\u8fd0\u884c\u65f6\u6570\u636e\u533a\u8fd8\u6709\u76f4\u63a5\u5185\u5b58(\u6ca1\u6709\u88ab\u865a\u62df\u5316\u7684\u5185\u5b58\uff0c\u6bd4\u5982\u7cfb\u7edf\u5185\u5b588G\uff0cjvm\u865a\u62df\u5316\u4e865G\uff0c\u5269\u4f593G\u88ab\u79f0\u4e3a\u76f4\u63a5\u5185\u5b58)</p> <p>\u65b9\u6cd5\u533a\uff1a\u8fd0\u884c\u65f6\u5e38\u91cf</p> <p>\u7ebf\u7a0b\uff1a\u865a\u62df\u673a\u6808\u3001\u672c\u5730\u65b9\u6cd5\u6808\u548c\u7a0b\u5e8f\u8ba1\u6570\u5668</p>"}, {"location": "android/java/java_jvm/#_1", "title": "\u865a\u62df\u673a\u6808", "text": "<p>1.\u5927\u5c0f\u53d6\u51b3\u4e8e\u5e73\u53f0\uff0c\u67e5\u8be2\u94fe\u63a5</p> <p>https://docs.oracle.com/javase/8/docs/technotes/tools/unix/java.html</p> <p>-Xsssize</p> <p>64\u4f4d\u7cfb\u7edf\u90fd\u662f1M</p> <p>\u5373\u6bcf\u4e2a\u7ebf\u7a0b\u81f3\u5c111M\u5927\u5c0f\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u51cf\u5c0f\u5927\u5c0f\u4f18\u5316\u7cfb\u7edf\u5185\u5b58\u7d27\u5f20</p> <p>-Xss1m</p> <p>-Xss1024k</p> <p>-Xss1048576</p> <p>2.\u7528\u6765\u5b58\u653e\u5f53\u524d\u7ebf\u7a0b\u8fd0\u884c\u65b9\u6cd5\u6240\u6709\u7684\u6570\u636e\u3001\u6307\u4ee4\u3001\u8fd4\u56de\u5730\u5740\uff0c\u7531\u4e8e\u662f\u6808\u7ed3\u6784\uff0c\u6240\u4ee5\u5148\u8fdb\u540e\u51fa\uff0c\u8c03\u7528\u65f6\u5165\u6808\uff0c\u5b8c\u6210\u65f6\u51fa\u6808</p> <p>\u6bd4\u5982\u65b9\u6cd5main\u8c03\u7528A\uff0c\u5373A\u5728main\u4e0a\u9762\uff0c\u6bcf\u4e2a\u65b9\u6cd5\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6808\u5e27</p> <p>\u6808\u6ea2\u51fa\uff1a\u8c03\u7528\u65b9\u6cd5\u6570\u91cf\u603b\u5927\u5c0f\u8d85\u8fc71M\u5bfc\u81f4\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u5e38\u89c1\u6b7b\u9012\u5f52</p> <p>\u6808\u5e27\uff1a\u5c40\u90e8\u53d8\u91cf\u8868\uff0c\u64cd\u4f5c\u6570\u6808\uff0c\u52a8\u6001\u8fde\u63a5\uff0c\u5b8c\u6210\u51fa\u53e3</p> <p>\u5c40\u90e8\u53d8\u91cf\u8868\uff1a\u5b58\u653e\u5c40\u90e8\u53d8\u91cf(java\u7684\u516b\u5927\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3001\u5bf9\u8c61\u5f15\u7528\u3001returnAddress\u7c7b\u578b)</p> <p>\u64cd\u4f5c\u6570\u6808\uff1a\u5b58\u653e\u65b9\u6cd5\u6267\u884c\u7684\u64cd\u4f5c\u6570\uff0c\u64cd\u4f5c\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u610fjava\u6570\u636e\u7c7b\u578b\uff0c\u4f1a\u590d\u7528</p> <p>\u52a8\u6001\u8fde\u63a5\uff1ajava\u8bed\u8a00\u7279\u6027\u591a\u6001\u76f8\u5173</p> <p>\u5b8c\u6210\u51fa\u53e3(\u8fd4\u56de\u5730\u5740)\uff1a\u8c03\u7528\u7a0b\u5e8f\u8ba1\u6570\u5668\u7684\u5730\u5740\u4f5c\u4e3a\u8fd4\u56de</p> <ul> <li>\u6b63\u5e38\u8fd4\u56de\uff1a\u6062\u590d\u4e0a\u5c42\u65b9\u6cd5\u7684\u5c40\u90e8\u53d8\u91cf\u8868\u548c\u64cd\u4f5c\u6570\u6808\uff1b\u628a\u8fd4\u56de\u503c(\u5982\u679c\u6709)\u538b\u5165\u8c03\u7528\u7740\u6808\u5e27\u7684\u64cd\u4f5c\u6570\u6808\u4e2d\uff1b\u8c03\u6574\u7a0b\u5e8f\u8ba1\u6570\u5668\u7684\u503c\u6307\u5411\u65b9\u6cd5\u8c03\u7528\u6307\u4ee4\u540e\u7684\u4e00\u6761\u6307\u4ee4</li> <li>\u5f02\u5e38\u8fd4\u56de\uff1a\u7531\u5f02\u5e38\u5904\u7406\u8868&lt;\u975e\u6808\u5e27\u4e2d\u7684&gt;\u6765\u786e\u5b9a</li> </ul>"}, {"location": "android/java/java_jvm/#_2", "title": "\u7a0b\u5e8f\u8ba1\u6570\u5668", "text": "<p>\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\u6b63\u5728\u6267\u884c\u7684\u5b57\u8282\u7801\u884c\u53f7(\u6307\u4ee4\u5730\u5740)\uff0c\u5360\u7528\u5f88\u5c11\u5185\u5b58\uff0c\u552f\u4e00\u4e0d\u4f1a\u9020\u6210OOM\u7684\u5185\u5b58\u533a\u57df</p> <p>\u8fd0\u884c\u6d41\u7a0b <pre><code>public class JvmTest {\n    public int work() {\n        int x = 3;\n        int y = 6;\n        int z = (x + y) * 14;\n        return z;\n    }\n\n    public static void main(String[] args) {\n        JvmTest test = new JvmTest();\n        test.work();\n    }\n}\n</code></pre> \u6267\u884cjavap -v JvmTest.class\u540e\u5f97\u5230\u5b57\u8282\u7801(work\u65b9\u6cd5\u90e8\u5206) </p> <p>\u91cd\u70b9\u603b\u7ed3\uff1a</p> <ul> <li>\u6267\u884cmain\u65b9\u6cd5\u65f6\u4f1a\u6267\u884cmain\u7ebf\u7a0b</li> <li>\u4e3b\u8981\u5c55\u793a\u865a\u62df\u673a\u6808\u548c\u7a0b\u5e8f\u8ba1\u6570\u5668</li> <li>iconst_3\uff1a3\u5bf9\u5e94\u7684\u662f\u6570\u503c3</li> <li>istore_1\uff1a1\u5bf9\u5e94\u7684\u662f\u504f\u79fb\u503c</li> <li>iload_1\uff1a1\u5bf9\u5e94\u7684\u662f\u504f\u79fb\u503c</li> <li>bipush: int\u503c\u8d85\u8fc75\u4ee5\u540e\u4f7f\u7528\uff0c\u4f1a\u5360\u7528\u66f4\u5927\u7a7a\u95f4\uff0c\u6240\u6709\u504f\u79fb\u91cf\u5360\u7528\u4e862\u4e2a(\u56fe\u4e2d\u6ca1\u67093\u548c9\u7684\u539f\u56e0)</li> <li>\u7a0b\u5e8f\u8ba1\u6570\u5668\u548c\u6808\u5e27\u5e76\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\uff0c\u53ea\u6709\u4e00\u4e2a\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668\u5bf9\u6bcf\u4e2a\u6808\u5e27\u8ba1\u6570\u65f6\u90fd\u662f\u4ece0\u5f00\u59cb\uff0c\u4f46\u865a\u62df\u673a\u6808\u53ea\u4f1a\u6267\u884c\u9876\u90e8\u6808\u5e27\uff0c\u6240\u4ee5\u7a0b\u5e8f\u8ba1\u6570\u5668\u4e0d\u4f1a\u91cd\u590d\u6df7\u4e71\u73b0\u8c61</li> <li>\u6bcf\u6b21\u4f7f\u7528\u6570\u636e\u90fd\u9700\u8981\u7ecf\u8fc7\u64cd\u4f5c\u6570\u6808\uff0c\u5b58\u5165\u53d8\u91cf\u8868\u3001\u8ba1\u7b97\u64cd\u4f5c\u3001\u8fd4\u56de\u6570\u636e\u7b49</li> <li>\u5982\u679c\u662fstatic\u65b9\u6cd5\u5219\u6ca1\u6709this(0\u4f4d\u7f6e)</li> </ul> <p>\u5177\u4f53\u6f14\u793a\u6d41\u7a0b\u5982\u52a8\u56fe</p> <p></p> <p>\u66f4\u591a\u6307\u4ee4\u53ef\u901a\u8fc7\u4ee5\u4e0b\u7f51\u7ad9\u67e5\u770b\u8bf4\u660e</p> <p>https://cloud.tencent.com/developer/article/1333540</p>"}, {"location": "android/java/java_jvm/#_3", "title": "\u672c\u5730\u65b9\u6cd5", "text": "<p>java\u4e2d\u65e0\u6cd5\u76f4\u63a5\u64cd\u4f5c\u7ebf\u7a0b\uff0c\u901a\u8fc7\u672c\u5730\u65b9\u6cd5\u6808(native\u65b9\u6cd5)\uff0c\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u865a\u62df\u673a\u6808\uff0c\u4f46\u7a0b\u5e8f\u8ba1\u6570\u5668\u65e0\u6cd5\u8bb0\u5f55</p>"}, {"location": "android/java/java_jvm/#_4", "title": "\u5806", "text": "<p>\u5b58\u653e\u6240\u6709new\u51fa\u6765\u7684\u4e1c\u2ec4\uff0c\u662fGC\u7ba1\u7406\u7684\u4e3b\u8981\u533a\u57df</p> <p>\u5806\u5185\u5b58\u5206\u4e09\u4ee3\uff0c\u65b0\u2f63\u4ee3\uff0c\u2f7c\u5e74\u4ee3\uff0c\u6301\u4e45\u4ee3</p>"}, {"location": "android/java/java_jvm/#_5", "title": "\u2f45\u6cd5\u533a", "text": "<p>\u88ab\u865a\u62df\u673a\u52a0\u8f7d\u7684\u7c7b\u4fe1\u606f\u3001\u5e38\u91cf\u3001\u9759\u6001\u53d8\u91cf\u7b49</p>"}, {"location": "android/java/java_jvm/#_6", "title": "\u76f4\u63a5\u5185\u5b58", "text": "<p>NIO\u4e2d\u7684DirectByteBuffer\uff0c\u4f1a\u81ea\u5df1\u91ca\u653e</p> <p>unsafe\u7c7b</p> <p>\u76f4\u63a5\u7533\u8bf7\u5185\u5b58\u76f8\u5173\uff0c\u9700\u8981\u624b\u52a8\u7ba1\u7406\uff0c\u8df3\u8fc7JVM\u7684\u5783\u573e\u56de\u6536(\u4e0d\u4f1a\u81ea\u52a8\u91ca\u653e)</p> <p>ByteBuffer.allocateDirect()\u65b9\u5f0f\u7533\u8bf7\u5185\u5b58\u4f1a\u81ea\u52a8\u91ca\u653e</p>"}, {"location": "android/java/java_jvm/#jvm_1", "title": "\u6df1\u5165\u7406\u89e3JVM\u5185\u5b58", "text": "<p>\u65e0\u975e\u5c31\u662f\u865a\u62df\u5316</p> <p>jps\u67e5\u770b\u8fdb\u7a0b\u53f7\uff0cjinfo -flags \u8fdb\u7a0b\u53f7\u67e5\u770b\u4fe1\u606f</p> <p> <pre><code>public class JavaTest {\n    public final static String TYPE = \"type\";\n    public static String TAG = \"tag\";\n    public static void main(String[] args) throws Exception {\n        Fruit fruit1 = new Fruit();\n        fruit1.setName(TYPE + \"-apple\");\n        fruit1.setPrice(15.3);\n        Thread.sleep(Integer.MAX_VALUE);\n        for (int i = 0; i &lt; 1; i++) {\n            System.gc();//15\u6b21\u540e\u8fdb\u5165\u8001\u5e74\u4ee3\n        }\n        Fruit fruit2 = new Fruit();\n        fruit2.setName(TAG + \"-watermelon\");\n        fruit2.setPrice(28.5);\n        Thread.sleep(Integer.MAX_VALUE);\n    }\n}\n\nclass Fruit {\n    String name;\n    double price;\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void setPrice(double price) {\n        this.price = price;\n    }\n}\n</code></pre> 1. JVM\u7533\u8bf7\u5185\u5b58 2. \u521d\u59cb\u5316\u8fd0\u884c\u65f6\u6570\u636e\u533a 3. \u7c7b\u52a0\u8f7d</p> <p></p> <ol> <li>\u6267\u884c\u65b9\u6cd5</li> <li>\u521b\u5efa\u5bf9\u8c61</li> </ol> <p></p> <ol> <li>\u4e0d\u65ad\u6267\u884c\u65b9\u6cd5</li> </ol>"}, {"location": "android/java/java_jvm/#jhsdb", "title": "JHSDB", "text": "<p>\u67e5\u770b\u5185\u5b58\u5de5\u5177</p> <p>\u6b65\u9aa4</p> <ol> <li>\u8fd0\u884c\u7a0b\u5e8f</li> <li>\u83b7\u53d6\u8fdb\u7a0b\u53f7\uff1ajps</li> </ol> <p>22176 JavaTest</p> <ol> <li>\u542f\u52a8\u5185\u5b58\u5de5\u5177</li> </ol> <p>\u65e7\u7248\u672c\uff1a <pre><code>java -cp .\\sa-jdi.jar sun.jvm.hostspot.HSDB\n</code></pre> \u65b0\u7248\u672c\uff1a(jdk11\u4ee5\u540e) <pre><code>jhsdb hsdb\n</code></pre> \u5176\u4ed6\u5185\u5bb9\u8865\u5145(jre\u6587\u4ef6\u5939\u751f\u6210) <pre><code>bin\\jlink.exe --module-path jmods --add-modules java.desktop --output jre\n</code></pre> 4. attach\u8fdb\u7a0b</p> <p> </p>"}, {"location": "android/java/java_jvm/#_7", "title": "\u67e5\u770b\u5806\u60c5\u51b5", "text": "<p>Tools-Heap Parameters</p> <p></p> <p>\u5206\u914d\u5730\u5740\u8d77\u59cb\u503c\u548c\u7ed3\u675f\u503c\uff1a0x0000000604800000, 0x0000000800000000</p>"}, {"location": "android/java/java_jvm/#_8", "title": "\u67e5\u770b\u5bf9\u8c61\u60c5\u51b5", "text": "<p>Tools-Object Histogram</p> <p>\u8fc7\u6ee4\uff1acom.yigai.lib.Fruit</p>"}, {"location": "android/java/java_jvm/#_9", "title": "\u67e5\u770b\u6808\u60c5\u51b5", "text": ""}, {"location": "android/java/java_jvm/#_10", "title": "\u67e5\u770b\u65b9\u6cd5\u533a", "text": "<p>Tools-Class Browser</p> <p>\u5185\u5b58\u6ea2\u51fa</p> <p>java.lang.OutOfMemory: Metaspace \u65b9\u6cd5\u533a</p> <p>java.lang.OutOfMemory: Java heap space \u5806</p> <p>java.lang.OutOfMemory: Direct buffer memory \u76f4\u63a5\u5185\u5b58</p> <p>java.lang.StackOverflowError: StackOverflow \u6808</p>"}, {"location": "android/java/java_jvm/#15", "title": "\u5783\u573e\u56de\u6536\u4e3a\u5565\u662f15\u6b21", "text": "<p>\u5bf9\u8c61\u7ecf\u5386\u4e00\u6b21\u5783\u573e\u56de\u6536\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u56de\u6536\uff0cage\u4f1a+1\uff0c\u8fbe\u5230\u8001\u5e74\u4ee3\uff0c\u800c\u5e95\u5c42\u8bb0\u5f55\u5e74\u9f84\u7684\u5b57\u6bb5\u662f4\u4f4d\u4e8c\u8fdb\u5236(1111=15)</p>"}, {"location": "android/java/java_jvm/#_11", "title": "\u7c7b\u7684\u751f\u547d\u5468\u671f", "text": "<p>\u52a0\u8f7d-\u9a8c\u8bc1-\u51c6\u5907-\u89e3\u6790-\u521d\u59cb\u5316-\u4f7f\u7528-\u5378\u8f7d</p> <p>\u8fde\u63a5\u9636\u6bb5\uff1a\u9a8c\u8bc1-\u51c6\u5907-\u89e3\u6790</p> <p>\u7c7b\u52a0\u8f7d\uff1a\u52a0\u8f7d-\u8fde\u63a5-\u521d\u59cb\u5316</p>"}, {"location": "android/java/java_jvm/#_12", "title": "\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f", "text": "<p>\u521b\u5efa-\u5e94\u7528-\u4e0d\u53ef\u89c1-\u4e0d\u53ef\u8fbe-\u6536\u96c6-\u7ec8\u7ed3-\u5bf9\u8c61\u7a7a\u95f4\u91cd\u65b0\u5206\u914d</p>"}, {"location": "android/java/java_jvm/#_13", "title": "\u521b\u5efa\u9636\u6bb5", "text": "<ul> <li>\u5206\u914d\u5bf9\u8c61\u7a7a\u95f4</li> <li>\u6784\u9020\u5bf9\u8c61</li> <li>\u7236\u7c7b\u6210\u5458\u6309\u987a\u5e8f\u521d\u59cb\u5316\uff0c\u9012\u5f52\u8c03\u7528\u7236\u7c7b\u6784\u9020</li> <li>\u5b50\u7c7b\u6210\u5458\u6309\u987a\u5e8f\u521d\u59cb\u5316  \u5b50\u7c7b\u6784\u9020\u8c03\u7528</li> </ul> <p>\u521b\u5efa\u65b9\u5f0f\uff1anew\u3001\u53cd\u5c04\u3001clone\u3001\u5e8f\u5217\u5316</p>"}, {"location": "android/java/java_jvm/#_14", "title": "\u5e94\u7528\u9636\u6bb5", "text": "<p>\u5bf9\u8c61\u81f3\u5c11\u88ab\u4e00\u4e2a\u5f3a\u5f15\u7528\u6301\u6709</p>"}, {"location": "android/java/java_jvm/#_15", "title": "\u4e0d\u53ef\u89c1\u9636\u6bb5", "text": "<p>\u5bf9\u8c61\u5728\u4ee3\u7801\u533a\u57df\u5916\u5373{}\u5916\u79f0\u4e3a\u4e0d\u53ef\u89c1</p>"}, {"location": "android/java/java_jvm/#_16", "title": "\u4e0d\u53ef\u8fbe\u9636\u6bb5", "text": "<p>\u5bf9\u8c61\u5f15\u7528\u6839\u96c6\u5408\u4e2d\u627e\u4e0d\u5230\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u5f3a\u5f15\u7528</p>"}, {"location": "android/java/java_jvm/#_17", "title": "\u6536\u96c6\u9636\u6bb5", "text": "<p>\u5783\u573e\u56de\u6536\u5668\u53d1\u73b0\u5bf9\u8c61\u5904\u4e8e\u4e0d\u53ef\u8fbe\u9636\u6bb5\u4e14\u5783\u573e\u56de\u6536\u5668\u5bf9\u8be5\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u91cd\u5199\u5206\u914d\u505a\u597d\u51c6\u5907\u65f6\uff0c\u8fdb\u5165\u6536\u96c6\u9636\u6bb5</p>"}, {"location": "android/java/java_jvm/#_18", "title": "\u7ec8\u7ed3\u9636\u6bb5", "text": "<p>\u5f53\u5bf9\u8c61\u6267\u884cfinalize\u65b9\u6cd5\u540e\u4efb\u5904\u4e8e\u4e0d\u53ef\u8fbe\u72b6\u6001\uff0c\u6b64\u9636\u6bb5\u662f\u7b49\u5f85\u5783\u573e\u56de\u6536\u5668\u56de\u6536\u5bf9\u8c61</p>"}, {"location": "android/java/java_jvm/#_19", "title": "\u5bf9\u8c61\u7a7a\u95f4\u91cd\u65b0\u5206\u914d", "text": "<p>\u5783\u573e\u56de\u6536\u5668\u5bf9\u8be5\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u8fdb\u884c\u56de\u6536\u6216\u91cd\u65b0\u5206\u914d\uff0c\u5bf9\u8c61\u5f7b\u5e95\u6d88\u5931</p>"}, {"location": "android/java/java_jvm/#jvm_2", "title": "JVM\u521b\u5efa\u5bf9\u8c61\u8fc7\u7a0b", "text": "<p>\u7c7b\u52a0\u8f7d-\u68c0\u67e5\u52a0\u8f7d-\u5206\u914d\u7a7a\u95f4-\u5185\u5b58\u7a7a\u95f4\u521d\u59cb\u5316-\u8bbe\u7f6e-\u5bf9\u8c61\u521d\u59cb\u5316</p>"}, {"location": "android/java/java_jvm/#_20", "title": "\u5206\u914d\u7a7a\u95f4", "text": "<p>\u5212\u5206\u5185\u5b58\u65b9\u5f0f\uff1a\u6307\u9488\u78b0\u649e\u548c\u7a7a\u95f2\u5217\u8868(\u53d6\u51b3\u4e8e\u5806\u7a7a\u95f4\u662f\u5426\u89c4\u6574\uff0c\u5373\u4e0d\u788e\u7247\u5316)\uff0c\u524d\u8005\u6548\u7387\u9ad8\u540e\u8005\u9700\u8981\u67e5\u8868</p> <p>\u5e76\u53d1\u95ee\u9898\u89e3\u51b3\u65b9\u5f0f\uff1aTLABs\u548cCAS</p> <p>\u9ed8\u8ba4\u91c7\u7528\u5728\u65b0\u751f\u4ee3\u7684Eden\u4e2d\u5f00\u8f9f\u7a7a\u95f4\u65b9\u5f0f(TLABs)\u6765\u89e3\u51b3\u591a\u7ebf\u7a0b\u7533\u8bf7\u5185\u5b58\uff0c\u7981\u7528(-XX:-UseTLAB)\u540e\u91c7\u7528CAS\u65b9\u5f0f</p>"}, {"location": "android/java/java_jvm/#cas", "title": "CAS", "text": "<p>CPU\u6307\u4ee4\uff0c\u65e0\u9501\u5316\uff0c\u4e50\u89c2\u673a\u5236\uff0c\u5177\u6709\u539f\u5b50\u6027\uff0c\u5373\u4fdd\u8bc1\u4e86\u7ebf\u7a0b\u5b89\u5168</p>"}, {"location": "android/java/java_jvm/#_21", "title": "\u5185\u5b58\u7a7a\u95f4\u521d\u59cb\u5316", "text": "<p>\"\u96f6\"\u503c\uff0c\u5982int\u9ed8\u8ba4\u4e3a0\uff0cboolean\u9ed8\u8ba4\u4e3afalse</p>"}, {"location": "android/java/java_jvm/#_22", "title": "\u8bbe\u7f6e", "text": "<p>\u5bf9\u8c61\u5934</p> <p>\u7ec4\u6210\uff1a\u7c7b\u578b\u6307\u9488\u3001mark word(\u54c8\u5e0c\u7801\u3001GC\u5206\u4ee3\u5e74\u9f84\u3001\u9501\u72b6\u6001\u6807\u8bc6\u3001\u7ebf\u7a0b\u6301\u6709\u7684\u9501\u3001\u504f\u5411\u7ebf\u7a0bID\u3001\u504f\u5411\u65f6\u95f4\u6233)\u3001\u8bb0\u5f55\u6570\u7ec4\u957f\u5ea6\u7684\u6570\u636e(\u5982\u679c\u662f\u5bf9\u8c61\u6570\u7ec4)</p>"}, {"location": "android/java/java_jvm/#_23", "title": "\u5bf9\u8c61", "text": "<p>\u7531\u5bf9\u8c61\u5934\u3001\u5b9e\u4f8b\u6570\u636e\u3001\u5bf9\u9f50\u586b\u5145(\u975e\u5fc5\u987b)\u7ec4\u6210</p>"}, {"location": "android/java/java_jvm/#_24", "title": "\u5bf9\u8c61\u521d\u59cb\u5316", "text": "<p>\u6784\u9020\u65b9\u6cd5\u6267\u884c</p>"}, {"location": "android/java/java_jvm/#_25", "title": "\u5bf9\u8c61\u7684\u8bbf\u95ee\u5b9a\u4f4d", "text": "<p>\u53e5\u67c4\u65b9\u5f0f\u8bbf\u95ee\u5bf9\u8c61\u3001\u76f4\u63a5\u6307\u9488\u65b9\u5f0f\u8bbf\u95ee\u5bf9\u8c61(\u5feb\uff0c\u4e3b\u6d41\u865a\u62df\u673a\u91c7\u7528\u65b9\u6848)</p>"}, {"location": "android/java/java_jvm/#_26", "title": "\u5224\u65ad\u5bf9\u8c61\u5b58\u6d3b", "text": "<p>\u5f15\u7528\u8ba1\u6570\u7b97\u6cd5\uff1a\u5728\u5bf9\u8c61\u5934\u6807\u8bb0\u88ab\u5f15\u7528\u6b21\u6570\uff0c\u65e0\u6cd5\u89e3\u51b3\u5faa\u73af\u5f15\u7528(python\u901a\u8fc7\u53e6\u542f\u7ebf\u7a0b\u89e3\u51b3)</p> <p>\u6839\u53ef\u8fbe\u6027\u5206\u6790\uff1aGC roots(RootSet)\uff0c\u76ee\u524dJVM\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4eceGC roots\u4f5c\u4e3a\u8d77\u70b9\u5411\u4e0b\u641c\u7d22\u8def\u5f84\u6210\u4e3a\u5f15\u7528\u94fe\uff0c\u5b58\u5728\u5373\u53ef\u8fbe</p> <p>\u5e38\u89c1GC roots\uff1a\u9759\u6001\u53d8\u91cf\u3001\u7ebf\u7a0b\u6808\u53d8\u91cf(\u5c40\u90e8\u53d8\u91cf\u8868\u4e2d\u7684\u5bf9\u8c61)\u3001\u5e38\u91cf\u6c60\u3001JNI\u6307\u9488</p> <p>\u989d\u5916\uff1a\u5185\u90e8\u5f15\u7528(class\u5bf9\u8c61\u3001\u5f02\u5e38\u5bf9\u8c61\u3001\u7c7b\u52a0\u8f7d\u5668)\u3001\u540c\u6b65\u9501(synchronized\u5bf9\u8c61)\u3001\u5185\u90e8\u5bf9\u8c61(JVXBean)\u3001\u4e34\u65f6\u5bf9\u8c61(\u8de8\u4ee3\u5f15\u7528)</p>"}, {"location": "android/java/java_jvm/#class", "title": "class\u5bf9\u8c61\u56de\u6536\u6761\u4ef6(\u5378\u8f7d)", "text": "<ol> <li>new\u51fa\u7684\u6240\u6709\u5bf9\u8c61\u88ab\u56de\u6536\uff0c\u5373Java\u5806\u4e2d\u4e0d\u5b58\u5728\u8be5\u7c7b\u53ca\u5176\u4efb\u4f55\u6d3e\u751f\u5b50\u7c7b\u7684\u5b9e\u4f8b</li> <li>\u5bf9\u5e94\u7684\u7c7b\u52a0\u8f7d\u5668\u88ab\u56de\u6536</li> <li>\u8be5\u7c7b\u5bf9\u5e94\u7684 java.lang.Class \u5bf9\u8c61\u6ca1\u6709\u5728\u4efb\u4f55\u5730\u65b9\u88ab\u5f15\u7528\uff0c\u65e0\u6cd5\u5728\u4efb\u4f55\u5730\u65b9\u901a\u8fc7\u53cd\u5c04\u8bbf\u95ee\u8be5\u7c7b\u7684\u65b9\u6cd5</li> <li>\u53c2\u6570\u63a7\u5236\uff1a-Xnoclassgc\u53c2\u6570\u7981\u7528\u7c7b\u7684\u5783\u573e\u6536\u96c6\uff0c\u5982\u679c\u7981\u7528\u6ee1\u8db3\u4ee5\u4e0a3\u70b9\u4e5f\u65e0\u6cd5\u56de\u6536</li> </ol> <p>\u53ef\u8fbe\u5373\u4e0d\u53ef\u56de\u6536 <pre><code>Fruit fruit1 = new Fruit();\n</code></pre> \u53ef\u8fbe\u5c31\u662f\u5f15\u7528\u6307\u5411\uff0cFruit\u5bf9\u8c61\u4e0e\u5c40\u90e8\u53d8\u91cffruit1\u5b58\u5728\u4e00\u4e2a\u53ef\u8fbe\u6027\u5173\u7cfb</p> <p>\u5783\u573e\u56de\u6536\u6253\u5370\uff1a-Xlog:gc(-XX:+PrintGC\u8fc7\u65f6\uff0cjdk8\u4ee5\u4e0b\u4f7f\u7528)</p> <p></p> <p>\u6f14\u793a\u6848\u4f8b <pre><code>public class JavaTest {\n    public JavaTest instance;\n    private byte[] bytes = new byte[10 * 1024 * 1024];\n\n    public static void main(String[] args) {\n        JavaTest test1 = new JavaTest();\n        JavaTest test2 = new JavaTest();\n        test1.instance = test2;// \u5f15\u7528\u5faa\u73af\n        test2.instance = test1;\n        test1 = null;//\u4e3a\u4e86\u80fd\u7acb\u9a6c\u89e6\u53d1gc\n        test2 = null;\n        System.gc();\n    }\n}\n\u65e5\u5fd7\uff1a\n[0.006s][info][gc] Using G1\n[0.067s][info][gc] GC(0) Pause Full (System.gc()) 25M-&gt;0M(16M) 2.411ms\n</code></pre> \u53ef\u4ee5\u770b\u5230\u5185\u5b58\u4ece25M(\u5305\u542b\u4e86\u4e24\u4e2abytes\u6570\u7ec4\u5927\u5c0f\uff0c\u6bcf\u4e2a10M)\u53d8\u62100M\uff0c\u8868\u660e\u5df2\u56de\u6536</p>"}, {"location": "android/java/java_jvm/#finalize", "title": "finalize", "text": "<p>\u7528\u6765\u5728\u5bf9\u8c61\u88ab\u56de\u6536\u4e4b\u524d\u505a\u6e05\u7406\u5de5\u4f5c\uff0c\u4f46\u6267\u884c\u7ea7\u522b\u8f83\u4f4e(\u9700\u8981\u8c03\u7528Thread.sleep\u4f11\u7720)\uff0c\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528</p> <p>FinalizeGC\uff0c\u5176\u5b9e\u662f\u591a\u7ebf\u7a0b\u8fdb\u884c\uff0cJVM\u5185\u90e8\u4f7f\u7528\u4f1anew Finalizer\u5bf9\u8c61\uff0c\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528try finally\u4ee3\u66ff</p>"}, {"location": "android/java/java_jvm/#_27", "title": "\u5404\u79cd\u5f15\u7528", "text": "<pre><code>public class JavaTest {\n    public String name;\n\n    public JavaTest(String name) {\n        this.name = name;\n    }\n\n    @Override\n    public String toString() {\n        return \"JavaTest{\" +\n                \"name='\" + name + '\\'' +\n                '}';\n    }\n}\n</code></pre>"}, {"location": "android/java/java_jvm/#_28", "title": "\u5f3a\u5f15\u7528", "text": "<p>= (\u8eab\u8fb9\u91cd\u8981\u7684\u4eba\uff0c\u4eb2\u4eba)</p>"}, {"location": "android/java/java_jvm/#softreference", "title": "\u8f6f\u5f15\u7528SoftReference", "text": "<p>(\u8001\u5a46\uff0c\u53ef\u79bb\u5a5a)\uff1a\u7cfb\u7edf\u5185\u5b58\u4e0d\u8db3\u65f6\u5982\u5373\u5c06\u53d1\u751fOOM\u65f6\u4f1a\u88ab\u56de\u6536 <pre><code>\u5148\u914d\u7f6e\u5806\u5185\u5b58\u548c\u6700\u5927\u5185\u5b58\u4e3a20m\uff1a-Xms20m -Xmx20m\npublic static void main(String[] args) {\n    JavaTest test1 = new JavaTest(\"name\");\n    SoftReference&lt;JavaTest&gt; sr = new SoftReference&lt;&gt;(test1);\n    test1 = null; //\u5f3a\u5f15\u7528\u5148\u56de\u6536\n    System.out.println(sr.get());  // JavaTest{name='name'}\n    System.gc();\n    System.out.println(\"gc\");\n    LinkedList&lt;byte[]&gt; list = new LinkedList&lt;&gt;();\n    for (int i = 0; i &lt; 20; i++) {\n        try {\n            list.add(new byte[1 * 1024 * 1024]);\n        } catch (Throwable e) {\n            System.out.println(\"error:\" + sr.get()); // null\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/java/java_jvm/#weakreference", "title": "\u5f31\u5f15\u7528WeakReference", "text": "<p>(\u5973\u670b\u53cb\uff0c\u60f3\u5206\u5c31\u5206)\uff1a\u53ea\u8981gc\u5c31\u4f1a\u88ab\u56de\u6536 <pre><code> public static void main(String[] args) {\n    JavaTest test1 = new JavaTest(\"name\");\n    WeakReference&lt;JavaTest&gt; sr = new WeakReference&lt;&gt;(test1);\n    test1 = null;\n    System.out.println(sr.get());\n    System.gc();\n    System.out.println(\"gc\");\n    System.out.println(sr.get()); // null\n}\n</code></pre></p>"}, {"location": "android/java/java_jvm/#phantomreference", "title": "\u865a\u5f15\u7528PhantomReference", "text": "<p>(\u6280\u5e08\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u627e\u4e0d\u5230\u4e86)\uff1a\u76f4\u63a5\u5185\u5b58\u4e2d\u6709Cleaner\u7c7b\u7ee7\u627f\u865a\u5f15\u7528\uff0c\u4e3b\u8981\u7528\u6765\u8ddf\u8e2a\u5bf9\u8c61\u5783\u573e\u56de\u6536\u7684\u6d3b\u52a8</p>"}, {"location": "android/java/java_jvm/#_29", "title": "\u5bf9\u8c61\u5206\u914d\u7b56\u7565", "text": "<p>\u51e0\u4e4e\u6240\u6709\u5bf9\u8c61\u90fd\u662f\u5728\u5806\u4e2d\u5206\u914d\uff0c\u5e76\u4e0d\u662f100%</p>"}, {"location": "android/java/java_jvm/#_30", "title": "\u865a\u62df\u673a\u4f18\u5316\u6280\u672f", "text": "<p>\u9003\u9038\u5206\u6790+\u89e6\u53d1JIT(\u70ed\u70b9\u6570\u636e)\uff0c\u672c\u5730\u7ebf\u7a0b\u5206\u914d\u7f13\u5b58</p> <p>HotSpot(java\u865a\u62df\u673a\u5b9e\u73b0)</p> <p>\u65b9\u6cd5\u5faa\u73af\u4e07\u6b21\u89e6\u53d1JIT(\u70ed\u70b9\u6570\u636e)\uff0cjvm\u4f1a\u8fdb\u884c\u9003\u9038\u5206\u6790(\u6808\u4e0a\u5206\u914d)</p> <p>\u9003\u9038\u5206\u6790\u9ed8\u8ba4\u5f00\u542f\u53ea\u652f\u6301HotSpot\u5b9e\u73b0\u7684\u865a\u62df\u673a\uff0c\u5173\u95ed-XX:+DoEscapeAnalysis\uff0c\u7981\u7528\u540e\u5206\u914d\u5230\u5806\u7a7a\u95f4\u4f1a\u89e6\u53d1gc</p>"}, {"location": "android/java/java_jvm/#_31", "title": "\u5206\u914d\u539f\u5219", "text": "<ul> <li>\u5bf9\u8c61\u4f18\u5148\u5728Eden\u5206\u914d</li> <li>\u7a7a\u95f4\u5206\u914d\u62c5\u4fdd\uff1a\u5185\u90e8\u4f1a\u7edf\u8ba1\u8001\u5e74\u4ee3\u5e73\u5747\u5206\u914d\u7684\u5bf9\u8c61\u7a7a\u95f4\u5927\u5c0f\uff0c\u598210M\uff0c\u6b64\u65f6\u5982\u679c\u65b0\u751f\u4ee3\u664b\u7ea7\u7684\u5bf9\u8c61\u662f8M\uff0c\u5373\u65e0\u9700\u89e6\u53d1\u664b\u7ea7\u56de\u6536</li> <li>\u5927\u5bf9\u8c61\u8fdb\u5165\u8001\u5e74\u4ee3(Tenured)\uff1aserial\u3001parnew\u4e24\u6b3e\u5783\u573e\u56de\u6536\u671f\u751f\u6548</li> <li>\u957f\u671f\u5b58\u6d3b\u7684\u5bf9\u8c61\u8fdb\u5165\u8001\u5e74\u4ee3(15\u6b21\uff0c\u53ef\u901a\u8fc7-XX:MaxTenuringThreshold=10\u4fee\u6539)</li> <li>\u52a8\u6001\u5bf9\u8c61\u5e74\u9f84\u5224\u5b9a</li> </ul> <p>from-&gt;to age+1\u53cd\u4e4b\u4e5f+1</p>"}, {"location": "android/java/java_jvm/#_32", "title": "\u5783\u573e\u56de\u6536\u57fa\u7840\u77e5\u8bc6", "text": "<p>GC\uff1a\u5783\u573e\u56de\u6536</p> <p>\u5806\u7a7a\u95f4\uff1a\u65b0\u751f\u4ee3(Eden\u3001from\u3001to 8\uff1a1\uff1a1)\u548c\u8001\u5e74\u4ee3</p> <p>\u5783\u573e\u56de\u6536\u5668</p> <p>\u56de\u6536\u65b0\u751f\u4ee3\uff1aMinor GC/Young GC \u56de\u6536\u8001\u5e74\u4ee3\uff1aMajor GC/Old GC\uff0c\u4e00\u822c\u90fd\u4f1a\u89e6\u53d1Full GC</p>"}, {"location": "android/java/java_jvm/#copying", "title": "\u590d\u5236\u7b97\u6cd5(Copying)", "text": "<p>\u627e\u5230\u53ef\u8fbe\u5f15\u7528\u94fe\uff0c\u5c06\u5185\u5b58\u5206\u4e3a\u4e24\u4efd\uff0c\u5c06\u53ef\u8fbe\u5bf9\u8c61\u590d\u5236\u5230\u53e6\u4e00\u8fb9</p> <p></p> <p>\u7279\u70b9</p> <ol> <li>\u5b9e\u73b0\u7b80\u5355\u3001\u8fd0\u884c\u9ad8\u6548</li> <li>\u6ca1\u6709\u5185\u5b58\u788e\u7247</li> <li>\u7a7a\u95f4\u5229\u7528\u7387\u53ea\u6709\u4e00\u534a</li> </ol>"}, {"location": "android/java/java_jvm/#appel", "title": "Appel\u5f0f\u590d\u5236\u56de\u6536\u7b97\u6cd5", "text": "<p>Eden\u533a\u7684\u6765\u6e90\uff0c\u63d0\u9ad8\u7a7a\u95f4\u5229\u7528\u7387\u548c\u7a7a\u95f4\u5206\u914d\u62c5\u4fdd\uff0c\u53ea\u9002\u7528\u4e8e\u65b0\u751f\u4ee3</p> <p></p> <p>S1\u662ffrom\uff0cS0\u662fto</p>"}, {"location": "android/java/java_jvm/#mark-sweep", "title": "\u6807\u8bb0\u6e05\u9664\u7b97\u6cd5(Mark-Sweep)", "text": "<p>\u627e\u5230\u53ef\u8fbe\u94fe\u7136\u540e\u6e05\u9664\u5783\u573e</p> <p>\u7279\u70b9</p> <ol> <li>\u4f4d\u7f6e\u4e0d\u8fde\u7eed\uff0c\u4ea7\u751f\u788e\u7247</li> <li>\u53ef\u4ee5\u4e0d\u6682\u505c(\u4f18\u52bf\uff0c\u56e0\u4e3a\u6ca1\u6709\u5bf9\u8c61\u79fb\u52a8)</li> <li>\u4e24\u6b21\u626b\u63cf\uff0c\u7b2c\u4e00\u6b21\u626b\u63cf\u6807\u8bb0\u51fa\u54ea\u4e9b\u53ef\u4ee5\u56de\u6536\u8fdb\u884c\u6807\u8bb0\uff0c\u7b2c\u4e8c\u6b21\u8fdb\u884c\u6e05\u9664</li> </ol> <p></p>"}, {"location": "android/java/java_jvm/#mark-compact", "title": "\u6807\u8bb0\u6574\u7406\u7b97\u6cd5(Mark-Compact)", "text": "<p>\u6807\u8bb0-&gt;\u6574\u7406-&gt;\u6e05\u9664</p> <p>\u7279\u70b9</p> <ol> <li>\u6ca1\u6709\u5185\u5b58\u788e\u7247</li> <li>\u6307\u9488\u9700\u8981\u79fb\u52a8</li> <li>\u4e24\u6b21\u626b\u63cf</li> </ol> <p></p>"}, {"location": "android/java/java_jvm/#_33", "title": "\u5e38\u89c1\u5783\u573e\u56de\u6536\u5668", "text": "<p>\u5355\u7ebf\u7a0b\uff1aSerial\u3001Serial Old</p> <p>\u591a\u7ebf\u7a0b\uff1aParallel Scavenga\u3001Parallel Old\u3001ParNew\u3001CMS\u3001G1</p> <p>PS\u7ec4\u5408\uff1aParallel Scavenga\u3001Parallel Old\u4f1a\u81ea\u52a8\u6269\u5bb9\uff0c\u4f34\u968fGC\uff0c\u4e0d\u9700\u8981\u6307\u5b9aEden\u3001from\u3001to\u7684\u6bd4\u4f8b\u662f\u52a8\u6001\u7684\uff0c\u541e\u5410\u91cf\u6700\u9ad8</p> \u56de\u6536\u5668 \u56de\u6536\u5bf9\u8c61\u548c\u7b97\u6cd5 \u56de\u6536\u5668\u7c7b\u578b Serial \u65b0\u751f\u4ee3\u3001\u590d\u5236\u7b97\u6cd5 \u5355\u7ebf\u7a0b Serial Old \u8001\u5e74\u4ee3\u3001\u6807\u8bb0\u6574\u7406\u7b97\u6cd5 \u5355\u7ebf\u7a0b Parallel Scavenga \u65b0\u751f\u4ee3\u3001\u590d\u5236\u7b97\u6cd5 \u591a\u7ebf\u7a0b Parallel  Old \u8001\u5e74\u4ee3\u3001\u6807\u8bb0\u6574\u7406\u7b97\u6cd5 \u591a\u7ebf\u7a0b ParNew \u65b0\u751f\u4ee3\u3001\u590d\u5236\u7b97\u6cd5 \u5355\u7ebf\u7a0b CMS \u8001\u5e74\u4ee3\u3001\u6807\u8bb0\u6e05\u9664\u7b97\u6cd5 \u591a\u7ebf\u7a0b G1 \u8de8\u65b0\u751f\u4ee3\u548c\u8001\u5e74\u4ee3\u3001\u6807\u8bb0\u6574\u7406+\u5316\u6574\u4e3a\u96f6 \u591a\u7ebf\u7a0b <p>\u54cd\u5e94\u4f18\u5148\u7684\u539f\u56e0</p> <p>\u6bd4\u5982\u6e38\u620f\u670d\u52a1\u5668\uff0cGC\u4f1a\u5bfc\u81f4\u4e1a\u52a1\u7ebf\u7a0b\u6682\u505c\u89e6\u53d1stop the world</p>"}, {"location": "android/java/java_jvm/#cms", "title": "CMS", "text": "<p>Concurrent Mark Sweep\uff0c\u53ea\u9488\u5bf9\u8001\u5e74\u4ee3\uff0cjava14\u540e\u88ab\u79fb\u9664</p> <p>ParNew\u4e3aCMS\u5b9a\u5236\uff0c\u7528\u6765\u56de\u6536\u65b0\u751f\u4ee3</p> <p>\u521d\u59cb\u6807\u8bb0\u3001\u5e76\u53d1\u6807\u8bb0\u3001\u91cd\u65b0\u6807\u8bb0\u3001\u5e76\u53d1\u6e05\u7406\u3001\u91cd\u7f6e\u7ebf\u7a0b</p> <p>\u521d\u59cb\u6807\u8bb0\uff1a\u6682\u505c\u6240\u6709\u7528\u6237\u7ebf\u7a0b(\u65f6\u95f4\u77ed)</p> <p>\u5e76\u53d1\u6807\u8bb0\uff1a\u65f6\u95f4\u957f\uff0c\u7528\u6237\u548cGC\u540c\u65f6\u8fd0\u884c</p> <p>\u91cd\u65b0\u6807\u8bb0\uff1a\u65f6\u95f4\u77ed\uff0c\u6682\u505c\u6240\u6709\u7528\u6237\u7ebf\u7a0b</p> <p>\u5e76\u53d1\u6e05\u7406\uff1a\u65f6\u95f4\u957f\uff0c\u7528\u6237\u548cGC\u540c\u65f6\u8fd0\u884c\uff0c\u4f1a\u4ea7\u751f\u6d6e\u52a8\u5783\u573e\uff0c\u9700\u8981\u4e0b\u4e00\u6b21\u624d\u4f1a\u56de\u6536\uff0c\u56e0\u6b64\u9700\u8981\u9884\u7559\u4e00\u90e8\u5206\u7a7a\u95f4</p> <p>\u95ee\u9898\uff1aCPU\u654f\u611f\u3001\u6d6e\u52a8\u5783\u573e\u3001\u5185\u5b58\u788e\u7247(\u5206\u914d\u5927\u5bf9\u8c61\u65f6\u53ef\u80fd\u4f1a\u8ba9jvm\u4f1a\u5207\u6362\u6210Serial Old\uff0c\u79f0\u9000\u5316\uff0c\u5806\u8d8a\u5927\u8017\u65f6\u8d8a\u957f)</p> <p>\u670d\u52a1\u5668\u7ef4\u62a4\uff1a\u91cd\u542f\u540eCMS\u5c31\u6ca1\u6709\u5185\u5b58\u788e\u7247</p> <p>VM\u53c2\u6570\uff1a-Xlog:gc*(--XX:+PrintGCDetails) --XX:UseConcMarkSweepGC</p> <p>G1\uff1a\u5806\u7a7a\u95f48G\u4ee5\u4e0a\u63a8\u8350\uff0c&lt;6G\u7528CMS\uff0cjdk1.8\u4ee5\u4e0a\u9ed8\u8ba4\u91c7\u7528G1</p>"}, {"location": "android/java/java_jvm/#jvm_3", "title": "JVM\u8c03\u4f18", "text": ""}, {"location": "android/java/java_jvm/#_34", "title": "\u6269\u5bb9\u65b0\u751f\u4ee3", "text": "<p>\u4e3a\u4f55\u80fd\u63d0\u9ad8GC\u6548\u7387\u5417\uff1f</p> <p>\u65b0\u751f\u4ee3\u91c7\u7528\u590d\u5236\u7b97\u6cd5\uff0c\u5373\u5148\u8fdb\u884c\u626b\u63cf(\u53ef\u8fbe\u6027\u5206\u6790\u7b97\u6cd5\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u5b58\u6d3b\uff0c\u8017\u65f6\u8f83\u5c11\u5047\u8bbe\u4e3aT1)\uff0c\u7136\u540e\u8fdb\u884c\u5bf9\u8c61\u590d\u5236\u4eceEden\u5230From\u5230To(\u8017\u65f6\u8f83\u5927\u5047\u8bbe\u4e3aT2)</p> <p>\u5047\u8bbe\u65b0\u751f\u4ee3\u5bb9\u91cfR\uff0c\u5bf9\u8c61A\u5b58\u6d3b\u65f6\u95f4750ms\uff0cMinorGC\u95f4\u9694500ms \u6269\u5bb9\u540e\u4e3a2R\uff0cA\u7684\u5b58\u6d3b\u65f6\u95f4\u4e0d\u4f1a\u53d8\uff0cMinorGC\u95f4\u9694\u53d8\u62101000ms(\u7531\u4e8e\u7a7a\u95f4\u6269\u5927\u4e00\u500d)\uff0c\u5219\u6269\u5bb9\u524d\u603b\u8017\u65f6\u4e3aT1+T2\uff0c\u6269\u5bb9\u540e\u4e3a2T1\uff0c\u56e0\u4e3a\u6269\u5bb9\u540e\u5bf9\u8c61\u5df2\u7ecf\u6ca1\u5b58\u6d3b\uff0c\u6240\u4ee5\u4e00\u822c\u662f\u80fd\u63d0\u9ad8GC\u6548\u7387\uff0c\u9664\u975e\u90fd\u662f\u8001\u5e74\u4ee3\u5bf9\u8c61</p>"}, {"location": "android/java/java_jvm/#_35", "title": "\u907f\u514d\u8de8\u4ee3\u626b\u9762", "text": "<p>\u8001\u5e74\u4ee3\u5f15\u7528\u4e86\u65b0\u751f\u4ee3\uff0c\u5bfc\u81f4\u51fa\u73b0\u6574\u5806\u626b\u63cf\uff0c\u5185\u90e8\u4f18\u5316\u65b9\u6848\u5361\u8868</p> <p>\u5361\u8868(card table)\uff1a\u5f53\u51fa\u73b0\u8de8\u4ee3\u5f15\u7528\u65f6\uff0c\u4f1a\u5728\u5361\u8868\u4e0a\u8fdb\u884c\u6807\u8bb0\uff0c\u8fd9\u6837\u626b\u63cf\u53ea\u9700\u8981\u626b\u65b0\u751f\u4ee3\u548c\u88ab\u6807\u8bb0\u7684\u6570\u636e</p> <p>\u5e38\u91cf\u6c60(\u65b9\u6cd5\u533a) Class\u5e38\u91cf\u6c60\u3001\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u3001\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60 <pre><code>new String(\"a\") == new String(\"a\");// false\nnew String(\"a\").intern() == new String(\"a\").intern();// true\u4ece\u5e38\u91cf\u6c60\u83b7\u53d6\n</code></pre></p>"}, {"location": "android/java/java_jvm/#_36", "title": "\u603b\u7ed3\u56fe", "text": ""}, {"location": "android/java/java_lock/", "title": "\u9501", "text": ""}, {"location": "android/java/java_lock/#_1", "title": "\u9501\u7684\u5206\u7c7b", "text": ""}, {"location": "android/java/java_lock/#vs", "title": "\u4e50\u89c2\u9501vs\u60b2\u89c2\u9501", "text": "<p>\u4e50\u89c2\u9501\uff1a\u4e0d\u52a0\u9501\u66f4\u65b0\u6570\u636e\u65f6\u4f1a\u5224\u65ad\u662f\u5426\u88ab\u4fee\u6539\uff0c\u5982\u88ab\u4fee\u6539\u4f1a\u53d1\u9001\u81ea\u65cb(\u53ef\u7406\u89e3\u4e3a\u6b7b\u5faa\u73af)\uff0cjava.util.concurret.atomic\u5305\u4e0b\u7684\u539f\u5b50\u53d8\u91cf\u7c7b\uff0c\u57fa\u4e8eCAS\u5b9e\u73b0</p> <p>\u60b2\u89c2\u9501\uff1a\u83b7\u53d6\u6570\u636e\u65f6\u90fd\u4f1a\u4e0a\u9501\uff0csynchronized</p> <p>\u4e00\u822c\u4e50\u89c2\u9501\u6027\u80fd\u6bd4\u60b2\u89c2\u9501\u597d\uff0c\u539f\u56e0\u662f\uff1a\u4e0a\u4e0b\u6587\u5207\u6362\u9700\u89813-5ms\uff0ccpu\u6267\u884c\u6307\u4ee4\u7ea60.6ns\uff0c\u62ff\u9501\u81f3\u5c11\u9700\u89812\u6b21\u4e0a\u4e0b\u6587\u5207\u6362</p>"}, {"location": "android/java/java_lock/#vs_1", "title": "\u72ec\u4eab\u9501vs\u5171\u4eab\u9501", "text": "<p>\u72ec\u4eab\u9501\uff1a\u9501\u53ea\u80fd\u88ab\u4e00\u4e2a\u7ebf\u7a0b\u6240\u6301\u6709\uff0cReentrantLock</p> <p>\u5171\u4eab\u9501\uff1a\u9501\u80fd\u88ab\u591a\u4e2a\u7ebf\u7a0b\u6240\u6301\u6709\uff0cReadWriteLock\u4e2d\u8bfb\u9501\u662f\u5171\u4eab\u9501\uff0c\u5199\u9501\u662f\u72ec\u4eab\u9501</p>"}, {"location": "android/java/java_lock/#vs_2", "title": "\u4e92\u65a5\u9501vs\u8bfb\u5199\u9501", "text": "<p>\u5e7f\u4e49\u8bf4\u6cd5</p> <p>\u4e92\u65a5\u9501\uff1a\u5177\u4f53\u5b9e\u73b0ReentrantLock</p> <p>\u8bfb\u5199\u9501\uff1a\u5177\u4f53\u5b9e\u73b0ReadWriteLock</p>"}, {"location": "android/java/java_lock/#_2", "title": "\u53ef\u91cd\u5165\u9501", "text": "<p><pre><code>synchronized void A(){}\nsynchronized void B(){}\n</code></pre> \u6b64\u5904\u9501\u7684\u662f\u5bf9\u8c61\uff0c\u5373\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5bf9\u8c61\u4e0d\u80fd\u540c\u65f6\u8c03\u7528A\u3001B\u65b9\u6cd5\uff0c\u5982\u679c\u4e0d\u53ef\u91cd\u5165\uff0cA\u65b9\u6cd5\u83b7\u5f97\u9501\u540e\u8fd8\u6ca1\u91ca\u653e\u9501\u4e4b\u524d\uff0cB\u4e5f\u80fd\u83b7\u5f97\u9501\uff0c\u5bfc\u81f4\u6b7b\u9501</p>"}, {"location": "android/java/java_lock/#_3", "title": "\u516c\u5e73\u9501\u548c\u975e\u516c\u5e73\u9501", "text": "\u516c\u5e73\u9501 \u975e\u516c\u5e73\u9501 \u5b9a\u4e49 \u591a\u4e2a\u7ebf\u7a0b\u6392\u961f\u7533\u8bf7\u9501 \u591a\u4e2a\u7ebf\u7a0b\u90fd\u5c1d\u8bd5\u83b7\u5f97\u9501\uff0c\u5148\u5360\u5148\u5f97 \u4f18\u70b9 \u6240\u6709\u7ebf\u7a0b\u90fd\u80fd\u83b7\u5f97\u9501 \u51cf\u5c11cpu\u5524\u9192\u5f00\u9500\uff0c\u541e\u5410\u6548\u7387\u53d8\u9ad8 \u7f3a\u70b9 \u9664\u4e86\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u540e\u7eed\u7ebf\u7a0b\u4f1a\u963b\u585e\u5bfc\u81f4\u589e\u52a0cpu\u5524\u9192\u5f00\u9500\u53d8\u5927\uff0c\u541e\u5410\u6548\u7387\u53d8\u4f4e \u6709\u53ef\u80fd\u5bfc\u81f4\u67d0\u4e9b\u7ebf\u7a0b\u4e00\u76f4\u65e0\u6cd5\u83b7\u5f97\u9501 <p>ReentrantLock\u9ed8\u8ba4\u662f\u975e\u516c\u5e73\u9501\uff0cReentrantLock(true)\u4e3a\u516c\u5e73\u9501\uff0c\u5206\u522b\u5bf9\u5e94NonfairSync\u548cFairSync</p>"}, {"location": "android/java/java_lock/#_4", "title": "\u5206\u6bb5\u9501", "text": "<p>\u662f\u4e00\u79cd\u8bbe\u8ba1\uff0cConcurrentHashMap\u5206\u6bb5\u9501\u5c01\u88c5\u4e3aSegment</p>"}, {"location": "android/java/java_lock/#_5", "title": "\u504f\u5411\u9501/\u8f7b\u91cf\u7ea7\u9501/\u91cd\u91cf\u7ea7\u9501", "text": "<p>\u6307\u9501\u7684\u72b6\u6001\uff0c\u504f\u5411\u9501\u6307\u4e00\u6bb5\u540c\u6b65\u4ee3\u7801\u4e00\u76f4\u88ab\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee</p> <p>\u8f7b\u91cf\u7ea7\u9501\uff1a\u504f\u5411\u9501\u88ab\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540e\u5347\u7ea7\uff0c\u5176\u4ed6\u7ebf\u7a0b\u901a\u8fc7\u81ea\u65cb\u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u4e0d\u4f1a\u963b\u585e</p> <p>\u91cd\u91cf\u7ea7\u9501\uff1a\u8f7b\u91cf\u7ea7\u9501\u65f6\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u81ea\u65cb\u4e00\u5b9a\u6b21\u6570\u540e\u65e0\u6cd5\u83b7\u5f97\u9501\u5c31\u8fdb\u5165\u963b\u585e</p>"}, {"location": "android/java/java_lock/#_6", "title": "\u81ea\u65cb\u9501", "text": "<p>\u5c1d\u8bd5\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u4e0d\u4f1a\u7acb\u5373\u963b\u585e\uff0c\u91c7\u53d6\u5faa\u73af\u7684\u65b9\u5f0f\u83b7\u53d6\u9501\uff0c\u51cf\u5c11\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u6d88\u8017\uff0c\u7f3a\u70b9\u662f\u6d88\u8017cpu</p>"}, {"location": "android/java/java_lock/#sleepwait", "title": "sleep\u548cwait\u7684\u533a\u522b", "text": "<p>Thread.Sleep(0)\u7684\u4f5c\u2f64\uff0c\u89e6\u53d1\u64cd\u4f5c\u7cfb\u7edf\u2f74\u523b\u91cd\u65b0\u8fdb\u2f8f\u2f00\u6b21CPU\u7ade\u4e89</p> <p>1\u3001sleep\u662fThread\u7684\u9759\u6001\u2f45\u6cd5\uff0cwait\u662fObject\u7684\u2f45\u6cd5\uff0c\u4efb\u4f55\u5bf9\u8c61\u5b9e\u4f8b\u90fd\u80fd\u8c03\u2f64\u3002</p> <p>2\u3001sleep\u4e0d\u4f1a\u91ca\u653e\u9501\u3002wait\u4f1a\u91ca\u653e\u9501\uff0c\u4f46\u8c03\u2f64\u5b83\u7684\u524d\u63d0\u662f\u5f53\u524d\u7ebf\u7a0b\u5360\u6709\u9501(\u5373\u4ee3\u7801\u8981\u5728synchronized\u4e2d)\u3002</p> <p>3\u3001\u5b83\u4eec\u90fd\u53ef\u4ee5\u88abinterrupt\u2f45\u6cd5\u4e2d\u65ad</p> <p>4\u3001notify\u662f\u9700\u8981\u7b49synchronized\u5305\u88f9\u7684\u6240\u6709\u4ee3\u7801\u6267\u884c\u5b8c\u6210\u624d\u91ca\u653e\u9501</p> sleep wait \u540c\u6b65 \u65e0\u9650\u5236 synchronized\u4e2d\u4f7f\u7528 \u4f5c\u7528\u5bf9\u8c61 \u5b9a\u4e49\u5728Thread\u4e2d\uff0c\u4f5c\u7528\u57df\u5f53\u524d\u7ebf\u7a0b \u5b9a\u4e49\u5728Object\u4e2d\uff0c\u4f5c\u7528\u4e8e\u672c\u8eab \u91ca\u653e\u9501 \u5426 \u662f \u5524\u9192\u6761\u4ef6 \u8d85\u65f6\u6216\u8c03\u7528interrupt\u65b9\u6cd5 \u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528notify\u6216notifyAll \u65b9\u6cd5\u5c5e\u6027 \u9759\u6001\u65b9\u6cd5 \u5b9e\u4f8b\u2f45\u6cd5"}, {"location": "android/java/java_lock/#_7", "title": "\u6b7b\u9501", "text": "<ol> <li>\u4e92\u65a5\u6761\u4ef6\uff0c\u6bcf\u4e2a\u8d44\u6e90\u6bcf\u6b21\u53ea\u80fd\u88ab\u4e00\u4e2a\u7ebf\u7a0b\uff08\u6216\u8fdb\u7a0b\uff0c\u4e0b\u540c\uff09\u4f7f\u7528</li> <li>\u8bf7\u6c42\u4e0e\u4fdd\u6301\u6761\u4ef6\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u83b7\u53d6\u8d44\u6e90\uff0c\u4f46\u53d1\u751f\u4e86\u963b\u585e\uff0c\u5219\u9700\u5bf9\u5df2\u83b7\u5f97\u7684\u8d44\u6e90\u4fdd\u6301\u4e0d\u653e</li> <li>\u4e0d\u5265\u593a\u6761\u4ef6\uff0c\u6307\u7ebf\u7a0b\u5df2\u83b7\u5f97\u7684\u8d44\u6e90\uff0c\u5728\u672a\u4f7f\u7528\u5b8c\u4e4b\u524d\uff0c\u4e0d\u4f1a\u88ab\u5f3a\u884c\u5265\u593a</li> <li>\u5faa\u73af\u7b49\u5f85\u6761\u4ef6\uff0c\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5fc5\u987b\u5f62\u6210\u201c\u5faa\u73af\u7b49\u5f85\u201d\uff0c\u624d\u6709\u53ef\u80fd\u5f62\u6210\u6b7b\u9501</li> </ol> <p>\u603b\u7ed3\uff1a</p> <ol> <li>\u591a\u4e2a\u64cd\u4f5c\u8005(m&gt;=2)\uff0c\u4e89\u593a\u591a\u4e2a\u8d44\u6e90(n&gt;=2)\uff0c\u4e14n&lt;=m</li> <li>\u4e89\u593a\u8d44\u6e90\u7684\u987a\u5e8f\u4e0d\u5bf9</li> <li>\u62ff\u5230\u8d44\u6e90\u4e0d\u653e\u624b</li> </ol> <p>\u9632\u6b62\u6b7b\u9501\uff1a\u4ece2\u548c3\u89e3\u51b3\uff0c\u4e0d\u4f7f\u7528\u4e92\u65a5\u9501\uff0clock\u9501\u8d85\u65f6\u673a\u5236\u91ca\u653e\u9501\uff0c\u8d44\u6e90\u6807\u8bb0\u6709\u5e8f\u53bb\u9501\u8d44\u6e90\uff0c\u94f6\u884c\u5bb6\u7b97\u6cd5</p>"}, {"location": "android/java/java_lock/#aqs", "title": "AQS", "text": "<p>AbstractqueuedSynchronizer</p>"}, {"location": "android/java/java_reflex/", "title": "\u53cd\u5c04", "text": ""}, {"location": "android/java/java_reflex/#class", "title": "\u83b7\u5f97 Class \u5bf9\u8c61", "text": "<p>\u83b7\u53d6Class\u5bf9\u8c61\u7684\u4e09\u79cd\u65b9\u5f0f</p> <ol> <li>\u901a\u8fc7\u7c7b\u540d\u83b7\u53d6 \u7c7b\u540d.class</li> <li>\u901a\u8fc7\u5bf9\u8c61\u83b7\u53d6 \u5bf9\u8c61\u540d.getClass()</li> <li>\u901a\u8fc7\u5168\u7c7b\u540d\u83b7\u53d6 Class.forName(\u5168\u7c7b\u540d) classLoader.loadClass(\u5168\u7c7b\u540d)</li> </ol> <p>\u4f7f\u7528 Class \u7c7b\u7684 forName \u9759\u6001\u65b9\u6cd5 <pre><code>public static Class&lt;?&gt; forName(String className)\n</code></pre> \u76f4\u63a5\u83b7\u53d6\u67d0\u4e00\u4e2a\u5bf9\u8c61\u7684 class <pre><code>Class&lt;?&gt; klass = int.class;\nClass&lt;?&gt; classInt = Integer.TYPE;\n</code></pre> \u8c03\u7528\u67d0\u4e2a\u5bf9\u8c61\u7684 getClass() \u65b9\u6cd5 <pre><code>StringBuilder str = new StringBuilder(\"123\");\nClass&lt;?&gt; klass = str.getClass();\n</code></pre></p>"}, {"location": "android/java/java_reflex/#_1", "title": "\u5224\u65ad\u662f\u5426\u4e3a\u67d0\u4e2a\u7c7b\u7684\u5b9e\u4f8b", "text": "<p>\u4e00\u822c\u5730\uff0c\u6211\u4eec\u7528 instanceof \u5173\u952e\u5b57\u6765\u5224\u65ad\u662f\u5426\u4e3a\u67d0\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u501f\u52a9\u53cd\u5c04\u4e2d Class \u5bf9\u8c61\u7684isInstance() \u65b9\u6cd5\u6765\u5224\u65ad\u662f\u5426\u4e3a\u67d0\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5b83\u662f\u4e00\u4e2a native \u65b9\u6cd5\uff1a <pre><code>public native boolean isInstance(Object obj);\n</code></pre> \u5224\u65ad\u662f\u5426\u4e3a\u67d0\u4e2a\u7c7b\u7684\u7c7b\u578b <pre><code>public boolean isAssignableFrom(Class&lt;?&gt; cls)\n</code></pre></p>"}, {"location": "android/java/java_reflex/#_2", "title": "\u521b\u5efa\u5b9e\u4f8b", "text": "<p>\u901a\u8fc7\u53cd\u5c04\u6765\u751f\u6210\u5bf9\u8c61\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f\u3002</p> <p>\u4f7f\u7528Class\u5bf9\u8c61\u7684newInstance()\u65b9\u6cd5\u6765\u521b\u5efaClass\u5bf9\u8c61\u5bf9\u5e94\u7c7b\u7684\u5b9e\u4f8b\u3002 <pre><code>Class&lt;?&gt; c = String.class;\nObject str = c.newInstance();\n</code></pre> \u5148\u901a\u8fc7Class\u5bf9\u8c61\u83b7\u53d6\u6307\u5b9a\u7684Constructor\u5bf9\u8c61\uff0c\u518d\u8c03\u7528Constructor\u5bf9\u8c61\u7684newInstance()\u65b9\u6cd5\u6765\u521b\u5efa\u5b9e\u4f8b\u3002\u8fd9 \u79cd\u65b9\u6cd5\u53ef\u4ee5\u7528\u6307\u5b9a\u7684\u6784\u9020\u5668\u6784\u9020\u7c7b\u7684\u5b9e\u4f8b\u3002 <pre><code>//\u83b7\u53d6String\u6240\u5bf9\u5e94\u7684Class\u5bf9\u8c61\nClass&lt;?&gt; c = String.class;\n//\u83b7\u53d6String\u7c7b\u5e26\u4e00\u4e2aString\u53c2\u6570\u7684\u6784\u9020\u5668\nConstructor constructor = c.getConstructor(String.class);\n//\u6839\u636e\u6784\u9020\u5668\u521b\u5efa\u5b9e\u4f8b\nObject obj = constructor.newInstance(\"23333\");\nSystem.out.println(obj);\n</code></pre></p>"}, {"location": "android/java/java_reflex/#_3", "title": "\u83b7\u53d6\u6784\u9020\u5668\u4fe1\u606f", "text": "<p>\u5f97\u5230\u6784\u9020\u5668\u7684\u65b9\u6cd5 <pre><code>Constructor getConstructor(Class[] params) -- \u83b7\u5f97\u4f7f\u7528\u7279\u6b8a\u7684\u53c2\u6570\u7c7b\u578b\u7684public\u6784\u9020\u51fd\u6570(\u5305\u62ec\u7236\u7c7b\uff09\nConstructor[] getConstructors() -- \u83b7\u5f97\u7c7b\u7684\u6240\u6709\u516c\u5171\u6784\u9020\u51fd\u6570\nConstructor getDeclaredConstructor(Class[] params) -- \u83b7\u5f97\u4f7f\u7528\u7279\u5b9a\u53c2\u6570\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570(\u5305\u62ec\u79c1\u6709)\nConstructor[] getDeclaredConstructors() -- \u83b7\u5f97\u7c7b\u7684\u6240\u6709\u6784\u9020\u51fd\u6570(\u4e0e\u63a5\u5165\u7ea7\u522b\u65e0\u5173)\n</code></pre></p>"}, {"location": "android/java/java_reflex/#_4", "title": "\u83b7\u53d6\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff08\u5b57\u6bb5\uff09\u4fe1\u606f", "text": "<p>\u83b7\u5f97\u5b57\u6bb5\u4fe1\u606f\u7684\u65b9\u6cd5 <pre><code>Field getField(String name) -- \u83b7\u5f97\u547d\u540d\u7684\u516c\u5171\u5b57\u6bb5\nField[] getFields() -- \u83b7\u5f97\u7c7b\u7684\u6240\u6709\u516c\u5171\u5b57\u6bb5\nField getDeclaredField(String name) -- \u83b7\u5f97\u7c7b\u58f0\u660e\u7684\u547d\u540d\u7684\u5b57\u6bb5\nField[] getDeclaredFields() -- \u83b7\u5f97\u7c7b\u58f0\u660e\u7684\u6240\u6709\u5b57\u6bb5\n</code></pre></p>"}, {"location": "android/java/java_reflex/#_5", "title": "\u8c03\u7528\u65b9\u6cd5", "text": "<p>\u83b7\u5f97\u65b9\u6cd5\u4fe1\u606f\u7684\u65b9\u6cd5 <pre><code>Method getMethod(String name, Class[] params) -- \u4f7f\u7528\u7279\u5b9a\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u83b7\u5f97\u547d\u540d\u7684\u516c\u5171\u65b9\u6cd5\nMethod[] getMethods() -- \u83b7\u5f97\u7c7b\u7684\u6240\u6709\u516c\u5171\u65b9\u6cd5\nMethod getDeclaredMethod(String name, Class[] params) -- \u4f7f\u7528\u7279\u5199\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u83b7\u5f97\u7c7b\u58f0\u660e\u7684\u547d\u540d\u7684\u65b9\u6cd5\nMethod[] getDeclaredMethods() -- \u83b7\u5f97\u7c7b\u58f0\u660e\u7684\u6240\u6709\u65b9\u6cd5\n</code></pre> \u8c03\u7528invoke\u6765\u8c03\u7528\u65b9\u6cd5 <pre><code>public Object invoke(Object obj, Object... args)\n</code></pre></p>"}, {"location": "android/java/java_reflex/#_6", "title": "\u9759\u6001\u4ee3\u7406", "text": "<p>\u5b9a\u4e49\u62bd\u8c61\u63a5\u53e3 <pre><code>/**\n * \u4ee3\u7406\u62bd\u8c61\u89d2\u8272\n */\npublic interface Massage {\n    void massage(String name);\n}\npublic interface Wash {\n    void wash();\n}\n</code></pre> \u5b9a\u4e49\u4ee3\u7406\u5bf9\u8c61 <pre><code>public class Agent implements Massage {\n    private final Massage massage;\n    public Agent(Massage massage) {\n        this.massage = massage;\n    }\n    @Override\n    public void massage(String name) {\n        massage.massage(name);\n    }\n}\npublic class WashAgent implements Wash {\n    private final Wash mWash;\n    public WashAgent(Wash wash) {\n        this.mWash = wash;\n    }\n    @Override\n    public void wash() {\n        this.mWash.wash();\n    }\n}\n</code></pre> \u5b9a\u4e49\u5b9e\u73b0\u7c7b <pre><code>public class Alvin implements Massage, Wash {\n    @Override\n    public void massage(String name) {\n        System.out.println(\"massage\");\n    }\n    @Override\n    public void wash() {\n        System.out.println(\"wash\");\n    }\n}\n</code></pre> \u6d4b\u8bd5 <pre><code>Massage massage = new Alvin();\nWash wash = new Alvin();\nAgent agent = new Agent(massage);\nagent.massage(\"Alvin\");\nWashAgent washAgent = new WashAgent(wash);\nwashAgent.wash();\n</code></pre></p>"}, {"location": "android/java/java_reflex/#_7", "title": "\u52a8\u6001\u4ee3\u7406", "text": "<pre><code>Alvin alvin = new Alvin();\nObject o = Proxy.newProxyInstance(MyClass.class.getClassLoader(),\n        new Class[]{Massage.class, Wash.class},//\u4f20\u5165\u9700\u8981\u4ee3\u7406\u7684class\n        new InvocationHandler() {\n            @Override\n            public Object invoke(Object o, Method method, Object[] objects) throws Throwable {\n                //\u53cd\u5c04\u8c03\u7528\u65b9\u6cd5\uff0cmethod\u662f\u8c03\u7528\u7684\u65b9\u6cd5\u6bd4\u5982massage\u548cwash\n                //objects\u662f\u65b9\u6cd5\u53c2\u6570\u503c\u6bd4\u5982\u201cAlvin\u201d\n                return method.invoke(alvin, objects);\n            }\n        });\nMassage mag = (Massage) o;\nmag.massage(\"Alvin\");//\u4f1a\u89e6\u53d1invoke\u56de\u8c03\n\nWash wh = (Wash) o;\nwh.wash();//\u4f1a\u89e6\u53d1invoke\u56de\u8c03\n</code></pre>"}, {"location": "android/java/java_safe/", "title": "\u7ebf\u7a0b\u5b89\u5168", "text": ""}, {"location": "android/java/java_safe/#_1", "title": "\u8868\u73b0", "text": "<p>\u539f\u2f26\u6027\u3001\u53ef\u2ec5\u6027\u3001\u6709\u5e8f\u6027</p>"}, {"location": "android/java/java_safe/#_2", "title": "\u89e3\u51b3\u65b9\u5411", "text": "<p>1.\u4e0d\u53ef\u53d8</p> <p>final\u5173\u952e\u5b57\u4fee\u9970\u7684\u7c7b\u6216\u6570\u636e\u4e0d\u53ef\u4fee\u6539\uff0c\u5982String\u7c7b\uff0cInteger\u7c7b</p> <p>2.\u7ebf\u7a0b\u5c01\u95ed</p> <p>Ad-hoc \u7ebf\u7a0b\u5c01\u95ed\u3001ThreadLocal\u3001\u5806\u6808\u5c01\u95ed</p> <p>3.\u540c\u6b65</p> <p>\u60b2\u89c2\u9501\u548c\u4e50\u89c2\u9501(\u2fae\u963b\u585e\u540c\u6b65)</p> <p>\u60b2\u89c2\u9501\uff1asynchronized\u3001Lock(ReentrantReadWriteLock/ReentrantLock)\u3001\u53ef\u89c1\u6027</p> <p>\u4e50\u89c2\u9501\uff1aCAS\u3001volatile\u3001\u6709\u5e8f\u6027\u3001\u539f\u5b50\u6027</p>"}, {"location": "android/java/java_safe/#cas", "title": "CAS", "text": "<p>\u4e50\u89c2\u9501\uff0c\u6bd4\u8f83\u4e0e\u4ea4\u6362\u7684\u65e0\u9501\u7b97\u6cd5\uff0c\u975e\u963b\u585e\u540c\u6b65</p>"}, {"location": "android/java/java_safe/#_3", "title": "\u539f\u7406", "text": "<ol> <li> <p>CAS\u6307\u4ee4\u6bcf\u6b21\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u6210\u529f\uff0c\u4ee5i=0,i++\u4e3a\u4f8b</p> </li> <li> <p>\u7ebf\u7a0b1\u3001\u7ebf\u7a0b2\u3001\u7ebf\u7a0b3\u540c\u65f6\u6267\u884c\u65f6\uff0c\u5206\u522b\u4f1a\u5728\u81ea\u5df1\u5185\u5b58\u7a7a\u95f4\u8ba1\u7b97\u597di++\u7684\u503c\uff0c\u5373\u4e3a1</p> </li> <li> <p>\u7ebf\u7a0b1\u6267\u884cCAS\u6307\u4ee4\uff0c\u6bd4\u8f83\u539fi\u548c\u81ea\u5df1\u8ba1\u7b97\u7684\u503c\u5982\u679c\u4e0d\u540c\u5219\u8fdb\u884c\u4ea4\u6362\uff0c\u5373\u4e3b\u5185\u5b58i\u53d8\u62101</p> </li> <li> <p>\u7ebf\u7a0b2\u6267\u884cCAS\u6307\u4ee4\u53d1\u73b0i\u548c\u81ea\u5df1\u7684\u503c\u76f8\u540c\uff0c\u5219\u91cd\u65b0\u4ece\u4e3b\u5185\u5b58\u4e2d\u83b7\u53d6i\u5e76\u8fdb\u884ci++\uff0c\u8be5\u8fc7\u7a0b\u6210\u4e3a\u81ea\u65cb\uff0c\u518d\u6267\u884cCAS\u6267\u884c\uff0c\u6bd4\u8f83\u548c\u4ea4\u6362i\u53d8\u62102\u3002\u7ebf\u7a0b3\u548c\u7ebf\u7a0b2\u7c7b\u4f3c</p> </li> </ol> <p>\u7f3a\u70b9\uff1a\u5faa\u73af\u65f6\u95f4\u957f\u8bdd\u5f00\u9500\u5927\uff0cABA\u95ee\u9898(\u6570\u636e\u4e2d\u9014\u88ab\u4fee\u6539\u8fc7)\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u591a\u4e2a\u5171\u4eab\u53d8\u91cf\u7684\u539f\u5b50\u6027</p>"}, {"location": "android/java/java_safe/#_4", "title": "\u539f\u5b50\u64cd\u4f5c\u7c7b", "text": "<p>\u66f4\u65b0\u57fa\u672c\u7c7b\u578b\u7c7b\uff1aAtomicBoolean\u3001AtomicInteger\u3001AtomicLong</p> <p>\u66f4\u65b0\u6570\u7ec4\u7c7b\uff1aAtomicIntegerArray\u3001AtomicLongArray\u3001AtomicReferenceArray</p> <p>\u66f4\u65b0\u5f15\u7528\u7c7b\u578b\uff1aAtomicReference\u3001AtomicMarkableReference\u3001AtomicStampedReference</p> <p>AtomicMarkableReference\u548cAtomicStampedReference\u7528\u6765\u89e3\u51b3ABA\u95ee\u9898\uff0c\u901a\u8fc7\u7248\u672c\u63a7\u5236\u524d\u8005\u662fboolean\u7c7b\u578b\uff0c\u540e\u8005\u662fint\u7c7b\u578b</p>"}, {"location": "android/java/java_safe/#synchronized", "title": "Synchronized", "text": "<p>\u4fdd\u8bc1\u4e92\u65a5\u7684\uff0c\u2f00\u5757\u4ee3\u7801\u4e0d\u80fd\u540c\u65f6\u88ab\u4e24\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u80fd\u4fdd\u8bc1\u53ef\u89c1\u6027\u3001\u6709\u5e8f\u6027\u3001\u539f\u5b50\u6027</p>"}, {"location": "android/java/java_safe/#semaphore", "title": "Semaphore\u7c7b", "text": "<p>\u8fdb\u2f8f\u5e76\u53d1\u63a7\u5236\uff0c\u9650\u5236\u8bbf\u95ee\u2f00\u4e2a\u8d44\u6e90\uff08\u6216\u4ee3\u7801\u5757\uff09\u7684\u7ebf\u7a0b\u6570\u2f6c\u3002\u5f53\u8bbe\u5b9a\u7684\u7ebf\u7a0b\u6570\u2f6c\u662f1\u65f6\uff0c\u5e76\u53d1\u5176\u5b9e\u5c31\u9000\u5316\u5230\u4e86\u4e92\u65a5</p>"}, {"location": "android/java/java_safe/#lock", "title": "Lock\u7c7b", "text": "<p>\u53ef\u4ee5\u53d6\u4ee3Object\u7684notify\u548cwait</p>"}, {"location": "android/java/java_safe/#_5", "title": "\u5bf9\u8c61\u9501", "text": "<p>Synchronized+Object\u7684Notify\u548cwait\u2f00\u8d77\u6784\u6210\u4e86\u540c\u6b65</p>"}, {"location": "android/java/java_safe/#volatile", "title": "volatile", "text": "<p>\u8f7b\u91cf\u7ea7\u7684synchronized\uff0c\u662f\u2f00\u4e2a\u53d8\u91cf\u4fee\u9970\u7b26\uff0c\u53ea\u80fd\u2f64\u6765\u4fee\u9970\u53d8\u91cf\uff0c\u80fd\u4fdd\u8bc1\u7f13\u5b58\u4e00\u81f4\u6027</p> <p>\u7f13\u5b58\u2f00\u81f4\u6027\u534f\u8bae\uff1a\u6bcf\u4e2a\u5904\u7406\u5668\u901a\u8fc7\u55c5\u63a2\u5728\u603b\u7ebf\u4e0a\u4f20\u64ad\u7684\u6570\u636e\u6765\u68c0\u67e5\u2f83\u2f30\u7f13\u5b58\u7684\u503c\u662f\u5426\u8fc7\u671f\uff0c\u5f53\u5904\u7406\u5668\u53d1\u73b0\u7f13\u5b58\u2f8f\u5bf9\u5e94\u7684\u5185\u5b58\u5730\u5740\u88ab\u4fee\u6539\uff0c\u5c31\u4f1a\u5c06\u5f53\u524d\u5904\u7406\u5668\u7684\u7f13\u5b58\u2f8f\u8bbe\u7f6e\u6210\u2f46\u6548\u72b6\u6001\uff0c\u5f53\u5904\u7406\u5668\u8981\u5bf9\u8fd9\u4e2a\u6570\u636e\u8fdb\u2f8f\u4fee\u6539\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u4f1a\u5f3a\u5236\u91cd\u65b0\u4ece\u7cfb\u7edf\u5185\u5b58\u2fa5\u628a\u6570\u636e\u8bfb\u5230\u5904\u7406\u5668\u7f13\u5b58\u2fa5</p>"}, {"location": "android/java/java_safe/#_6", "title": "\u53ef\u2ec5\u6027", "text": "<p>\u6307\u5f53\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u2f00\u4e2a\u53d8\u91cf\u65f6\uff0c\u2f00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e86\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u5176\u4ed6\u7ebf\u7a0b\u80fd\u591f\u2f74\u5373\u770b\u5f97\u5230\u4fee\u6539\u7684\u503c</p> <p>volatile\u4fdd\u8bc1\u53ef\u89c1\u6027\uff1a\u88ab\u5176\u4fee\u9970\u7684\u53d8\u91cf\u5728\u88ab\u4fee\u6539\u540e\u53ef\u4ee5\u2f74\u5373\u540c\u6b65\u5230\u4e3b\u5185\u5b58\uff0c\u88ab\u5176\u4fee\u9970\u7684\u53d8\u91cf\u5728\u6bcf\u6b21\u4f7f\u2f64\u4e4b\u524d\u90fd\u4ece\u4e3b\u5185\u5b58\u5237\u65b0</p>"}, {"location": "android/java/java_safe/#_7", "title": "\u6709\u5e8f\u6027", "text": "<p>\u6307\u7a0b\u5e8f\u6267\u2f8f\u7684\u987a\u5e8f\u6309\u7167\u4ee3\u7801\u7684\u5148\u540e\u987a\u5e8f\u6267\u2f8f\uff08happens-before\u539f\u5219\uff09</p> <p>volatile\u4fdd\u8bc1\u6709\u5e8f\u6027\uff1a\u7981\u2f4c\u6307\u4ee4\u91cd\u6392\u4f18\u5316\u7b49\uff0c\u4fdd\u8bc1\u4ee3\u7801\u7684\u7a0b\u5e8f\u4f1a\u4e25\u683c\u6309\u7167\u4ee3\u7801\u7684\u5148\u540e\u987a\u5e8f\u6267\u2f8f</p>"}, {"location": "android/java/java_safe/#_8", "title": "\u539f\u2f26\u6027", "text": "<p>\u6307\u2f00\u4e2a\u64cd\u4f5c\u662f\u4e0d\u53ef\u4e2d\u65ad\u7684\uff0c\u8981\u5168\u90e8\u6267\u2f8f\u5b8c\u6210\uff0c\u8981\u4e0d\u5c31\u90fd\u4e0d\u6267\u2f8f\uff0c\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5bf9\u5b83\u8fdb\u884c\u64cd\u4f5c</p> <p>volatile\u65e0\u6cd5\u4fdd\u8bc1\u539f\u2f26\u6027\uff1a\u4fdd\u8bc1\u539f\u2f26\u6027\u9700\u8981\u901a\u8fc7\u5b57\u8282\u7801\u6307\u4ee4monitorenter\u548cmonitorexit\uff0cvolatile\u548c\u8fd9\u4e24\u4e2a\u6307\u4ee4\u4e4b\u95f4\u662f\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u7684</p> <pre><code>private volatile int i = 0;\n//\u5982\u679c\u662fkotlin\u91c7\u7528\u6ce8\u89e3\u5f62\u5f0f\n@Volatile\nprivate i: Int = 0\n\ni++;\n</code></pre> <p>\u7ebf\u7a0bA\u548c\u7ebf\u7a0bB\u540c\u65f6\u4fee\u6539i++\u65f6\u4e3a\u5565\u4f1a\u6709\u95ee\u9898\uff1f</p> <p>\u7ebf\u7a0bA\u5728i++\u65f6i\u53d8\u62101\uff0c\u4f1a\u7acb\u5373\u5237\u65b0\u4e3b\u5185\u5b58\u4f7f\u5f97\u7ebf\u7a0bB\u7684i\u503c\u65e0\u6548\u91cd\u5199\u4ece\u4e3b\u5185\u5b58\u8bfb\u53d6\uff0c\u6309\u7406\u4e0d\u4f1a\u51fa\u73b0\u5f02\u5e38</p> <p>\u7406\u89e3</p> <p>1\u3001\u7ebf\u7a0b\u8bfb\u53d6i</p> <p>2\u3001temp = i + 1</p> <p>3\u3001i = temp</p> <p>\u5f53 i=0 \u7684\u65f6\u5019A,B\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bfb\u5165\u4e86 i \u7684\u503c\uff0c \u7136\u540eA\u7ebf\u7a0b\u6267\u884c\u4e86temp = i + 1\u7684\u64cd\u4f5c\uff0c\u7136\u540eB\u7ebf\u7a0b\u4e5f\u6267\u884c\u4e86temp = i + 1\u7684\u64cd\u4f5c\uff0c\u6b64\u65f6A\uff0cB\u4e24\u4e2a\u7ebf\u7a0b\u4fdd\u5b58\u7684 i \u7684\u503c\u90fd\u662f0\uff0ctemp\u7684\u503c\u90fd\u662f1\uff0c\u7136\u540eA\u7ebf\u7a0b\u6267\u884c\u4e86 i = temp\u7684\u64cd\u4f5c\uff0c\u6b64\u65f6i\u7684\u503c\u4f1a\u7acb\u5373\u5237\u65b0\u5230\u4e3b\u5b58\u5e76\u901a\u77e5\u5176\u4ed6\u7ebf\u7a0b\u4fdd\u5b58\u7684 i \u503c\u5931\u6548\uff0c\u6b64\u65f6B\u7ebf\u7a0b\u9700\u8981\u91cd\u65b0\u8bfb\u53d6 i \u7684\u503c\u90a3\u4e48\u6b64\u65f6B\u7ebf\u7a0b\u4fdd\u5b58\u7684 i \u5c31\u662f1\uff0c\u540c\u65f6B\u7ebf\u7a0b\u4fdd\u5b58\u7684temp\u8fd8\u4ecd\u7136\u662f1\uff0c\u7136\u540eB\u7ebf\u7a0b\u6267\u884c i=temp\uff0c\u6240\u4ee5\u5bfc\u81f4\u4e86\u8ba1\u7b97\u7ed3\u679c\u6bd4\u9884\u671f\u5c11\u4e861</p> <p>\u4f7f\u7528\u573a\u666f\uff1a\u4e00\u5199\u591a\u8bfb\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5199\u591a\u4e2a\u7ebf\u7a0b\u8bfb</p>"}, {"location": "android/java/java_safe/#volatile_1", "title": "\u61d2\u6c49\u53cc\u91cd\u6821\u9a8c\u548cvolatile", "text": "<p>\u61d2\u6c49\u5f0f \u65e2\u7136synchronized\u4fdd\u8bc1\u4e86\u6709\u5e8f\u6027\u90a3\u4e3a\u5565\u8fd8\u9700\u8981volatile?</p> <p>synchronized\u53ea\u80fd\u4fdd\u8bc1\u8ba9\u95ed\u5305\u91cc\u4ee3\u7801\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c\u5f53\u7ebf\u7a0bA\u6267\u884cINSTANCE = new Singleton()\u65f6\uff0c\u5206\u4e3a\u5f00\u8f9f\u7a7a\u95f4\u521b\u5efa\u5bf9\u8c61\u3001\u8c03\u7528\u6784\u9020\u65b9\u6cd5\u3001\u8d4b\u503c\u7ed9INSTANCE\u4e09\u6b65\uff0c\u7531\u4e8e\u865a\u62df\u673a\u6307\u4ee4\u91cd\u6392\u673a\u5236\u5bfc\u81f4\u540e\u9762\u4e24\u6b65\u53ef\u80fd\u987a\u5e8f\u98a0\u5012\uff0c\u6240\u4ee5\u5f53\u7ebf\u7a0bB\u8d70\u5230if (INSTANCE == null) {\u65f6\u4e0d\u4e3anull</p>"}, {"location": "android/java/java_safe/#synchronized-vs-volatile", "title": "synchronized vs volatile     synchronized volatile     \u4f7f\u7528 \u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u540c\u6b65\u4ee3\u7801\u5757 \u53d8\u91cf   \u7ebf\u7a0b\u963b\u585e \u53ef\u80fd\u4f1a \u4e0d\u4f1a   \u6027\u80fd \u6709\u9501\uff0c\u7565\u4f4e \u4f18\u4e8e\u524d\u8005   \u4fdd\u8bc1 \u6709\u5e8f\u3001\u53ef\u89c1\u3001\u539f\u5b50 \u6709\u5e8f\u3001\u53ef\u89c1   \u539f\u7406 \u52a0\u9501(monitorenter\u6307\u4ee4)\u91ca\u653e\u9501(monitorexit\u6307\u4ee4)\u4fdd\u8bc1\u539f\u5b50\u6027\uff0c\u5185\u5b58\u5c4f\u969c\u4fdd\u8bc1\u6709\u5e8f\u3001\u53ef\u89c1\u6027 \u5185\u5b58\u5c4f\u969c\u4fdd\u8bc1\u6709\u5e8f\u3001\u53ef\u89c1\u6027", "text": ""}, {"location": "android/java/java_safe/#synchronized-vs-lock", "title": "synchronized vs lock     synchronized Lock\u63a5\u53e3     \u4f7f\u7528 \u5173\u952e\u5b57 \u7c7b   \u9501\u72b6\u6001 \u4e0d\u53ef\u5224\u65ad \u53ef\u5224\u65ad   \u9501\u7c7b\u578b \u53ef\u91cd\u5165\uff0c\u4e0d\u53ef\u4e2d\u65ad\uff0c\u975e\u516c\u5e73\u9501 \u53ef\u91cd\u5165\uff0c\u53ef\u4e2d\u65ad\uff0c\u516c/\u975e\u516c\u5e73\u9501       \u5b58\u5728\u5c42\u6b21 volatile\u5173\u952e\u5b57 synchronized\u5173\u952e\u5b57 Lock\u63a5\u2f1d Atomic\u53d8\u91cf     \u539f\u2f26\u6027 \u2f46\u6cd5\u4fdd\u969c \u53ef\u4ee5\u4fdd\u969c \u53ef\u4ee5\u4fdd\u969c \u53ef\u4ee5\u4fdd\u969c   \u53ef\u2ec5\u6027 \u53ef\u4ee5\u4fdd\u969c \u53ef\u4ee5\u4fdd\u969c \u53ef\u4ee5\u4fdd\u969c \u53ef\u4ee5\u4fdd\u969c   \u6709\u5e8f\u6027 \u2f00\u5b9a\u7a0b\u5ea6\u4fdd\u969c \u53ef\u4ee5\u4fdd\u969c \u53ef\u4ee5\u4fdd\u969c \u2f46\u6cd5\u4fdd\u969c    <p>4.\u5de5\u5177\u7c7b</p> <p>\u540c\u6b65\u5bb9\u5668\uff08\u5df2\u8fc7\u65f6\uff09 \u540c\u6b65\u5bb9\u5668\u7684\u2f2f\u5177\u6709Vector\u3001HashTable\u3001Collections.synchroniedXXX()</p> <p>\u5e76\u53d1\u5bb9\u5668\uff08JUC\uff09 ConcurrentHashMap\u3001CopyOnWriteArrayList</p> <p>JUC\u540c\u6b65\u5668 AQS</p>", "text": ""}, {"location": "android/java/java_safe/#_9", "title": "\u5e76\u53d1\u5de5\u5177\u7c7b", "text": ""}, {"location": "android/java/java_safe/#countdownlatch", "title": "CountDownLatch", "text": "<p>\u76f8\u5bf9\u4e8ejoin\uff0c\u66f4\u7075\u6d3b\u7684\u63a7\u5236\u7ebf\u7a0b\u6267\u884c\u987a\u5e8f\uff0c\u5982\u7ebf\u7a0b123\uff0c\u6309\u7167321\u6267\u884c\u540e\u6700\u7ec8main\u6267\u884c</p> <p>\u539f\u7406\u662f\u901a\u8fc7\u5185\u90e8\u7684\u8ba1\u6570\u6263\u9664\u6765\u63a7\u5236\uff0c\u6bcf\u6b21countDown()\u4f1a\u51cf1 <pre><code>fun main() {\n    val mainLatch = CountDownLatch(1)\n    val latch1 = CountDownLatch(2)\n    val th1 = Thread {\n        latch1.await()\n        println(\"${Thread.currentThread().name} run finish\")\n        mainLatch.countDown()\n    }.apply { name = \"thread1\" }\n    val th2 = Thread {\n        println(\"${Thread.currentThread().name} run finish\")\n        latch1.countDown()\n    }.apply { name = \"thread2\" }\n    val th3 = Thread {\n        println(\"${Thread.currentThread().name} run finish\")\n        latch1.countDown()\n    }.apply { name = \"thread3\" }\n    th1.start()\n    th2.start()\n    th3.start()\n    mainLatch.await()\n    println(\"main\")\n}\n</code></pre></p>"}, {"location": "android/java/java_safe/#cyclicbarrier", "title": "CyclicBarrier", "text": "<p>\u7528\u6765\u591a\u4e2a\u7ebf\u7a0b\u6c47\u603b\u4f7f\u7528\uff0c\u53ef\u4ee5\u591a\u6b21\u8c03\u7528await <pre><code>fun main() {\n    val cyclic = CyclicBarrier(4){\n        println(\"result--------\")\n    }\n    for (i in 0..3) {\n        Thread(MyRun(cyclic)).start()\n    }\n}\n\nclass MyRun(private val cyclic: CyclicBarrier) : Runnable {\n    override fun run() {\n        println(\"${Thread.currentThread().name} is run\")\n        cyclic.await()\n        println(\"${Thread.currentThread().name} is finish\")\n        cyclic.await()\n    }\nThread-1 is run\nThread-0 is run\nThread-2 is run\nThread-3 is run\nresult--------\nThread-3 is finish\nThread-1 is finish\nThread-0 is finish\nThread-2 is finish\nresult--------\n</code></pre></p>"}, {"location": "android/java/java_safe/#semaphore_1", "title": "Semaphore", "text": "<p>\u4fe1\u53f7\u91cf\uff0c\u4e3b\u8981\u7528\u4e8e\u6d41\u63a7\u4f7f\u7528</p>"}, {"location": "android/java/java_safe/#countdownlatch-vs-cyclicbarrier", "title": "CountDownLatch vs CyclicBarrier <p>\u573a\u666f\u4e3e\u4f8b\uff0cAndroid\u9879\u76ee\uff1aA\u6a21\u5757\uff0cB\u6a21\u5757\uff0cC\u6a21\u5757</p> <p>CyclicBarrier\uff1a\u5f53ABC\u6a21\u5757\u5b8c\u6210\u540e\u624d\u80fd\u6253\u5305apk</p> <p>CountDownLatch\uff1a\u5f53A\u6a21\u5757\u5b8c\u6210\u624d\u80fd\u7ee7\u7eedBC\u6a21\u5757</p>     CountDownLatch CyclicBarrier     \u8ba1\u6570\u5668\u548c\u7ebf\u7a0b\u6570 \u4e0d\u76f8\u7b49\uff0c\u53d6\u51b3\u4e8ecountDown\u8c03\u7528\u6b21\u6570 \u76f8\u7b49   \u7ebf\u7a0b\u63a7\u5236 \u7531\u5176\u4ed6\u7ebf\u7a0b\u901a\u8fc7countDown\u63a7\u5236 \u7531\u672c\u8eab\u63a7\u5236\uff0c\u53ea\u6709await   \u4e3b\u7ebf\u7a0b \u4e0d\u963b\u585e \u963b\u585e   \u91cd\u590d\u4f7f\u7528 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5   \u8ba1\u6570\u65b9\u5f0f \u5012\u6570\u8ba1\u6570 \u6b63\u6570\u8ba1\u6570   \u5b9e\u73b0 \u5185\u90e8\u7c7bSync\u7ee7\u627fAQS\u5b9e\u73b0 \u901a\u8fc7\u91cd\u5165\u9501ReentrantLock\u5b9e\u73b0", "text": ""}, {"location": "android/java/java_safe/#transient", "title": "transient\u5173\u952e\u5b57 <p>\u4f7f\u6210\u5458\u53d8\u91cf\u4e0d\u88ab\u5e8f\u5217\u5316\uff0c\u88abstatic\u4fee\u9970\u7684\u6210\u5458\u53d8\u91cf\u65e0\u6548\uff0c\u9700\u8981\u5b9e\u73b0Serializable\u63a5\u2f1d\uff0c\u5982\u679c\u5b9e\u73b0Externalizable\u63a5\u2f1d\u5219\u4e5f\u65e0\u6548\uff0c\u9700\u8981\u81ea\u884c\u5728readExternal\u65b9\u6cd5\u91cc\u5904\u7406(\u624b\u52a8\u8bbe\u7f6enull)</p>", "text": ""}, {"location": "android/java/java_safe/#_10", "title": "\u7ebf\u7a0b\u6c60 <p>\u7ebf\u7a0b\u6c60\u662f\u4e00\u79cd\u591a\u7ebf\u7a0b\u5904\u7406\u5f62\u5f0f\uff0c\u5b83\u901a\u8fc7\u9884\u5148\u521b\u5efa\u4e00\u7ec4\u7ebf\u7a0b\u5e76\u5c06\u5176\u653e\u5165\u6c60\u4e2d\uff0c\u4ee5\u4fbf\u5728\u9700\u8981\u65f6\u91cd\u7528\u8fd9\u4e9b\u7ebf\u7a0b\u6765\u6267\u884c\u4efb\u52a1\u3002\u7ebf\u7a0b\u6c60\u7684\u4e3b\u8981\u4f18\u52bf\u5305\u62ec\uff1a</p> <ul> <li>\u200b\u964d\u4f4e\u8d44\u6e90\u6d88\u8017\uff1a\u901a\u8fc7\u590d\u7528\u7ebf\u7a0b\uff0c\u907f\u514d\u9891\u7e41\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u7684\u5f00\u9500\u3002</li> <li>\u200b\u63d0\u9ad8\u54cd\u5e94\u901f\u5ea6\uff1a\u4efb\u52a1\u5230\u8fbe\u65f6\u53ef\u4ee5\u7acb\u5373\u6267\u884c\uff0c\u65e0\u9700\u7b49\u5f85\u65b0\u7ebf\u7a0b\u7684\u521b\u5efa\u3002</li> <li>\u200b\u63a7\u5236\u5e76\u53d1\u91cf\uff1a\u901a\u8fc7\u9650\u5236\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f\uff0c\u9632\u6b62\u7cfb\u7edf\u8d44\u6e90\u8017\u5c3d\u3002</li> <li>\u200b\u63d0\u4f9b\u7ba1\u7406\u80fd\u529b\uff1a\u53ef\u4ee5\u8bbe\u5b9a\u4efb\u52a1\u961f\u5217\u3001\u8d85\u65f6\u7b56\u7565\u3001\u62d2\u7edd\u7b56\u7565\u7b49</li> </ul> <p>ThreadPoolExecutor</p> <p>\u62d2\u7edd\u7b56\u7565</p> <p>ThreadPoolExecutor.DiscardPolicy\uff1a\u4e0d\u4f1a\u629b\u5f02\u5e38\u4e5f\u4e0d\u4f1a\u6267\u2f8f</p> <p>ThreadPoolExecutor.AbortPolicy\uff1a\u9ed8\u8ba4\u7b56\u7565\uff0c\u62d2\u7edd\u540e\u629b\u5f02\u5e38</p> <p>ThreadPoolExecutor.CallerRunsPolicy\uff1a\u62d2\u7edd\u540e\u76f4\u63a5\u6267\u884crun\uff0c\u53ef\u80fd\u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b</p> <p>ThreadPoolExecutor.DiscardOldestPolicy\uff1a\u62d2\u7edd\u540e\u4f1a\u629b\u5f03\u4efb\u52a1\u961f\u5217 \u4e2d\u6700\u65e7\u7684\u4efb\u52a1</p> <p>\u81ea\u5b9a\u4e49\u7b56\u7565</p> <p>\u5b9e\u73b0RejectedExecutionHandler\u63a5\u53e3</p> <p>\u5b9e\u73b0\u65b9\u5f0f <pre><code>ExecutorService fixedThreadPool = Executors.newFixedThreadPool(int nThreads);\nExecutorService singleThreadExecutor = Executors.newSingleThreadExecutor();\nExecutorService cachedThreadPool = Executors.newCachedThreadPool();\nScheduledExecutorService scheduledThreadPool = Executors.newScheduledThreadPool(int corePoolSize);\n</code></pre> 1. newSingleThreadExecutor\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\uff0c\u5b58\u6d3b\u65f6\u95f4\u65e0\u9650\uff0c\u7f13\u5b58\u5230LinkedBlockingQueue\uff0c\u9002\u5408\u4e00\u4e2a\u4efb\u52a1\u4e00\u4e2a\u4efb\u52a1\u6267\u884c\u7684\u573a\u666f 2. newCachedThreadPool\uff1a\u7f13\u5b58\u5230SynchronousQueue\u662f\u540c\u6b65\u961f\u5217\uff0c\u9002\u5408\u6267\u884c\u5f88\u591a\u77ed\u671f\u5f02\u6b65\u7684\u573a\u666f 3. newFixedThreadPool: \u521b\u5efa\u53ef\u5bb9\u7eb3\u56fa\u5b9a\u6570\u91cf\u7684\u7ebf\u7a0b\u6c60\uff0c\u5b58\u6d3b\u65f6\u95f4\u662f\u65e0\u9650\uff0c\u9002\u5408\u957f\u671f\u6267\u884c\u7684\u573a\u666f 4. newScheduledThreadPool\uff1a\u521b\u5efa\u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\uff0c\u7f13\u5b58\u5230DelayedWorkQueue\uff0c\u9002\u5408\u5468\u671f\u6027\u6267\u884c\u7684\u573a\u666f</p> <p>ThreadPoolExecutor\u7684\u53c2\u6570</p> <ol> <li>corePoolSize\uff1a\u7ebf\u7a0b\u6c60\u4e2d\u7684\u5e38\u9a7b\u6838\u5fc3\u7ebf\u7a0b\u6570</li> <li>maximumPoolSize\uff1a\u7ebf\u7a0b\u6c60\u80fd\u591f\u5bb9\u7eb3\u540c\u65f6\u6267\u884c\u7684\u6700\u5927\u7ebf\u7a0b\u6570\uff0c\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e1</li> <li>keepAliveTime\uff1a\u7a7a\u95f2\u7ebf\u7a0b\u7684\u5b58\u6d3b\u65f6\u95f4</li> <li>unit\uff1akeepAliveTime\u7684\u5355\u4f4d</li> <li>workQueue\uff1a\u963b\u585e\u961f\u5217\uff0c\u88ab\u63d0\u4ea4\u4f46\u5c1a\u672a\u88ab\u6267\u884c\u7684\u4efb\u52a1</li> <li>threadFactory\uff1a\u751f\u6210\u7ebf\u7a0b\u6c60\u4e2d\u5de5\u4f5c\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u5de5\u5382\uff0c\u7528\u4e8e\u521b\u5efa\u7ebf\u7a0b\u4e00\u822c\u9ed8\u8ba4\u5373\u53ef</li> <li>handler\uff1a\u62d2\u7edd\u7b56\u7565\uff0c\u5f53\u961f\u5217\u6ee1\u4e86\u5e76\u4e14\u5de5\u4f5c\u7ebf\u7a0b\u5927\u4e8e\u7b49\u4e8e\u7ebf\u7a0b\u6c60\u6700\u5927\u7ebf\u7a0b\u6570maximumPoolSize\u65f6\u5904\u7406\u65b9\u5f0f</li> </ol> <p>corePollSize\u6ee1\u4e86\u6dfb\u52a0\u5230workQueue\u4e2d\uff0c\u6ee1\u4e86\u518dmaximumPoolSize\u4e4b\u5185\u542f\u52a8\u7ebf\u7a0b\u6267\u884c\u4efb\u52a1\uff0c\u518d\u6ee1\u62d2\u7edd\u7b56\u7565handler</p>", "text": ""}, {"location": "android/java/java_safe/#_11", "title": "\u5408\u7406\u914d\u7f6e", "text": "<p>\u4efb\u52a1\u7279\u6027\uff1a</p> <ol> <li>CPU\u5bc6\u96c6\u578b\uff0cmaximumPoolSize\u4e0d\u8981\u8d85\u8fc7\u673a\u5668\u7684cpu\u6838\u5fc3\u6570+1 <pre><code>//\u673a\u5668\u7684cpu\u6838\u5fc3\u6570\u83b7\u53d6\nRuntime.getRuntime().availableProcessors()\n</code></pre></li> <li>IO\u5bc6\u96c6\u578b(\u78c1\u76d8\u3001\u7f51\u7edc)\uff0cmaximumPoolSize\u4e00\u822c\u662f\u673a\u5668\u7684cpu\u6838\u5fc3\u6570*2</li> <li>\u6df7\u5408\u578b</li> </ol>"}, {"location": "android/java/java_thread/", "title": "\u7ebf\u7a0b", "text": ""}, {"location": "android/java/java_thread/#_1", "title": "\u751f\u547d\u5468\u671f", "text": "<p>\u65b0\u5efa\uff0c\u8fd0\u2f8f\uff0c\u963b\u585e\uff0c\u7b49\u5f85\uff0c\u8ba1\u65f6\u7b49\u5f85\u3001\u7ec8\u2f4c</p> <pre><code>class ThreadState implements Runnable {\n\n    public synchronized void waitForASecond() throws InterruptedException {\n        wait(500);\n    }\n    public synchronized void waitForLong() throws InterruptedException {\n        wait();\n    }\n    public synchronized void notifyNow() throws InterruptedException {\n        notify();\n    }\n    @Override\n    public void run() {\n        try {\n            waitForASecond();\n            waitForLong();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\npublic static void main(String[] args) throws InterruptedException {\n        ThreadState state = new ThreadState();\n        Thread thread = new Thread(state);\n        System.out.println(\"\u65b0\u5efa\u7ebf\u7a0b:\"+thread.getState());\n        thread.start();\n        System.out.println(\"\u542f\u52a8\u7ebf\u7a0b:\"+thread.getState());\n        Thread.sleep(100);//\u8fd0\u2f8fwaitForASecond()\u2f45\u6cd5\n        System.out.println(\"\u8ba1\u65f6\u7b49\u5f85:\"+thread.getState());\n        Thread.sleep(1000);//\u8fd0\u2f8fwaitForLong()\u2f45\u6cd5\n        System.out.println(\"\u7b49\u5f85\u7ebf\u7a0b:\"+thread.getState());\n        state.notifyNow();\n        System.out.println(\"\u5524\u9192\u7ebf\u7a0b:\"+thread.getState());\n        Thread.sleep(1000);//\u5f53\u524d\u7ebf\u7a0b\u4f11\u7720,\u65f6\u65b0\u7ebf\u7a0b\u7ed3\u675f\n        System.out.println(\"\u7ec8\u2f4c\u7ebf\u7a0b:\"+thread.getState());\n    }\n\n\u65b0\u5efa\u7ebf\u7a0b:NEW\n\u542f\u52a8\u7ebf\u7a0b:RUNNABLE\n\u8ba1\u65f6\u7b49\u5f85:TIMED_WAITING\n\u7b49\u5f85\u7ebf\u7a0b:WAITING\n\u5524\u9192\u7ebf\u7a0b:BLOCKED\n\u7ec8\u2f4c\u7ebf\u7a0b:TERMINATED\n</code></pre>"}, {"location": "android/java/java_thread/#_2", "title": "\u542f\u52a8\u7ebf\u7a0b\u7684\u65b9\u5f0f", "text": "<p>\u4e24\u79cd\u65b9\u5f0f\uff0cThread\u6e90\u7801\u4e2d\u660e\u786e\u6307\u51fa</p> <p>\u65b9\u5f0f\u4e00\uff1a <pre><code>class PrimeThread(private val minPrime: Long) : Thread() {\n    override fun run() {\n        println(minPrime)\n    }\n}\nPrimeThread(1000L).start()\n</code></pre></p> <p>\u65b9\u5f0f\u4e8c\uff1a <pre><code>class PrimeRun(private val minPrime: Long) : Runnable {\n    override fun run() {\n        println(minPrime)\n    }\n}\nThread(PrimeRun(1000L)).start()\n</code></pre></p> <p>Thread\u548cRunnable\u7684\u533a\u522b\uff1aThread\u662f\u7ebf\u7a0b\u7684\u552f\u4e00\u62bd\u8c61\uff0cRunnable\u53ea\u662f\u4e1a\u52a1\u903b\u8f91\u7684\u62bd\u8c61</p>"}, {"location": "android/java/java_thread/#_3", "title": "\u505c\u6b62\u7ebf\u7a0b", "text": "<p>API\u4e2d\u7684suspend\u3001resume\u3001stop\u4e0d\u5efa\u8bae\u4f7f\u7528(\u5df2\u88ab\u6807\u8bb0\u8fc7\u65f6)\uff0c\u5bb9\u6613\u5f15\u53d1\u6b7b\u9501\uff0c\u539f\u56e0\u662f\u7ebf\u7a0b\u4e0d\u4f1a\u91ca\u653e\u4e2d\u6709\u7684\u8d44\u6e90\u5982\u9501\uff0c\u5e76\u4e14\u4e0d\u4f1a\u7ed9\u4e88\u91ca\u653e\u8d44\u6e90\u7684\u673a\u4f1a</p> <p>\u7ebf\u7a0b\u5de5\u4f5c\u662f\u534f\u4f5c\u5f0f\uff0c\u5373\u53ea\u662f\u901a\u77e5</p> <p>isInterrupted\uff1a\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u88ab\u4e2d\u65ad</p> <p>interrupt()\uff1a\u5b9e\u4f8b\u65b9\u6cd5\u7528\u6765\u6253\u65ad\u7ebf\u7a0b\uff0c\u53ea\u662f\u53d1\u51fa\u4e2d\u65ad\u8bf7\u6c42\uff0c\u5e76\u4e0d\u4f1a\u7acb\u5373\u505c\u6b62\u7ebf\u7a0b</p> <p>interrupted()\uff1astatic\u65b9\u6cd5\uff0c\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u88ab\u4e2d\u65ad</p> <p><pre><code>fun main() {\n    val thread = PrimeThread()\n    thread.start()\n    Thread.sleep(20)\n    thread.interrupt()\n}\n\nclass PrimeThread : Thread() {\n    override fun run() {\n        val threadName = currentThread().name\n        println(\"$threadName, status: $isInterrupted\")\n        while (!isInterrupted) {\n    //while (!interrupted()) {\n            println(\"isInterrupted: $isInterrupted\")//false\n        }\n        println(\"end isInterrupted: $isInterrupted\")//true\n    }\n}\n</code></pre> \u8c03\u7528interrupted()\u533a\u522b\u662f\u4f1a\u5c06isInterrupted\u8bbe\u7f6e\u6210false</p>"}, {"location": "android/java/java_thread/#interruptedisinterrupted", "title": "interrupted\u548cisInterrupted\u2f45\u6cd5\u7684\u533a\u522b", "text": "<p><pre><code>public static boolean interrupted() {\n    Thread t = currentThread();\n    boolean interrupted = t.interrupted;\n    if (interrupted) {\n        t.interrupted = false;\n        clearInterruptEvent();\n    }\n\n    return interrupted;\n}\npublic boolean isInterrupted() {\n    return this.interrupted;\n}\n</code></pre> sleep\u3001join\u65b9\u6cd5\u4f1a\u629b\u51faInterruptedException\uff0c\u629b\u51fa\u540e\u4f1a\u5c06isInterrupted\u8bbe\u7f6e\u6210true\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u6355\u83b7\u5f02\u5e38\u6765\u91cd\u65b0\u4e2d\u65ad</p>"}, {"location": "android/java/java_thread/#startrun", "title": "start\u548crun\u65b9\u6cd5", "text": "<p>run\uff1a\u666e\u901a\u65b9\u6cd5</p> <p>start\uff1a\u6b63\u771f\u610f\u4e49\u7684\u542f\u52a8\u7ebf\u7a0b\u7684\u65b9\u6cd5</p> <pre><code>fun main() {\n    val thread = PrimeThread()\n    thread.name = \"PrimeThread\"\n    thread.run()//thread: main\n    thread.start()//thread: PrimeThread\n}\n\nclass PrimeThread : Thread() {\n    override fun run() {\n        println(\"thread: ${currentThread().name}\")\n    }\n}\n</code></pre>"}, {"location": "android/java/java_thread/#join", "title": "join\u65b9\u6cd5", "text": "<p>\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u987a\u5e8f\u6267\u884c <pre><code>fun main() {\n    val run1 = PrimeRun1()\n    val th1 = Thread(run1)\n    val run = PrimeRun(th1)\n    val th = Thread(run)\n    th.start()\n    th1.start()\n}\n\nclass PrimeRun(private var thread: Thread?) : Runnable  {\n    override fun run() {\n        thread?.join()\n        Thread.sleep(2)\n        println(\"run\")\n    }\n}\nclass PrimeRun1: Runnable  {\n    override fun run() {\n        Thread.sleep(2)\n        println(\"run1\")\n    }\n}\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\nrun1\nrun\n</code></pre> \u5982\u679c\u6ca1\u6709\u6267\u884cjoin\u65b9\u6cd5\uff0c\u6309\u7167\u4ee3\u7801\u987a\u5e8f\u662fth\u5148\u6267\u884c\uff0cth1\u540e\u6267\u884c</p>"}, {"location": "android/java/java_thread/#_4", "title": "\u7ebf\u7a0b\u4f18\u5148\u7ea7", "text": "<p>priority\uff1a\u4e0d\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u4f18\u5148\u6267\u884c\uff0c\u4e86\u89e3\u5373\u53ef</p>"}, {"location": "android/java/java_thread/#_5", "title": "\u5b88\u62a4\u7ebf\u7a0b", "text": "<p>java\u5929\u7136\u662f\u591a\u7ebf\u7a0b\uff0c\u9664\u4e86main\u90fd\u662f\u5b88\u62a4\u7ebf\u7a0b <pre><code>val threadMXBean = ManagementFactory.getThreadMXBean()\nthreadMXBean.dumpAllThreads(false, false).forEach {\n    println(\"[${it.threadId}] ${it.threadName} ${it.threadState}\")\n}\n\n[1] main RUNNABLE\n[2] Reference Handler RUNNABLE\n[3] Finalizer WAITING\n[4] Signal Dispatcher RUNNABLE\n[5] Attach Listener RUNNABLE\n[21] Common-Cleaner TIMED_WAITING\n[22] Monitor Ctrl-Break RUNNABLE\n[23] Notification Thread RUNNABLE\n</code></pre> \u9ed8\u8ba4\u7528\u6237\u7ebf\u7a0b\u90fd\u662f\u975e\u5b88\u62a4\u7ebf\u7a0b\uff0c\u4e3b\u7ebf\u7a0b\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u7528\u6237\u7ebf\u7a0b\u4f9d\u7136\u4f1a\u6267\u884c <pre><code>fun main() {\n    val th = Thread(PrimeRun())\n    th.start()\n    Thread.sleep(2)\n    println(\"main end\")\n}\n\nclass PrimeRun : Runnable {\n    override fun run() {\n        var i = 5\n        while (i &gt; 0) {\n            println(\"run\")\n            Thread.sleep(2)\n            i--\n        }\n    }\n}\n\u8f93\u51fa\u7ed3\u679c\uff1a\nrun\nmain end\nrun\nrun\nrun\nrun\n</code></pre> \u7528\u6237\u7ebf\u7a0b\u8f6c\u6210\u5b88\u62a4\u7ebf\u7a0b <pre><code>th.isDaemon = true\n\u8f93\u51fa\u7ed3\u679c\uff1a\nrun\nrun\nmain end\n</code></pre> \u6ce8\uff1afinally\u5728\u5b88\u62a4\u8fdb\u7a0b\u4e2d\u4e0d\u4e00\u5b9a\u4f1a\u6267\u884c</p>"}, {"location": "android/java/java_thread/#futuretask", "title": "FutureTask", "text": "<p>\u652f\u6301Callable\u3001Runnable\uff0c\u7531\u4e8eThread\u53ea\u652f\u6301Runnable\u4e0d\u80fd\u76f4\u63a5\u4f20Callable\uff0cFutureTask\u5b9e\u73b0\u4e86Runnable\u63a5\u53e3 <pre><code>fun main() {\n    val futureTask = FutureTask(UseCallable())\n    Thread(futureTask).start()\n    println(futureTask.get())\n}\n\nclass UseCallable : Callable&lt;String&gt; {\n    override fun call(): String {\n        return \"hello\"\n    }\n}\n</code></pre></p>"}, {"location": "android/java/java_thread/#callable-vs-runnable", "title": "Callable vs Runnable", "text": "<p>\u524d\u8005\u6709\u8fd4\u56de\u503c\uff0c\u540e\u8005\u65e0\u8fd4\u56de\u503c</p>"}, {"location": "android/jetpack/viewmodel/", "title": "viewmodel", "text": "<p>\u7528\u6765\u89e3\u51b3\u6a2a\u7ad6\u5c4f\u5207\u6362\u6216\u8005\u5176\u4ed6\u5bfc\u81f4\u754c\u9762\u91cd\u65b0\u521b\u5efa\u65f6\u6570\u636e\u7684\u4fdd\u5b58\u4e0e\u6062\u590d</p>"}, {"location": "android/jetpack/viewmodel/#activity", "title": "Activity", "text": "<p><pre><code>private val viewModel by lazy { ViewModelProvider(this)[BlankViewModel::class.java] }\n\nclass BlankViewModel : ViewModel() {\n    private var data: String? = null\n\n    fun getData(): String? {\n        return data\n    }\n\n    fun setData(data: String?) {\n        this.data = data\n    }\n}\n</code></pre> onCreate\u4f7f\u7528 <pre><code>if (viewModel.getData() != null) {\n    binding.showContent.text = viewModel.getData()\n} else {\n    viewModel.setData(\"123456\")\n    binding.showContent.text = viewModel.getData()\n}\n</code></pre></p>"}, {"location": "android/jetpack/viewmodel/#fragment", "title": "\u521b\u5efafragment", "text": "<pre><code>private val blankFragment by lazy { BlankFragment.newInstance() }\n\nval bt = supportFragmentManager.beginTransaction()\nval fragment = supportFragmentManager.findFragmentByTag(\"blankFragment\")\nif (fragment == null) {\n    bt.add(R.id.fragmentContainer, blankFragment, \"blankFragment\")\n        .show(blankFragment)\n        .commitNowAllowingStateLoss()\n} else {\n    supportFragmentManager.beginTransaction()\n        .show(blankFragment)\n        .commitNowAllowingStateLoss()\n}\n</code></pre>"}, {"location": "android/jetpack/viewmodel/#fragment_1", "title": "Fragment", "text": "<p>\u5355\u72ec\u4f7f\u7528 <pre><code>private val viewModel by lazy { ViewModelProvider(this)[BlankViewModel::class.java] }\n</code></pre> \u4e0eActivity\u5171\u7528 <pre><code>private val viewModel by lazy { ViewModelProvider(requireActivity())[BlankViewModel::class.java] }\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_basic/", "title": "\u5165\u95e8", "text": ""}, {"location": "android/kotlin/kotlin_basic/#_1", "title": "\u7b80\u4ecb", "text": "<p>\u5b98\u7f51</p> <p>\u5224\u65ad\u9759\u6001\u8bed\u8a00\u3001\u52a8\u6001\u8bed\u8a00\uff1f</p> <p>\u9759\u6001\u8bed\u8a00\u662f\u7f16\u8bd1\u671f\u80fd\u6821\u9a8c\u6570\u636e\u7c7b\u578b\uff0c\u5982java <pre><code>String a = \"xx\";\na = 1;//\u62a5\u9519\n</code></pre></p> <p>\u5982kotlin <pre><code>var a = \"xxx\"\na = 1//\u62a5\u9519\n</code></pre></p> <p>\u57fa\u672c\u6570\u636e\u7c7b\u578b</p> <p>Byte,Short,Int,Long,Float,Double,Char,String,Boolean</p> <p>kotlin\u53ea\u6709\u5f15\u7528\u7c7b\u578b\uff0c\u5728\u7f16\u8bd1\u540e\u4f1a\u8f6c\u5316\u6210java\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b</p> <p>val\u8868\u793a\u53ea\u8bfb\u53d8\u91cf</p> <p>\u5e38\u91cfconst\u4fee\u9970\uff0c\u4e0d\u80fd\u5199\u5728\u51fd\u6570\u91cc\u9762\uff0c\u56e0\u4e3a\u5e38\u91cf\u662f\u7f16\u8bd1\u65f6\u5c31\u9700\u8981\u786e\u5b9a\uff0c\u800c\u51fd\u6570\u662f\u8fd0\u884c\u65f6\u624d\u88ab\u8c03\u7528 <pre><code>const val msg = \"msg\"\nfun main() {\n    val info = \"info\"\n}\n</code></pre> \u8868\u8fbe\u5f0f\u662f\u6709\u8fd4\u56de\u503c\u7684</p> <p>java\u4e2d\u7684if\u662f\u8bed\u53e5\u800ckotlin\u4e2d\u7684\u662f\u8868\u8fbe\u5f0f</p> <p>range\u8868\u8fbe\u5f0f</p> <p>in 12..89</p> <p>when\u8868\u8fbe\u5f0f\u76f8\u5f53\u4e8ejava\u4e2d\u7684switch</p> <p>String\u6a21\u7248\u4f7f\u7528${}\u65b9\u5f0f\uff0c\u5176\u4e2d{}\u90e8\u5206\u573a\u666f\u53ef\u7701\u7565</p>"}, {"location": "android/kotlin/kotlin_basic/#fieldproperty", "title": "field\u548cproperty", "text": "<p>Java\u4e2d\u53ef\u4ee5\u5355\u72ec\u7533\u660e\u5b57\u6bb5\uff0c\u4f46kotlin\u4e2d\u4e0d\u884c\uff0c\u53ea\u80fd\u662f\u5c5e\u6027</p> <p>\u539f\u56e0\u662fkotlin\u5fc5\u987b\u4f7f\u7528var\u6216val\u7533\u660e\uff0c\u4e14\u4f1a\u81ea\u52a8\u751f\u6210get/set\u65b9\u6cd5\uff0c\u800c\u5c5e\u6027=\u5b57\u6bb5+get/set</p> <p>get\u65b9\u6cd5\u4e0d\u80fd\u88abprivate\u4fee\u9970</p>"}, {"location": "android/kotlin/kotlin_basic/#base64", "title": "base64", "text": "<pre><code>fun encodeBase64(content: String) : String{\n    return String(Base64.getEncoder().encode(content.toByteArray()))\n}\n\nfun decodeBase64(content: String) : String{\n    return String(Base64.getDecoder().decode(content.toByteArray()))\n}\n</code></pre>"}, {"location": "android/kotlin/kotlin_class/", "title": "\u7c7b", "text": ""}, {"location": "android/kotlin/kotlin_class/#_1", "title": "\u521d\u8bc6\u7c7b", "text": "<p>\u58f0\u660e\u5c5e\u6027\u9ed8\u8ba4\u4f1a\u6709get\uff0cset\u65b9\u6cd5\uff0c\u53ef\u8fdb\u884c\u4fee\u6539\u5982\u4e0b <pre><code>class MyClass {\n    var name = \"AFREE\"\n        get() = field.lowercase()\n        set(value) {\n            field = \"[$value]\"\n        }\n}\nMyClass().name//\u83b7\u53d6\nMyClass().name = \"xxx\"//\u8d4b\u503c\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_class/#_2", "title": "\u4e3b\u6784\u9020\u51fd\u6570", "text": "<p><pre><code>class MyClass(_pwd: String) {//\u53c2\u6570\u662f\u4e34\u65f6\u7c7b\u578b\n    var pwd: String? = _pwd\n    fun getAge(): String {\n        return pwd?.run {\n            ifBlank {\n                \"is blank\"\n            }\n        } ?: \"is null\"\n    }\n}\n</code></pre> \u4ee5\u4e0apwd\u53c2\u6570\u662f\u7c7bjava\u5199\u6cd5\uff0ckt\u4e00\u822c\u4ee5\u4e0b\u5199\u6cd5 <pre><code>class MyClass(var pwd: String?) {\n}\n</code></pre> \u5982\u679c\u662fvar\u5219\u81ea\u52a8\u751f\u6210get\u3001set\u65b9\u6cd5\uff0c\u5982\u679c\u662fval\u5219\u53ea\u6709get\u65b9\u6cd5</p>"}, {"location": "android/kotlin/kotlin_class/#init", "title": "init\u4ee3\u7801\u5757", "text": "<p>init\u662f\u4e3b\u6784\u9020\u8c03\u7528\u65f6\u89e6\u53d1\uff0c\u800c\u6b21\u6784\u9020\u5fc5\u987b\u8c03\u7528\u4e3b\u6784\u9020\u51fd\u6570</p>"}, {"location": "android/kotlin/kotlin_class/#_3", "title": "\u6b21\u6784\u9020\u51fd\u6570", "text": "<p><pre><code>class MyClass(pwd: String) {\n    init {\n        println(\"\u4e3b\u6784\u9020\u88ab\u8c03\u7528\uff0c\u5bc6\u7801\uff1a$pwd\")\n    }\n    constructor() : this(\"mini\", \"123\"){\n        println(\"\u6211\u662f\u6b21\u6784\u90201\")\n    }\n    constructor(userName: String, pwd: String) : this(userName){\n        println(\"\u6211\u662f\u6b21\u6784\u90202\")\n    }\n}\nfun main() {\n    MyClass()\n}\n</code></pre> constructor\u90fd\u662f\u6b21\u6784\u9020</p> <p>\u6ce8\uff1ainit\u4e2d\u80fd\u62ff\u5230\u4e3b\u6784\u9020\u4e2d\u7684\u53c2\u6570\uff0c\u65e0\u8bba\u662f\u5426\u662f\u4e34\u65f6\u5c5e\u6027</p> <p>\u6267\u884c\u987a\u5e8f</p> <p>\u7c7b\u6210\u5458\u548cinit\u5757\u540c\u65f6\u751f\u6210\uff0c\u53d6\u51b3\u4e8e\u7f16\u5199\u987a\u5e8f</p>"}, {"location": "android/kotlin/kotlin_class/#_4", "title": "\u7ee7\u627f", "text": "<p>\u7c7b\u548c\u51fd\u6570\u7f16\u8bd1\u540e\u9ed8\u8ba4\u662ffinal\u4fee\u9970\u65e0\u6cd5\u7ee7\u627f\uff0c\u4f7f\u7528open\u5173\u952e\u5b57\u5373\u53ef\u79fb\u9664final <pre><code>open class Person{\n    open fun showName() {\n        println(\"\u6211\u662fPerson\")\n    }\n}\n\nclass Student : Person() {\n    override fun showName() {\n        println(\"\u6211\u662fStudent\")\n    }\n    fun study() {\n        println(\"\u6211\u7231\u5b66\u4e60\")\n    }\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_class/#is", "title": "is", "text": "<p>\u5224\u65ad\u7c7b\u578b\u76f8\u5f53\u4e8ejava\u7684instanceOf</p>"}, {"location": "android/kotlin/kotlin_class/#as", "title": "as", "text": "<p>\u8f6c\u5316\u7c7b\u578b\uff0c\u5f3a\u8f6c <pre><code>    val p: Person = Student()\n//    (p as Student).study()\n    p.study()\n</code></pre> \u5982\u679c\u6ca1\u6709\u7b2c\u4e8c\u884c\u4ee3\u7801\uff0c\u7b2c\u4e09\u884c\u4ee3\u7801\u4f1a\u62a5\u9519\uff0c\u6216\u8005\u53ef\u4ee5 <pre><code>if (p is Student) {\n    p.study()\n}\n</code></pre> kt\u7684\u6839\u7236\u7c7bAny\u76f8\u5f53\u4e8ejava\u7684Object</p> <p>Any\u7c7b\u53ea\u63d0\u4f9b\u6807\u51c6\uff0c\u770b\u4e0d\u5230\u6e90\u7801\u5177\u4f53\u5b9e\u73b0\uff0c\u7531\u5404\u4e2a\u5e73\u53f0\u5904\u7406</p> <p>\u9664\u4e86\u53ef\u4ee5\u8f6c\u5316\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u5bfc\u5165\u51fd\u6570\u8fdb\u884c\u91cd\u547d\u540d\uff0c\u5982 <pre><code>import com.hfc.lib.util.abcdfjdksalfjdlsajflglsdjfsak as method\n\nfun main() {\n//    abcdfjdksalfjdlsajflglsdjfsak()\n    method()\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_class/#object", "title": "object\u5173\u952e\u5b57", "text": ""}, {"location": "android/kotlin/kotlin_class/#_5", "title": "\u5355\u4f8b", "text": "<p>\u8868\u793a\u7684\u7c7b\u5c06\u53d8\u6210\u5355\u4f8b\u5bf9\u8c61 <pre><code>object Student : Person() {\n}\nStudent.study()\n</code></pre> \u6ce8\uff1a\u6784\u9020\u51fd\u6570\u5c06\u4f1a\u88ab\u79c1\u6709\u5316</p>"}, {"location": "android/kotlin/kotlin_class/#object-x", "title": "\u533f\u540d\u5bf9\u8c61(object : X())", "text": "<p><pre><code>val p = object : Person() {\n    override fun showName() = println()\n}\np.showName()\n</code></pre> \u6ce8\uff1akt\u91cc\u9762\u53ea\u80fd\u8fd9\u6837\u5199\uff0c\u5982\u679c\u662fjava\u63a5\u53e3\u53ef\u4ee5\u7701\u7565object\uff0c\u5982java\u4e2d\u7684Runnable\u63a5\u53e3 <pre><code>Runnable { \n\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_class/#companion-object", "title": "\u4f34\u751f\u5bf9\u8c61(companion object)", "text": "<p>\u53ea\u4f1a\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u53ef\u4ee5\u5229\u7528\u4ee3\u66ffjava\u4e2d\u7684\u9759\u6001\u5e38\u91cf\u3001\u9759\u6001\u65b9\u6cd5 <pre><code>companion object my {\n    const val NAME = \"\" // \u5e38\u91cf\n    var AGE = 2 // \u9759\u6001\u53d8\u91cf\n    fun hello(){} // \u9759\u6001\u65b9\u6cd5\n}\n</code></pre> \u7f16\u8bd1\u540e\u4f1a\u751f\u6210\u4e00\u4e2a\u9759\u6001\u5185\u90e8\u7c7b\uff0cmy\u8868\u793a\u81ea\u5b9a\u4e49\u540d\u5b57(\u4e00\u822c\u4e0d\u5199)</p>"}, {"location": "android/kotlin/kotlin_class/#_6", "title": "\u5d4c\u5957\u7c7b(\u9759\u6001\u5185\u90e8\u7c7b)", "text": "<p><pre><code>fun main() {\n    A.B().b()\n}\n\nclass A {\n    class B {\n        fun b() = println(\"b\")\n    }\n}\n</code></pre> \u6ce8\uff1aB\u65e0\u6cd5\u8bbf\u95eeA\u4e2d\u7684\u5185\u5bb9</p> <p>\u539f\u56e0\uff1a\u7f16\u8bd1\u540e\u4f1a\u751f\u6210\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u6240\u4ee5\u65e0\u6cd5\u8bbf\u95ee\u975e\u9759\u6001\u5185\u5bb9</p>"}, {"location": "android/kotlin/kotlin_class/#inner-class", "title": "\u5185\u90e8\u7c7b(inner class)", "text": "<p><pre><code>fun main() {\n    A().B().b()\n}\n\nclass A {\n    val a = \"\"\n    inner class B {\n        fun b() = println(\"$a\")\n    }\n}\n</code></pre> \u7f16\u8bd1\u540e\u5c31\u662fjava\u7684\u5185\u90e8\u7c7b</p>"}, {"location": "android/kotlin/kotlin_class/#data-class", "title": "\u6570\u636e\u7c7b(data class)", "text": "<p>\u548c\u666e\u901a\u7c7b\u533a\u522b\uff1a</p> <p>\u666e\u901a\u7c7b\u7f16\u8bd1\u540e\u53ea\u4f1a\u751f\u6210get set\u65b9\u6cd5\u548c\u6784\u9020\u65b9\u6cd5</p> <p>\u6570\u636e\u7c7b\u989d\u5916\u4f1a\u751f\u6210equals\uff0chasCode\uff0ccopy\uff0ccomponent1(\u89e3\u6784)\uff0ctoString</p> <p>\u6ce8\uff1a\u6570\u636e\u7c7b\u751f\u6210\u65f6\u53ea\u751f\u6210\u4e3b\u6784\u9020\u7684\u5c5e\u6027\uff0c\u5ffd\u7565\u5176\u4ed6\u5c5e\u6027</p> <p>\u4f7f\u7528\u573a\u666f\uff1a 1.\u670d\u52a1\u5668\u8fd4\u56de\u54cd\u5e94\u7684bean\uff0c\u5fc5\u987b\u8981\u6709\u4e3b\u6784\u9020\u4e14\u53c2\u6570\u81f3\u5c11\u4e00\u4e2a\uff0c\u5fc5\u987b\u4f7f\u7528var\u6216val\u4fee\u9970\u53c2\u6570\uff0c\u4e0d\u80fd\u4f7f\u7528\u5176\u4ed6\u4fee\u9970\u7b26\u4fee\u9970\u7c7b\uff0c\u5982open\uff0cinner\u7b49</p> <p>2.\u9700\u8981\u7528\u5230toString\uff0ccopy\u7b49\u573a\u666f</p> <p>\u6ce8\uff1a\u9ed8\u8ba4\u751f\u6210\u7684hashcode\u548ctoStirng\u90fd\u662f\u6309\u7167\u6784\u9020\u51fd\u6570\u91cc\u7684\u53c2\u6570 <pre><code>data class MyClass(var id: String?) {\n    var name: String?= null\n}\n</code></pre> \u4ee5\u4e0a\u53ea\u4f1a\u6839\u636eid\u751f\u6210hashCode\u548ctoString</p>"}, {"location": "android/kotlin/kotlin_class/#enum-class", "title": "\u679a\u4e3e(enum class)", "text": "<p>\u4e5f\u662fclass <pre><code>fun main() {\n    println(Week.Monday) // Monday\n    println(Week.Friday is Week) //true\n}\n\nenum class Week{\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday\n}\n</code></pre> kt\u4e2d\u679a\u4e3e\u4e00\u822c\u7528\u6cd5 <pre><code>fun main() {\n    Clock.DATA_OLD.showClock()\n    Clock.DATA_NOW.showClock()\n    Clock.DATA_OLD.updateClock(SimpleClock(\"2000\", \"16:25\"))\n    Clock.DATA_NOW.updateClock(SimpleClock(\"2050\", \"17:58\"))\n}\n\nenum class Clock(var clock: SimpleClock) {\n    DATA_OLD(SimpleClock(\"1990\", \"22:15\")),\n    DATA_NOW(SimpleClock(\"2022\", \"12:28\"));\n\n    fun updateClock(updateClock: SimpleClock) {\n        this.clock = updateClock\n        showClock()\n    }\n\n    fun showClock() {\n        println(this.clock)\n    }\n}\n\ndata class SimpleClock(var data: String, var time: String)\n</code></pre> \u5176\u4e2d\u5982DATA_OLD\u5c31\u662f\u679a\u4e3e\u672c\u8eab\uff0c\u8c03\u7528\u4e3b\u6784\u9020\u8d4b\u503c</p> <p>\u679a\u4e3e\u548cwhen\u7ed3\u5408\u662f\u53ef\u4ee5\u4e0d\u5199else\uff0c\u4f46\u9700\u8981\u7a77\u4e3e\u6240\u6709\u679a\u4e3e\u503c(kt1.6\u4ee5\u540e\u4f1a\u7f16\u8bd1\u4e0d\u901a\u8fc7) <pre><code>class WeekTest {\n    fun switch(week: Week) =\n        when (week) {\n            Week.Monday -&gt; \"Monday\"\n            Week.Tuesday -&gt; \"Tuesday\"\n            Week.Wednesday -&gt; \"Wednesday\"\n            Week.Thursday -&gt; \"Thursday\"\n            Week.Friday -&gt; \"Friday\"\n            Week.Saturday -&gt; \"Saturday\"\n            Week.Sunday -&gt; \"Sunday\"\n        }\n}\nprintln(WeekTest().switch(Week.Monday))\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_class/#sealed-class", "title": "\u5bc6\u5c01\u7c7b(sealed class)", "text": "<p>\u5bc6\u5c01\u7c7b\u4f7f\u7528sealed\u4fee\u9970\uff0c\u4e3b\u8981\u7528\u6765\u89e3\u51b3\u4f7f\u7528when\u65f6\u4e0d\u5199else\uff0c\u5728when\u65f6\u53ef\u4f7f\u7528is\u5224\u65ad\uff0c\u5b9e\u73b0\u4e0a\u8ff0\u903b\u8f91 <pre><code>fun main() {\n    println(WeekTest().switch(Week.Monday))\n    println(WeekTest().switch(Week.Sunday(\"10:55\")))\n}\n\nclass WeekTest {\n    fun switch(week: Week) =\n        when (week) {\n            is Week.Monday -&gt; \"Monday\"\n            is Week.Tuesday -&gt; \"Tuesday\"\n            is Week.Wednesday -&gt; \"Wednesday\"\n            is Week.Thursday -&gt; \"Thursday\"\n            is Week.Friday -&gt; \"Friday\"\n            is Week.Saturday -&gt; \"Saturday\"\n            is Week.Sunday -&gt; \"Sunday: ${week.time}\"\n        }\n}\n\nsealed class Week {\n    object Monday: Week()//\u5355\u4f8b\uff0c\u5fc5\u987b\u7ee7\u627f\u672c\u7c7b\n    object Tuesday: Week()\n    object Wednesday: Week()\n    object Thursday: Week()\n    object Friday: Week()\n    object Saturday: Week()\n    class Sunday(val time: String): Week()//\u53ef\u4ee5\u975e\u5355\u4f8b\uff0c\u56e0\u4e3a\u6709\u53c2\u6570\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_class/#_7", "title": "\u62f7\u8d1d", "text": ""}, {"location": "android/kotlin/kotlin_class/#_8", "title": "\u6d45\u62f7\u8d1d", "text": "<p>\u5373\u4e24\u4e2a\u5bf9\u8c61\u6307\u5411\u540c\u4e00\u5730\u5740\uff0c\u5f53\u5176\u4e2d\u67d0\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u5185\u5bb9\u4fee\u6539\u540e\uff0c\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e5f\u540c\u6b65\u53d8\u5316\uff0c\u4e3e\u4f8b\uff1a</p> <p>1.java\u4e2dclone\u65b9\u6cd5\u548ckotlin\u4e2ddata\u6570\u636e\u7c7b\u7684copy\u90fd\u662f\u6d45\u62f7\u8d1d</p> <p>2.list\u6216\u5176\u4ed6\u96c6\u5408add\uff0caddAll\u6216\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u90fd\u662f\u6d45\u62f7\u8d1d</p> <p>3.System.arraycopy()\u4e5f\u662f\u6d45\u62f7\u8d1d</p>"}, {"location": "android/kotlin/kotlin_class/#_9", "title": "\u6df1\u62f7\u8d1d", "text": "<p>\u4e24\u4e2a\u5bf9\u8c61\u5730\u5740\u4e0d\u540c\u4e14\u6570\u636e\u53d8\u5316\u4e92\u4e0d\u5f71\u54cd\uff0c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548cString\u4e0d\u5728\u6df1\u62f7\u8d1d\u8003\u8651</p> <p>\u5b9e\u73b0\u601d\u8def\u5927\u81f4\u6709\u51e0\u79cd</p> <p>1.\u5982\u679c\u662f\u666e\u901aclass\uff0c\u5982\u679c\u662fjava\u91cd\u5199clone\uff0c\u5982\u679c\u662fkotlin\u9700\u8981\u7ee7\u627fCloneable\u518d\u91cd\u5199clone\uff0c\u5bf9\u5f15\u7528\u5c5e\u6027\u8fdb\u884c\u521b\u5efa\u5bf9\u8c61\u8d4b\u503c\uff0ckt\u4e3a\u4f8b <pre><code>class C(var d: D): Cloneable {\n    override fun clone(): Any {\n        return C(D(d.age))\n    }\n}\n\nclass D(var age: Int)\n</code></pre></p> <p>2.kt\u76f4\u63a5\u4f7f\u7528data class <pre><code>data class A(var name: String, var b: B)\ndata class B(var age: Int\uff09\n\nval a = A(\"3\", B(4))\na.copy(name = \"4\", b = B(5))\n</code></pre></p> <p>3.\u4f7f\u7528\u81ea\u5b9a\u4e49interface <pre><code>interface DeepCopyable&lt;out R&gt; {\n    fun deepCopyFun(): R\n}\ndata class A(var name: String, var b: B) : DeepCopyable&lt;B&gt; {\n    override fun deepCopyFun(): B = B(b.age)\n}\ndata class B(var age: Int)\n</code></pre></p> <p>4.\u5982\u679c\u662f\u5e8f\u5217\u5316\u7c7b\uff0c\u53ef\u4ee5\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u8fdb\u884c\u62f7\u8d1d <pre><code>fun &lt;T : Any&gt; T.deepCopy(): T {\n    val cls = this::class\n    if (cls is Serializable || cls is Parcelable) {\n        val byteArrayOutputStream = ByteArrayOutputStream()\n        val outputStream = ObjectOutputStream(byteArrayOutputStream)\n        outputStream.writeObject(this)\n\n        outputStream.close()\n        byteArrayOutputStream.close()\n\n        val byteArrayInputStream = ByteArrayInputStream(byteArrayOutputStream.toByteArray())\n        val inputStream = ObjectInputStream(byteArrayInputStream)\n        val copiedList = inputStream.readObject()\n\n        inputStream.close()\n        byteArrayInputStream.close()\n        return copiedList as T\n    }\n    return this\n}\n</code></pre></p> <p>5.kt\u5bf9\u4e8edata\u6216\u8005\u81ea\u5b9a\u4e49\u63a5\u53e3\u7684class\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cd\u5c04+\u62d3\u5c55\u51fd\u6570</p> <p>\u4f9d\u8d56kotlin\u53cd\u5c04api <pre><code>implementation \"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\"\n</code></pre> <pre><code>fun &lt;T : Any&gt; T.deepCopy(): T {\n    val cls = this::class\n    if (cls.isData) {\n        val dataClassCopyMethod = cls.java.declaredMethods.first { copyMethod -&gt;\n            copyMethod.name == \"copy\"\n        }\n        val params = cls.primaryConstructor?.parameters?.map { parameter -&gt;\n            val value = (this::class as KClass&lt;T&gt;).memberProperties.first {\n                it.name == parameter.name\n            }.get(this)\n\n            if (value is DeepCopyable&lt;*&gt;) {\n                value.deepCopyFun()\n            } else if (value != null &amp;&amp; value::class.isData) {\n                value.deepCopy()\n            } else {\n                value\n            }\n        }?.toTypedArray()\n        return if (params == null) {\n            dataClassCopyMethod.invoke(this)\n        } else {\n            dataClassCopyMethod.invoke(this, *params)\n        } as T\n    }\n    return this\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_code/", "title": "\u5b9e\u6218\u5e94\u7528", "text": ""}, {"location": "android/kotlin/kotlin_code/#android", "title": "Android\u5e94\u7528\u6848\u4f8b", "text": ""}, {"location": "android/kotlin/kotlin_code/#lateinit", "title": "lateinit\u5e94\u7528", "text": "<pre><code>class MainActivity2 : AppCompatActivity() {\n    private lateinit var fragment: Fragment\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        if (savedInstanceState == null) {\n            supportFragmentManager.findFragmentById(R.id.xxx)?.let { \n                fragment = it\n            }\n        }\n        if (!::fragment.isInitialized) {\n            fragment = MyFragment()\n        }\n        setContentView(R.layout.xxx)\n        showFragment(supportFragmentManager, fragment)\n    }\n}\n</code></pre>"}, {"location": "android/kotlin/kotlin_code/#log", "title": "Log\u5c01\u88c5", "text": "<pre><code>const val TAG = \"XXX\"\nconst val TAG_ON_OFF = \"XXX_\"//\u6709\u5f00\u5173\u7684tag\n\nfun log(flag: String, msg: String, level: Int = Log.DEBUG, tag: String = TAG) {\n    when (level) {\n        Log.INFO -&gt; Log.i(tag, \"$flag--&gt;$msg\")\n        Log.VERBOSE -&gt; Log.v(tag, \"$flag--&gt;$msg\")\n        Log.DEBUG -&gt; Log.d(tag, \"$flag--&gt;$msg\")\n        Log.WARN -&gt; Log.d(tag, \"$flag--&gt;$msg\")\n        Log.ERROR -&gt; Log.e(tag, \"$flag--&gt;$msg\")\n    }\n}\n\n/**\n * \u4f7f\u7528\u547d\u4ee4\u5f00\u542f\u65e5\u5fd7\uff0cadb shell setprop log.tag.PadController_ level(V,D,I,W,E)\n * \u5982\u679clevel\u662fINFO\u7ea7\u522b\uff0c\u5219\u547d\u4ee4\u5904\u9700\u8981\u5927\u4e8e\u7b49\u4e8eINFO\u7ea7\u522b\u5373(I/W/E)\n */\nfun logByOnOff(flag: String, msg: String, level: Int = Log.INFO) {\n    if (Log.isLoggable(TAG_ON_OFF, level)) {\n        log(flag, msg, level, TAG_ON_OFF)\n    }\n}\n</code></pre>"}, {"location": "android/kotlin/kotlin_code/#_1", "title": "\u5b9a\u65f6\u76f8\u5173", "text": ""}, {"location": "android/kotlin/kotlin_collection/", "title": "\u96c6\u5408", "text": ""}, {"location": "android/kotlin/kotlin_collection/#list", "title": "list\u96c6\u5408", "text": "<p>listOf\uff1a\u751f\u6210\u4e0d\u53ef\u53d8\u96c6\u5408 <pre><code>val list = listOf(\"a\", \"b\", \"c\")\n//println(list.get(3))//\u62a5\u4e0b\u6807\u8d8a\u754c\n//println(list[3]))//\u62a5\u4e0b\u6807\u8d8a\u754c\nprintln(list.getOrElse(3) { \"Nav\" })\nprintln(list.getOrNull(3) ?: \"Nav\")\n</code></pre> \u6ce8\uff1a[]\u662f\u8fd0\u7b97\u7b26\u91cd\u8f7d</p> <p>getOrElse\uff1a\u5982\u679c\u4e0b\u6807\u8d8a\u754c\u8fd4\u56delambda\u91cc\u81ea\u5b9a\u4e49\u5185\u5bb9\u80fd\u591f</p> <p>getOrNull\uff1a\u5982\u679c\u4e0b\u6807\u8d8a\u754c\u8fd4\u56denull\uff0c\u53ef\u7ed3\u5408\u7a7a\u5408\u5e76\u4f7f\u7528</p> <p>mutableListOf\uff1a\u751f\u6210\u53ef\u53d8\u96c6\u5408 <pre><code>val mutableList = mutableListOf(\"a\", \"b\", \"c\")\nmutableList.add(\"d\")\nmutableList.remove(\"b\")\nprintln(mutableList)\n</code></pre> \u76f8\u4e92\u8f6c\u5316 <pre><code>val mutableChangeToList: List&lt;String&gt; = mutableList.toList()\nval listChangeMutable: List&lt;String&gt; = list.toMutableList()\n</code></pre> \u6b64\u5904toList()\u548ctoMutableList()\u53ef\u7701\u7565</p> <p>\u64cd\u4f5c\u7b26\u91cd\u8f7d\u8fd0\u7528 <pre><code>val list = MutableList(5) { \"$it A\" }\nlist.add(1, \"a\")\nlist += \"c\"\nlist -= \"d\"\nlist.removeIf { it.contains(\"A\") }\nprintln(list)\n</code></pre> MutableList(5)\u63a7\u5236\u521d\u59cb\u5316\u4e2a\u6570\uff0c\u4e14\u8d4b\u9ed8\u8ba4\u503c</p> <p>+=\u5176\u5b9e\u5c31\u662fadd(\"c\")</p> <p>removeIf\uff1a\u79fb\u9664\u6ee1\u8db3\u6761\u4ef6\u7684\u9879</p>"}, {"location": "android/kotlin/kotlin_collection/#_1", "title": "\u904d\u5386", "text": "<pre><code>for (s in list) {\n    print(s)\n}\nlist.forEach {\n    print(it)\n}\nlist.forEachIndexed { index, item -&gt;\n    print(\"$index,$item \")\n}\n</code></pre>"}, {"location": "android/kotlin/kotlin_collection/#_2", "title": "\u89e3\u6784\u4f53", "text": "<p><pre><code>val list = listOf(\"a\", \"b\", \"c\")\nval (_, v2, v3) = list\nprintln(\"v2: $v2, v3: #v3\")\n</code></pre> \u5176\u4e2d_\u8868\u793a\u4e0d\u9700\u8981\u7b2c\u4e00\u4e2a\u5143\u7d20</p>"}, {"location": "android/kotlin/kotlin_collection/#set", "title": "set\u96c6\u5408", "text": "<p><pre><code>val set = setOf(\"a\", \"b\", \"3\")\nset.elementAt(2)\nset.elementAtOrElse(2) { \"\" }\nset.elementAtOrNull(2)\n</code></pre> \u548clist\u4f7f\u7528\u7c7b\u4f3c\uff0c\u4f46\u6ca1\u6709[]\u8fd0\u7b97\u7b26\u91cd\u8f7d <pre><code>val set = mutableSetOf(\"a\", \"a\", \"b\", \"c\")\nset += \"d\"\nset -= \"f\"\n</code></pre> list\u96c6\u5408\u53bb\u91cd <pre><code>var list = listOf(\"a\", \"a\", \"b\", \"c\")\nlist = list.toSet().toList()\nlist = list.distinct()\n</code></pre> distinct\u6e90\u7801\u5c31\u662f\uff1atoMutableSet().toList()</p>"}, {"location": "android/kotlin/kotlin_collection/#map", "title": "map\u96c6\u5408", "text": "<pre><code>var map = mapOf(1 to \"a\", 2 to \"b\", 3 to(\"c\"), Pair(4, \"d\"))\n\u83b7\u53d6\u503c\nprintln(map[3])\nprintln(map.get(3))\n//println(map.getValue(3))\u4f1a\u5d29\u6e83\nprintln(map.getOrDefault(5, \"e\"))\nprintln(map.getOrElse(4) { \"d\" })\n</code></pre>"}, {"location": "android/kotlin/kotlin_collection/#_3", "title": "\u904d\u5386", "text": "<pre><code>val map = mapOf(1 to \"a\", 2 to \"b\", 3 to(\"c\"))\nfor (entry in map) {\n    println(\"${entry.key} , ${entry.value}\")\n}\nmap.forEach { (key, value) -&gt;\n    println(\"$key , $value\")\n}\nmap.forEach {\n    println(\"${it.key} , ${it.value}\")\n}\n</code></pre>"}, {"location": "android/kotlin/kotlin_collection/#_4", "title": "\u8d4b\u503c", "text": "<pre><code>val map = mutableMapOf(1 to \"a\", 2 to \"b\", 3 to (\"c\"))\nmap += 4 to \"d\"\nmap[5] = \"e\"\nmap.put(5, \"e\")//\u548c\u4e0a\u9762\u4e00\u79cd\u4e00\u6837\uff0c\u63a8\u8350\u4e0a\u9762\nmap.getOrPut(5) { \"w\" }//\u5982\u679c\u5b58\u5728\u5219\u83b7\u53d6\u539f\u6765\u7684\u503ce\nmap.getOrPut(6) { \"f\" }//\u5982\u679c\u4e0d\u5b58\u5728\u5219\u6dfb\u52a0\u5e76\u8fd4\u56de\u7ed3\u679cf\n</code></pre>"}, {"location": "android/kotlin/kotlin_function/", "title": "\u51fd\u6570", "text": ""}, {"location": "android/kotlin/kotlin_function/#_1", "title": "\u51fd\u6570\u7b80\u4ecb", "text": "<p>\u9ed8\u8ba4\u662fpublic\uff0c\u53ef\u4ee5\u5199\u5728\u7c7b\u5916</p> <p>\u51fd\u6570\u53c2\u6570\u5141\u8bb8\u6709\u9ed8\u8ba4\u503c <pre><code>fun main() {\n    method01(50)\n}\nfun method01(age: Int, name: String = \"xxx\") {\n}\n</code></pre> \u5177\u540d\u51fd\u6570\uff1a\u5141\u8bb8\u53c2\u6570\u987a\u5e8f\u4fee\u6539 <pre><code>fun main() {\n    method02(name = \"xxx\", age = 25)\n}\nfun method02(age: Int, name: String) {\n\n}\n</code></pre> Unit\u662f\u65e0\u53c2\u8fd4\u56de\uff0c\u662f\u4e2a\u7c7b\uff0c\u53ef\u4ee5\u5ffd\u7565 <pre><code>fun method() {\n    return println()\n}\nfun method1() : Unit {\n    return println()\n}\n</code></pre> Nothing\u7c7b\u578b\uff1aTODO(\"xx\")</p> <p>\u548cjava\u4e0d\u540c\uff0c\u4f1a\u62a5\u5f02\u5e38\u53ef\u4ee5\u4f5c\u4e3a\u629b\u51fa\u5f02\u5e38\u6765\u5904\u7406 <pre><code>fun method(bool: Boolean) {\n    if (bool) TODO(\"\u6709\u95ee\u9898\")\n}\n</code></pre> \u53cd\u5f15\u53f7 <pre><code>fun method() {\n//    Utils.in() \u62a5\u9519 in\u5728kotlin\u4e2d\u662f\u5173\u952e\u5b57\n    Utils.`in`() //\u4f7f\u7528\u53cd\u5f15\u53f7\u89e3\u51b3\n}\n\njava\u7c7b\npublic class Utils {\n   public static final void in() {}\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_function/#_2", "title": "\u533f\u540d\u51fd\u6570", "text": "<p><pre><code>val len = \"String\".count {\n    it == 'r'\n}\n</code></pre> cout\u662f\u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u4e2a\u6570{}\u90e8\u5206\u5c31\u662f\u533f\u540d\u51fd\u6570</p> <p>\u6ce8\uff1a\u53ea\u8981\u662f\u533f\u540d\u51fd\u6570\uff0c\u51fd\u6570\u7684\u6700\u540e\u4e00\u884c\u4e00\u822c\u5c31\u662f\u8fd4\u56de\u503c\uff0capply\u9664\u5916</p>"}, {"location": "android/kotlin/kotlin_function/#_3", "title": "\u51fd\u6570\u62c6\u89e3", "text": "<p>1.\u58f0\u660e <pre><code>val method : () -&gt; String\n</code></pre> 2.\u5b9e\u73b0 <pre><code>method = {\n        \"XXX\"//\u6700\u540e\u4e00\u884c\u662f\u8fd4\u56de\u503c \u4e0d\u80fd\u6709return\n    }\n}\n</code></pre> 3.\u8c03\u7528 <pre><code>println(method())\nprintln(method.invoke())\n</code></pre> \u53ea\u6709\u5355\u4e2a\u8f93\u5165\u9ed8\u8ba4\u6709\u4e2ait(\u5173\u952e\u5b57)\u53c2\u6570\uff0c\u5982\u679c\u662f\u591a\u4e2a\u53c2\u6570 <pre><code>val method : (Int, Boolean) -&gt; String //\u5177\u4f53\u540d\u53ef\u7701\u7565\nmethod = {age, sex-&gt; //\u5177\u4f53\u7c7b\u578b\u53ef\u7701\u7565\n    \"age: $age , sex: $sex\"\n}\nprintln(method.invoke(20, true))\n</code></pre> \u7b80\u5316\u51fd\u6570\u4e00\u6b65\u5230\u4f4d <pre><code>val method : (Int, Boolean) -&gt; String= {age, sex-&gt;\n    \"age: $age , sex: $sex\"\n}\n</code></pre> \u4ee5\u4e0a\u51fd\u6570\u5f62\u5f0f\uff1a \u65b9\u6cd5\u540d\uff1a\u5165\u53c2\u7c7b\u578b -&gt; \u8fd4\u56de\u7c7b\u578b = \uff5b\uff5d</p> <p>\u53e6\u4e00\u79cd\u5f62\u5f0f\uff1a \u65b9\u6cd5\u540d = \uff5b\u5165\u53c2\u7c7b\u578b -&gt; \u6700\u540e\u4e00\u884c\u81ea\u52a8\u63a8\u65ad\u8fd4\u56de\u7c7b\u578b\uff5d</p> <p>\u5176\u4e2d\u8fd4\u56de\u7c7b\u578b\u4e3a\u81ea\u52a8\u63a8\u65ad\uff0c\u5982 <pre><code>val method = {age Int, sex Boolean -&gt;\n    \"age: $age , sex: $sex\" //\u6b64\u65f6\u8fd4\u56de\u7c7b\u578b\u4e3aString\n}\n</code></pre> \u533f\u540d\u51fd\u6570 ==(\u7b49\u4ef7\uff0c\u5c5e\u4e8e) lambda\u8868\u8fbe\u5f0f</p> <p>\u51fd\u6570\u53c2\u6570\u4e5f\u662f\u51fd\u6570 <pre><code>fun main() {\n    //\u8c03\u7528\u65b9\u5f0f\u4e00(\u4e0d\u63a8\u8350)\n    method(4, \"me\", {\n        println(it)//\u76f8\u5f53\u4e8e\u5b9e\u73b0\n    }) \n    //\u8c03\u7528\u65b9\u5f0f\u4e8c\n    method(4, \"me\", method2 = {\n        println(it)//\u76f8\u5f53\u4e8e\u5b9e\u73b0\n    }) \n    //\u6700\u7ec8\u65b9\u5f0f\n    method(4, \"me\") {\n        println(it)//\u76f8\u5f53\u4e8e\u5b9e\u73b0\n    }\n}\n\nfun method(age: Int, name: String, method2: (Int) -&gt; Unit){//\u76f8\u5f53\u4e8e\u58f0\u660e\n    if (age &gt; 2 &amp;&amp; name == \"me\") {\n        method2(100)//\u76f8\u5f53\u4e8e\u8c03\u7528\n    } else {\n        method2(40)\n    }\n}\n</code></pre> \u529f\u80fd\u548cjava\u63a5\u53e3\u56de\u8c03\u76f8\u540c</p>"}, {"location": "android/kotlin/kotlin_function/#inline", "title": "\u5185\u8054\u51fd\u6570inline", "text": "<p>\u7531\u4e8e\u4e0a\u9762\u5b9e\u73b0\u5728\u7f16\u8bd1\u751f\u6210\u65f6\u4f1a\u51fa\u73b0Functionx\u5bf9\u8c61\u6765\u5b8c\u6210lambda\u7684\u8c03\u7528\uff0c\u5b58\u5728\u6027\u80fd\u635f\u8017</p> <p></p> <p>\u4f7f\u7528inline\u540e\u76f8\u5f53\u4e8ec++\u4e2d\u7684#define \u5b8f\u66ff\u6362\u5c06\u4ee3\u7801\u76f4\u63a5\u66ff\u6362\u5230\u8c03\u7528\u5904\uff0c\u539f\u51fd\u6570\u4f9d\u7136\u5b58\u5728\u6ca1\u88ab\u8c03\u7528</p> <p>\u6240\u4ee5\u4f7f\u7528\u573a\u666f\uff1a\u51fd\u6570\u5b58\u5728\u53c2\u6570\u662flambda(\u533f\u540d\u51fd\u6570)\u65f6</p> <p>\u603b\u7ed3\uff1a\u51fd\u6570\u5185\u5bb9\u76f4\u63d2\u5230\u8c03\u7528\u5904</p>"}, {"location": "android/kotlin/kotlin_function/#noinline", "title": "noinline", "text": "<p>\u4f5c\u7528\u4e8e\u51fd\u6570\u53c2\u6570\uff0c\u4e0d\u8fdb\u884c\u4f18\u5316</p> <p>AS\u4f1a\u63d0\u793a\uff0c\u5982lambda\u4f5c\u4e3a\u5bf9\u8c61\u8fd4\u56de\u65f6</p> <p>\u603b\u7ed3\uff1a\u5c40\u90e8\u5173\u95ed\u4f18\u5316\uff0c\u89e3\u51b3\u4e0d\u80fd\u628a\u51fd\u6570\u7c7b\u578b\u7684\u53c2\u6570\u5f53\u5bf9\u8c61\u4f7f\u7528\u95ee\u9898</p>"}, {"location": "android/kotlin/kotlin_function/#crossinline", "title": "crossinline", "text": "<p>\u8c03\u7528inline\u51fd\u6570\uff0c\u4e14\u5728lambda\u4f7f\u7528return\u65f6\uff0c\u4e5f\u7528\u5728\u53c2\u6570\u4e0a</p> <p>\u603b\u7ed3\uff1a\u5c40\u90e8\u52a0\u5f3a\uff0c\u8ba9\u5185\u8054\u51fd\u6570\u7684\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u88ab\u95f4\u63a5\u8c03\u7528\uff0c\u4e0d\u80fd\u5728lambda\u4f7f\u7528return</p>"}, {"location": "android/kotlin/kotlin_function/#_4", "title": "\u51fd\u6570\u5f15\u7528", "text": "<p>method2\u662f\u51fd\u6570\u800clambda\u662f\u51fd\u6570\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u5c06lambda\u6539\u6210\u65b9\u6cd5\u518d\u4f7f\u7528::\u5f15\u7528 <pre><code>fun main() {\n    method(4, \"xx\", ::method2)\n}\n\nprivate fun method2(code: Int){\n    println(code)\n}\n</code></pre> \u6ce8\uff1a\u6b64\u5904::method\u662f\u5177\u540d\u51fd\u6570</p>"}, {"location": "android/kotlin/kotlin_function/#_5", "title": "\u51fd\u6570\u8fd4\u56de\u51fd\u6570", "text": "<p><pre><code>fun main() {\n    println(method(\"\u6709\u6d88\u606f\")(\"\u5f20\u4e09\"))\n}\n\nprivate fun method(info: String): (name: String) -&gt; String {\n    return {\n        \"it: $it, info: $info\"\n    }\n}\n</code></pre> \u8fd4\u56de\u7c7b\u578b\u662f(name: String) -&gt; String\u51fd\u6570\u7c7b\u578b\uff0c\u5373\u58f0\u660e</p> <p>\u5177\u4f53\u5b9e\u73b0\u662f {         \"it: $it, info: $info\"     }</p> <p>\u8c03\u7528\u662fmethod(\"\u6709\u6d88\u606f\")(\"\u5f20\u4e09\")\uff0c\u6b64\u5904\u5df2\u7f29\u5199 <pre><code>val m = method(\"\u6709\u6d88\u606f\")\nprintln(m(\"\u5f20\u4e09\"))\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_function/#_6", "title": "\u5e38\u7528\u5185\u7f6e\u51fd\u6570", "text": ""}, {"location": "android/kotlin/kotlin_function/#letapplyrun", "title": "let\uff0capply\uff0crun\u533a\u522b", "text": "<p>let\uff0crun\u8fd4\u56de\u503c\u53ef\u4ee5Any\uff0capply\u6c38\u8fdc\u8c03\u7528\u8005\u672c\u8eab</p> <p>let\u5185\u90e8\u6301\u6709it\uff0crun\u548capply\u5185\u90e8\u6301\u6709this</p> <p>run\u662flet\u548capply\u7ed3\u5408\u4f53\uff0c\u63a5\u8fd1let <pre><code>const val NAME: String = \"\u5f20\u4e09,\u674e\u56db,\u738b\u4e94\"\nfun main() {\n    NAME.run(::isLong)\n        .run(::showText)\n        .run(::mapText)\n        .run(::println)\n    NAME.let(::isLong)\n        .let(::showText)\n        .let(::mapText)\n        .let(::print)\n}\nfun isLong(str: String) = str.length &gt; 5\nfun showText(isLong: Boolean) = if (isLong) \"good\u5b57\u7b26\u4e32\" else \"bad\u5b57\u7b26\u4e32\"\nfun mapText(text: String) = \"\u3010$text\u3011\"\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_function/#with", "title": "with", "text": "<p>\u548crun\u529f\u80fd\u4e00\u6837\uff0c\u4f7f\u7528\u65b9\u5f0f\u4e0d\u540c</p> <p>with(with(with(with(NAME, ::isLong), ::showText), :: mapText), ::println)</p>"}, {"location": "android/kotlin/kotlin_function/#also", "title": "also", "text": "<p>\u548capply\u7c7b\u4f3c\uff0c\u5185\u90e8\u6301\u6709it\uff0c\u8fd4\u56de\u6c38\u8fdc\u662f\u8c03\u7528\u8005\u672c\u8eab</p> <p>also\u4e5f\u662flet\u548capply\u7ed3\u5408\u4f53\uff0c\u63a5\u8fd1apply</p> <p>run\u548clet\uff1a\u533a\u522bthis\u548cit apply\u548calso\uff1a\u533a\u522bthis\u548cit with\u548crun\uff1a\u533a\u522b\u7ed3\u6784\uff0cwith\u5728\u975enull\u5bf9\u8c61\u65f6\u4f7f\u7528</p>"}, {"location": "android/kotlin/kotlin_function/#takeif", "title": "takeIf", "text": "<p>\u5982\u679c\u662ftrue\u8fd4\u56de\u8c03\u7528\u8005\u672c\u8eab\uff0c\u5426\u5219\u8fd4\u56denull\uff0c\u53ef\u4ee5\u7ed3\u5408\u7a7a\u5408\u5e76\u5904\u7406\uff0c\u5982\u4e0b <pre><code>println(NAME.takeIf {\n    isLong(it)\n} ?: \"\u540d\u5b57\u592a\u77ed\u4e86\")\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_function/#takeunless", "title": "takeUnless", "text": "<p>\u548ctakeIf\u76f8\u53cd</p>"}, {"location": "android/kotlin/kotlin_function/#_7", "title": "\u6269\u5c55\u51fd\u6570", "text": "<ol> <li>\u81ea\u5b9a\u4e49\u6269\u5c55\u4e0d\u80fd\u91cd\u590d</li> <li>jdk\u4e2d\u6269\u5c55\u51fd\u6570\u53ef\u4ee5\u8986\u76d6 <pre><code>fun &lt;T&gt; T?.showContent() = println(\"showContent: $this\")\nfun Any?.other() = println(\"other: $this\")\nnull.other()\n\"D\".showContent()\n</code></pre></li> </ol>"}, {"location": "android/kotlin/kotlin_function/#map", "title": "map\u51fd\u6570", "text": "<p>\u8f6c\u5316\u8fd4\u56de\u7c7b\u578b <pre><code>val list = listOf(1, 2, 3)\nprintln(list.map {\n    \"new$it\"\n}.map {\n    it.replace(\"new\", \"old\")\n}.map {\n    it.replace(\"old\", \"\")\n}.map {\n    it.toInt() + 5\n})\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_function/#flatmap", "title": "flatMap\u51fd\u6570", "text": "<pre><code>val list = listOf(1, 2, 3)\nprintln(list.map {\n    \"new$it\"\n}.flatMap {\n    listOf(it.replace(\"new\", \"4\"))\n})\n</code></pre>"}, {"location": "android/kotlin/kotlin_function/#filter", "title": "filter\u51fd\u6570", "text": "<p>\u8fc7\u6ee4\u529f\u80fd\uff0c\u914d\u5408map\u548cflatMap\u6548\u679c\u4e0d\u540c <pre><code>listOf(\n    listOf(\"flat\", \"run\"),\n    listOf(\"ab\", \"len\")\n).flatMap {\n    it.filter { content -&gt;\n        content.contains(\"f\")\n    }\n}.map {\n    println(it)//flat\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_function/#zip", "title": "zip\u51fd\u6570", "text": "<p>\u5408\u5e76\u96c6\u5408 <pre><code>val list1 = listOf(\"a\",\"b\",\"c\")\nval list2 = listOf(1,2,3)\nprintln(list1.zip(list2))//[(a, 1), (b, 2), (c, 3)]\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/", "title": "\u64cd\u4f5c\u7b26\u4e0e\u5173\u952e\u5b57", "text": "<p>\u5b98\u65b9\u6587\u6863</p>"}, {"location": "android/kotlin/kotlin_op/#_1", "title": "\u5e38\u7528\u64cd\u4f5c\u7b26", "text": ""}, {"location": "android/kotlin/kotlin_op/#_2", "title": "\uff1f", "text": "<p>\u5982\u679c\u5bf9\u8c61\u662fnull\u5219\u4e0d\u6267\u884c\u540e\u7eed\u4ee3\u7801\uff0c\u5e38\u7ed3\u5408let\u4f7f\u7528\uff0c\u5982 <pre><code>var name: String? = null\nname?.length\nname?.let {\n    it.length\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/#_3", "title": "!!", "text": "<p>\u8868\u793a\u5f3a\u5236\u6267\u884c\uff0c\u5982\u679c\u662fnull\u5c31\u548cjava\u4e00\u6837\u62a5\u5f02\u5e38 <pre><code>var name: String? = null\nname!!.length\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/#_4", "title": "?:", "text": "<p>\u8868\u793a\u5982\u679cnull\u4e4b\u6267\u884c\u4ee3\u7801\uff0c\u7ed3\u679c\u8f93\u51faxxx\uff0c\u4e00\u822c\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u5f02\u5e38 <pre><code>var name: String? = null\nprintln(name?.length ?: \"xxx\")\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/#_5", "title": "==\u548c===", "text": "<p>==\u76f8\u5f53\u4e8ejava\u7684equals\uff0c\u6bd4\u8f83\u5185\u5bb9</p> <p>===\u76f8\u5f53\u4e8ejava\u7684==\uff0c\u6bd4\u8f83\u5f15\u7528\u503c</p>"}, {"location": "android/kotlin/kotlin_op/#string", "title": "String\u76f8\u5173", "text": ""}, {"location": "android/kotlin/kotlin_op/#until", "title": "until", "text": "<p>\u7528\u6cd5\uff1a\u76f4\u5230\u54ea\u91cc\uff0c\u8f93\u51faHell <pre><code>const val NAME: String = \"Hello world!\"\nfun main() {\n    print(NAME.substring(0 until NAME.indexOf('o')))\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/#splitc", "title": "split\u548c\u89e3\u6784(c++\u4e2d\u7684\u7279\u70b9)", "text": "<pre><code>const val NAME: String = \"\u5f20\u4e09,\u674e\u56db,\u738b\u4e94\"\nfun main() {\n    val list = NAME.split(\",\")\n    val (v1, v2, v3) = list\n    println(\"v1: $v1, v2: $v2, v3: $v3\")\n}\n</code></pre>"}, {"location": "android/kotlin/kotlin_op/#replace", "title": "replace", "text": "<p><pre><code>const val NAME: String = \"\u5f20\u4e09l,\u674e\u56dbl,\u738b\u4e94l\"\nprintln(NAME.replace(Regex(\"[l]\")) {\n    when (it.value) {\n        \"l\" -&gt; \"\"\n        else -&gt; \"x\"\n    }\n})\n</code></pre> \u53bb\u9664l\u6548\u679c\uff0cRegex\u6b63\u5219\u7684\u4f7f\u7528</p>"}, {"location": "android/kotlin/kotlin_op/#_6", "title": "\u5e38\u7528\u5173\u952e\u5b57", "text": ""}, {"location": "android/kotlin/kotlin_op/#lateinit", "title": "lateinit", "text": "<p>\u5ef6\u8fdf\u52a0\u8f7d\u5c5e\u6027\uff0c\u9700\u8981\u624b\u52a8\u52a0\u8f7d <pre><code>class MyClass {\n    lateinit var name: String\n\n    fun loadName() {\n        name = \"wiki\"\n    }\n\n    fun showName() {\n        if (::name.isInitialized) {\n            println(\"name: $name\")\n        } else {\n            println(\"\u4f60\u8fd8\u6ca1\u53d6\u540d\u5462\")\n        }\n    }\n}\n</code></pre> \u4ee5\u4e0aname\u672a\u521d\u59cb\u5316\u524d\u662f\u4e0d\u80fd\u4f7f\u7528\uff0c\u5373\u4f7f\u5224\u7a7a\u4e5f\u4e0d\u884c\uff0c\u53ea\u80fd\u901a\u8fc7::name.isInitialized\u5224\u65ad</p> <p>\u5b9e\u6218\u6848\u4f8b</p>"}, {"location": "android/kotlin/kotlin_op/#by", "title": "by", "text": "<p>\u59d4\u6258\u5173\u952e\u5b57 <pre><code>class MyClass {\n    var name: String by Delegate()\n}\nclass Delegate {\n    operator fun getValue(thisRef: Any?, property: KProperty&lt;*&gt;): String {\n        return \"\"\n    }\n\n    operator fun setValue(thisRef: Any?, property: KProperty&lt;*&gt;, value: String) {\n\n    }\n}\n</code></pre> \u5b9e\u73b0\u5fc5\u8981\u56e0\u7d20\uff1aget/setValue\u65b9\u6cd5\u548coperator\u5173\u952e\u5b57</p> <p>\u6280\u5de7\uff1a\u76f4\u63a5\u5728Delegate\u4f7f\u7528Alt+Enter\u5feb\u901f\u91cd\u5199</p>"}, {"location": "android/kotlin/kotlin_op/#by-lazy", "title": "by lazy", "text": "<p>\u60f0\u6027\u52a0\u8f7d\uff0c\u4f1a\u81ea\u52a8\u52a0\u8f7d <pre><code>fun main() {\n    val p = MyClass()\n    println(\"\u5148\u7761\u4f1a\u518d\u52a0\u8f7d\")\n    Thread.sleep(2000)\n    p.showName()\n}\nclass MyClass {\n    private val name = loadName()\n    private fun loadName(): String {\n        println(\"loadName\")\n        return \"wiki\"\n    }\n    fun showName() {\n        println(\"name: $name\")\n    }\n}\n</code></pre> \u6267\u884c\u7ed3\u679c\uff1a</p> <p>loadName</p> <p>\u5148\u7761\u4f1a\u518d\u52a0\u8f7d</p> <p>name: wiki</p> <p>\u671f\u671b\u7ed3\u679c\uff1a</p> <p>\u5148\u7761\u4f1a\u518d\u52a0\u8f7d</p> <p>loadName</p> <p>name: wiki</p> <p>\u4f7f\u7528by lazy\u6539\u9020\u540e\u5373\u53ef <pre><code>private val name by lazy {\n    loadName()\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/#by-delegatesobservable", "title": "by Delegates.observable", "text": "<p>\u53ef\u7528\u6765\u76d1\u542c\u5c5e\u6027\u53d8\u5316 <pre><code>fun main() {\n    MyClass().name = \"new\"\n}\nclass MyClass {\n    var name: String by Delegates.observable(\"old\"){property, oldValue, newValue -&gt;\n        println(\"property: ${property.name} from $oldValue to $newValue\")\n    }\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/#by-map", "title": "by map", "text": "<pre><code>fun main() {\n    val delegate = MyClass(hashMapOf(\"age\" to 5, \"name\" to \"fff\"))\n    println(delegate.age)\n    println(delegate.name)\n}\nclass MyClass(map: HashMap&lt;String, Any&gt;) {\n    val name: String by map\n    val age: Int by map\n}\n</code></pre>"}, {"location": "android/kotlin/kotlin_op/#by_1", "title": "by\u7c7b(\u59d4\u6258\u7c7b)", "text": "<p><pre><code>fun main() {\n    DelegateB(B()).jump()\n}\n\ninterface A {\n    fun jump()\n}\n\nclass B : A {\n    override fun jump() {\n        println(\"jump\")\n    }\n}\n\nclass DelegateB(private val b: B): A {\n    override fun jump() {\n        b.jump()\n    }\n}\n</code></pre> \u7b80\u5316 <pre><code>class DelegateB(private val b: B): A by b\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/#vararg", "title": "vararg\u5173\u952e\u5b57", "text": "<p>\u8868\u793a\u591a\u4e2a\u53c2\u6570 <pre><code>class MyClass&lt;T&gt;(vararg objects: T) {\n    //out\u8868\u793aT\u662f\u53ea\u8bfb\n    private val list: Array&lt;out T&gt; = objects\n\n    fun showObj(index: Int): T? = list[index].takeIf { true }\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/#inout", "title": "in\u548cout", "text": "<p>in\u8868\u793a\u9006\u53d8\uff0c\u6cdb\u578b\u80fd\u88ab\u4fee\u6539\uff0c\u4e0d\u80fd\u8bfb\u53d6\uff0c\u529f\u80fd\u5305\u542bjava\u4e2d\u7684? super T <pre><code>interface B&lt;in T&gt; {\n    fun getT(): T //\u62a5\u9519\n    fun setT(item: T)\n}\nvar string: ArrayList&lt;in String&gt; = ArrayList&lt;CharSequence&gt;()\n</code></pre> out\u8868\u793a\u534f\u53d8\uff0c\u6cdb\u578b\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u80fd\u8bfb\u53d6\uff0c\u529f\u80fd\u5305\u542bjava\u4e2d\u7684? extends T <pre><code>interface A&lt;out T&gt; {\n    fun getT(): T\n    fun setT(item: T) //\u62a5\u9519\n}\nvar charSequence: ArrayList&lt;out CharSequence&gt; = ArrayList&lt;String&gt;()\n</code></pre> \u9ed8\u8ba4\u80fd\u8bfb\u53d6\u548c\u4fee\u6539 <pre><code>interface C&lt;T&gt; {\n    fun getT(): T\n    fun setT(item: T)\n}\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_op/#reified", "title": "reified", "text": "<p>\u5728\u4f7f\u7528\u6cdb\u578b\u7c7b\u578b\u5224\u65ad\u65f6\u4f7f\u7528\uff0c\u5982it is T\uff0c\u4f7f\u7528\u65f6\u9700\u8981\u7ed3\u5408inline <pre><code>fun main() {\n    println(MyClass().randomObj { A(\"A\") })\n}\n\ndata class A(val name: String)\ndata class B(val name: String)\nclass MyClass {\n    inline fun &lt;reified T&gt; randomObj(defaultObj: () -&gt; T): T? {\n        val list = listOf(A(\"a\"), B(\"b\"))\n        val random = list.shuffled().first()\n        println(\"\u968f\u673a\u5bf9\u8c61\uff1a$random\")\n        return random.takeIf { it is T } as T? ?: defaultObj()\n    }\n}\n</code></pre> \u6848\u4f8b\u8bbe\u5b9aT\u5c31\u662fA\u7c7b\u578b\uff0c\u8fd4\u56deT?\u539f\u56e0\u662f\u5f53\u968f\u673a\u5bf9\u8c61\u662fB\u7c7b\u578b\u65f6\uff0ctakeIf\u8fd4\u56denull\u65e0\u6cd5\u8f6c\u6210T</p>"}, {"location": "android/kotlin/kotlin_op/#_7", "title": "\u8fd0\u7b97\u7b26\u91cd\u8f7d", "text": "<p><pre><code>fun main() {\n    println(A(\"name:\") + A(\"Andy\"))\n}\n\nclass A(var name: String) {\n    operator fun plus(a1: A): String {\n        return \"$name ${a1.name}\"\n    }\n}\n</code></pre> \u4f7f\u7528operator\u5173\u952e\u5b57\uff0cplus\u662f\u53ef\u4ee5\u901a\u8fc7\u5feb\u6377\u952e(Ctrl+\u7a7a\u683c)\u63d0\u793a\u51fa\u5bf9\u5e94\u5173\u7cfb</p> <p></p>"}, {"location": "android/kotlin/kotlin_op/#infix", "title": "infix", "text": "<p>\u6a21\u4eff\u7cfb\u7edf\u7684x to x <pre><code>infix fun &lt;T, R&gt; T.go(r: R) {\n    println(\"$this - $r\")\n}\n\"who\" go \"you\"\n\"who\".go(\"you\")\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_principle/", "title": "\u539f\u7406", "text": ""}, {"location": "android/kotlin/kotlin_principle/#by-lazy", "title": "by lazy", "text": "<p>\u59d4\u6258\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u6709get/setValue\u51fd\u6570\u4ee5\u53caoperator <pre><code>public interface Lazy&lt;out T&gt; {\n    public val value: T\n\n    public fun isInitialized(): Boolean\n}\n\npublic actual fun &lt;T&gt; lazy(initializer: () -&gt; T): Lazy&lt;T&gt; = SynchronizedLazyImpl(initializer)\n</code></pre></p> <p>\u65e0\u8bba\u662fLazy\u8fd8\u662fSynchronizedLazyImpl\u90fd\u6ca1\u6709\u770b\u5230get/setValue\u51fd\u6570\u4ee5\u53caoperator</p> <p>\u771f\u6b63\u5b9e\u73b0\u5728\u62d3\u5c55\u51fd\u6570\u4e2d <pre><code>public inline operator fun &lt;T&gt; Lazy&lt;T&gt;.getValue(thisRef: Any?, property: KProperty&lt;*&gt;): T = value\n</code></pre> lazy\u8fd8\u6709\u4e00\u4e2a\u91cd\u8f7d\u51fd\u6570 <pre><code>public actual fun &lt;T&gt; lazy(mode: LazyThreadSafetyMode, initializer: () -&gt; T): Lazy&lt;T&gt; =\n    when (mode) {\n        LazyThreadSafetyMode.SYNCHRONIZED -&gt; SynchronizedLazyImpl(initializer)\n        LazyThreadSafetyMode.PUBLICATION -&gt; SafePublicationLazyImpl(initializer)\n        LazyThreadSafetyMode.NONE -&gt; UnsafeLazyImpl(initializer)\n    }\n</code></pre> \u5176\u4e2dSynchronizedLazyImpl\u4f7f\u7528synchronized+\u53cc\u91cd\u6821\u9a8c\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u4ee3\u7801\u5757\u53ea\u4f1a\u8c03\u75281\u6b21</p> <p>SafePublicationLazyImpl\u662f\u4f7f\u7528CS\u64cd\u4f5c\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u53ef\u80fd\u4f1a\u8c03\u7528\u591a\u6b21\u4ee3\u7801\u5757\uff0c\u4f46\u6570\u503c\u53ea\u53d6\u7b2c\u4e00\u6b21</p> <p>LazyThreadSafetyMode\u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168</p>"}, {"location": "android/kotlin/kotlin_principle/#_1", "title": "\u679a\u4e3e", "text": "<p>\u679a\u4e3e\u53ea\u80fd\u7ee7\u627f\u63a5\u53e3\u4e0d\u80fd\u7ee7\u627f\u7c7b\u7684\u539f\u56e0</p> <p>\u901a\u8fc7\u53cd\u7f16\u8bd1\u53ef\u4ee5\u770b\u5230\u679a\u4e3e\u5176\u5b9e\u662f\u4e2aClass\u7ee7\u627f\u4e8ejava/lang/Enum\uff0c\u800c\u5bf9\u4e8ejava\u6765\u8bf4\u662f\u5355\u7ee7\u627f\u89c4\u5219</p> <p>\u4f18\u5316\u70b9\uff1a</p> <p>1.\u679a\u4e3e\u6709\u4e24\u4e2a\u5c5e\u6027name\u548cordinal\uff0c\u5176\u4e2dordinal\u4e00\u822c\u5f00\u53d1\u8005\u4f7f\u7528\u4e0d\u5230\uff0c\u5f53\u9700\u8981\u4f7f\u7528\u5230\u679a\u4e3e\u7684\u6570\u503c\u65f6\uff0c\u5efa\u8bae\u624b\u52a8\u6dfb\u52a0\u5b57\u6bb5\u53bb\u8bb0\u5f55</p> <p>2.\u5f53\u679a\u4e3e\u9700\u8981\u4f7f\u7528\u6570\u503c\u5173\u8054\u65f6\uff0c\u4f7f\u7528EnumMap\u548cEnumSet</p>"}, {"location": "android/kotlin/kotlin_schedule/", "title": "Kotlin schedule", "text": "<p>\u5b9a\u65f6\uff0c\u5012\u8ba1\u65f6\uff0c\u540e\u53f0\u4efb\u52a1</p>"}, {"location": "android/kotlin/kotlin_schedule/#timer-timertask", "title": "Timer &amp; TimerTask", "text": "<p><pre><code>class MinuteTimerTask(private val period: Long = 60000L, private val callback: () -&gt; Unit) {\n    private var timer: Timer? = null\n    private var timerTask: TimerTask? = null\n\n    fun start() {\n        // \u5982\u679c timer \u5df2\u7ecf\u5b58\u5728\uff0c\u5148\u53d6\u6d88\u5b83\n        stop()\n\n        // \u521b\u5efa\u65b0\u7684 Timer \u548c TimerTask\n        timer = Timer()\n        timerTask = object : TimerTask() {\n            override fun run() {\n                callback()\n            }\n        }\n\n        // \u8c03\u5ea6\u4efb\u52a1\uff0c\u6bcf\u5206\u949f\u6267\u884c\u4e00\u6b21\n        timer?.schedule(timerTask, period, period)\n        //timer?.scheduleAtFixedRate(timerTask, period, period)\n    }\n\n    fun stop() {\n        // \u53d6\u6d88\u5e76\u6e05\u9664 Timer \u548c TimerTask\n        timer?.cancel()\n        timer = null\n        timerTask = null\n    }\n}\n</code></pre> \u6ce8\u610f\uff1acallback\u56de\u8c03\u5982\u679c\u6d89\u53caUI\u64cd\u4f5c\u9700\u8981\u5207\u6362\u6210\u4e3b\u7ebf\u7a0b</p>"}, {"location": "android/kotlin/kotlin_schedule/#delay", "title": "delay", "text": "<pre><code>class MinuteTimerKt(private val period: Long = 60000L, private val callback: () -&gt; Unit) {\n    private val mainScope = MainScope()\n    private var loop = AtomicBoolean(false)\n    private var job: Job? = null\n\n    fun start() {\n        if (loop.get()) {\n            return\n        }\n        loop.set(true)\n        job = mainScope.launch {\n            while (loop.get()) {\n                delay(period)\n                callback()\n            }\n        }\n    }\n\n    fun stop() {\n        loop.set(false)\n        job?.cancel()\n        job = null\n    }\n}\n</code></pre>"}, {"location": "android/kotlin/kotlin_schedule/#countdowntimer", "title": "CountDownTimer", "text": "<p>jdk\u4e2d\u7684api <pre><code>private val countDown by lazy { object : CountDownTimer(2000L, 2000L){\n        override fun onTick(millisUntilFinished: Long) {\n\n        }\n\n        override fun onFinish() {\n\n        }\n    } \n}\ncountDown.start()\ncountDown.cancel()\n</code></pre></p>"}, {"location": "android/kotlin/kotlin_schedule/#handlerthread", "title": "HandlerThread", "text": "<p>\u7cbe\u786e\u52301\u6beb\u79d2\u7ea7\u522b <pre><code>class HmCountDownTimer {\n    private val TAG = \"HmCountDownTimer\"\n    private val handlerThread: HandlerThread = HandlerThread(\"CountDownTimerThread\")\n    private var handler: Handler\n    init {\n        handlerThread.start()\n        handler = Handler(handlerThread.looper)\n    }\n    @Volatile\n    private var isStart: Boolean = false\n\n    // \u4e3b\u7ebf\u7a0b\u7684 Handler\uff0c\u7528\u4e8e\u786e\u4fdd block() \u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\n    private val mainHandler = Handler(Looper.getMainLooper())\n\n    fun startTimer(allTime: Long, countTime: Long = 3L, block: () -&gt; Unit) {\n        if (isStart) {\n            Log.d(\n                TAG,\n                \"already startTimer() called with: allTime = $allTime, countTime = $countTime\"\n            )\n            return // \u9632\u6b62\u91cd\u590d\u542f\u52a8\n        }\n        isStart = true\n        Log.d(\n            TAG,\n            \"startTimer() called with: allTime = $allTime, countTime = $countTime\"\n        )\n        val startTime = System.currentTimeMillis()\n        val runnable = object : Runnable {\n            override fun run() {\n                if (!isStart) return\n\n                val elapsedTime = System.currentTimeMillis() - startTime\n                val remainingTime = allTime - elapsedTime\n\n                if (remainingTime &lt;= countTime * 1000L) {\n                    // \u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c block()\n                    mainHandler.post { block() }\n                    stopTimer()\n                } else {\n                    handler.postDelayed(this, 1L) // \u6bcf 1 \u6beb\u79d2\u68c0\u67e5\u4e00\u6b21\n                }\n            }\n        }\n\n        handler.post(runnable)\n    }\n\n    fun stopTimer() {\n        Log.d(\n            TAG,\n            \"stopTimer() called with: isStart = $isStart\"\n        )\n        if (isStart) {\n            isStart = false\n            handler.removeCallbacksAndMessages(null)\n            handlerThread.quitSafely()\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/network/net_base/", "title": "\u7f51\u7edc\u57fa\u7840", "text": "<p>TCP/IP\u6a21\u578b</p> <p>\u5e94\u7528\u5c42\uff1aHTTP\u3001FTP\u3001DNS\u3001Telnet\u3001SNMP\u3001TFTP(\u672f\u8bed\uff1a\u6d88\u606f)</p> <p>\u4f20\u8f93\u5c42\uff1aTCP\u3001UDP(\u672f\u8bed\uff1a\u6bb5)\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0</p> <p>\u7f51\u7edc\u5c42\uff1aIP\u3001ICMP\u3001RIP\u3001OSPF\u3001BGP(\u672f\u8bed\uff1a\u7247)</p> <p>\u7f51\u7edc\u63a5\u53e3\u5c42\uff1a3G\u30014G\u30015G\u6240\u5728(\u672f\u8bed\uff1a\u5e27)\uff0c\u786c\u4ef6\u63a5\u53e3</p> <p>\u5168\u80fd\u672f\u8bed\uff1a\u5305(\u4e00\u822c\u90fd\u4f7f\u7528\u6570\u636e\u5305\u4e0d\u53bb\u7ec6\u5206\u4e0a\u8ff0\u672f\u8bed)</p> <p>\u5206\u522b\u5bf9\u5e94OSI\u6a21\u578b</p> <p>\u5e94\u7528\u5c42(\u4e3a\u5e94\u7528\u63d0\u4f9b\u670d\u52a1)\u3001\u8868\u793a\u5c42(\u6570\u636e\u683c\u5f0f\u8f6c\u5316\u52a0\u5bc6)\u3001\u4f1a\u8bdd\u5c42(\u5efa\u7acb\u3001\u7ba1\u7406\u548c\u7ef4\u62a4\u4f1a\u8bdd)</p> <p>\u4f20\u8f93\u5c42(\u5efa\u7acb\u3001\u7ba1\u7406\u548c\u7ef4\u62a4\u5bf9\u7aef\u7684\u8fde\u63a5)</p> <p>\u7f51\u7edc\u5c42(IP\u9009\u5740\u3001\u8def\u7531\u9009\u62e9)</p> <p>\u94fe\u8def\u5c42(\u63d0\u4f9b\u4ecb\u8d28\u8bbf\u95ee\u548c\u94fe\u8def\u7ba1\u7406)\u3001\u7269\u7406\u5c42(\u7269\u7406\u4f20\u8f93)</p>"}, {"location": "android/network/net_base/#_1", "title": "\u7f51\u7edc\u6570\u636e\u4f20\u8f93\u539f\u7406", "text": "<p>\u5c01\u5305\uff1a</p> <p>\u5e94\u7528\u5c42(\u5fae\u4fe1A\u7528\u6237)-&gt;\u901a\u8fc7Http\u8bf7\u6c42\u53d1\u9001\u4fe1\u606f(hello)-&gt;\u4f20\u8f93\u5c42(\u5c01\u88c5\u5305\uff1aTCP\u9996\u90e8+\u6d88\u606f\u6570\u636e)-&gt;\u7f51\u7edc\u5c42(\u5c01\u88c5\u5305\uff1aTCP\u9996\u90e8+\u6d88\u606f\u6570\u636e+IP\u5305\u9996\u90e8)-&gt;\u94fe\u8def\u5c42(\u5c01\u88c5\u5305\uff1aTCP\u9996\u90e8+\u6d88\u606f\u6570\u636e+IP\u5305\u9996\u90e8+\u4ee5\u592a\u7f51\u5305\u9996\u90e8)-&gt;\u7269\u7406\u5c42(\u4ee5\u592a\u7f51\u7535\u7f06)</p> <p>\u62c6\u5305\uff1a</p> <p>\u94fe\u8def\u5c42(\u89e3\u6790\u9996\u90e8\u62c6\u5305\uff1aTCP\u9996\u90e8+\u6d88\u606f\u6570\u636e+IP\u5305\u9996\u90e8)-&gt;\u7f51\u7edc\u5c42(\u89e3\u6790\u9996\u90e8\u62c6\u5305\uff1aTCP\u9996\u90e8+\u6d88\u606f\u6570\u636e)-&gt;\u4f20\u8f93\u5c42(\u89e3\u6790\u9996\u90e8\u62c6\u5305\uff1a\u6d88\u606f\u6570\u636e)-&gt;\u5e94\u7528\u5c42(\u5fae\u4fe1B\u7528\u6237)</p>"}, {"location": "android/network/net_base/#tcp-vs-udp", "title": "TCP vs UDP", "text": "TCP UDP \u8fde\u63a5 \u9762\u5411\u8fde\u63a5 \u9762\u5411\u65e0\u8fde\u63a5 \u53ef\u9760 \u53ef\u9760\u4f20\u8f93\uff0c\u4f7f\u7528\u6d41\u91cf\u3001\u62e5\u585e\u63a7\u5236 \u4e0d\u53ef\u9760\uff0c\u4e0d\u4f7f\u7528\u6d41\u91cf\u3001\u62e5\u585e\u63a7\u5236 \u8fde\u63a5\u5bf9\u8c61\u4e2a\u6570 \u4e00\u5bf9\u4e00 \u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u4e00\u3001\u591a\u5bf9\u591a \u4f20\u8f93\u65b9\u5f0f \u9762\u5411\u5b57\u8282\u6d41 \u9762\u5411\u62a5\u6587 \u9996\u90e8\u5f00\u9500 \u6700\u5c0f20\u5b57\u8282\uff0c\u6700\u592760\u5b57\u8282 8\u4e2a\u5b57\u8282 \u9002\u7528\u573a\u666f \u53ef\u9760\u4f20\u8f93\u5e94\u7528(\u6587\u4ef6\u4f20\u8f93) \u5b9e\u65f6\u5e94\u7528(IP\u7535\u8bdd\u3001\u89c6\u9891\u4f1a\u8bae\u3001\u76f4\u64ad\u3001\u5728\u7ebf\u89c6\u9891) <p>UDP\u65e2\u7136\u4e0d\u53ef\u9760\u5982\u4f55\u5b9e\u73b0\u53ef\u9760\uff0c\u7528UDT\u89e3\u51b3</p> <p>UDT\uff1a\u57fa\u4e8eUDP\uff0c\u5728\u5e94\u7528\u5c42\u5b9e\u73b0\u8fde\u63a5\u3001\u91cd\u4f20\uff0c\u80fd\u4f18\u5316\u5e26\u5bbd\u4e0d\u7a33\u5b9a\u65f6\u4f20\u8f93\u7b97\u6cd5\uff0c\u5149\u7ea4\u3001\u6d77\u91cf\u6570\u636e\u573a\u666f\u4f7f\u7528</p>"}, {"location": "android/network/net_base/#mac-vs-ip", "title": "MAC vs IP", "text": "<p>MAC\u5730\u5740\uff1a\u548c\u786c\u4ef6\u7ed1\u5b9a\uff0c\u552f\u4e00\uff0c48\u4f4d\u53736\u4e2a\u5b57\u8282\uff0c\u5904\u4e8e\u94fe\u8def\u5c42\uff0c\u67e5\u770bpc mac\u547d\u4ee4\uff1aipconfig /all</p> <p>IP\u5730\u5740\uff1a32\u4f4d\u53734\u4e2a\u5b57\u8282\uff0c\u53ef\u4fee\u6539</p>"}, {"location": "android/network/net_base/#tcp", "title": "TCP", "text": ""}, {"location": "android/network/net_base/#_2", "title": "\u57fa\u672c\u7279\u6027", "text": "<p>\u9762\u5411\u8fde\u63a5\u3001\u53ef\u9760\u6027\u3001RTT(\u5f80\u8fd4\u65f6\u5ef6)\u548cRTO(\u91cd\u4f20\u8d85\u65f6)\u3001\u6570\u636e\u6392\u5e8f\u3001\u6d41\u91cf\u63a7\u5236\u3001\u5168\u53cc\u5de5</p> \u6d41\u91cf\u63a7\u5236 \u62e5\u585e\u63a7\u5236 \u5173\u8054 \u63a5\u6536\u65b9\u7f13\u5b58 \u7f51\u7edc\u62e5\u5835\u60c5\u51b5 \u63a7\u5236\u539f\u7406 \u6ed1\u52a8\u7a97\u53e3\u63a7\u5236\u6d41\u91cf\uff0c\u7a97\u53e3\u5927\u5c0f\u5728TCP\u5934\u90e8\u7684Window\u5b57\u6bb5\uff0c\u5927\u5c0f\u4e3a0\u65f6\u53d1\u9001\u65b9\u505c\u6b62\u53d1\u9001\u6570\u636e\u5e76\u542f\u52a8\u6301\u7eed\u8ba1\u65f6\u5668(\u95f4\u9694\u8be2\u95ee\u662f\u5426\u53ef\u7ee7\u7eed\u53d1\u9001\u6570\u636e)\uff0c\u5f53\u63a5\u6536\u65b9\u5904\u7406\u5b8c\u6570\u636e\u540e\u4f1a\u53d1\u9001\u901a\u77e5\u62a5\u6587 \u901a\u8fc7\u6162\u542f\u52a8\u3001\u62e5\u585e\u907f\u514d\u3001\u5feb\u91cd\u4f20\u548c\u5feb\u6062\u590d"}, {"location": "android/network/net_base/#_3", "title": "\u4e09\u6b21\u63e1\u624b", "text": "<p>SYN\uff1a\u5efa\u7acb\u8fde\u63a5\u7684\u6807\u5fd7\u4f4d</p> <p>seq\uff1a\u5e8f\u5217\u53f7\uff0c\u7528\u4e8e\u6807\u8bc6TCP\u62a5\u6587\u6bb5\u7684\u987a\u5e8f</p> <p>ACK\uff1a\u786e\u8ba4\u6d88\u606f\u7684\u6807\u5fd7\u4f4d</p> <p>ack\uff1a\u786e\u8ba4\u6d88\u606f\u7684\u901a\u7528\u672f\u8bed\uff0c\u7528\u4e8e\u786e\u8ba4\u5df2\u63a5\u6536\u5230\u7684\u6570\u636e\u5b57\u8282\u7684\u5e8f\u5217\u53f7</p> <p>\u5176\u4ed64\u4e2a\u6807\u8bc6\u4f4d\uff1aPSH(\u4f20\u9001)\u3001FIN(\u7ed3\u675f)\u3001RST(\u91cd\u7f6e)\u3001URG(\u7d27\u6025)</p> <p>\u5ba2\u6237\u7aef------------\u670d\u52a1\u7aef</p> <p>-&gt;SYN=1,seq=X,\u5ba2\u6237\u7aef\u5904\u4e8eSYN_SENT</p> <p>ACK=1,ack=X+1,SYN=1,seq=J&lt;-\uff0c\u670d\u52a1\u7aef\u5904\u4e8eSYN_RECV</p> <p>-&gt;ACK=1,ack=J+1\uff0c\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u5668\u5904\u4e8eESTABLISHED</p> <p>\u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5</p> <p>\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u5e94\u7b54\u5ba2\u6237\u7aef\uff0c\u5e76\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5</p> <p>\u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u9488\u5bf9\u670d\u52a1\u5668\u8bf7\u6c42\u786e\u8ba4\u5e94\u7b54</p>"}, {"location": "android/network/net_base/#_4", "title": "\u4e3a\u4f55\u9700\u8981\u4e09\u6b21\u63e1\u624b", "text": "<p>TCP\u662f\u5168\u53cc\u5de5\u7684\uff0c\u53cc\u65b9\u90fd\u80fd\u53d1\u9001\u548c\u63a5\u6536\u80fd\u529b\uff0c\u4e09\u6b21\u63e1\u624b\u80fd\u786e\u8ba4\u53cc\u65b9\u7684\u53d1\u9001/\u63a5\u6536\u80fd\u529b\uff0c\u4e24\u6b21\u53ea\u80fd\u8bc1\u660e\u5ba2\u6237\u7aef\u7684\u53d1\u9001\u548c\u670d\u52a1\u7aef\u7684\u63a5\u6536\u80fd\u529b\uff0c\u56db\u6b21\u5c5e\u4e8e\u6d6a\u8d39</p>"}, {"location": "android/network/net_base/#tcp_1", "title": "TCP\u63e1\u624b\u6f0f\u6d1e", "text": "<p>\u5ba2\u6237\u7aef\u4f2a\u9020IP\u53d1\u9001\u8bf7\u6c42(\u7b2c\u4e00\u6b21\u63e1\u624b)\uff0c\u670d\u52a1\u7aef\u54cd\u5e94(\u7b2c\u4e8c\u6b21\u63e1\u624b)\u540e\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u7b2c\u4e09\u6b21\u63e1\u624b(\u6c38\u8fdc\u4e0d\u4f1a\u6709\uff0c\u5bfc\u81f4\u4e00\u81f4\u7b49\u5f85\u6d6a\u8d39\u8d44\u6e90)</p> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u65e0\u6548\u8fde\u63a5\u76d1\u63a7\u91ca\u653e\u3001\u5ef6\u7f13TCB\u5206\u914d\u65b9\u6cd5\u3001\u9632\u706b\u5899</p>"}, {"location": "android/network/net_base/#_5", "title": "\u56db\u6b21\u6325\u624b", "text": "<p>\u5ba2\u6237\u7aef------------\u670d\u52a1\u7aef</p> <p>-&gt;FIN=1,seq=X,\u5ba2\u6237\u7aef\u5904\u4e8eFIN_WAIT_1</p> <p>ACK=1,ack=X+1&lt;-\uff0c\u670d\u52a1\u5668\u5904\u4e8eCLOSE_WAIT\uff0c\u5ba2\u6237\u7aef\u4f9d\u7136\u80fd\u63a5\u6536\u6570\u636e\uff0c\u6536\u5230\u540e\u5904\u4e8eFIN_WAIT_2</p> <p>FIN=1,seq=j&lt;-\uff0c\u670d\u52a1\u5668\u5904\u4e8eCLOSE\uff0c\u5ba2\u6237\u7aef\u6536\u5230\u540e\u5904\u4e8eTIME_WAIT</p> <p>-&gt;ACK=1,ack=J+1\uff0c\u670d\u52a1\u5668\u6536\u5230\u540e\u5904\u4e8eCLOSED\uff0c2*MSL\u540e\u5ba2\u6237\u7aef\u5904\u4e8eCLOSED</p> <p>MSL\uff1a\u6700\u957f\u62a5\u6587\u6bb5\u5bff\u547d(\u5b58\u6d3b\u7684\u6700\u957f\u65f6\u95f4 RFC\u4e2d\u5b9a\u4e49\u4e3a2\u5206\u949f\uff0c\u4e00\u822c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e3a30s)</p> <p>TIME_WAIT\uff1a\u6301\u7eed1-4\u5206\u949f</p> <p>\u7b2c\u4e00\u6b21\u6325\u624b\uff1a\u5ba2\u6237\u7aef\u53d1\u9001\u5173\u95ed\u8bf7\u6c42</p> <p>\u7b2c\u4e8c\u6b21\u6325\u624b\uff1a\u670d\u52a1\u5668\u54cd\u5e94\u5ba2\u6237\u7aef\u5173\u95ed\u8bf7\u6c42</p> <p>\u7b2c\u4e09\u6b21\u6325\u624b\uff1a\u670d\u52a1\u7aef\u53d1\u9001\u5173\u95ed\u8bf7\u6c42</p> <p>\u7b2c\u56db\u6b21\u6325\u624b\uff1a\u5ba2\u6237\u7aef\u53d1\u9001\u5173\u95ed\u8bf7\u6c42\u786e\u8ba4</p> <p>\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u90fd\u53ef\u4ee5\u53d1\u8d77\u5173\u95ed\u8bf7\u6c42</p>"}, {"location": "android/network/net_base/#_6", "title": "\u4e3a\u4f55\u9700\u8981\u56db\u6b21\u6325\u624b", "text": "<p>\u548c\u4e09\u6b21\u63e1\u624b\u76f8\u540c\uff0c\u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u6570\u636e\u53d1\u9001\u65f6\u7b2c\u4e8c\u548c\u7b2c\u4e09\u6b21\u6325\u624b\u4f1a\u5408\u5e76</p>"}, {"location": "android/network/net_base/#time_wait", "title": "TIME_WAIT\u4f5c\u7528", "text": "<ol> <li>\u9632\u6b62\u8fde\u63a5\u5173\u95ed\u65f6\u7b2c\u56db\u6b21\u6325\u624b\u4e2d\u7684ack\u4e22\u5931\uff0c\u5982\u679c\u6ca1\u6709\u6b64\u72b6\u6001\uff0c\u5ba2\u6237\u7aef\u76f4\u63a5\u8fdb\u5165CLOSED\uff0c\u4e00\u65e6\u5ba2\u6237\u7aef\u6700\u540e\u4e00\u6b21ACK\u4e22\u5931\uff0c\u670d\u52a1\u5668\u4f1a\u91cd\u4f20\u6b64\u65f6\u65e0\u4eba\u5904\u7406\u5c06\u957f\u65f6\u95f4\u7b49\u5f85\u76f4\u5230\u91cd\u4f20\u6b21\u6570\u8fbe\u4e0a\u9650</li> <li>\u9632\u6b62\u65b0\u8fde\u63a5\u6536\u5230\u65e7\u94fe\u63a5\u7684TCP\u62a5\u6587</li> </ol>"}, {"location": "android/network/net_base/#socket", "title": "Socket", "text": "<p>Socket\u662f\u5e94\u7528\u5c42\u4e0eTCP/IP\u534f\u8bae\u901a\u4fe1\u7684\u4e2d\u95f4\u8f6f\u4ef6\u62bd\u8c61\u5c42\uff0c\u662f\u4e00\u7ec4\u63a5\u53e3</p> <p>\u5bf9\u4e8e\u5e94\u7528\u6765\u8bf4\u7f51\u7edc\u5e95\u5c42\u90fd\u662fsocket\uff0c\u5c06\u4f20\u8f93\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u94fe\u8def\u5c42\u5305\u88f9</p> <p>\u7f51\u7edc\u901a\u8baf\uff1a\u5efa\u7acb\u8fde\u63a5(\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u7aef)\u3001\u8bfb\u7f51\u7edc\u6570\u636e\u3001\u5199\u7f51\u7edc\u6570\u636e</p> <p>BIO\uff1aB-Blocking\uff0c\u963b\u585e\u5f0f\u7f51\u7edc\u901a\u8baf\u4e5f\u662f\u4f20\u7edf\u7684\u7f51\u7edc\u901a\u8baf\uff0c\u9762\u5411\u6d41\uff0c\u5982Socket\u901a\u8baf</p> <ul> <li>\u4e00\u4e2a\u5ba2\u6237\u7aef\u9700\u8981\u670d\u52a1\u7aef\u5f00\u4e00\u4e2a\u7ebf\u7a0b\u670d\u52a1\uff0c\u5927\u91cf\u5ba2\u6237\u7aef\u5c31\u9700\u8981\u5927\u91cf\u7ebf\u7a0b</li> <li>\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u5e76\u4e00\u76f4\u963b\u585e\u7b49\u5f85\uff0c\u670d\u52a1\u5668\u5904\u7406\u5e76\u54cd\u5e94\uff0c\u5ba2\u6237\u7aef\u6536\u5230\u54cd\u5e94\u5904\u7406\u4fe1\u606f</li> </ul> <p>\u670d\u52a1\u5668ServerSocket\uff1abind\u3001accept\u3001\u7ebf\u7a0b(socket) <pre><code>fun main() {\n    val executor = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors() * 2)\n    val serverSocket = ServerSocket()//\u670d\u52a1\u7aef\u5fc5\u5907\n    serverSocket.bind(InetSocketAddress(10001))//\u76d1\u542c\u7aef\u53e3\n    println(\"start server........\")\n    while (true) {\n        executor.execute {\n            serverSocket.accept().let { s -&gt;\n                val bis = ObjectInputStream(s.getInputStream())\n                val userName = bis.readUTF()\n                println(\"accept client msg: $userName\")\n                val bos = ObjectOutputStream(s.getOutputStream())\n                bos.writeUTF(\"Hello, $userName\")\n                bos.flush()\n            }\n        }\n    }\n}\n</code></pre> \u5ba2\u6237\u7aefsocket <pre><code>fun main() {\n    val serverAddress = InetSocketAddress(\"127.0.0.1\", 10001)\n    val socket = Socket()\n    socket.connect(serverAddress)\n    val bos = ObjectOutputStream(socket.getOutputStream())\n    bos.writeUTF(\"yuli\")\n    bos.flush()\n    val bis = ObjectInputStream(socket.getInputStream())\n    println(bis.readUTF())\n}\n</code></pre> NIO\uff1aIO\u591a\u8def\u590d\u7528\uff0c\u540c\u6b65\u975e\u963b\u585e\uff0c\u4f18\u5316BIO\uff0c\u9762\u5411\u7f13\u51b2\u533a</p> <p>\u6548\u7387\uff1aBIO\u6bd4NIO\u9ad8</p> <p>Selector\u3001Channel\u3001Buffer</p> <p>Buffer\uff1a\u4e00\u822c\u4f7f\u7528ByteBuffer,capacity\u3001position\u3001limit</p> <p>AIO\uff1a\u5f02\u6b65IO\uff0c\u771f\u6b63\u5b9e\u73b0\u7684\u53ea\u6709Windows</p> <p>\u76f4\u63a5\u5185\u5b58\u6bd4\u5806\u5185\u5b58\u5feb</p> <p>\u5806\u5185\u5b58\uff1a\u7531\u4e8ejvm\u5b58\u5728\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u9700\u8981\u5148\u62f7\u8d1d\u5230\u5e94\u7528\u8fdb\u7a0b\u7f13\u51b2\u533a\u518d\u62f7\u8d1d\u5230\u5957\u63a5\u5b57\u53d1\u9001\u7f13\u51b2\u533a</p>"}, {"location": "android/network/net_base/#_7", "title": "\u96f6\u62f7\u8d1d", "text": "<p>\u6307\u8ba1\u7b97\u673a\u6267\u884c\u64cd\u4f5c\u65f6\uff0cCPU\u4e0d\u9700\u8981\u5148\u5c06\u6570\u636e\u4ece\u67d0\u5904\u5185\u5b58\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u7279\u5b9a\u533a\u57df</p> <p>\u5c3d\u53ef\u80fd\u51cf\u5c11CPU\u62f7\u8d1d\u6b21\u6570\u6216\u6ca1\u6709CPU\u62f7\u8d1d\u5373\u4e3a\u96f6\u62f7\u8d1d</p> <p>\u4f7f\u7528mmap\u3001sendfile\u3001slice\u51fd\u6570\u53ef\u4ee5\u51cf\u5c11cpu\u62f7\u8d1d</p>"}, {"location": "android/network/net_base/#dma", "title": "DMA", "text": "<p>\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\u6280\u672f\uff0c\u7528\u6765\u4ee3\u66ffCPU\u8fdb\u884c\u6570\u636e\u642c\u8fd0\u5de5\u4f5c</p>"}, {"location": "android/network/net_base/#_8", "title": "\u4f20\u7edf\u6570\u636e\u4f20\u9001", "text": "<p>4\u6b21\u62f7\u8d1d\uff1a</p> <p>\u7528\u6237\u8fdb\u7a0b-----------------------------------\u5185\u6838</p> <p>[\u78c1\u76d8-&gt;DMA\u62f7\u8d1d-&gt;\u6587\u4ef6\u8bfb\u53d6\u7f13\u51b2\u533a]-&gt;CPU\u62f7\u8d1d-&gt;\u5e94\u7528\u8fdb\u7a0b\u7f13\u51b2\u533a-&gt;CPU\u62f7\u8d1d</p> <p>-&gt;[\u5957\u63a5\u5b57\u53d1\u9001\u7f13\u51b2\u533a-&gt;DMA\u62f7\u8d1d-&gt;\u7f51\u7edc\u8bbe\u5907\u7f13\u51b2\u533a]</p> <p>4\u6b21\u4e0a\u4e0b\u6587\u5207\u6362\uff1a</p> <p>\u7528\u6237\u6001-&gt;\u5f00\u59cbread-&gt;\u5185\u6838\u6001-&gt;read\u5b8c\u6210-&gt;\u7528\u6237\u6001-&gt;\u5f00\u59cbsend-&gt;\u5185\u6838\u6001-&gt;send\u5b8c\u6210-&gt;\u7528\u6237\u6001</p>"}, {"location": "android/network/net_base/#mmap", "title": "MMAP\u5185\u5b58\u6620\u5c04", "text": "<p>3\u6b21\u62f7\u8d1d\uff1a</p> <p>[\u78c1\u76d8-&gt;DMA\u62f7\u8d1d]-&gt;\u5e94\u7528\u8fdb\u7a0b\u7f13\u51b2\u533a-&gt;CPU\u62f7\u8d1d</p> <p>-&gt;[\u5957\u63a5\u5b57\u53d1\u9001\u7f13\u51b2\u533a-&gt;DMA\u62f7\u8d1d-&gt;\u7f51\u7edc\u8bbe\u5907\u7f13\u51b2\u533a]</p> <p>\u4e0a\u4e0b\u6587\u5207\u6362\u8fd8\u662f4\u6b21</p>"}, {"location": "android/network/net_base/#sendfile", "title": "sendfile", "text": "<p>[\u78c1\u76d8-&gt;DMA\u62f7\u8d1d-&gt;\u6587\u4ef6\u8bfb\u53d6\u7f13\u51b2\u533a]-&gt;CPU\u62f7\u8d1d-&gt;[\u5957\u63a5\u5b57\u53d1\u9001\u7f13\u51b2\u533a-&gt;DMA\u62f7\u8d1d-&gt;\u7f51\u7edc\u8bbe\u5907\u7f13\u51b2\u533a]</p> <p>\u786c\u4ef6\u652f\u6301\u60c5\u51b5\u4e0b\uff0cCPU\u62f7\u8d1d\u53ef\u7701\u7565\uff0c2\u6b21\u62f7\u8d1d\uff0c2\u6b21\u4e0a\u4e0b\u6587\u5207\u6362</p>"}, {"location": "android/network/net_base/#slice", "title": "slice", "text": "<p>2\u6b21\u62f7\u8d1d\uff0c2\u6b21\u4e0a\u4e0b\u6587\u5207\u6362\uff1a</p> <p>[\u78c1\u76d8-&gt;DMA\u62f7\u8d1d-&gt;\u6587\u4ef6\u8bfb\u53d6\u7f13\u51b2\u533a]-&gt;PIPE(\u7ba1\u9053)-&gt;[\u5957\u63a5\u5b57\u53d1\u9001\u7f13\u51b2\u533a-&gt;DMA\u62f7\u8d1d-&gt;\u7f51\u7edc\u8bbe\u5907\u7f13\u51b2\u533a]</p> <p>select\u3001poll\u3001epoll</p>"}, {"location": "android/network/net_charles/", "title": "\u6293\u5305\u5de5\u5177", "text": ""}, {"location": "android/network/net_charles/#charles", "title": "\u6293\u5305\u5de5\u5177charles", "text": "<p>\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.charlesproxy.com/download/</p> <p>\u6ce8\u518c\uff1ahttps://www.zzzmode.com/mytools/charles/</p>"}, {"location": "android/network/net_charles/#_1", "title": "\u4ee3\u7406\u914d\u7f6e", "text": ""}, {"location": "android/network/net_charles/#window", "title": "window", "text": "<p>Help-&gt;SSL Proxying-&gt;Install Charles Root Certificate</p> <p></p> <p>\u9009\u62e9\u5b89\u88c5\u8bc1\u4e66(I)...</p> <p></p> <p>\u9009\u62e9\u672c\u5730\u8ba1\u7b97\u673a</p> <p></p> <p>\u9009\u62e9\u53d7\u4fe1\u4efb\u7684\u6839\u8bc1\u4e66\u9881\u53d1\u673a\u6784</p> <p></p>"}, {"location": "android/network/net_charles/#_2", "title": "\u57fa\u672c\u4f7f\u7528", "text": ""}, {"location": "android/network/net_charles/#wireshark", "title": "Wireshark", "text": "<p>\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.wireshark.org/</p> <p>BPF\u8bed\u6cd5\uff1ahttps://www.wireshark.org/docs/dfref/</p>"}, {"location": "android/network/net_charles/#_3", "title": "\u6293\u5305\u767e\u5ea6\u6848\u4f8b", "text": "<p>TCP\u4e09\u6b21\u63e1\u624b\u5206\u6790</p> <p>\u4f7f\u7528\u8fc7\u6ee4\u5668\u8fc7\u6ee4ip\u548ctcp</p> <p></p> <p></p> <p>Frame\uff1a\u7269\u7406\u5c42</p> <p>Ethernet\uff1a\u94fe\u8def\u5c42</p> <p>Internet\uff1a\u7f51\u7edc\u5c42</p> <p>Transmission\uff1a\u4f20\u8f93\u5c42\uff0cTCP\u6240\u5728</p> <p>\u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\uff0cSYN=1\uff0cSeq=1319028629  \u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u7aef\u5e94\u7b54\uff0c\u5e76\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\uff0cACK=1,ack=1319028629+1,SYN=1,seq=4292058564  \u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u5e94\u7b54\uff0cACK=1,ack=4292058564+1 </p>"}, {"location": "android/network/net_http/", "title": "HTTP\u534f\u8bae", "text": ""}, {"location": "android/network/net_http/#http", "title": "HTTP", "text": "<p>HTTP\u534f\u8bae\uff1a\u7528\u4e8e\u4ece\u4e07\u7ef4\u7f51\u670d\u52a1\u5668\u4f20\u8f93\u8d85\u6587\u672c\u5230\u672c\u5730\u6d4f\u89c8\u5668\u7684\u4f20\u8f93\u534f\u8bae\uff0c\u57fa\u4e8eTCP/IP\u534f\u8bae\u6765\u4f20\u9012\u6570\u636e\uff0c\u5c5e\u4e8e\u5e94\u7528\u5c42\u9762\u5411\u5bf9\u8c61\u7684\u534f\u8bae</p>"}, {"location": "android/network/net_http/#http10", "title": "http1.0", "text": "<p>\u65e0\u8fde\u63a5\uff0c\u9650\u5236\u6bcf\u6b21\u53ea\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u5904\u7406\u5b8c\u8bf7\u6c42\u5e76\u6536\u5230\u5ba2\u6237\u7aef\u5e94\u7b54\u540e\u65ad\u5f00\u8fde\u63a5</p> <p>\u65e0\u72b6\u6001\uff0c\u4e0d\u5bf9\u8bf7\u6c42\u548c\u54cd\u5e94\u4e4b\u95f4\u7684\u72b6\u6001\u8fdb\u884c\u4fdd\u5b58</p> <p>http\u62a5\u6587</p> <p></p>"}, {"location": "android/network/net_http/#http11", "title": "http1.1", "text": "<p>\u9ed8\u8ba4\u4f7f\u7528Connection:keep-alive\uff0c\u901a\u8fc7Content-Length\u5b57\u6bb5\u6765\u5224\u65ad\u5f53\u524d\u8bf7\u6c42\u6570\u636e\u662f\u5426\u5df2\u7ecf\u5168\u90e8\u63a5\u53d7</p>"}, {"location": "android/network/net_http/#httphttps", "title": "HTTP\u548cHTTPS", "text": "<p>HTTPS=HTTP+SSL/TLS</p> HTTP HTTPS \u7aef\u53e3 80 443 \u5185\u5bb9 \u660e\u6587\uff0c\u4e0d\u5b89\u5168 \u52a0\u5bc6\uff0c\u5b89\u5168 \u8bc1\u4e66 \u65e0 \u9700\u8981CA\u9881\u53d1\u7684\u8bc1\u4e66 \u54cd\u5e94\u901f\u5ea6 \u76f8\u5bf9\u5feb\uff0c\u53ea\u9700\u8981\u63e1\u624b\u76843\u4e2a\u5305 \u76f8\u5bf9\u6162\uff0c\u989d\u5916\u9700\u8981SSL\u63e1\u624b\u76849\u4e2a\u5305\u517112\u4e2a\u5305 <p>\u660e\u6587\u4f20\u8f93\u7f3a\u9677</p> <ol> <li>\u7a83\u542c\u98ce\u9669\uff1a\u7b2c\u4e09\u65b9\u53ef\u4ee5\u83b7\u5f97\u901a\u4fe1\u5185\u5bb9</li> <li>\u7be1\u6539\u98ce\u9669\uff1a\u7b2c\u4e09\u65b9\u53ef\u4ee5\u4fee\u6539\u901a\u4fe1\u5185\u5bb9</li> <li>\u5192\u5145\u98ce\u9669\uff1a\u7b2c\u4e09\u65b9\u53ef\u4ee5\u5192\u5145\u8eab\u4efd\u53c2\u4e0e\u901a\u4fe1</li> </ol>"}, {"location": "android/network/net_http/#ssltls", "title": "SSL\u548cTLS\u534f\u8bae", "text": "<p>\u89e3\u51b3\u660e\u6587\u4f20\u8f93\u7f3a\u9677</p> <ol> <li>\u52a0\u5bc6\u4f20\u64ad\uff0c\u9632\u6b62\u7a83\u542c</li> <li>\u6821\u9a8c\u673a\u5236\uff0c\u4e00\u65e6\u88ab\u7be1\u6539\uff0c\u901a\u4fe1\u53cc\u65b9\u7acb\u523b\u53d1\u73b0</li> <li>\u8eab\u4efd\u8bc1\u4e66\uff0c\u9632\u6b62\u88ab\u5192\u5145</li> </ol> <p>\u57fa\u672c\u601d\u8def\uff1a\u516c\u94a5\u52a0\u5bc6\u6cd5\uff0c\u5ba2\u6237\u7aef\u62ff\u5230\u670d\u52a1\u5668\u7684\u516c\u94a5\u5bf9\u4fe1\u606f\u52a0\u5bc6\uff0c\u670d\u52a1\u5668\u4f7f\u7528\u79c1\u94a5\u89e3\u5bc6</p> <p>TLS\u662fSSL3.0\u7684\u540e\u7eed\u7248\u672c</p> <p>SSL\u63e1\u624b</p> <ol> <li>ClientHello\uff1a\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u51fa\u52a0\u5bc6\u901a\u4fe1\u8bf7\u6c42(\u63d0\u4f9b\u652f\u6301\u7684\u534f\u8bae\u7248\u672c\u3001\u968f\u673a\u6570\u7528\u4e8e\u751f\u6210\u5bf9\u8bdd\u5bc6\u94a5\u3001\u652f\u6301\u7684\u52a0\u5bc6\u7b97\u6cd5\u5982RSA\u3001\u652f\u6301\u7684\u538b\u7f29\u65b9\u6cd5)</li> <li>ServerHello\uff1a\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\u540e\u54cd\u5e94(\u56de\u5e94\u786e\u8ba4\u4f7f\u7528\u7684\u52a0\u5bc6\u901a\u4fe1\u534f\u8bae\u7248\u672c\u3001\u968f\u673a\u6570\u7528\u4e8e\u751f\u6210\u5bf9\u8bdd\u5bc6\u94a5\u3001\u786e\u8ba4\u52a0\u5bc6\u7b97\u6cd5\u3001\u670d\u52a1\u5668\u8bc1\u4e66)</li> <li>\u5ba2\u6237\u7aef\u56de\u5e94\uff1a\u6821\u9a8c\u8bc1\u4e66\u53d6\u51fa\u516c\u94a5(\u56de\u5e94\u7528\u516c\u94a5\u52a0\u5bc6\u7684\u968f\u673a\u6570\u3001\u7f16\u7801\u66f4\u6539\u901a\u77e5\u3001\u63e1\u624b\u7ed3\u675f\u901a\u77e5)</li> <li>\u670d\u52a1\u7aef\u56de\u5e94\uff1a\u8ba1\u7b97\u751f\u6210\u4f1a\u8bdd\u5bc6\u94a5(\u53d1\u9001\u7f16\u7801\u6539\u53d8\u901a\u77e5\u3001\u670d\u52a1\u5668\u63e1\u624b\u7ed3\u675f\u901a\u77e5)</li> </ol>"}, {"location": "android/network/net_http/#getpost", "title": "get\u548cpost", "text": "GET POST \u5728\u6d4f\u89c8\u5668\u56de\u9000 \u65e0\u5bb3 \u518d\u6b21\u63d0\u4ea4\u8bf7\u6c42 URL\u5730\u5740 \u53ef\u4ee5\u4e66\u7b7e\u6536\u85cf \u4e0d\u884c cache \u4e3b\u52a8\u7f13\u5b58 \u9ed8\u8ba4\u4e0d\u7f13\u5b58\uff0c\u9700\u8981\u624b\u52a8\u8bbe\u7f6e \u7f16\u7801 url\u7f16\u7801 \u591a\u79cd\u7f16\u7801\u65b9\u5f0f \u5386\u53f2\u8bb0\u5f55 \u4fdd\u7559 \u4e0d\u4fdd\u7559 \u53c2\u6570\u957f\u5ea6 \u9650\u5236 \u4e0d\u9650\u5236 \u53c2\u6570\u6570\u636e\u7c7b\u578b ASCII\u5b57\u7b26 \u65e0\u9650\u5236 \u5b89\u5168 \u53c2\u6570\u66b4\u9732\u5728URL\u4e0a \u88ab\u52a0\u5bc6 \u4f20\u9012\u5f62\u5f0f \u76f4\u63a5\u5728URL\u540e\u9762 \u8bf7\u6c42\u4f53\u4e2d <p>\u672c\u8d28\u6ca1\u6709\u533a\u522b\uff0c\u90fd\u662f\u57fa\u4e8eTCP/IP\uff0c\u7531HTTP\u7684\u89c4\u5b9a\u548c\u670d\u52a1\u5668\u7684\u9650\u5236\u9020\u6210\u4e0d\u540c\u4f53\u73b0</p>"}, {"location": "android/network/net_http/#url", "title": "URL\u52a0\u8f7d\u539f\u7406", "text": "<p>\u4e00\u6b21\u5b8c\u6574HTTP\u8bf7\u6c42 1. DNS\u57df\u540d\u89e3\u6790 2. TCP\u8fde\u63a5\uff0cSSL\u63e1\u624b 3. \u53d1\u9001HTTP/HTTPS\u8bf7\u6c42 4. \u670d\u52a1\u7aef\u5904\u7406\u8bf7\u6c42\u5e76\u8fd4\u56de\u62a5\u6587 5. \u6d4f\u89c8\u5668\u89e3\u6790\u5e76\u6e32\u67d3\u9875\u9762 6. HTTP\u8fde\u63a5\u65ad\u5f00</p> <p>http2.0\u51fa\u73b0keep-alive\u53ef\u4ee5\u4f7f\u7b2c6\u6b65\u4e0d\u5173\u95ed</p>"}, {"location": "android/network/net_http/#_1", "title": "\u65ad\u70b9\u7eed\u4f20\u539f\u7406", "text": "<p>\u5229\u7528HTTP\u8bf7\u6c42\u4e2d\u7684Range\u5b57\u6bb5</p> <p>retrofit\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528@Header(\"Range\")\uff0c\u5bf9\u5e94\u6570\u636e\"bytes=xxx-xxx\"\uff0c\u4ece\u7b2cxxx\u5b57\u8282\u5f00\u59cb\u5230xxx\u5b57\u8282\u7ed3\u675f\uff0c\u7ed3\u675f\u53ef\u7701\u7565\u5373\"bytes=xxx\"</p> <p>\u4e5f\u53ef\u4ee5\u5229\u7528okhttp\u62e6\u622a\u5668\uff0caddHeader(\"RANGE\",\"bytes=${start}\")</p> <p>\u5199\u5165\u6587\u4ef6\u65f6\u5229\u7528FileOutputStream(file, true)\u7684append\u6a21\u5f0f\u5373\u53ef</p>"}, {"location": "android/network/net_http/#_2", "title": "\u8bf7\u6c42\u65b9\u5f0f", "text": "<p>\u5e42\u7b49\uff1a\u591a\u6b21\u8bf7\u6c42\u76f8\u540c\u7684URL\u4f1a\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c</p> <p>GET\u8bf7\u6c42\uff1a \u83b7\u53d6\u6570\u636e\uff0c\u53c2\u6570\u9644\u52a0\u5728URL\u4e2d\uff0c\u662f\u5e42\u7b49\u7684</p> <p>\u9002\u7528\u4e8e\u8bfb\u53d6\u8d44\u6e90\u548c\u67e5\u8be2\u6570\u636e\uff0c\u4f46\u4e0d\u5e94\u7528\u4e8e\u63d0\u4ea4\u654f\u611f\u4fe1\u606f\u6216\u4ea7\u751f\u526f\u4f5c\u7528\u7684\u64cd\u4f5c\u3002</p> <p>POST\u8bf7\u6c42\uff1a\u63d0\u4ea4\u6570\u636e\u3002\u53c2\u6570\u5305\u542b\u5728\u8bf7\u6c42\u4e3b\u4f53\u4e2d\uff0c\u4e0d\u662f\u5e42\u7b49\u7684</p> <p>\u9002\u5408\u7528\u4e8e\u521b\u5efa\u65b0\u8d44\u6e90\u3001\u63d0\u4ea4\u8868\u5355\u6570\u636e\u6216\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c</p> <p>\u9002\u7528\u4e8e\u5904\u7406\u654f\u611f\u4fe1\u606f\uff0c\u5982\u7528\u6237\u767b\u5f55\u3001\u6ce8\u518c\u7b49\u3002</p> <p>PUT\u8bf7\u6c42\uff1a\u66f4\u65b0\u8d44\u6e90\uff0c\u662f\u5e42\u7b49\u7684</p> <p>\u9002\u7528\u4e8e\u5bf9\u8d44\u6e90\u8fdb\u884c\u5168\u9762\u66ff\u6362\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u66f4\u65b0\u7528\u6237\u4fe1\u606f\u3001\u4fee\u6539\u6587\u7ae0\u5185\u5bb9\u7b49\u3002</p> <p>DELETE\u8bf7\u6c42\uff1a\u5220\u9664\u8d44\u6e90\uff0c\u662f\u5e42\u7b49\u7684</p> <p>\u9002\u7528\u4e8e\u5220\u9664\u8d44\u6e90\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u5220\u9664\u7528\u6237\u3001\u5220\u9664\u6587\u7ae0\u7b49\u3002</p> <p>PATCH\u8bf7\u6c42\uff1a\u5bf9\u8d44\u6e90\u8fdb\u884c\u5c40\u90e8\u66f4\u65b0\u3002\u4e0ePUT\u8bf7\u6c42\u7c7b\u4f3c\uff0c\u53ea\u66f4\u65b0\u8d44\u6e90\u7684\u4e00\u90e8\u5206\u5185\u5bb9</p> <p>\u9002\u7528\u4e8e\u53ea\u9700\u8981\u66f4\u65b0\u8d44\u6e90\u7684\u67d0\u4e9b\u5c5e\u6027\u6216\u5b57\u6bb5\u7684\u60c5\u51b5\uff0c\u800c\u4e0d\u9700\u8981\u66ff\u6362\u6574\u4e2a\u8d44\u6e90\u3002</p> <p>OPTIONS\u8bf7\u6c42\uff1a\u83b7\u53d6\u670d\u52a1\u5668\u652f\u6301\u7684HTTP\u65b9\u6cd5\u548c\u8d44\u6e90\u7684\u76f8\u5173\u4fe1\u606f</p> <p>\u901a\u5e38\u7528\u4e8e\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u63e1\u624b\u8fc7\u7a0b\uff0c\u4ee5\u4fbf\u786e\u5b9a\u53ef\u7528\u7684\u4ea4\u4e92\u9009\u9879\u3002</p> <p>HEAD\u8bf7\u6c42\uff1a\u7c7b\u4f3c\u4e8eGET\u8bf7\u6c42\uff0c\u4f46\u53ea\u8fd4\u56de\u54cd\u5e94\u5934\uff0c\u4e0d\u8fd4\u56de\u5b9e\u4f53\u5185\u5bb9\u3002\u901a\u8fc7\u53d1\u9001HEAD\u8bf7\u6c42\uff0c\u53ef\u4ee5\u83b7\u53d6\u8d44\u6e90\u7684\u5143\u4fe1\u606f\uff0c\u5982\u6587\u4ef6\u5927\u5c0f\u3001\u4fee\u6539\u65e5\u671f\u7b49\u3002</p> <p>\u901a\u5e38\u7528\u4e8e\u68c0\u67e5\u8d44\u6e90\u662f\u5426\u5b58\u5728\u3001\u83b7\u53d6\u8d44\u6e90\u7684\u57fa\u672c\u4fe1\u606f\u7b49\u573a\u666f\u3002</p> <p>TRACE\u8bf7\u6c42\uff1a\u7528\u4e8e\u56de\u663e\u670d\u52a1\u5668\u6536\u5230\u7684\u8bf7\u6c42\u3002\u901a\u8fc7\u53d1\u9001TRACE\u8bf7\u6c42\uff0c\u53ef\u4ee5\u5728\u8bf7\u6c42-\u54cd\u5e94\u94fe\u8def\u4e0a\u8ddf\u8e2a\u8bf7\u6c42\u7684\u5904\u7406\u8fc7\u7a0b\uff0c\u5e76\u68c0\u67e5\u4ee3\u7406\u6216\u670d\u52a1\u5668\u5bf9\u8bf7\u6c42\u7684\u4fee\u6539\u60c5\u51b5\u3002</p> <p>\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u548c\u8bca\u65ad\uff0c\u4ee5\u4fbf\u4e86\u89e3\u8bf7\u6c42\u5728\u670d\u52a1\u5668\u7aef\u7684\u5904\u7406\u60c5\u51b5\u3002</p> <p>CONNECT\u8bf7\u6c42\uff1a\u7528\u4e8e\u5efa\u7acb\u4e0e\u4ee3\u7406\u670d\u52a1\u5668\u7684\u96a7\u9053\u8fde\u63a5\uff0c\u901a\u5e38\u7528\u4e8e\u8fdb\u884c\u5b89\u5168\u7684SSL/TLS\u52a0\u5bc6\u901a\u4fe1\u3002</p> <p>\u4e3b\u8981\u7528\u4e8e\u4ee3\u7406\u670d\u52a1\u5668\u4e0e\u76ee\u6807\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u63e1\u624b\u8fc7\u7a0b\uff0c\u4ee5\u786e\u4fdd\u5b89\u5168\u8fde\u63a5\u7684\u5efa\u7acb\u3002</p>"}, {"location": "android/network/net_okhttp/", "title": "Net okhttp", "text": "<p>Okhttp\u9ed8\u8ba4\u63d0\u4f9bget head post put delete patch</p> <p>\u652f\u6301\u534f\u8bae</p> <p>\u7c7b\uff1aProtocol</p> <ul> <li>HTTP_1_0(\"http/1.0\")</li> <li>HTTP_1_1(\"http/1.1\")</li> <li>SPDY_3(\"spdy/3.1\")\u5e9f\u5f03\u6539\u7528HTTP_2(\"h2\") </li> <li>H2_PRIOR_KNOWLEDGE(\"h2_prior_knowledge\")\u5c31\u662fHTTP_2\u4e0d\u52a0\u5bc6\u7248\u672c</li> <li>QUIC(\"quic\")\u5c31\u662fHTTP3\uff0c\u57fa\u4e8eUDP\u5b9e\u73b0</li> </ul> <pre><code>,\n\n[rfc_7230]: https://tools.ietf.org/html/rfc7230\n,\n\n@Deprecated(\"OkHttp has dropped support for SPDY. Prefer {@link #HTTP_2}.\")\n,\n\nHTTP_2(\"h2\"),\n[rfc_7540_34]: https://tools.ietf.org/html/rfc7540.section-3.4\n\nH2_PRIOR_KNOWLEDGE(\"h2_prior_knowledge\"),\n\nQUIC(\"quic\");\n</code></pre>"}, {"location": "android/network/net_socket/", "title": "Socket", "text": ""}, {"location": "android/network/net_socket/#cppsocket", "title": "cpp\u5c42Socket", "text": "<p>\u670d\u52a1\u7aef</p> <p>ServerSocket</p> <p>\u5ba2\u6237\u7aef</p> <p>\u7ebf\u7a0b\u6c60</p> <p>ThreadPool</p>"}, {"location": "android/network/net_socket/#javasocket", "title": "java\u5c42Socket", "text": ""}, {"location": "android/performance/android_anr/", "title": "ANR\u76d1\u63a7", "text": ""}, {"location": "android/performance/android_anr/#anr", "title": "ANR\u7c7b\u578b", "text": "\u7c7b\u578b \u4ea7\u751f\u6761\u4ef6 logcat\u5173\u952e\u5b57 KeyDispatch Timeout input\u4e8b\u4ef65s\u5185\u672a\u5904\u7406\u5b8c Input event dispatching timed out Broadcast Timeout onReceive(\u524d\u53f0\u5e7f\u64ad10s\u3001\u540e\u53f060s)\u672a\u5904\u7406\u5b8c Timeout of broadcast BroaddcastRecord Service Timeout onCreate\u3001onBind\u7b49\u751f\u547d\u5468\u671f(\u524d\u53f0\u670d\u52a120s\u3001\u540e\u53f0200s)\u672a\u5904\u7406\u5b8c Timeout exxecuting service ContentProvider Timeout 10s\u672a\u5904\u7406\u5b8c timeout publishing content providers"}, {"location": "android/performance/android_anr/#anr_1", "title": "ANR\u5e38\u89c1\u539f\u56e0", "text": "<ol> <li>\u4e3b\u7ebf\u7a0b\u9891\u7e41\u8fdb\u884c\u8017\u65f6IO\u64cd\u4f5c</li> <li>\u591a\u7ebf\u7a0b\u64cd\u4f5c\u7684\u6b7b\u9501\uff0c\u4e3b\u7ebf\u7a0b\u88abblock</li> <li>\u4e3b\u7ebf\u7a0b\u88abBinder\u5bf9\u7aefblock</li> <li>System Server\u4e2dWatchDog</li> <li>service binder\u7684\u8fde\u63a5\u8fbe\u5230\u4e0a\u9650\u65e0\u6cd5\u548cSystem Server\u901a\u4fe1</li> <li>\u7cfb\u7edf\u8d44\u6e90\u8017\u5c3d</li> </ol>"}, {"location": "android/performance/android_anr/#_1", "title": "\u5904\u7406\u624b\u6bb5", "text": ""}, {"location": "android/performance/android_anr/#_2", "title": "\u7ebf\u4e0b", "text": "<ol> <li>\u901a\u8fc7logcat\u548c/data/anr/trace_*.txt\u6587\u4ef6\u5b9a\u4f4d\u786e\u5b9aanr\u65f6\u95f4\u70b9</li> <li>CPU\u4f7f\u7528\u7387</li> <li>\u4e3b\u7ebf\u7a0b\u72b6\u6001\u3001\u5176\u4ed6\u7ebf\u7a0b\u72b6\u6001</li> </ol> <p>\u5173\u952e\u4fe1\u606f\uff1aANR\u65f6\u95f4\u3001\u8fdb\u7a0bpid\u3001\u8fdb\u7a0b\u540d\u3001ANR\u7c7b\u578b</p>"}, {"location": "android/performance/android_anr/#_3", "title": "\u7ebf\u7a0b\u72b6\u6001", "text": "<p>UNDEFINED=-1</p> <p>ZOMBIDE=0//terminated</p> <p>RUNNING=1</p> <p>TIMED_WAIT=2</p> <p>MONITOR=3//blocked</p> <p>WAIT=4</p> <p>INITIALIZING=5</p> <p>STARTING=6</p> <p>NATIVE=7</p> <p>VMWAIT=8</p> <p>SUSPENDED=9</p> <p>java\u4e2dThread\u5c01\u88c5\u7684\u751f\u547d\u5468\u671f</p>"}, {"location": "android/performance/android_anr/#_4", "title": "\u7ebf\u4e0a", "text": "<p>\u901a\u8fc7\u53cb\u76df\u3001bugly\u7b49\u76d1\u63a7\uff0c\u63d0\u53d6\u65e5\u5fd7\u624b\u673a\u914d\u7f6e\u4fe1\u606f\u5927\u81f4\u5b9a\u4f4d\uff0c\u6709\u6761\u4ef6\u53ef\u672c\u5730\u590d\u73b0</p>"}, {"location": "android/performance/android_anr/#anr_2", "title": "\u81ea\u884c\u5b9e\u73b0ANR\u76d1\u542c", "text": "<p>1.\u5229\u7528FileObserver\uff0c\u4f46\u53d7selinux\u9650\u5236\uff0c\u7cfb\u7edf\u5f00\u53d1\u4e0d\u5f71\u54cd\uff0c\u4e09\u65b9app\u4e0d\u884c <pre><code>class AnrObserver : FileObserver {\n    constructor(path: String) : super(path)\n\n    @RequiresApi(Build.VERSION_CODES.Q)\n    constructor(file: File) : super(file)\n\n    override fun onEvent(event: Int, path: String?) {\n        when (event) {\n            ACCESS -&gt; {}//\u6587\u4ef6\u88ab\u8bbf\u95ee\n            ATTRIB -&gt; {}//\u6587\u4ef6\u5c5e\u6027\u88ab\u4fee\u6539\uff0c\u5982chmod\u3001chown\u3001touch\u7b49\n            CLOSE_NOWRITE -&gt; {}//\u4e0d\u53ef\u5199\u6587\u4ef6\u88abclose\n            CLOSE_WRITE -&gt; {}//\u53ef\u5199\u6587\u4ef6\u88abclose\n            CREATE -&gt; {}//\u521b\u5efa\u65b0\u6587\u4ef6\n            DELETE -&gt; {}//\u6587\u4ef6\u88ab\u5220\u9664\n            DELETE_SELF -&gt; {}//\u81ea\u5220\u9664\uff0c\u5373\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u5728\u6267\u884c\u65f6\u5220\u9664\u81ea\u5df1\n            MODIFY -&gt; {}//\u6587\u4ef6\u88ab\u4fee\u6539\n            MOVE_SELF -&gt; {}//\u81ea\u79fb\u52a8\uff0c\u5373\u4e00\u4e2a\u53ef\u6307\u5411\u6027\u6587\u4ef6\u5728\u6267\u884c\u65f6\u79fb\u52a8\u81ea\u5df1\n            MOVED_FROM -&gt; {}//\u6587\u4ef6\u88ab\u79fb\u8d70\uff0c\u5982mv\n            MOVED_TO -&gt; {}//\u6587\u4ef6\u88ab\u79fb\u6765\uff0c\u5982mv\u3001cp\n            OPEN -&gt; {}//\u6587\u4ef6\u88ab\u6253\u5f00\n            else -&gt; {}//ALL_EVENTS\u5305\u62ec\u4ee5\u4e0a\u6240\u6709\u4e8b\u4ef6\n        }\n    }\n}\n</code></pre> \u8c03\u7528startWatching\u548cstopWatching\u6765\u542f\u52a8\u76d1\u542c</p> <p>2.\u53c2\u8003\u7cfb\u7edf\u7684WatchDog\u5b9e\u73b0</p> <p>\u539f\u7406\u662f\u4f7f\u7528Handler\u6bcf\u4e2a5s\u6267\u884c\u4e00\u4e2a\u540e\u53f0\u7ebf\u7a0b\uff0c\u5982\u679c\u80fd\u6267\u884c\u6210\u529f\u5219\u6ca1\u6709\u51fa\u73b0ANR</p> <p><pre><code>class ANRWatchDog private constructor() : Thread(\"ANR-WatchDog-Thread\") {\n    companion object {\n        val TAG: String = \"ANR\"\n        val TIMEOUT: Long = 5000L\n        val instance: ANRWatchDog = Holder.instance\n    }\n\n    private var ignoreDebugger: Boolean = true\n\n    private val mainHandler by lazy { Handler(Looper.getMainLooper()) }\n\n    private val anrChecker: ANRChecker by lazy { ANRChecker() }\n\n    private val lock = Object()\n\n    var onAnrHappened: ((stackTraceInfo: String) -&gt; Unit)? = null\n\n    override fun run() {\n        Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND) //\u540e\u53f0\u7ebf\u7a0b\n        while (true) {\n            while (!isInterrupted) {\n                synchronized(lock) {\n                    anrChecker.schedule()\n                    var waitTime = TIMEOUT\n                    val start = SystemClock.uptimeMillis()\n                    while (waitTime &gt; 0) {\n                        try {\n                            lock.wait(waitTime)\n                        } catch (e: InterruptedException) {\n                            Log.w(TAG, e.toString())\n                        }\n                        waitTime = TIMEOUT - (SystemClock.uptimeMillis() - start)\n                    }\n                }\n                if (!anrChecker.isBlocked()) {\n                    continue\n                }\n                if (!ignoreDebugger &amp;&amp; Debug.isDebuggerConnected()) {\n                    continue\n                }\n                onAnrHappened?.invoke(getStackTraceInfo())\n            }\n            onAnrHappened = null\n        }\n    }\n\n    private fun getStackTraceInfo(): String {\n        val sb = StringBuilder()\n        for (stElement in Looper.getMainLooper().thread.stackTrace) {\n            sb.append(stElement.toString()).append(\"\\r\\n\")\n        }\n        return sb.toString()\n    }\n\n    private object Holder {\n        val instance: ANRWatchDog = ANRWatchDog()\n    }\n\n    private inner class ANRChecker : Runnable {\n        private var completed: Boolean = false\n        private var startTime: Long = 0\n        private var executeTime: Long = SystemClock.uptimeMillis()\n\n        override fun run() {\n            synchronized(lock) {\n                completed = true\n                executeTime = SystemClock.uptimeMillis()\n            }\n        }\n\n        fun schedule() {\n            completed = false\n            startTime = SystemClock.uptimeMillis()\n            mainHandler.postAtFrontOfQueue(this@ANRChecker)\n        }\n\n        fun isBlocked(): Boolean = !completed || executeTime - startTime &gt;= 5000L\n    }\n}\n</code></pre> \u6d4b\u8bd5\u4ee3\u7801 <pre><code>ANRWatchDog.instance.apply {\n    onAnrHappened = { info: String -&gt;\n        Log.e(\"tag\", \"info: $info\")\n    }\n    start()\n}\nval handler = Handler()\nhandler.postDelayed({\n    Thread.sleep(1000 * 10)\n}, 3000)\n</code></pre> ANRWatchDog-java\u7248\u672c</p>"}, {"location": "android/performance/android_apk_cut/", "title": "\u7626\u8eab\u4f18\u5316", "text": ""}, {"location": "android/performance/android_apk_cut/#_1", "title": "\u5f00\u542f\u8d44\u6e90\u4f18\u5316", "text": "<pre><code>buildTypes {\n    signingConfigs {\n        release {\n            storeFile file('E:\\\\Software\\\\AndroidStudio\\\\default.jks')\n            storePassword '112233'\n            keyAlias 'key0'\n            keyPassword '123456'\n        }\n    }\n    release {\n        minifyEnabled true\n        shrinkResources true\n        signingConfig signingConfigs.release\n        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n    }\n}\n</code></pre>"}, {"location": "android/performance/android_apk_cut/#_2", "title": "\u81ea\u5b9a\u4e49\u4fdd\u7559\u8d44\u6e90", "text": "<p>\u8def\u5f84\uff1ares/raw/keep.xml <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources xmlns:tools=\"http://schemas.android.com/tools\" \n    tools:discard=\"@layout/unused\" \n    tools:keep=\"@layout/used*_a,@layout/used_b\" /&gt;\n</code></pre> keep\uff1a\u6307\u5b9a\u4fdd\u7559\u7684\u8d44\u6e90</p> <p>discard\uff1a\u6307\u5b9a\u8981\u820d\u5f03\u7684\u8d44\u6e90</p> <p>\u90fd\u662f\u7528\uff0c\u5206\u5272\uff0c\u53ef\u7528\u901a\u914d\u7b26*</p>"}, {"location": "android/performance/android_apk_cut/#_3", "title": "\u56fd\u9645\u5316\u7cbe\u7b80", "text": "<pre><code>defaultConfig {\n    //...\n    resConfigs(\"zh-rCN\")\n}\n</code></pre>"}, {"location": "android/performance/android_apk_cut/#_4", "title": "\u52a8\u6001\u5e93\u914d\u7f6e", "text": "<p><pre><code>defaultConfig {\n    //...\n    ndk {\n        abiFilters 'armeabi-v7a'\n    }\n}\n</code></pre> \u603b\u5171\u652f\u63014\u79cd\uff1aarmeabi-v7a\uff0carm64-v8a\uff0cx86\uff0cx86_64\uff0c\u4e00\u822c\u624b\u673a\u90fd\u662farm\u67b6\u6784</p>"}, {"location": "android/performance/android_apk_cut/#_5", "title": "\u5206\u5305\u6253\u5305", "text": "<p>\u65b9\u5f0f\u4e00(\u8fc7\u65f6) <pre><code>flavorDimensions \"default\"\nproductFlavors {\n    arm32 {\n        dimension \"default\"\n        ndk {\n            abiFilters 'armeabi-v7a'\n        }\n    }\n    x86 {\n        dimension \"default\"\n        ndk {\n            abiFilters 'x86_64'\n        }\n    }\n}\n</code></pre> \u6253\u5305\u5b8c\u5728output\u76ee\u5f55</p> <p></p> <p>\u65b9\u5f0f\u4e8c(\u63a8\u8350) <pre><code>splits {\n    abi{\n        enable true\n        reset()\n        include 'armeabi-v7a', 'x86_64'\n        universalApk true // \u5305\u542b\u5168\u90e8\u67b6\u6784\n    }\n}\n</code></pre> \u6253\u5305\u5b8c\u5728output\u76ee\u5f55</p> <p></p>"}, {"location": "android/performance/android_apk_cut/#_6", "title": "\u56fe\u7247\u8d44\u6e90\u5904\u7406", "text": "<ol> <li>png\u3001jpeg\u8f6cwebp\uff0c\u6700\u597d\u4f7f\u7528\u7f51\u7edc\u56fe\u7247</li> <li>\u77e2\u91cf\u56fe(\u5c0f\u56fe\u6807\u4f7f\u7528)\uff0cImageView\u7ed3\u5408\u4f7f\u7528tint\u5c5e\u6027\u4fee\u6539\u56fe\u6807\u989c\u8272</li> <li>mipmap-x\uff0cdrawable-x\u76ee\u5f55\u914d\u5408\u5c4f\u5e55\u9002\u914d\u53ef\u7cbe\u7b80</li> </ol>"}, {"location": "android/performance/android_apk_cut/#_7", "title": "\u4ee3\u7801\u6df7\u6dc6", "text": "<p>res\u6df7\u6dc6\uff1ahttps://github.com/shwenzhang/AndResGuard</p> <p>java\u6df7\u6dc6\uff1aminifyEnabled \u7f6e\u4e3a true</p> <p>-keep class androidx.lifecycle.** { *; }</p>"}, {"location": "android/performance/android_bitmap/", "title": "Bitmap\u4f18\u5316", "text": ""}, {"location": "android/performance/android_bitmap/#bitmap", "title": "Bitmap", "text": "<p>\u56fe\u7247\u5360\u7528\u5185\u5b58\u5927\u5c0f\u8ba1\u7b97\uff1a\u5206\u8fa8\u7387x\u50cf\u7d20\u70b9\u5927\u5c0f</p> <p>\u7f16\u7801\u6a21\u5f0f\uff1a</p> <p>RGB_565\uff1a16\u4f4d\uff0c2\u4e2a\u5b57\u8282(byte)</p> <p>ARGB_8888\uff1a32\u4f4d\uff0c4\u4e2a\u5b57\u8282(byte)</p> <p>100*100\u7684\u56fe\u7247\u5360\u7528\u5185\u5b58\uff1a100x100x2(4) = 20000(40000)byte</p> <p>\u6ce8\u610f\uff1a\u5360\u7528\u5927\u5c0f\u548c\u6587\u4ef6\u5927\u5c0f\u4e0d\u76f8\u7b49</p> <p>Android\u4e2d\u52a0\u8f7dBitmap\u4f7f\u7528BitmapFactory.decodeResource\u4ece\u8d44\u6e90\u6587\u4ef6\u4e2d\u52a0\u8f7d\u65f6\u4f1a\u8fdb\u884c\u4e00\u6b21\u8f6c\u5316</p> \u5bc6\u5ea6 ldpi mdpi hdpi xhdpi xxhdpi xxxhdpi \u5bc6\u5ea6\u503c 120 160(\u57fa\u7ebf) 240 320 480 640 \u5206\u8fa8\u7387 240x320 320x480 480x800/480x854 1280x720 1920x1080 3840x2160 \u56fe\u7247\u5927\u5c0f 36x36 48x48 72x72 96x96 144x144 192x192 <p>\u8f6c\u5316\u516c\u5f0f\uff1a\u5206\u8fa8\u7387x(\u8bbe\u5907dpi/\u76ee\u5f55dpi)</p> <p>\u5982\u8bbe\u5907dpi\u4e3a480\uff0cxhdpi\u76ee\u5f55120x160\u7684\u56fe\u7247\u5185\u5b58\u5927\u5c0f\u4e3a</p> <p>120x(480/320)x160(480/320) = 43200byte=42kb</p> <p>https://developer.android.com/topic/performance/graphics/cache-bitmap?hl=zh-cn</p> <p>https://developer.android.com/topic/performance/graphics?hl=zh-cn</p>"}, {"location": "android/performance/android_bitmap/#_1", "title": "\u9ad8\u6548\u52a0\u8f7d\u5927\u578b\u4f4d\u56fe", "text": ""}, {"location": "android/performance/android_bitmap/#_2", "title": "\u8bfb\u53d6\u4f4d\u56fe\u5c3a\u5bf8\u548c\u7c7b\u578b", "text": "<p><pre><code>val options = BitmapFactory.Options().apply {\n    inJustDecodeBounds = true//\u53ef\u907f\u514d\u5185\u5b58\u5206\u914d\uff0c\u4e3a\u4f4d\u56fe\u5bf9\u8c61\u8fd4\u56de null\n}\nBitmapFactory.decodeResource(resources, R.id.myimage, options)\nval imageHeight: Int = options.outHeight\nval imageWidth: Int = options.outWidth\nval imageType: String = options.outMimeType\n</code></pre> \u8fdb\u884c\u89e3\u7801\u524d\u5148\u8bfb\u53d6\u5c3a\u5bf8\u9632\u6b62OOM</p>"}, {"location": "android/performance/android_bitmap/#_3", "title": "\u6309\u6bd4\u4f8b\u538b\u7f29", "text": "<pre><code>fun calculateInSampleSize(options: BitmapFactory.Options, reqWidth: Int, reqHeight: Int): Int {\n    val (height: Int, width: Int) = options.run { outHeight to outWidth }\n    var inSampleSize = 1\n    if (height &gt; reqHeight || width &gt; reqWidth) {\n        val halfHeight: Int = height / 2\n        val halfWidth: Int = width / 2\n        while (halfHeight / inSampleSize &gt;= reqHeight &amp;&amp; halfWidth / inSampleSize &gt;= reqWidth) {\n            inSampleSize *= 2\n        }\n    }\n\n    return inSampleSize\n}\n</code></pre>"}, {"location": "android/performance/android_bitmap/#_4", "title": "\u6574\u4f53\u6d41\u7a0b", "text": "<p>\u5c06\u4efb\u610f\u5927\u5c3a\u5bf8\u7684\u4f4d\u56fe\u52a0\u8f7d\u5230\u663e\u793a 100x100 \u50cf\u7d20\u7f29\u7565\u56fe\u7684 ImageView \u4e2d <pre><code>fun decodeSampledBitmapFromResource(\n        res: Resources,\n        resId: Int,\n        reqWidth: Int,\n        reqHeight: Int\n): Bitmap {\n    return BitmapFactory.Options().run {\n        inJustDecodeBounds = true\n        BitmapFactory.decodeResource(res, resId, this)\n\n        inSampleSize = calculateInSampleSize(this, reqWidth, reqHeight)\n\n        inJustDecodeBounds = false\n\n        BitmapFactory.decodeResource(res, resId, this)\n    }\n}\n\nimageView.setImageBitmap(\n    decodeSampledBitmapFromResource(resources, R.id.xxx, 100, 100)\n)\n</code></pre></p>"}, {"location": "android/performance/android_bitmap/#_5", "title": "\u7f13\u5b58\u4f4d\u56fe", "text": ""}, {"location": "android/performance/android_bitmap/#_6", "title": "\u5185\u5b58\u7f13\u5b58", "text": "<p>LruCache \u7c7b\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u8f6f\u5f15\u7528\u6216\u5f31\u5f15\u7528\u5bb9\u6613\u88ab\u56de\u6536</p> <p>\u9009\u62e9\u7b56\u7565</p> <ol> <li>\u5f53\u524dapp\u5185\u5b58\u5360\u7528\u60c5\u51b5(\u53ef\u80fd\u5373\u5c06\u8fbe\u5230\u8fdb\u7a0b\u6240\u80fd\u7533\u8bf7\u7684\u6700\u5927\u5185\u5b58)</li> <li>\u5c4f\u5e55\u663e\u793a\u56fe\u7247\u6570\u91cf(\u5217\u8868\u4e2d\u663e\u793a\u573a\u666f)</li> <li>\u5c4f\u5e55\u5c3a\u5bf8\u548c\u5bc6\u5ea6(\u5206\u8fa8\u7387\u548cdpi\u5f71\u54cd\u8ba1\u7b97\u5185\u5b58\u5927\u5c0f)</li> <li>\u4f4d\u56fe\u5c3a\u5bf8\u548c\u914d\u7f6e(\u539f\u56fe\u5927\u5c0f\uff0c\u7f16\u7801\u6a21\u5f0f\uff0c\u538b\u7f29)</li> <li>\u56fe\u7247\u8bbf\u95ee\u9891\u7387</li> <li>\u8d28\u91cf\u548c\u6570\u91cf\u4e4b\u95f4\u7684\u5e73\u8861</li> </ol> <p>\u4f7f\u7528\u4f8b\u5b50\uff0c\u5206\u914d\u6700\u5927\u5185\u5b58\u7684\u215b <pre><code>private lateinit var memoryCache: LruCache&lt;String, Bitmap&gt;\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    val maxMemory = (Runtime.getRuntime().maxMemory() / 1024).toInt()\n\n    val cacheSize = maxMemory / 8\n    memoryCache = object : LruCache&lt;String, Bitmap&gt;(cacheSize) {\n        override fun sizeOf(key: String, bitmap: Bitmap): Int {\n            return bitmap.byteCount / 1024\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/performance/android_bitmap/#_7", "title": "\u78c1\u76d8\u7f13\u5b58", "text": "<p>DiskLruCache</p>"}, {"location": "android/performance/android_bitmap/#_8", "title": "\u56fe\u7247\u52a0\u8f7d\u6846\u67b6\u8bbe\u8ba1\u601d\u8def", "text": "<ul> <li>\u91c7\u6837\u7387\u538b\u7f29(inSampleSize)\uff0c\u5c3a\u5bf8\u538b\u7f29</li> <li>bitmap\u7f16\u7801\u683c\u5f0fARGB_8888\u7b49</li> <li>\u52a0\u8f7d\u65b9\u5f0f\uff1a\u534f\u7a0b\u7528\u6765\u5f02\u6b65\u52a0\u8f7d\u548c\u7ebf\u7a0b\u5207\u6362</li> <li>\u591a\u7ea7\u7f13\u5b58\uff1aLruCache\u3001\u5bf9\u8c61\u590d\u7528\u6c60\u3001DiskLruCache</li> <li>\u5185\u5b58\u6cc4\u6f0fOOM\uff1a\u751f\u547d\u5468\u671f\u76d1\u542c\uff0c\u4f4e\u5185\u5b58\u65f6\u91ca\u653e</li> <li>\u5217\u8868\u52a0\u8f7d\uff1a\u9519\u4e71\u95ee\u9898</li> </ul> <p>Glide\u5df2\u7ecf\u5b8c\u6210\u4f18\u5316</p>"}, {"location": "android/performance/android_blockcanary/", "title": "Android blockcanary", "text": "<p>\u5b98\u7f51\uff1ahttps://github.com/markzhai/AndroidPerformanceMonitor</p> <p>\u63a5\u5165\u65b9\u5f0f\uff1a <pre><code>implementation 'com.github.markzhai:blockcanary-android:1.5.0'\n</code></pre></p>"}, {"location": "android/performance/android_blockcanary/#_1", "title": "\u5b9e\u73b0\u539f\u7406", "text": "<p>Android\u6d88\u606f\u673a\u5236\u91c7\u7528\u7684\u662fHandler\uff0c\u5229\u7528Handler\u5904\u7406Message\u65f6\u7684\u6253\u5370\u63a5\u53e3</p> <p>\u5728Looper\u7684loop\u65b9\u6cd5\u4e2d\u7684loopOnce\u65b9\u6cd5\u5206\u53d1msg\u65f6\u6709\u4e00\u4e2aPrinter\u5bf9\u8c61(\u63a5\u53e3) <pre><code>if (logging != null) {\n    logging.println(\"&gt;&gt;&gt;&gt;&gt; Dispatching to \" + msg.target + \" \"\n            + msg.callback + \": \" + msg.what);\n}\n//...\nmsg.target.dispatchMessage(msg);//\u56de\u8c03Handler\u5904\u7406\u6d88\u606f\n//...\nif (logging != null) {\n    logging.println(\"&lt;&lt;&lt;&lt;&lt; Finished to \" + msg.target + \" \" + msg.callback);\n}\n</code></pre> \u5ba2\u6237\u7aef\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e\u4e00\u4e2aPrinter\u5bf9\u8c61\uff0c\u5229\u7528\u5148\u540e\u4e24\u6b21println\u65b9\u6cd5\u56de\u8c03\uff0c\u53ef\u4ee5\u8bb0\u5f55\u65f6\u95f4\u6233 <pre><code>public void setMessageLogging(@Nullable Printer printer) {\n    mLogging = printer;\n}\n</code></pre></p>"}, {"location": "android/performance/android_blockcanary/#_2", "title": "\u7f3a\u9677", "text": "<p>\u7c92\u5ea6\u592a\u5927\uff0c\u4e0d\u7cbe\u51c6\uff0c\u5047\u8bbe\u8c03\u7528\u94fe\u4e3a\u65b9\u6cd5a\u3001b\u3001c\uff0c\u5206\u522b\u8017\u65f6400\u300125\u300175\uff0c\u65e0\u6cd5\u786e\u5b9a\u662f\u54ea\u4e2a\u65b9\u6cd5\u8017\u65f6\u957f</p> <p>\u89e3\u51b3\u65b9\u6848</p>"}, {"location": "android/performance/android_crash/", "title": "Crash\u76d1\u63a7", "text": ""}, {"location": "android/performance/android_crash/#java-crash", "title": "java crash\u76d1\u63a7", "text": ""}, {"location": "android/performance/android_crash/#_1", "title": "\u7ebf\u4e0b", "text": "<p>\u76f4\u63a5\u901a\u8fc7logcat\u5b9a\u4f4d</p>"}, {"location": "android/performance/android_crash/#_2", "title": "\u7ebf\u4e0a", "text": "<p>\u5b9e\u73b0\u539f\u7406\uff1a\u6ce8\u518c\u81ea\u5df1\u7684\u76d1\u542c\uff0c\u7cfb\u7edf\u63d0\u4f9b\u6355\u83b7\u5f02\u5e38\u76d1\u542c\u63a5\u53e3</p> <p>\u9ed8\u8ba4\u5728RuntimeInit\u4e2d\u8bbe\u7f6e(KillApplicationHandler) <pre><code>Thread.setDefaultUncaughtExceptionHandler(new KillApplicationHandler(loggingHandler))\n</code></pre></p> <p>\u81ea\u5b9a\u4e49\u5904\u7406 <pre><code>class CrashHandler : UncaughtExceptionHandler {\n    private var defaultUncaughtExceptionHandler: UncaughtExceptionHandler? = null\n\n    init {\n        defaultUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler()\n        Thread.setDefaultUncaughtExceptionHandler(this)//\u66ff\u6362\u6389\u9ed8\u8ba4KillApplicationHandler\n    }\n\n    override fun uncaughtException(t: Thread, e: Throwable) {\n        val dir = File(BaseApplication.instance.externalCacheDir, \"crash_info\")\n        if (!dir.exists()) {\n            dir.mkdirs()\n        }\n        try {\n            //\u5b58\u5230\u672c\u5730\u4e5f\u53ef\u4ee5\u4e0a\u4f20\u5230\u670d\u52a1\u5668\n            val logFile = File(dir,  \"${System.currentTimeMillis()}.txt\")\n            val pw = PrintWriter(FileWriter(logFile))\n            pw.println(\"thread: ${t.name}\")\n            e.printStackTrace(pw)\n            pw.flush()\n            pw.close()\n        } catch (e: Exception) {\n            e.printStackTrace()\n        } finally {\n            defaultUncaughtExceptionHandler?.uncaughtException(t, e)\n        }\n    }\n}\n</code></pre> crash\u6587\u4ef6\u4f1a\u5728/sdcard/Android/cache/crash_info/\u4e0b\u751f\u6210</p>"}, {"location": "android/performance/android_crash/#native-crash", "title": "native crash\u76d1\u63a7", "text": ""}, {"location": "android/performance/android_crash/#_3", "title": "\u7ebf\u4e0b", "text": "<p>\u901a\u8fc7\u5893\u7891\u6587\u4ef6\u5b9a\u4f4d</p> <p>native crash\u65e5\u5fd7\u5b58\u653e\u70b9\uff0c\u8def\u5f84\u4e3a/data/tombstones/\uff0c\u4e00\u822c\u4e0d\u5141\u8bb8\u76f4\u63a5\u8bfb\u53d6\uff0c\u53ef\u901a\u8fc7adb bugreport\u5bfc\u51fa</p>"}, {"location": "android/performance/android_crash/#_4", "title": "\u7ebf\u4e0a", "text": "<p>\u5b9e\u73b0\u539f\u7406\uff1a\u548cjava\u5c42\u7c7b\u4f3c\uff0c\u901a\u8fc7\u6ce8\u518c\u76d1\u542clinux\u4fe1\u53f7\uff0c\u9700\u8981\u5728c++\u5c42\u5b9e\u73b0</p> <p>\u5e38\u89c1\u5d29\u6e83\u4fe1\u53f7 |\u4fe1\u53f7|\u63cf\u8ff0| |--|--| |SIGSEGV|\u5185\u5b58\u5f15\u7528\u65e0\u6548\uff0c\u5982\u7a7a\u6307\u9488| |SIGBUS|\u8bbf\u95ee\u5185\u5b58\u5bf9\u8c61\u7684\u672a\u5b9a\u4e49\u90e8\u5206| |SIGFPE|\u7b97\u672f\u8fd0\u7b97\u9519\u8bef\uff0c\u5982\u9664\u4ee50| |SIGILL|\u975e\u6cd5\u6307\u4ee4\uff0c\u5982\u6267\u884c\u5783\u573e\u6216\u7279\u6743\u6307\u4ee4| |SIGSYS|\u7cdf\u7cd5\u7684\u7cfb\u7edf\u8c03\u7528| |SIGXCPU|\u8d85\u8fc7CPU\u65f6\u95f4\u9650\u5236| |SIGXFSZ|\u6587\u4ef6\u5927\u5c0f\u9650\u5236|</p> <p>ndk\u5de5\u7a0b\u914d\u7f6e</p> <p>\u501f\u52a9google\u7684breakpad\u6dfb\u52a0\u81ea\u5b9a\u4e49\u76d1\u542c</p> <p>\u5927\u81f4\u914d\u7f6e\u6d41\u7a0b</p> <p>\u590d\u5236\u6e90\u7801\u5230cpp\u76ee\u5f55</p> <p></p> <p>\u6dfb\u52a0cmake\u914d\u7f6e\u6587\u4ef6\uff0c\u5176\u5b9e\u662f\u5c06breakpad\u6e90\u7801\u4e2d\u7684/android/google_breakpad/Android.mk\u8fdb\u884c\u8f6c\u5316\uff0c\u6700\u7ec8\u4ee3\u7801 <pre><code>cmake_minimum_required(VERSION 3.22.1)\n#\u5bf9\u4e8emk\u6587\u4ef6\u4e2d\u7684LOCAL_C_INCLUDES\ninclude_directories(src src/common/android/include)\n#\u5f00\u542farm\u6c47\u7f16\u652f\u6301\uff0c.s\u5c5e\u4e8e\u6c47\u7f16\u6e90\u7801\nenable_language(ASM)\n\n#\u751f\u6210libbreakpad.a \u6307\u5b9a\u6e90\u7801\uff0c\u5bf9\u4e8emk\u4e2d\u7684LOCAL_SRC_FILES\u548cLOCAL_MODULE\nadd_library(breakpad STATIC\n        src/client/linux/crash_generation/crash_generation_client.cc\n        src/client/linux/dump_writer_common/thread_info.cc\n        src/client/linux/dump_writer_common/ucontext_reader.cc\n        src/client/linux/handler/exception_handler.cc\n        src/client/linux/handler/minidump_descriptor.cc\n        src/client/linux/log/log.cc\n        src/client/linux/microdump_writer/microdump_writer.cc\n        src/client/linux/minidump_writer/linux_dumper.cc\n        src/client/linux/minidump_writer/linux_ptrace_dumper.cc\n        src/client/linux/minidump_writer/minidump_writer.cc\n        src/client/minidump_file_writer.cc\n        src/common/convert_UTF.cc\n        src/common/md5.cc\n        src/common/string_conversion.cc\n        src/common/linux/breakpad_getcontext.S\n        src/common/linux/elfutils.cc\n        src/common/linux/file_id.cc\n        src/common/linux/guid_creator.cc\n        src/common/linux/linux_libc_support.cc\n        src/common/linux/memory_mapped_file.cc\n        src/common/linux/safe_readlink.cc)\n\n#\u94fe\u63a5log\u5e93\u5bf9\u5e94mk\u4e2d\u7684LOCAL_EXPORT_LDLIBS\ntarget_link_libraries(breakpad log)\n</code></pre> \u5728\u81ea\u5df1\u7684cmake\u6587\u4ef6\u4e2d\u5f15\u5165breakpad <pre><code>cmake_minimum_required(VERSION 3.22.1)\n\nproject(\"jetpack\")\n\n#\u5f15\u5165breakpad\u5934\u6587\u4ef6\ninclude_directories(breakpad/src breakpad/src/common/android/include)\n\nadd_library(${CMAKE_PROJECT_NAME} SHARED jetpack.cpp)\n\n#\u5f15\u5165breakpad\u7684cmake\u6587\u4ef6\uff0c\u6267\u884c\u5e76\u751f\u6210libbreakpad.a\nadd_subdirectory(breakpad)\n\ntarget_link_libraries(${CMAKE_PROJECT_NAME} android breakpad log)\n</code></pre> cpp\u5b9e\u73b0 <pre><code>#include \"jni.h\"\n#include \"android/log.h\"\n#include \"client/linux/handler/minidump_descriptor.h\"\n#include \"client/linux/handler/exception_handler.h\"\n\nextern \"C\"\nJNIEXPORT void JNICALL\nJava_com_hfc_jetpack_NativeCrash_testNativeCrash(JNIEnv *env, jobject thiz) {\n    int *p = NULL;\n    *p = 10;//\u62a5\u7a7a\u6307\u9488\n}\n\n//\u56de\u8c03\u63a5\u53e3\u51fd\u6570\nbool DumpCallback(const google_breakpad::MinidumpDescriptor &amp;descriptor,\n                  void *context,\n                  bool succeeded) {\n    __android_log_print(ANDROID_LOG_ERROR, \"native\", \"native crash:%s\", descriptor.path());\n    return false;\n}\n\n//\u6ce8\u518ccrash\u76d1\u542c\u51fd\u6570\nextern \"C\"\nJNIEXPORT void JNICALL\nJava_com_hfc_jetpack_NativeCrash_initNativeCrash(JNIEnv *env, jobject thiz, jstring path_) {\n    const char *path = env-&gt;GetStringUTFChars(path_, 0);\n\n    __android_log_print(ANDROID_LOG_INFO, \"native\", \"===&gt; %s\", path);\n    google_breakpad::MinidumpDescriptor descriptor(path);\n    static google_breakpad::ExceptionHandler eh(descriptor, NULL, DumpCallback,\n                                                NULL, true, -1);\n\n    env-&gt;ReleaseStringUTFChars(path_, path);\n}\n</code></pre></p> <p>\u6d4b\u8bd5\u4ee3\u7801 <pre><code>object NativeCrash {\n    init {\n        System.loadLibrary(\"jetpack\")\n    }\n    external fun testNativeCrash()\n\n    external fun initNativeCrash(path: String)\n}\n\nval dir = File(BaseApplication.instance.externalCacheDir, \"native_crash\")\nif (!dir.exists()) {\n    dir.mkdirs()\n}\nNativeCrash.initNativeCrash(dir.absolutePath)\nNativeCrash.testNativeCrash()\n</code></pre> \u5893\u7891\u6587\u4ef6\u4f1a\u5728/sdcard/Android/cache/native_crash/\u4e0b\u751f\u6210xxx.dmp</p>"}, {"location": "android/performance/android_crash/#_5", "title": "\u914d\u7f6e\u5206\u6790\u5de5\u5177", "text": "<p>\u73af\u5883\u53d8\u91cf\u6dfb\u52a0\uff1a</p> <p>AndroidStudio\\plugins\\android-ndk\\resources\\lldb\\bin</p> <p>AndroidSDK\\ndk\\25.1.8937393\\toolchains\\llvm\\prebuilt\\windows-x86_64\\bin</p> <p>minidump_stackwalk.exe\u5206\u6790BreakPad\u4e2ddump\u51fa\u6765\u7684dmp\u6587\u4ef6 <pre><code>minidump_stackwalk xxx.dump &gt;crash.txt\n</code></pre> llvm-addr2line.exe\u5b9a\u4f4dso\u62a5\u9519\u4f4d\u7f6e <pre><code>llvm-addr2line -f -C -e xxx.so 0xaaaa(crash.txt\u6709\u8bb0\u5f55)\n</code></pre> \u4e5f\u53ef\u4ee5\u4f7f\u7528IDA\u5de5\u5177\u5206\u6790(arm\u8c8c\u4f3c\u65e0\u6cd5\u53cd\u6c47\u7f16\uff0c\u5373\u770b\u4e0d\u5230\u4f2a\u4ee3\u7801)</p>"}, {"location": "android/performance/android_crash/#xcrash", "title": "XCrash", "text": "<p>\u7231\u5947\u827a https://github.com/iqiyi/xCrash</p>"}, {"location": "android/performance/android_datastructure/", "title": "\u6570\u636e\u7ed3\u6784\u4f18\u5316", "text": "<p>\u7ebf\u4e0aAPM(Android performance monitor)\u76f8\u5173\u77e5\u8bc6\u70b9</p> <p>\u6280\u672f\u70b9</p> <p>Bytecode\u3001Hook\u3001JS\u6ce8\u5165\u3001Gradle\u3001ASM\u3001kotlinpoet</p> <p>Java\u5c42\u5b9e\u73b0\u529f\u80fd - CPU\u6307\u6807 - \u5185\u5b58\u6307\u6807 - FPS\u6307\u6807 - ANR - \u5361\u987f - GC/OOM - \u7f51\u7edc - \u529f\u8017 - \u8fdc\u7a0b\u4e0b\u53d1 \u65e5\u5fd7\u56de\u635e \u652f\u6301\u8fdc\u7a0bshell\u52a8\u6001\u4ee3\u7801\u4e0b\u53d1</p> <p>APM\u5b9e\u73b0\u601d\u8def</p> <ol> <li>\u914d\u7f6e(\u6ce8\u89e3+json)</li> <li>\u6570\u636e\u94fe\u7684\u4fdd\u5b58 App\u542f\u52a8\u3001\u7ed3\u675f\u3001\u754c\u9762\u8df3\u8f6cLifecycleCallbacks</li> <li>Crash Thread</li> <li>CPU GC \u7535\u91cf linux\u77e5\u8bc6\u70b9 /proc/stat /proc/pid/stat BatteryMonitor</li> <li>ANR FPS \u6587\u4ef6\u68c0\u6d4b/data/anr/trace.txt Choreographer.FrameCallback</li> </ol> <p>adb shell dumpsys battery \u83b7\u53d6\u624b\u673a\u7535\u6c60\u76f8\u5173\u4fe1\u606f</p> <p>adb shell getprop ro.product.model \u901a\u8fc7\u624b\u673a\u673a\u578b\u5224\u65ad\u4e2d\u9ad8\u7aef\u624b\u673a</p> <p>adb shell dumpsys window displays</p> <p>mDisplayId: \u663e\u793a\u5c4f\u7f16\u53f7</p> <p>init\uff1a\u662f\u521d\u59cb\u5206\u8fa8\u7387\u548c\u5c4f\u5e55\u5bc6\u5ea6</p> <p>app\u7684\u9ad8\u5ea6\u6bd4init\u5c0f\u8868\u793a\u5e95\u90e8\u6709\u865a\u62df\u6309\u952e</p> <p>adb shell settings get secure android_id</p> <p>adb shell service call iphonesubinfo 1 \u83b7\u53d6IEMI</p> <p>adb shell cat /proc/cpuinfo adb shell cat /proc/meminfo</p> <p>MemAvailable=MemFree+Buffers+Cached+Slab</p> <p>kernel\u52a8\u6001\u5185\u5b58\u5206\u914d\uff1a\u547d\u4ee4\u4e2d\u65e0\u6cd5\u67e5\u770b</p> <p>xlog</p> <p>syscall \u7528\u6237\u6001 \u5185\u6838\u6001</p> <p>dumpsys meminfo</p> <p>dumpsys meminfo \u5305\u540d</p> <p>RSS \u5171\u4eab\u5e93so \u52a8\u6001\u94fe\u63a5\u5e93</p> <p>Tinker\u7684so\u7684\u52a0\u8f7d\u6d41\u7a0b https://github.com/KeepSafe/Relinker</p> <p>YSS&gt;=RSS&gt;=PSS&gt;=USS</p> <p>vmstart</p> <p>cpu\u65f6\u95f4\u7247 \u7528\u6237cpu\u65f6\u95f4 \u7cfb\u7edfcpu\u65f6\u95f4 linux TMS</p> <p>activity\u9500\u6bc1\u5982\u4f55\u5f97\u77e5\uff1f</p> <p>ReferenceQueue</p> <p>WeakHashMap\uff1aKey\u662f\u5f31\u5f15\u7528\u53ef\u4ee5\u88ab\u56de\u6536\uff0c\u628aActivity\u4f5c\u4e3akey\uff0c\u5f53key\u88ab\u56de\u6536\u8bf4\u660eactivity\u5df2\u7ecf\u9500\u6bc1\u4e86\uff0c\u7ed3\u5408registerActivityLifecycleCallbacks\uff0cstop\u4e2dgc</p> <p>\u9608\u503c\u5904\u7406\uff1aKOOM &gt; Matrix</p> <p>SystemClock.sleep System.runFinalization</p> <p>Debug.M</p>"}, {"location": "android/performance/android_datastructure/#koom", "title": "KOOM", "text": "<p>Native Heap\u6cc4\u6f0f\u76d1\u63a7</p> <p>bionic</p> <p>xhook</p> <p>\u6027\u80fd\u4f18\u5316\uff1a</p> <p>1.\u542f\u52a8\u4f18\u5316</p> <p>\u542f\u52a8\u80cc\u666f\u4f18\u5316SplashScreen</p> <p>\u6709\u5411\u65e0\u73af\u56feDAG\u3001\u62d3\u6251\u6392\u5e8f\u3001CountDownLatch\u63a7\u5236\u7ebf\u7a0b\u987a\u5e8f(app_startup\u3001Android_startup)</p> <p>\u67b6\u6784\u4e0aApplication\u521d\u59cb\u5316\u5206\u79bb\u5230\u4e2a\u6a21\u5757</p> <p>SplashActivity\u4f18\u5316\uff0c\u8d23\u4efb\u94fe\u6a21\u5f0f\uff0conStop\u4e2dfinish\u9632\u6b62Main\u5931\u8d25\u65f6\u51fa\u73b0\u95ee\u9898</p> <p>\u61d2\u52a0\u8f7d\u3001\u5ef6\u8fdf\u52a0\u8f7d</p> <p>2.\u5185\u5b58\u4f18\u5316</p> <p>\u5185\u5b58\u6cc4\u6f0f\u3001ANR\u3001\u5185\u5b58\u6296\u52a8\u3001OOM\u3001\u5f31\u5f15\u7528\u3001JVM\u7684gc\u56de\u6536\u7b97\u6cd5(\u6839\u53ef\u8fbe)</p> <p>bitmap\u3001\u6570\u636e\u7ed3\u6784HashMap\u548cSparseArray(ArrayMap)</p> <p>\u7ebf\u4e0a\u76d1\u63a7KOOM\u3001\u7ebf\u4e0b\u76d1\u63a7LeakCanary</p> <p>3.UI\u4f18\u5316</p> <p>\u5e03\u5c40\u4f18\u5316\u3001webview\u4f18\u5316\u3001recycleview\u4f18\u5316\u3001\u81ea\u5b9a\u4e49view(onDraw)</p> <p>4.\u5b89\u88c5\u5305\u7626\u8eab</p> <p>\u56fe\u7247webp(svg\u3001json)\u3001so\u5e93\u3001\u6df7\u6dc6\u3001\u52a0\u56fa</p>"}, {"location": "android/performance/android_koom/", "title": "KOOM", "text": "<p>\u7531\u5feb\u624b\u56e2\u961f\u5f00\u53d1</p> <p>https://github.com/KwaiAppTeam/KOOM/blob/master/README.zh-CN.md</p>"}, {"location": "android/performance/android_koom/#_1", "title": "\u57fa\u672c\u4f7f\u7528", "text": "<pre><code>implementation \"com.kuaishou.koom:koom-java-leak:2.2.1\"\n</code></pre> <p>application\u4e2d\u521d\u59cb\u5316 <pre><code>OOMMonitor.init(CommonConfig.Builder().build(),\n    OOMMonitorConfig.Builder().setHprofUploader(object : OOMHprofUploader {\n        override fun upload(file: File, type: OOMHprofUploader.HprofType) {\n            //\u4e0a\u4f20hprof\u5feb\u7167\n        }\n    }).setReportUploader(object : OOMReportUploader {\n        override fun upload(file: File, content: String) {\n            //\u4e0a\u4f20json\u6cc4\u6f0f\u62a5\u544a\n        }\n    })\n        .build()\n)\nOOMMonitor.startLoop()\n</code></pre></p>"}, {"location": "android/performance/android_koom/#_2", "title": "\u6e90\u7801\u5206\u6790", "text": "<p>startLoop\u6267\u884csuper.startLoop\uff0c\u63a5\u7740\u6267\u884cLoopMonitor\u91cc\u9762\u7684mLoopRunnable\uff0c\u91cc\u9762\u9996\u5148\u6267\u884ccall\u51fd\u6570\uff0c\u5b9e\u73b0\u5728OOMMonitor\u4e2d\u6267\u884ctrackOOM</p> <p>trackOOM\u4f1a\u5148\u4ecemOOMTrackers\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u68c0\u6d4b <pre><code>private val mOOMTrackers = mutableListOf(\n    HeapOOMTracker(), ThreadOOMTracker(), FdOOMTracker(),\n    PhysicalMemoryOOMTracker(), FastHugeMemoryOOMTracker()\n)\n</code></pre> \u5176\u4e2dPhysicalMemoryOOMTracker\u53ea\u662f\u6253\u5370\u4e00\u4e9b\u65e5\u5fd7</p> <p>\u68c0\u6d4b\u51fd\u6570track\u8fd4\u56de\u4e3atrue\u5219\u6dfb\u52a0\u5230mTrackReasons\u4e2d</p> <p>KOOM\u901a\u8fc7\u5468\u671f\u8f6e\u8be2\u68c0\u6d4b\uff0c\u901a\u8fc7HandlerThread\u68c0\u6d4b\u4ee5\u4e0b\u7ef4\u5ea6</p> <ol> <li>\u5185\u5b58\u5360\u7528\u7387\u68c0\u6d4bHeapOOMTracker\uff0c\u68c0\u6d4b\u5185\u5b58\u5360\u7528\u6bd4\u4f8b\u8d85\u8fc7\u9608\u503c(\u6839\u636e\u6700\u5927\u5185\u5b58\u7b97\u51fa(0.8,0.85,0.9)\u6216\u624b\u52a8\u8bbe\u7f6e\u8fdb\u6765)\u65f6\u4e14\u8d85\u8fc7\u4e0a\u6b21\u6bd4\u4f8b-0.05\uff0c\u8bb0\u5f55\u6b21\u6570+1\uff0c\u5f53\u8d85\u8fc73\u6b21\u89e6\u53d1</li> <li>\u7ebf\u7a0b\u6570\u68c0\u6d4bThreadOOMTracker\uff0c\u68c0\u6d4b\u7ebf\u7a0b\u6570\u91cf\u8d85\u8fc7\u9608\u503c(EMUI\u4e14\u7248\u672c\u5c0f\u4e8eO\u662f450\uff0c\u5176\u4ed6750\u6216\u624b\u52a8\u8bbe\u7f6e\u8fdb\u6765)\u65f6\u4e14\u8d85\u8fc7\u4e0a\u6b21\u6570\u91cf-50\uff0c\u8bb0\u5f55\u6b21\u6570+1\uff0c\u5f53\u8d85\u8fc73\u6b21\u89e6\u53d1</li> <li>\u6587\u4ef6\u63cf\u8ff0\u7b26\u68c0\u6d4bFdOOMTracker\uff0c\u68c0\u6d4b\u6253\u5f00\u6587\u4ef6\u6570\u91cf\u8d85\u8fc7\u9608\u503c(\u9ed8\u8ba41000\u6216\u624b\u52a8\u8bbe\u7f6e\u8fdb\u6765)\u65f6\u4e14\u8d85\u8fc7\u4e0a\u6b21\u6570\u91cf-50\uff0c\u8bb0\u5f55\u6b21\u6570+1\uff0c\u5f53\u8d85\u8fc73\u6b21\u89e6\u53d1</li> <li>\u5185\u5b58\u589e\u957f\u68c0\u6d4bFastHugeMemoryOOMTracker\uff0c\u68c0\u6d4b\u5185\u5b58\u5360\u7528\u6bd4\u4f8b\u8d85\u8fc70.9\u89e6\u53d1\uff0c\u68c0\u6d4b\u5230\u5f53\u524d\u5185\u5b58-\u4e0a\u6b21\u5185\u5b58\u5927\u4e8e350m(\u589e\u957f\u8fc7\u5feb)\u89e6\u53d1</li> </ol> <p>\u5728dumpAndAnalysis\u4e4b\u524d\u4f1a\u8fdb\u884c\u89e6\u53d1\u5224\u65ad</p> <p>isExceedAnalysisPeriod() || isExceedAnalysisTimes()</p> <p>\u8d85\u8fc715\u5929\u89e6\u53d1\u6216\u8005\u8d85\u8fc75\u6b21\u5c31\u4e0d\u89e6\u53d1</p> <p>\u63a5\u4e0b\u6765\u8fdb\u884cdumpAndAnalysis\u4e3b\u8981\u662fdump\u51fahprof\u4ee5\u53ca\u5206\u6790</p> <p>dump\u51fd\u6570\uff1asuspendAndFork\u89e3\u51b3\u591a\u7ebf\u7a0bfork\u95ee\u9898\u3001Debug.dumpHprofData\u3001resumeAndWait</p>"}, {"location": "android/performance/android_koom/#koom", "title": "KOOM\u76d1\u63a7", "text": "<p>KOOM\u76d1\u63a7\u6574\u4f53\u5185\u5b58\uff0c\u800c\u4e0d\u662f\u76d1\u63a7\u5bf9\u8c61\uff0c\u51cf\u5c11dump\u9891\u7387</p>"}, {"location": "android/performance/android_koom/#dump", "title": "\u89e3\u51b3dump\u6162", "text": "<p>\u662f\u5426\u53ef\u4ee5\u5728\u5b50\u7ebf\u7a0b\u5904\u7406\uff0c\u53ef\u4ee5\uff0c\u4f46\u662fdump\u4f1a\u89e6\u53d1stw\uff0cstw\u662f\u505c\u6b62\u4e00\u5207\u7ebf\u7a0b(\u5177\u4f53\u4ee3\u7801\u5728art/runtime/thread_list.cc\u7684ScopeSuspendAll\u4e2d)\uff0c\u56e0\u6b64\u6ca1\u5565\u6548\u679c</p> <p>\u89e3\u51b3\u65b9\u6848\uff1afork\u4e00\u4efd\u8fdb\u7a0b\u8fdb\u884cdump</p>"}, {"location": "android/performance/android_koom/#fork", "title": "fork", "text": "<p>fork\u7cfb\u7edf\u8c03\u7528\u7528\u4e8e\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u4f1a\u8fd4\u56de\u591a\u6b21\uff0c\u8fd4\u56de\u503c\u4f4d\u6574\u578b\uff0c\u8d1f\u503c\u8868\u793a\u521b\u5efa\u5b50\u8fdb\u7a0b\u5931\u8d25\uff0c0\u8fd4\u56de\u65b0\u5efa\u7684\u5b50\u8fdb\u7a0b(\u5373\u5f53\u524d\u5904\u4e8e\u5b50\u8fdb\u7a0b)\uff0c\u6b63\u6570\u8fd4\u56de\u65b0\u8fdb\u7a0bid(\u5373\u5f53\u524d\u5904\u4e8e\u7236\u8fdb\u7a0b)</p> <p>\u5b50\u8fdb\u7a0b\u548c\u7236\u8fdb\u7a0b\u662f\u5171\u4eab\u540c\u4e00\u4efd\u5185\u5b58(read-only)\uff0c\u901a\u8fc7copy-on-write\u8fdb\u884c\u5199\u6570\u636e(\u5199\u65f6\u590d\u5236\u5185\u5b58\u76f8\u540c\u7a7a\u95f4)</p>"}, {"location": "android/performance/android_koom/#fork_1", "title": "fork\u5b58\u5728\u95ee\u9898", "text": "<p>\u7531\u4e8ejava\u5929\u751f\u662f\u591a\u7ebf\u7a0b\uff0c\u4e3b\u8fdb\u7a0ba\u7ebf\u7a0b\u8c03\u7528fork\uff0c\u5219\u5b50\u8fdb\u7a0b\u53ea\u590d\u5236a\u7ebf\u7a0b\uff0c\u5bf9\u4e8e\u5176\u4ed6\u7ebf\u7a0bb,c,d\u53ea\u590d\u5236\u7ebf\u7a0b\u4e2d\u5bf9\u8c61(\u5373Thread\u5bf9\u8c61)\uff0c\u6b64\u65f6stw\u65e0\u6cd5\u505c\u6b62\u8fd9\u4e9b\u7ebf\u7a0b\u5bfc\u81f4\u5361\u6b7b(\u6b7b\u9501)</p> <p>\u89e3\u51b3\u65b9\u6848\uff1afork\u4e4b\u524d\u5148\u89e6\u53d1SuspendAll\uff0c\u7b49fork\u5b8c\u540e\u6062\u590dResumeAll</p> <p>koom\u52a0\u8f7dkoom-fast-dump.so\u53bb\u5904\u7406\uff0c\u4ee5AndroidR\u7248\u672cSuspendAndFork\u4e3a\u4f8b <pre><code>//\u53cd\u5c04\u8c03\u7528libart.so(suspend\u76f8\u5173\u64cd\u4f5c\u7f16\u8bd1\u4ea7\u7269)\u4e2d\u7684\u51fd\u6570\nvoid *handle = kwai::linker::DlFcn::dlopen(\"libart.so\", RTLD_NOW);\n//art::Dbg::SuspendVM\u548cart::Dbg::ResumeVM\nsuspend_vm_fnc_ =\n        (void (*)())DlFcn::dlsym(handle, \"_ZN3art3Dbg9SuspendVMEv\");\n    KFINISHV_FNC(suspend_vm_fnc_, DlFcn::dlclose, handle)\n\npid_t HprofDump::SuspendAndFork() {\n  KCHECKI(init_done_)\n  if (android_api_ &lt; __ANDROID_API_R__) {\n    suspend_vm_fnc_();\n  } else if (android_api_ &lt;= __ANDROID_API_S__) {\n    //...\n  }\n//\u518d\u8fdb\u884cfork\n  pid_t pid = fork();\n  if (pid == 0) {\n    alarm(60);\n    prctl(PR_SET_NAME, \"forked-dump-process\");\n  }\n  return pid;\n}\n</code></pre> \u5176\u4e2d_ZN3art3Dbg9SuspendVMEv\u662fc++\u7b26\u53f7\u5316\u8868\u73b0\uff0c\u901a\u8fc7\u547d\u4ee4\u67e5\u770b\u7b26\u53f7\u540d(\u6b63\u771f\u51fd\u6570\u540d) <pre><code>run -D libart.so &gt;xx.txt\n</code></pre></p> <p>\u9664\u4e86JVMIT\u4ee5\u5916\uff0c\u901a\u8fc7\u53cd\u5c04hide\u6ce8\u89e3\u9650\u5236\u4e5f\u4f7f\u7528\u5230\u53cd\u5c04so\u4e2d\u7684\u51fd\u6570\uff0c\u9700\u8981\u638c\u63e1so\u7684\u683c\u5f0f\u548c\u6570\u636e\u683c\u5f0f\u5206\u6790</p> <p>JVMTI\uff1a\u63a7\u5236JVM\u884c\u4e3a\uff0c\u53ef\u53cd\u5c04\u8c03\u7528so\u4e2d\u7684\u51fd\u6570</p>"}, {"location": "android/performance/android_koom/#hprof", "title": "hprof", "text": "<p>hprof\u662f\u57fa\u4e8eJVMTI\u5b9e\u73b0\u7684\u5185\u5b58\u5206\u6790\u5668\u4ee3\u7406\uff0c\u8bb0\u5f55java\u7684\u5185\u5b58\u955c\u50cf\u5305\u62ec\u5806\u8be6\u7ec6\u4f7f\u7528\u4fe1\u606f\uff0c\u5305\u542b\u8bb8\u591a\u65e0\u7528\u4fe1\u606f(\u65f6\u95f4\u3001\u7248\u672c\u3001\u6807\u7b7e\u7b49)</p>"}, {"location": "android/performance/android_koom/#hprof_1", "title": "hprof\u538b\u7f29", "text": "<p>android.os.Debug.dumpHprofData\u80af\u5b9a\u662f\u901a\u8fc7IO\u5199\u5230\u6587\u4ef6\u4e2d\uff0c\u5219\u53ef\u4ee5\u8fdb\u884chprof\u88c1\u526a\uff0c\u901a\u8fc7hook IO\u7684write\u51fd\u6570\u6765\u63d0\u53d6\u9700\u8981(\u65e0\u7528\u4fe1\u606f\u629b\u5f03\u6389)\u7684buffer\u5199\u5230hprof\u6587\u4ef6\u5373\u53ef\u51cf\u5c11hprof\u5927\u5c0f</p>"}, {"location": "android/performance/android_leakcanary/", "title": "LeakCanary", "text": "<p>\u7531Square\u516c\u53f8\u5f00\u53d1</p> <p>https://github.com/square/leakcanary</p> <p>\u63a5\u5165\u65b9\u5f0f\uff1a <pre><code>debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'\n</code></pre> \u4f9d\u8d56\u7248\u672c\u83b7\u53d6</p> <p>\u65b0\u7248\u672c\u65e0\u9700\u5728application\u4e2d\u521d\u59cb\u5316\uff0c\u91c7\u7528ContentProvider\u5f62\u5f0f\u81ea\u52a8\u521d\u59cb\u5316</p> <p>\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u540e\u901a\u77e5\u680f\u663e\u793a\uff0clog\u901a\u8fc7tag(LeakCanary)\u67e5\u770b\u4fe1\u606f\u5305\u62ecdump\u6587\u4ef6\u5730\u5740</p> <p>\u76d1\u542cActivity\uff1a\u4eceActivity\u6e90\u7801\u5165\u624bdispatchActivityCreated\u4f1a\u8c03\u7528\u5230Application\u4e2d\u7684callback</p> <p>\u76d1\u542cFragment\uff1a\u4eceFragmentManager\u6e90\u7801\u5165\u624bdispatchOnFragmentCreated</p> <p>Fragment\u7684\u672c\u8d28\u662fView</p> <p>LeakCanary\u5b9e\u73b0\u539f\u7406\u5c31\u662f\u5229\u7528registerActivityLifecycleCallbacks\u76d1\u542cActivity\uff0c\u7136\u540e\u5229\u7528registerFragmentLifecycleCallbacks\u76d1\u542cFragment</p> <p>\u68c0\u6d4bActivity\u662f\u5426\u88ab\u56de\u6536\uff0c\u53ef\u4ee5\u628aActivity\u5bf9\u8c61\u653e\u5230\u5f31\u5f15\u7528\u4e2d\uff0c\u624b\u52a8\u89e6\u53d1gc\u540e\u5224\u65adActivity\u5bf9\u8c61\u662f\u5426\u4e3anull</p> <p>ReferenceQueue\u7528\u6765\u4fdd\u5b58\u6240\u6709\u5f31\u5f15\u7528\u5bf9\u8c61</p> <p>\u5206\u6790dump\u4f7f\u7528haha\u5e93\u6216\u8005shark\u5e93</p> <p>\u4e0d\u80fd\u4f7f\u7528\u7ebf\u4e0a\u539f\u56e0</p> <ol> <li>\u9891\u7e41gc\u5bb9\u6613\u5bfc\u81f4\u5361\u987f</li> <li>\u6bcf\u6b21\u68c0\u6d4b\u5230\u6cc4\u6f0f\u5c31\u4f1adump\u5feb\u7167\u6587\u4ef6\uff0c\u540c\u4e00\u4e2a\u4e5f\u4f1a\u89e6\u53d1</li> <li>dump\u51fa\u7684hprof(\u5185\u5b58\u955c\u50cf)\u6587\u4ef6\u8017\u65f6\uff0c\u5bb9\u6613\u9020\u6210\u7a0b\u5e8f\u672a\u54cd\u5e94</li> <li>hprof\u6587\u4ef6\u592a\u5927\uff0c\u89e3\u6790\u8017\u65f6</li> </ol> <p>\u7ebf\u4e0a\u4f7f\u7528KOOM</p>"}, {"location": "android/performance/android_mat/", "title": "Mat\u5de5\u5177", "text": ""}, {"location": "android/performance/android_mat/#memory-analyzer", "title": "Memory Analyzer\u4e0b\u8f7d\u5730\u5740", "text": "<p>https://eclipse.dev/mat/downloads.php</p>"}, {"location": "android/performance/android_mat/#hprofdump", "title": "hprof\u6587\u4ef6dump", "text": "<p>\u65b9\u5f0f\u4e00\uff1a\u901a\u8fc7android studio profiler-memory</p> <p>\u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u4ee3\u7801 <pre><code>private fun dumpHprof() {\n    Log.e(tag\", \"start dump \")\n    val cacheDir = applicationContext.externalCacheDir\n    val filePath = \"${cacheDir?.absolutePath}/${System.currentTimeMillis()}_dump.hprof\"\n    val file = File(filePath)\n    try {\n        android.os.Debug.dumpHprofData(file.absolutePath)\n        Log.e(\"tag\", \"end dump \")\n    } catch (e: Exception) {\n        e.printStackTrace()\n    }\n}\n</code></pre></p>"}, {"location": "android/performance/android_mat/#_1", "title": "\u6807\u51c6\u683c\u5f0f\u8f6c\u5316", "text": "<p>\u5de5\u5177\u4f4d\u7f6e\uff1aAndroidSDK\\platform-tools <pre><code>hprof-conv -z fileName.hprof newFileName.hprof\n</code></pre> \u4f7f\u7528\u62d6\u62fd\u811a\u672c <pre><code>@echo off\nSetlocal enabledelayedexpansion\nset \"file=%~1\"\nset inputfilename=%~n1\nmd %inputfilename%\nset hpOutFile=%inputfilename%\\%inputfilename%_new.hprof\nhprof-conv.exe %file% %hpOutFile%\necho success!\nendlocal\n</code></pre> Histogram</p> <p>with incoming references\uff1a\u67e5\u770b\u7c7b\u88ab\u54ea\u4e9b\u5b9e\u4f8b\u5f15\u7528</p> <p>with outgoing references: \u67e5\u770b\u5f15\u7528\u54ea\u4e9b\u5916\u90e8\u5b9e\u4f8b</p> <p>Shallow Heap: \u6d45\u5806</p> <p>Retained Heap: \u6df1\u5806\uff0c\u7740\u91cd\u67e5\u770b</p> <p>\u5de6\u4e0b\u89d2\u6709\u9ec4\u70b9\u8868\u793a\u6709\u6cc4\u6f0f</p>"}, {"location": "android/performance/android_memory_base/", "title": "\u57fa\u7840\u77e5\u8bc6", "text": ""}, {"location": "android/performance/android_memory_base/#android", "title": "Android\u865a\u62df\u673a", "text": ""}, {"location": "android/performance/android_memory_base/#_1", "title": "\u57fa\u672c\u6982\u5ff5", "text": "<ul> <li>.dex\u6587\u4ef6\uff1aApp\u6240\u6709java\u6e90\u4ee3\u7801\u7f16\u8bd1\u540e\u751f\u6210\u4f17\u591aclass\u6587\u4ef6\uff0c\u7531DX/D8\uff0c\u7f16\u8bd1\u4e3a\u4e00\u4e2a/\u591a\u4e2a\uff08multiDex\uff09dex\u6587\u4ef6\uff0c\u7531Android\u865a\u62df\u673a\u7f16\u8bd1\u6267\u884c</li> <li>odex\u6587\u4ef6\uff1adex\u6587\u4ef6\u7ecf\u8fc7\u9a8c\u8bc1\u548c\u4f18\u5316\u540e\u7684\u4ea7\u7269\uff0cart\u4e0b\u7684odex\u6587\u4ef6\u5305\u542b\u7ecf\u8fc7AOT\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u4ee5\u53cadex\u7684\u5b8c\u6574\u5185\u5bb9\uff0c\u4f46Android8.0\u4e4b\u540eodex\u4e2d\u7684dex\u5185\u5bb9\u79fb\u52a8\u5230\u4e86.vdex\u6587\u4ef6</li> <li>.art\u6587\u4ef6\uff1aart\u4e0b\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u751f\u6210odex\u6587\u4ef6\u65f6\u540c\u65f6\u751f\u6210.art\u6587\u4ef6\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u63d0\u5347\u8fd0\u884c\u65f6\u52a0\u8f7dodex\u4e2d\u70ed\u70b9\u4ee3\u7801\u7684\u901f\u5ea6\uff0c\u5305\u542b\u4e86\u7c7b\u4fe1\u606f\u548codex\u4e2d\u70ed\u70b9\u65b9\u6cd5\u7684\u7d22\u5f15\uff0c\u8fd0\u884cApp\u65f6\u4f1a\u9996\u5148\u6839\u636e\u8fd9\u4e2a\u6587\u4ef6\u6765\u52a0\u8f7dodex\u4e2d\u5df2\u7ecf\u7f16\u8bd1\u8fc7\u7684\u4ee3\u7801</li> <li>\u89e3\u91ca\u5668\uff08Interpreter\uff09\uff1a\u7528\u4e8e\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5bf9\u4ee3\u7801\u8fdb\u884c\u9010\u884c\u89e3\u91ca\uff0c\u7ffb\u8bd1\u6210\u5bf9\u5e94\u5e73\u53f0\u7684\u673a\u5668\u7801\u6267\u884c\uff1b</li> <li>JIT\u7f16\u8bd1\uff08Just In Time\uff09\uff1a\u7531\u4e8e\u89e3\u91ca\u5668\u65b9\u5f0f\u8fd0\u884c\u592a\u6162\u5f15\u5165\uff0c\u5bf9\u4e8e\u9891\u7e41\u8fd0\u884c\u7684\u70ed\u70b9\u4ee3\u7801\uff08\u5224\u5b9a\u6807\u51c6\u4e00\u822c\u662f\u5728\u67d0\u4e2a\u65f6\u95f4\u6bb5\u5185\u6267\u884c\u6b21\u6570\u8fbe\u5230\u67d0\u4e2a\u9608\u503c\uff09\u8fdb\u884c\u5b9e\u65f6\u7f16\u8bd1\uff08\u5728ART\u4e0b\u4ee5\u65b9\u6cd5\u4e3a\u7c92\u5ea6\uff09\u6267\u884c\uff0c\u5e76\u4e14\u7f13\u5b58JIT\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u5728\u5185\u5b58\u4e2d\u7528\u4e8e\u4e0b\u6b21\u6267\u884c\u3002\u7531\u4e8e\u4ee5\u65b9\u6cd5\u4e3a\u7c92\u5ea6\uff08ArtMethod\uff09\u8fdb\u884c\u7f16\u8bd1\uff0cJIT\u7f16\u8f83\u4e8e\u89e3\u91ca\u5668\u53ef\u4ee5\u751f\u6210\u6548\u7387\u66f4\u9ad8\u7684\u4ee3\u7801\uff0c\u8fd0\u884c\u66f4\u5feb\uff1b</li> <li>AOT\u7f16\u8bd1\uff08Ahead-Of-Time\uff09\uff1a\u5e94\u7528\u5b89\u88c5\u65f6\u5168\u91cf\u7f16\u8bd1\u6240\u6709\u4ee3\u7801\u4e3a\u672c\u5730\u673a\u5668\u7801\uff0c\u8fd0\u884c\u65f6\u76f4\u63a5\u6267\u884c\u673a\u5668\u7801\uff1b</li> </ul> <p>Dalvik\u5185\u5b58\u533a\u57df\u5757</p> <p>Linear Alloc\uff1a\u533f\u540d\u5171\u4eab\u5185\u5b58\uff0c\u53ea\u8bfb\u533a\u57df</p> <p>Zygote Space\uff1aZygote\u8fdb\u7a0b\u548c\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\uff0c\u5bf9\u8c61\u5728\u542f\u52a8\u65f6\u4f1a\u91cd\u65b0\u521b\u5efa</p> <p>Alloc Space\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u72ec\u5360\uff0c\u5206\u914d\u5bf9\u8c61\u533a\u57df</p> <p>Art\u5185\u5b58\u533a\u57df\u5757</p> <p>Non Moving Space</p> <p>Zygote Space</p> <p>Alloc Space</p> <p>Image Space\uff1a\u9884\u52a0\u8f7d\u7684\u7c7b\u4fe1\u606f\uff0cZygote\u8fdb\u7a0b\u548c\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab</p> <p>Large Obj Space\uff1a\u5206\u914d\u5927\u5bf9\u8c61\uff0c\u5982bitmap\uff0c\u6b64\u5904\u5bf9\u8c61\u53ea\u521b\u5efa\u4e00\u6b21</p> <p>\u8fd0\u884c\u65f6\u5806\u90fd\u5206\u4e3a\u524d3\u4e2a</p> Dalvik Art \u56de\u6536\u7b97\u6cd5 \u6807\u8bb0-\u6e05\u9664\u7b97\u6cd5 CMS\uff1f GC\u6682\u505c \u4e24\u6b21 \u4e00\u6b21 <ul> <li>4.4\u88ab\u5f15\u5165\uff0c5.0\u5f00\u59cb\u66ff\u6362Dalvik\u865a\u62df\u673a\uff0c7.0\u548c8.0\u5206\u522b\u8fdb\u884c\u4e00\u7cfb\u5217\u6539\u52a8</li> <li>4.4~7.0 ART\u53ea\u91c7\u7528AOT\u7f16\u8bd1\uff0c\u5728App\u5b89\u88c5\u65f6\u5c31\u7f16\u8bd1\u6240\u6709\u4ee3\u7801\u5b58\u50a8\u5728\u672c\u5730\uff0c\u6253\u5f00App\u76f4\u63a5\u8fd0\u884c\uff0c\u8fd9\u6837\u505a\u7684\u4f18\u70b9\u662f\u5e94\u7528\u8fd0\u884c\u901f\u5ea6\u53d8\u5feb\uff0c\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0cApp\u5b89\u88c5\u65f6\u95f4\u660e\u663e\u53d8\u957f\uff0c\u800c\u4e14\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\u8f83\u5927</li> <li>7.0 \u5f15\u5165\u4e86JIT\u7f16\u8bd1\uff0c\u7ed3\u5408\u4f7f\u7528AOT/JIT\u6df7\u5408\u7f16\u8bd1</li> <li>Android 8.0\u5f15\u5165\u4e86.vdex\u6587\u4ef6\uff0c\u5b83\u91cc\u9762\u5305\u542b APK \u7684\u672a\u538b\u7f29 DEX \u4ee3\u7801\uff0c\u4ee5\u53ca\u4e00\u4e9b\u7528\u4e8e\u52a0\u5feb\u9a8c\u8bc1\u901f\u5ea6\u7684\u5143\u6570\u636e</li> </ul> JVM Android\u865a\u62df\u673a \u865a\u62df\u673a\u6808 \u5c40\u90e8\u53d8\u91cf\u8868\u548c\u64cd\u4f5c\u6570\u6808 \u5bc4\u5b58\u5668 \u5806 Eden\u3001S0\u3001S1\u548c\u8001\u5e74\u4ee3 Alloc Space\u5148\u5f53\u4e8e\u65b0\u751f\u4ee3\uff0cLarge Obj Space\u76f8\u5f53\u4e8e\u8001\u5e74\u4ee3 \u52a0\u8f7d class\u6216jar dex <ul> <li> <p>\u57fa\u4e8e\u5bc4\u5b58\u5668\u6267\u884c\u6548\u7387\u597d\uff0c\u4f46\u662f\u53ef\u79fb\u690d\u6027\u5dee\uff0c\u96be\u8de8\u5e73\u53f0</p> </li> <li> <p>\u52a0\u8f7d\u901f\u5ea6\u5feb\uff0cdex\u76f8\u6bd4\u4e8eJar\u6587\u4ef6\u4f1a\u628a\u6240\u6709\u5305\u542b\u7684\u4fe1\u606f\u6574\u5408\u5728\u4e00\u8d77\uff0c\u51cf\u5c11\u4e86\u5197\u4f59\u4fe1\u606f\u3002\u8fd9\u6837\u5c31\u51cf\u5c11I/O\u64cd\u4f5c\uff0c\u63d0\u9ad8\u7c7b\u7684\u67e5\u627e\u901f\u5ea6</p> </li> </ul>"}, {"location": "android/performance/android_memory_base/#_2", "title": "\u8fdb\u7a0b\u5185\u5b58\u5206\u914d", "text": "<p>\u901a\u8fc7getprop\u83b7\u53d6</p> <p>app\u542f\u52a8\u521d\u59cb\u5806\u5206\u914d\u7684\u5185\u5b58\uff1a</p> <p>[dalvik.vm.heapstartsize]: [8m]</p> <p>app\u6700\u5927\u5185\u5b58\u9650\u5236\uff1a</p> <p>[dalvik.vm.heapgrowthlimit]: [256m]</p> <p>\u5f00\u542flargeHeap=true\u540e\u7684\u6700\u5927\u9650\u5236</p> <p>[dalvik.vm.heapsize]: [512m]</p> <p>largeHeap\u4e3atrue\uff0c\u5219\u5185\u5b58\u5230heapsize\u624d\u4f1aOOM\uff0c\u5426\u5219\u8fbe\u5230 heapgrowthlimit\u5c31\u4f1aOOM</p>"}, {"location": "android/performance/android_memory_base/#kill", "title": "\u4f4e\u5185\u5b58kill\u8fdb\u7a0b\u673a\u5236", "text": "<p>\u8fdb\u7a0b\u5206\u4e3a\uff1a\u7a7a\u8fdb\u7a0b\u3001\u540e\u53f0\u8fdb\u7a0b\u3001\u670d\u52a1\u8fdb\u7a0b\u3001\u53ef\u89c1\u8fdb\u7a0b\u3001\u524d\u53f0\u8fdb\u7a0b</p> <p>AMS\u4f1a\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u8bc4\u5206\uff0c\u8bb0\u5f55\u5230adj\u4e2d</p> <p>oom_adj: ps\u67e5\u770bpid \u7136\u540e\u4f7f\u7528cat/pid/oom_adj\uff0c\u5185\u5b58\u4e0d\u8db3\u65f6\u6839\u636e\u6b64\u503c\u8fdb\u884ckill(\u4ece\u9ad8\u5230\u5e95) </p> <p>\u4fdd\u6d3b\u53ef\u4ee5\u7528workmanager</p>"}, {"location": "android/performance/android_memory_commond/", "title": "\u7cfb\u7edf\u547d\u4ee4", "text": ""}, {"location": "android/performance/android_memory_commond/#_1", "title": "\u5206\u6790\u5185\u5b58\u547d\u4ee4", "text": ""}, {"location": "android/performance/android_memory_commond/#dumpsys-meminfo", "title": "dumpsys meminfo", "text": "<p>\u53ef\u4ee5\u770b\u5230\u4e0d\u540c\u6807\u51c6\u6392\u5e8f</p> <p>dumpsys meminfo \u5305\u540d</p> <p>\u5185\u5b58\u6307\u6807</p> \u542b\u4e49 \u7b49\u4ef7 USS \u7269\u7406\u5185\u5b58 \u8fdb\u7a0b\u72ec\u5360\u7684\u5185\u5b58 PSS \u7269\u7406\u5185\u5b58 PSS=USS+\u6309\u6bd4\u4f8b\u5305\u542b\u5171\u4eab\u5e93 RSS \u7269\u7406\u5185\u5b58 RSS=USS+\u5305\u542b\u5171\u4eab\u5e93 VSS \u865a\u62df\u5185\u5b58 VSS=RSS+\u672a\u5206\u914d\u5b9e\u9645\u7269\u7406\u5185\u5b58 <p>\u4e00\u822c\u5206\u6790PSS</p> <p>\u53ef\u4ee5\u5728\u754c\u9762\u8df3\u8f6c\u540e\u524d\u540edumpsys\u5bf9\u6bd4\u6570\u636e\uff0c\u53ea\u80fd\u5927\u6982\u5224\u65ad\u662f\u5426\u6709\u6cc4\u6f0f</p>"}, {"location": "android/performance/android_memory_commond/#procrank", "title": "procrank", "text": ""}, {"location": "android/performance/android_memory_commond/#cat-procmeminfo", "title": "cat /proc/meminfo", "text": ""}, {"location": "android/performance/android_memory_commond/#free", "title": "free", "text": ""}, {"location": "android/performance/android_memory_commond/#showmap", "title": "showmap", "text": ""}, {"location": "android/performance/android_memory_commond/#vmstat", "title": "vmstat", "text": ""}, {"location": "android/performance/android_memory_commond/#_2", "title": "\u603b\u7ed3", "text": "<ol> <li>dumpsys meminfo \u9002\u7528\u573a\u666f\uff1a \u67e5\u770b\u8fdb\u7a0b\u7684oom adj\uff0c\u6216\u8005dalvik/native\u7b49\u533a\u57df\u5185\u5b58\u60c5\u51b5\uff0c\u6216\u8005\u67d0 \u4e2a\u8fdb\u7a0b\u6216apk\u7684\u5185\u5b58\u60c5\u51b5\uff0c\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff1b</li> <li>procrank \u9002\u7528\u573a\u666f\uff1a \u67e5\u770b\u8fdb\u7a0b\u7684VSS/RSS/PSS/USS\u5404\u4e2a\u5185\u5b58\u6307\u6807\uff1b</li> <li>cat /proc/meminfo \u9002\u7528\u573a\u666f\uff1a \u67e5\u770b\u7cfb\u7edf\u7684\u8be6\u5c3d\u5185\u5b58\u4fe1\u606f\uff0c\u5305\u542b\u5185\u6838\u60c5\u51b5\uff1b</li> <li>free \u9002\u7528\u573a\u666f\uff1a \u53ea\u67e5\u770b\u7cfb\u7edf\u7684\u53ef\u7528\u5185\u5b58\uff1b</li> <li>showmap \u9002\u7528\u573a\u666f\uff1a \u67e5\u770b\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u5185\u5b58\u5206\u914d\u60c5\u51b5</li> </ol>"}, {"location": "android/performance/android_memory_leak/", "title": "\u5185\u5b58\u6cc4\u6f0f\u4f18\u5316", "text": "<p>\u5f53\u5bf9\u8c61\u4e0d\u80fd\u88ab\u56de\u6536\u5bfc\u81f4\u5185\u5b58\u8d8a\u6765\u8d8a\u5c11\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1aoom</p> <p>java\u5bf9\u8c61\u5b58\u6d3b</p> <p>\u5e38\u89c1\u6cc4\u6f0f\uff1a\u5355\u4f8bcontext(applicationContext\u6216\u8005\u624b\u52a8\u5c06\u5355\u4f8b\u7f6enull)\u3001handler(\u5f31\u5f15\u7528+\u9500\u6bc1removeMessage\u64cd\u4f5c)\u3001\u3001</p>"}, {"location": "android/performance/android_memory_leak/#_1", "title": "\u5e38\u89c1\u5185\u5b58\u6cc4\u6f0f\u539f\u56e0", "text": "<ul> <li>\u9759\u6001\u53d8\u91cf\u6216\u5355\u4f8b(\u4e0d\u8981\u6301\u6709activity\u6216view\u7b49\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u6539\u6210\u5f31\u5f15\u7528)</li> <li>\u975e\u9759\u6001\u7c7b\u6301\u6709\u9759\u6001\u5b9e\u4f8b\u5f15\u7528(\u6539\u6210\u9759\u6001\u5185\u90e8\u7c7b)</li> <li>\u533f\u540d\u5185\u90e8\u7c7b(Handler\uff0c\u53ef\u6539\u6210\u9759\u6001\u5185\u90e8\u7c7b\u6216\u8005\u5f31\u5f15\u7528\u65b9\u5f0f+\u9500\u6bc1removeMessage\u64cd\u4f5c)</li> <li>webview(\u901a\u8fc7\u52a8\u6001\u521b\u5efa+addView/removeView\u7684\u5f62\u5f0f\u6216\u72ec\u7acb\u8fdb\u7a0b\u9000\u51fa\u8c03\u7528System.exit)</li> <li>\u52a8\u753b\u95ee\u9898(activity\u9500\u6bc1\uff0c\u9700\u8981cancel\u52a8\u753b)</li> <li>\u6d41\u3001Cursor\u3001File\u7b49\u6ca1\u6709close\uff0cBitmap\u7684recycle(\u9ad8\u7248\u672c\u5176\u5b9e)</li> <li>\u7ebf\u7a0b\u6c60\u6ca1\u6709shutdown</li> <li>ThreadLocal\u4f7f\u7528\u4e0d\u5f53\u6cc4\u6f0f</li> <li>Activity\u6cc4\u6f0f(\u4e3b\u7ebf\u7a0b\u4e00\u76f4\u5728\u5237\u65b0UI\u6216\u8005\u52a8\u753b\u6267\u884c\uff0c\u6ce8\u610fView\u5237\u65b0\u5728onStop\u6539\u6210onPause\u5904\u7406)</li> </ul> <p>AMS\u515c\u5e95\u673a\u5236\uff1a\u542f\u52a8Activity\u65f6\uff0c\u4f1a\u542f\u52a8\u5b9a\u65f610s</p> <p>ActivityA(\u4e00\u76f4\u6267\u884c\u52a8\u753b) \u8df3\u8f6c\u5230ActivityB \u900f\u660e\u4e3b\u9898 finish\u540eB\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898</p> <p>onDestory 10s\u540e\u624d\u6267\u884c\u95ee\u9898</p> <p>\u539f\u56e0\uff1a\u524d\u8005\u662f\u56e0\u4e3aactivity\u5b58\u653e\u5728ActivityThread\u7684mNewActivities\uff0c\u800cmNewActivities=null\u6267\u884c\u662f\u5728</p> <p>Looper.myQueue().addIdleHandler(new Idler());</p> <p>IdleHandler\u662f\u7a7a\u95f2\u65f6\u624d\u6267\u884c\uff0c\u7531\u4e8e\u52a8\u753b\u5237\u65b0UI\u5bfc\u81f4Handler\u6ca1\u6709\u5904\u4e8e\u7a7a\u95f2\u5bfc\u81f4mNewActivities=null\u4e0d\u6267\u884c</p> <p>\u540e\u8005\u539f\u56e0\u4e5f\u7c7b\u4f3cac.activityIdle(a.token, a.createdConfig, stopProfiling)\u6ca1\u6267\u884c</p>"}, {"location": "android/performance/android_memory_leak/#_2", "title": "\u5185\u5b58\u6cc4\u6f0f\u5206\u6790\u5de5\u5177", "text": "<p>MAT: \u5206\u6790hprof\u6587\u4ef6</p> <p>LeakCanary\uff1a\u7ebf\u4e0b\u4f7f\u7528\uff0c\u5b9e\u65f6\uff0c\u4ea7\u751fhprof\u6587\u4ef6</p> <p>Matrix</p> <p>Koom\uff1a\u7ebf\u4e0a\u4f7f\u7528\uff0c\u65e0\u6cd5\u5b9e\u65f6\uff0c\u4ea7\u751fhprof\u6587\u4ef6</p> <p>Android Studio Memory-profiler</p> <p>\u4f7f\u7528\u6559\u7a0b\uff1a https://developer.android.com/studio/profile/memory-profiler#performance</p> <p>\u70b9\u51fbCapture heap dump\u5373\u53ef\u5f97\u5230hprof\u6587\u4ef6</p>"}, {"location": "android/performance/android_memory_oom/", "title": "\u5185\u5b58\u6ea2\u51fa\u4f18\u5316", "text": ""}, {"location": "android/performance/android_memory_oom/#oom", "title": "\u5185\u5b58\u6ea2\u51fa(OOM)", "text": "<p>\u5206\u7c7b\uff1aJava\u5806\u5185\u5b58\u6ea2\u51fa(\u5e38\u89c1)\u3001\u65e0\u8db3\u591f\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u3001FD\u6570\u91cf\u8d85\u51fa\u9650\u5236\u3001\u7ebf\u7a0b\u6570\u8d85\u51fa\u9650\u5236\u3001\u865a\u62df\u5185\u5b58\u4e0d\u8db3</p>"}, {"location": "android/performance/android_memory_oom/#_1", "title": "\u5e38\u89c1\u5185\u5b58\u6ea2\u51fa", "text": "<ul> <li>\u5185\u5b58\u6296\u52a8</li> <li>\u5185\u5b58\u6cc4\u6f0f</li> <li>\u6587\u4ef6\u6570\u8fbe\u4e0a\u9650</li> <li>\u7ebf\u7a0b\u6570\u8fbe\u4e0a\u9650</li> <li>\u5185\u5b58\u4e0d\u8db3</li> </ul>"}, {"location": "android/performance/android_memory_oom/#_2", "title": "\u5206\u914d\u5927\u5185\u5b58", "text": "<p>AndroidManifest\u4e2dandroid:largeHeap=\"true\"\uff0c\u83b7\u53d6\u5f53\u524d\u914d\u7f6e\u5185\u5b58\u5927\u5c0f\u548c\u6700\u5927\u5185\u5b58\u5927\u5c0f <pre><code>getSystemService(Context.ACTIVITY_SERVICE).let {it as ActivityManager\n    val info = ActivityManager.MemoryInfo()// \u83b7\u53d6\u7cfb\u7edf\u5185\u5b58\n    it.getMemoryInfo(info)\n    Log.e(\"tag\", \"memory: ${it.memoryClass}, large memory\uff1a ${it.largeMemoryClass}, info: ${info.availMem} ${info.totalMem}\")\n}\n</code></pre></p>"}, {"location": "android/performance/android_memory_oom/#_3", "title": "\u76d1\u542c\u91ca\u653e\u5185\u5b58\u54cd\u5e94", "text": "<p>\u6839\u636e\u5185\u5b58level\u5904\u7406 <pre><code>class MainActivity : ComponentActivity(), ComponentCallbacks2 {\n    override fun onTrimMemory(level: Int) {\n        super.onTrimMemory(level)\n    }\n</code></pre></p>"}, {"location": "android/performance/android_memory_shake/", "title": "\u5185\u5b58\u6296\u52a8\u4f18\u5316", "text": "<p>\u77ed\u65f6\u95f4\u5185\u5b58\u53cd\u590d\u53d1\u751f\u589e\u957f\u548c\u56de\u6536\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5361\u987f\u548coom</p> <p>\u5361\u987f\uff1agc\u56de\u6536\u4e2d\u4f1a\u6709stw\u4f7f\u5f97\u5de5\u4f5c\u7ebf\u7a0b(\u5305\u62ec\u4e3b/\u5b50\u7ebf\u7a0b)\u6682\u505c</p> <p>oom\uff1a\u5982\u679c\u5783\u573e\u56de\u6536\u91c7\u7528\u7684\u65f6\u6807\u8bb0-\u6e05\u9664\u6cd5\u4f1a\u51fa\u73b0\u5927\u91cf\u5185\u5b58\u788e\u7247\uff0c\u6b64\u65f6\u521b\u5efa\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u5bf9\u8c61(\u5982\u6570\u7ec4)\u65f6\u7531\u4e8e\u6ca1\u6709\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u5bfc\u81f4oom</p>"}, {"location": "android/performance/android_memory_shake/#_1", "title": "\u76d1\u63a7\u5de5\u5177", "text": "<p>BlockCanary</p> <p>Matrix</p> <p>\u90fd\u662f\u91c7\u7528AOP\u601d\u60f3</p> <p>\u5207\u9762</p> <p>BaseActivity\uff1a\u4fb5\u5165\u6027\u592a\u5f3a</p> <p>Message</p>"}, {"location": "android/performance/android_memory_shake/#_2", "title": "\u5e38\u89c1\u5185\u5b58\u6296\u52a8", "text": "<ul> <li>\u5b57\u7b26\u4e32\u62fc\u63a5(StringBuilder\u4ee3\u66ff+)\uff0cColor.parseColor()</li> <li>\u5728\u5faa\u73af\u91cc\u9762\u521b\u5efa\u5bf9\u8c61</li> <li>\u5728onDraw\u91cc\u9762\u521b\u5efa\u5bf9\u8c61</li> <li>bitmap</li> </ul>"}, {"location": "android/performance/android_memory_shake/#_3", "title": "\u5185\u5b58\u6296\u52a8\u5206\u6790\u5de5\u5177", "text": "<p>Android Studio Memory-profiler\u4e2d</p> <p>Record native allocations</p> <p>Record Java/Kotlin allocations</p> <p>\u6839\u636e\u4e0a\u4e0b\u6587\u73af\u5883\u4f18\u5316\u5bf9\u8c61\u521b\u5efa</p>"}, {"location": "android/performance/android_memory_shake/#_4", "title": "\u4f18\u5316\u624b\u6bb5", "text": "<p>\u4f18\u5316\u672c\u8d28\uff1a\u51cf\u5c11\u5bf9\u8c61\u7684\u521b\u5efa</p> <p>\u5bf9\u8c61\u6c60\uff0c\u53ef\u53c2\u8003Handler\u3001Glide\u3001Okhttp\u7b49</p> <p>Handler\uff1a\u91c7\u7528\u5355\u9879\u94fe\u8868\u5b9e\u73b0</p> <p>Glide\uff1a\u53ccMap\u5b9e\u73b0</p> <p>\u7f3a\u9677\u5c31\u662f\u6570\u7ec4\u5bf9\u8c61\u6c60\u4e2dkey\u4e0d\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4f1a\u4ea7\u751f\u5927\u91cfInteger\u5bf9\u8c61</p> <p>\u4f18\u5316\u65b9\u5f0f\u662f\u4f7f\u7528\u4eff\u7167SparseArray\u7ed3\u5408TreeMap\u5b9e\u73b0\uff0cTreeMap\u4e3b\u8981\u6709ceilingKey\u65b9\u6cd5\u9700\u8981\u6a21\u4eff\u3002</p> <p>ceilingKey\u65b9\u6cd5\u4f5c\u7528</p> <p>\u6570\u7ec4\u5982byte[]\u9700\u898125\u4e2a\u5927\u5c0f\uff0c\u800c\u5bf9\u8c61\u6c60\u4e2d\u53ea\u670920\u621630\u7684\u5927\u5c0f\uff0c\u6b64\u65f6\u901a\u8fc7ceilingKey\u53ef\u4ee5\u83b7\u53d6\u523030\u5927\u5c0f</p> <p>\u4e3a\u4f55\u4e0d\u76f4\u63a5\u521b\u5efa25\u4e2a\u5927\u5c0f\u7684\u6570\u7ec4\u5462\uff1f \u8fdd\u53cd\u672c\u8d28\u662f\u8f83\u5c11\u5bf9\u8c61\u521b\u5efa</p>"}, {"location": "android/performance/android_start/", "title": "\u542f\u52a8\u4f18\u5316", "text": "<p>\u51c6\u5907\u77e5\u8bc6\uff1aapp\u542f\u52a8\u6d41\u7a0b\u3001DAG\u3001\u62d3\u6b65\u6392\u5e8f\u3001\u7ebf\u7a0b\u76f8\u5173</p> <p>\u9ed1\u767d\u5c4f\uff1a splashscreen PhoneWindow\u4e2d\u89e3\u6790</p> <p>context\uff1a\u88c5\u9970\u8005\u6a21\u5f0f</p> <p>\u4f18\u5316\u90e8\u5206\uff1a</p> <p>Application attachBaseContext \u5b57\u8282\u4f18\u5316</p> <p>attach-onCreate-onStart-onResume</p> <p>attach: \u521b\u5efa\u4e0a\u4e0b\u6587\uff0c\u521b\u5efawindow</p> <p>activity\u7ba1\u7406window\uff0cwindow\u7ba1\u7406view</p> <p>onWindowFocusChanged\u662f\u771f\u6b63\u663e\u793a</p> <p>setContentView\u6bd4\u81ea\u5b9a\u4e49view\u6162\uff1f\u56e0\u4e3a\u901a\u8fc7\u89e3\u6790xml \u53cd\u5c04 \u8f6c\u6210view \u4f18\u5316\u65b9\u5f0f\uff1a\u65e0\uff0c\u53ea\u80fd\u51cf\u5c11xml\u4e2d\u7684\u5e03\u5c40\u5c42\u7ea7\uff0c\u6839\u672c\u89e3\u51b3\u65b9\u6848compose</p> <p>onResume\u53ef\u4f18\u5316</p> <p>Looper.myQueue().addIdleHandler {     false }</p>"}, {"location": "android/performance/android_start/#dag", "title": "\u6709\u5411\u65e0\u73af\u56feDAG", "text": "<p>\u8868\u793a\u4e8b\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u7ba1\u7406\u4efb\u52a1\u4e4b\u95f4\u7684\u8c03\u5ea6</p> <p></p> <p>\u9876\u70b9\uff1a\u56fe\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u6bd4\u5982\u9876\u70b9Java\uff0c\u9876\u70b9Socket</p> <p>\u8fb9\uff1a\u8fde\u63a5\u4e24\u4e2a\u9876\u70b9\u7684\u7ebf\u6bb5\u53eb\u505a\u8fb9</p> <p>\u5165\u5ea6\uff1a\u4ee3\u8868\u5f53\u524d\u6709\u591a\u5c11\u8fb9\u6307\u5411\u5b83\uff0c\u5982Java\u5165\u5ea6\u4e3a0\uff0cSocket\u5165\u5ea6\u4e3a1</p> <p>\u51fa\u5ea6\uff1a\u4ee3\u8868\u5f53\u524d\u6307\u5411\u5176\u4ed6\u7684\u8fb9\u6570\uff0c\u5982Java\u51fa\u5ea6\u4e3a2</p>"}, {"location": "android/performance/android_start/#_1", "title": "\u62d3\u6251\u6392\u5e8f", "text": "<p>\u5bf9\u4e00\u4e2a\u6709\u5411\u56fe\u6784\u9020\u62d3\u6251\u5e8f\u5217\u7684\u8fc7\u7a0b</p> <p>\u4e24\u79cd\u7b97\u6cd5\uff1a\u5165\u5ea6\u8868\u6cd5(BFS\u6cd5\u5373\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22)\u548cDFS\u6cd5(\u6df1\u5ea6\u4f18\u5148\u641c\u7d22)</p>"}, {"location": "android/performance/android_start/#_2", "title": "\u5165\u5ea6\u8868\u6cd5", "text": "<ol> <li>\u627e\u5230\u56fe\u4e2d\u5165\u5ea6\u4e3a0\u7684\u9876\u70b9</li> <li>\u53cd\u590d\u5220\u9664\u9876\u70b9\u518d\u627e\u5165\u5ea6\u4e3a0\u7684\u9876\u70b9\uff0c\u5b8c\u6210\u6392\u5e8f</li> </ol> <p>\u4e0a\u56fe\u4e2d\u7ed3\u679c\uff1a</p> <p>Java-Socket-\u8bbe\u8ba1\u6a21\u5f0f-Http\u534f\u8bae-OkHttp</p> <p>\u62d3\u6251\u6392\u5e8f\u4e0d\u552f\u4e00\uff1aJava\u540e\u53ef\u4ee5\u662fSocket\u4e5f\u53ef\u4ee5\u662f\u8bbe\u8ba1\u6a21\u5f0f</p>"}, {"location": "android/performance/android_start/#dfs", "title": "DFS", "text": "<ol> <li>\u6df1\u5ea6\u641c\u7d22</li> <li>\u627e\u5230\u56fe\u4e2d\u51fa\u5ea6\u4e3a0\u7684\u9876\u70b9</li> </ol> <p>Java-Socket-Http\u534f\u8bae-Okhttp</p> <p>Okhttp-Http\u534f\u8bae-Socket\u540e\u8bbe\u8ba1\u6a21\u5f0f\u7684\u51fa\u5ea6\u4e3a0\uff0c\u6240\u4ee5\u662f\u8bbe\u8ba1\u6a21\u5f0f-Java</p> <p>\u6700\u7ec8\u7ed3\u679c\u662f\u62ff\u9006\u5e8f\uff1a</p> <p>Java-\u8bbe\u8ba1\u6a21\u5f0f-Socket-Http\u534f\u8bae-Okhttp</p> <p>CountDownLatch\u5b8c\u6210\u7ebf\u7a0b\u6267\u884c\u987a\u5e8f \u4e09\u65b9sdk\u901a\u8fc7\u5b57\u8282\u7801\u63d2\u6869 gradle\u4fee\u6539\u5185\u90e8\u5b50\u7ebf\u7a0b\u542f\u52a8\u7b49</p>"}, {"location": "android/performance/android_ui/", "title": "UI\u4f18\u5316", "text": ""}, {"location": "android/performance/android_ui/#_1", "title": "\u5e03\u5c40\u4f18\u5316", "text": ""}, {"location": "android/performance/android_ui/#include", "title": "include", "text": ""}, {"location": "android/performance/android_ui/#merge", "title": "merge", "text": ""}, {"location": "android/performance/android_ui/#stub", "title": "Stub", "text": ""}, {"location": "android/performance/android_ui/#webview", "title": "WebView\u4f18\u5316", "text": "<p>webview</p>"}, {"location": "android/system/activity/", "title": "Activity", "text": ""}, {"location": "android/system/activity/#_1", "title": "\u62e6\u622a\u8fd4\u56de\u624b\u52bf", "text": "<p><pre><code>open class BackActivity : AppCompatActivity() {\n    private val onBackPressedCallback by lazy {\n        object : OnBackPressedCallback(true) {\n            override fun handleOnBackPressed() {\n                if (!onBackEvent()) {\n                    Log.d(\"BackActivity\", \"BaseBackActivity handle back event.\")\n                    isEnabled = false\n                    onBackPressedDispatcher.onBackPressed()\n                    isEnabled = true\n                }\n            }\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        onBackPressedDispatcher.addCallback(this, onBackPressedCallback)\n    }\n\n    open fun onBackEvent(): Boolean = false\n}\n</code></pre> \u4f7f\u7528\u573a\u666f\uff1aFragment\u62e6\u622aback\u624b\u52bf <pre><code>class MainActivity : BackActivity() {\n    override fun onBackEvent(): Boolean {\n        if (XxxFragment.onBackEvent()) {\n            Log.d(TAG, \"XxxFragment handle back event.\")\n            return true\n        }\n        return super.onBackEvent()\n    }\n}\n</code></pre> Fragment\u7b80\u5355\u5c01\u88c5 <pre><code>open class BackFragment: Fragment() {\n    open fun onBackEvent(): Boolean = false\n}\n</code></pre> \u4f7f\u7528\u65f6\u6ce8\u610f\u5224\u65adisAdded <pre><code>override fun onBackEvent(): Boolean {\n    if (isAdded) {\n        //todo\n        return true\n    }\n    return false\n}\n</code></pre></p>"}, {"location": "android/system/application/", "title": "Application", "text": ""}, {"location": "android/system/application/#sdk", "title": "\u4e3b\u8fdb\u7a0b\u521d\u59cb\u5316SDK", "text": "<pre><code>override fun onCreate() {\n    super.onCreate()\n    // \u6839\u636e\u8fdb\u7a0b\u540d\u8fdb\u884c\u4e0d\u540c\u7684\u521d\u59cb\u5316\n    if (packageName == getProcessName(this)) {\n        initMainProcess()// \u4e3b\u8fdb\u7a0b\u521d\u59cb\u5316\n    }\n\n     private fun initMainProcess() {\n        //todo\n    }\n\n    private fun getProcessName(context: Context): String? {\n        val am = context.getSystemService(ACTIVITY_SERVICE) as ActivityManager\n        for (processInfo in am.runningAppProcesses) {\n            if (processInfo.pid == Process.myPid()) {\n                return processInfo.processName\n            }\n        }\n        return null\n    }\n}\n</code></pre>"}, {"location": "android/system/application/#sdkactivity", "title": "\u62e6\u622asdk\u4e2d\u7684Activity", "text": "<pre><code>fun registerHook(application: Application) {\n    application.registerActivityLifecycleCallbacks(object : ActivityLifecycleCallbacks {\n        override fun onActivityCreated(activity: Activity, savedInstanceState: Bundle?) {\n            if (\"com.xxx.xxx.XXXActivity\" == activity.javaClass.name) {\n                Log.d(TAG, \"activity create\")\n                activity.findViewById&lt;ViewGroup&gt;(android.R.id.content).also {\n                    it.post {\n                        it.addView(XXXView(activity))//\u6dfb\u52a0view\u6216\u8005\u5e03\u5c40\n                    }\n                }\n            }\n        }\n\n        override fun onActivityStarted(activity: Activity) {\n        }\n\n        override fun onActivityResumed(activity: Activity) {\n        }\n\n        override fun onActivityPaused(activity: Activity) {\n        }\n\n        override fun onActivityStopped(activity: Activity) {\n        }\n\n        override fun onActivitySaveInstanceState(activity: Activity, outState: Bundle) {\n        }\n\n        override fun onActivityDestroyed(activity: Activity) {\n            if (\"com.xxx.xxx.XXXActivity\" == activity.javaClass.name) {\n                Log.d(TAG, \"activity destroy\")\n            }\n        }\n    })\n}\n</code></pre>"}, {"location": "android/system/brightness/", "title": "\u7cfb\u7edf\u4eae\u5ea6", "text": ""}, {"location": "android/system/brightness/#_1", "title": "\u5c01\u88c5\u4eae\u5ea6\u4f7f\u7528\u7c7b", "text": "<p>\u6dfb\u52a0\u6743\u9650 <pre><code>&lt;uses-permission\n        android:name=\"android.permission.WRITE_SETTINGS\"\n        tools:ignore=\"ProtectedPermissions\" /&gt;\n</code></pre> \u6e90\u7801 <pre><code>class BrightnessManager : DefaultLifecycleObserver {\n    private val TAG = \"BrightnessManager\"\n    private var lastScreenManualMode: Int = -1\n    private lateinit var activity: AppCompatActivity\n    private var isSystemSet: Boolean = true\n    private var requestWriteSettings: ActivityResultLauncher&lt;Intent&gt;? = null\n    private var brightnessLiveData = MutableLiveData&lt;Int&gt;()\n\n    fun init(activity: AppCompatActivity) {\n        this.activity = activity\n        activity.lifecycle.addObserver(this)\n    }\n\n    override fun onCreate(owner: LifecycleOwner) {\n        super.onCreate(owner)\n        registerContentObserver { brightness -&gt;\n            Log.d(TAG, \"onCreate() called with: brightness = $brightness $isSystemSet\")\n            if (!isSystemSet) {\n                isSystemSet = true\n                return@registerContentObserver\n            }\n            leLinkSendMsg(JsonHelper.createBrightnessChangeAction(brightness))\n        }\n        requestWriteSettings =\n            activity.registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result -&gt;\n                if (Settings.System.canWrite(activity)) {\n                    brightnessLiveData.value?.let { setScreenBrightness(it) }\n                }\n                leLinkSendMsg(JsonHelper.createBrightnessChangeAction(getScreenBrightness()))\n            }\n    }\n\n    override fun onDestroy(owner: LifecycleOwner) {\n        super.onDestroy(owner)\n        unregisterContentObserver()\n        activity.lifecycle.removeObserver(this)\n    }\n\n    private fun goSettings() {\n        val intent = Intent(\n            Settings.ACTION_MANAGE_WRITE_SETTINGS,\n            Uri.parse(\"package:${activity.packageName}\")\n        )\n        requestWriteSettings?.launch(intent)\n    }\n\n    /**\n     * \u8bbe\u7f6e\u7cfb\u7edf\u5c4f\u5e55\u4eae\u5ea6\uff0c\u5f71\u54cd\u6240\u6709\u9875\u9762\u548capp\n     * \u6ce8\u610f\uff1a\u8fd9\u79cd\u65b9\u5f0f\u662f\u9700\u8981\u624b\u52a8\u6743\u9650\u7684\uff08android.permission.WRITE_SETTINGS\uff09\n     */\n    fun setBrightnessForCheck(brightness: Int) {\n        try {\n            //\u5148\u68c0\u6d4b\u8c03\u8282\u6a21\u5f0f\n//            setScreenManualMode(activity)\n            //\u518d\u8bbe\u7f6e\n            brightnessLiveData.value = brightness\n            setScreenBrightness(brightness)\n        } catch (e: Settings.SettingNotFoundException) {\n            e.printStackTrace()\n        }\n    }\n\n    private fun setScreenBrightness(brightness: Int) {\n        if (Settings.System.canWrite(activity)) {\n            /*val layoutParams = activity.window.attributes\n            layoutParams.screenBrightness = brightness / 255.0f\n            activity.window.attributes = layoutParams*/\n            isSystemSet = false\n            Settings.System.putInt(\n                activity.contentResolver,\n                Settings.System.SCREEN_BRIGHTNESS,\n                if (brightness == 0) 1 else brightness\n            )\n            val percent = brightness * 100 / getBrightnessMax()\n            FlowBus.with&lt;Int&gt;(BRIGHTNESS_CHANGE_UI).post(ActionJsonAnalysisHelper.mainScope, percent)\n        } else {\n            // \u7528\u6237\u6ca1\u6709\u6388\u4e88 WRITE_SETTINGS \u6743\u9650\n            // \u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\n            goSettings()\n        }\n    }\n\n    fun getScreenBrightness(): Int {\n        return try {\n            Settings.System.getInt(activity.contentResolver, Settings.System.SCREEN_BRIGHTNESS)\n        } catch (e: Settings.SettingNotFoundException) {\n            e.printStackTrace()\n            0\n        }\n    }\n\n    /**\n     * \u76d1\u542c\u7cfb\u7edf\u4eae\u5ea6\u53d8\u5316\n     */\n    private val brightnessObserver = object : ContentObserver(Handler(Looper.getMainLooper())) {\n        var callback: ((brightness: Int) -&gt; Unit)? = null\n        override fun onChange(selfChange: Boolean) {\n            super.onChange(selfChange)\n            callback?.invoke(getScreenBrightness())\n        }\n    }\n\n    /**\n     * \u6ce8\u518c\u76d1\u542c \u7cfb\u7edf\u5c4f\u5e55\u4eae\u5ea6\u53d8\u5316\n     */\n    private fun registerContentObserver(callback: (brightness: Int) -&gt; Unit) {\n        activity.contentResolver?.registerContentObserver(\n            Settings.System.getUriFor(Settings.System.SCREEN_BRIGHTNESS),\n            true,\n            brightnessObserver.also {\n                it.callback = callback\n            }\n        )\n    }\n\n    private fun unregisterContentObserver() {\n        brightnessObserver.callback = null\n        activity.contentResolver.unregisterContentObserver(brightnessObserver)\n    }\n\n    private fun getOSBaseBrightness(): Int {\n        return when (Build.BRAND) {\n            \"Xiaomi\" -&gt; 32\n            else -&gt; 16\n        }\n    }\n\n    fun getBrightnessMax(): Int {\n        val brightnessSettingMaximumId: Int = activity.getResources().getIdentifier(\n            \"config_screenBrightnessSettingMaximum\",\n            \"integer\",\n            \"android\"\n        )\n        return activity.getResources().getInteger(brightnessSettingMaximumId)\n            .let {\n                if (it &gt; 255) {\n                    (it + 1) / getOSBaseBrightness()\n                } else {\n                    if (it == 0) 255 else it\n                }\n            }\n    }\n\n    fun getBrightnessMin(): Int {\n        /*val brightnessSettingMinimumId: Int = activity.getResources().getIdentifier(\n            \"config_screenBrightnessSettingMinimum\",\n            \"integer\",\n            \"android\"\n        )\n        return activity.getResources().getInteger(brightnessSettingMinimumId)*/\n        return 1\n    }\n\n    /**\n     * \u8bbe\u7f6e\u7cfb\u7edf\u4eae\u5ea6\u8c03\u8282\u6a21\u5f0f(SCREEN_BRIGHTNESS_MODE)\n     * SCREEN_BRIGHTNESS_MODE_MANUAL \u624b\u52a8\u8c03\u8282\n     * SCREEN_BRIGHTNESS_MODE_AUTOMATIC \u81ea\u52a8\u8c03\u8282\n     */\n    private fun setScreenManualMode(activity: Activity) {\n        try {\n            //\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u4eae\u5ea6\u8c03\u8282\u6a21\u5f0f\n            lastScreenManualMode = Settings.System.getInt(\n                activity.contentResolver,\n                Settings.System.SCREEN_BRIGHTNESS_MODE\n            )\n            //\u5982\u679c\u662f\u81ea\u52a8\uff0c\u5219\u6539\u4e3a\u624b\u52a8\n            if (lastScreenManualMode == Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC) {\n                Settings.System.putInt(\n                    activity.contentResolver,\n                    Settings.System.SCREEN_BRIGHTNESS_MODE,\n                    Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL\n                )\n            }\n        } catch (e: Settings.SettingNotFoundException) {\n            e.printStackTrace()\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/system/brightness/#activity", "title": "Activity\u4e2d\u4f7f\u7528", "text": "<p>\u521d\u59cb\u5316 <pre><code>private val brightnessManager = BrightnessManager().also { it.init(this) }\n</code></pre> \u8bbe\u7f6e\u4eae\u5ea6 <pre><code>brightnessManager.setBrightnessForCheck(brightness)\n</code></pre></p>"}, {"location": "android/system/fragment/", "title": "Fragment", "text": ""}, {"location": "android/system/fragment/#replace", "title": "replace\u65b9\u5f0f", "text": "<p>\u663e\u793a\uff1a <pre><code>supportFragmentManager.beginTransaction()\n.hide(this)\n.add(\n    R.id.xxx_fragment_container,\n    xxxFragment,\n    XXXFragment.TAG\n)\n.addToBackStack(null)\n.commitAllowingStateLoss()\n</code></pre> \u56de\u9000\uff1a <pre><code>requireActivity().supportFragmentManager.popBackStack()\n</code></pre></p>"}, {"location": "android/system/fragment/#showhide", "title": "show/hide\u65b9\u5f0f", "text": "<p>\u663e\u793a\uff1a <pre><code>supportFragmentManager.beginTransaction().also {\n    if (xxxFragment.isAdded) {\n        it.show(musicFragment)\n    } else {\n        it.add(\n            R.id.xxx_fragment_container,\n            xxxFragment,\n            XXXFragment.TAG\n        )\n    }\n}.hide(this)\n .commitAllowingStateLoss()\n</code></pre> \u9690\u85cf\uff1a <pre><code>supportFragmentManager.beginTransaction()\n    .hide(xxxFragment)\n    .show(this)\n    .commitAllowingStateLoss()\n</code></pre></p>"}, {"location": "android/system/volume/", "title": "\u5a92\u4f53\u97f3\u91cf", "text": ""}, {"location": "android/system/volume/#_1", "title": "\u5c01\u88c5\u5a92\u4f53\u7ba1\u7406\u7c7b", "text": "<p><pre><code>const val ACTION_VOLUME_CHANGED = \"android.media.VOLUME_CHANGED_ACTION\"\nconst val EXTRA_VOLUME_STREAM_TYPE = \"android.media.EXTRA_VOLUME_STREAM_TYPE\"\n\nobject MediaManager {\n    private const val TAG = \"MediaManager\"\n    private var volumeReceiver: VolumeReceiver? = null\n    private lateinit var audioManager: AudioManager\n\n    private lateinit var applicationContext: Context\n    private var audioPlaybackCallback: AudioPlaybackCallback? = null\n\n    fun init(context: Context) : MediaManager{\n        if (MediaManager::applicationContext.isInitialized) {\n            Log.i(TAG, \"already init\")\n            return this\n        }\n        applicationContext = context.applicationContext\n        audioManager = applicationContext.getSystemService(Context.AUDIO_SERVICE) as AudioManager\n        return this\n    }\n\n    private fun check() {\n        if (!MediaManager::applicationContext.isInitialized) {\n            throw Exception(\"Please call init() one time\")\n        }\n    }\n\n    @SuppressLint(\"UnspecifiedRegisterReceiverFlag\")\n    fun registerVolumeReceiver(block: ((volume: Int) -&gt; Unit)?) {\n        val intentFilter = IntentFilter()\n        intentFilter.addAction(ACTION_VOLUME_CHANGED)\n        intentFilter.addAction(Intent.ACTION_MEDIA_BUTTON)\n        volumeReceiver = VolumeReceiver(block)\n        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.TIRAMISU) {\n            applicationContext.registerReceiver(\n                volumeReceiver, intentFilter,\n                Context.RECEIVER_NOT_EXPORTED\n            )\n        } else {\n            applicationContext.registerReceiver(volumeReceiver, intentFilter)\n        }\n    }\n\n    fun getCurrentMusicVolume(): Int {\n        check()\n        return audioManager.getStreamVolume(AudioManager.STREAM_MUSIC)\n    }\n\n    fun getCurrentMusicMaxVolume(): Int {\n        check()\n        return audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC)\n    }\n\n    @RequiresApi(Build.VERSION_CODES.P)\n    fun getCurrentMusicMinVolume(): Int {\n        check()\n        return audioManager.getStreamMinVolume(AudioManager.STREAM_MUSIC)\n    }\n\n    fun setMusicVolume(volume: Int) {\n        check()\n        audioManager.setStreamVolume(\n            AudioManager.STREAM_MUSIC,\n            volume,\n            AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE\n        )\n    }\n\n    fun playMusic() {\n        check()\n        val time = SystemClock.uptimeMillis()\n        audioManager.dispatchMediaKeyEvent(\n            KeyEvent(\n                time, time,\n                KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MEDIA_PLAY, 0\n            )\n        )\n    }\n\n    fun pauseMusic() {\n        check()\n        val time = SystemClock.uptimeMillis()\n        audioManager.dispatchMediaKeyEvent(\n            KeyEvent(\n                time, time,\n                KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MEDIA_PAUSE, 0\n            )\n        )\n    }\n\n    fun nextMusic() {\n        check()\n        val time = SystemClock.uptimeMillis()\n        audioManager.dispatchMediaKeyEvent(\n            KeyEvent(\n                time, time,\n                KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MEDIA_NEXT, 0\n            )\n        )\n    }\n\n    fun previousMusic() {\n        check()\n        val time = SystemClock.uptimeMillis()\n        audioManager.dispatchMediaKeyEvent(\n            KeyEvent(\n                time, time,\n                KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_MEDIA_PREVIOUS, 0\n            )\n        )\n    }\n\n    fun isPlayingMusic(): Boolean {\n        check()\n        return audioManager.isMusicActive\n    }\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    fun registerMusicStatus(block: ((configs: List&lt;AudioPlaybackConfiguration&gt;) -&gt; Unit)?) {\n        check()\n        audioPlaybackCallback = object : AudioPlaybackCallback() {\n            override fun onPlaybackConfigChanged(configs: List&lt;AudioPlaybackConfiguration&gt;) {\n                block?.invoke(configs)\n            }\n        }\n        audioManager.registerAudioPlaybackCallback(audioPlaybackCallback!!, null)\n    }\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    fun unRegisterMusicStatus() {\n        audioPlaybackCallback?.let {\n            audioManager.unregisterAudioPlaybackCallback(it)\n            audioPlaybackCallback = null\n        }\n    }\n\n    fun destroy() {\n        check()\n        if (volumeReceiver != null) applicationContext.unregisterReceiver(volumeReceiver)\n        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {\n            unRegisterMusicStatus()\n        }\n    }\n}\n</code></pre> \u97f3\u91cf\u5e7f\u64ad <pre><code>class VolumeReceiver(private val block: ((volume: Int)-&gt;Unit)?) :\n    BroadcastReceiver() {\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    override fun onReceive(context: Context?, intent: Intent) {\n        Log.d(\"VolumeReceiver\", \"onReceive() called with: intent = $intent\")\n        if (isReceiveVolumeChange(intent)) {\n            block?.let { it(MediaManager.getCurrentMusicVolume()) }\n        }\n    }\n\n    private fun isReceiveVolumeChange(intent: Intent): Boolean {\n        return ACTION_VOLUME_CHANGED == intent.action &amp;&amp; intent.getIntExtra(\n            EXTRA_VOLUME_STREAM_TYPE,\n            -1\n        ) == AudioManager.STREAM_MUSIC\n    }\n}\n</code></pre></p>"}, {"location": "android/system/volume/#_2", "title": "\u4f7f\u7528", "text": "<p>\u521d\u59cb\u5316\u5e76\u76d1\u542c\u7cfb\u7edf\u97f3\u91cf\u53d8\u5316 <pre><code>private var isUserSetVolume: Boolean = false\n\nMediaManager.init(this).registerVolumeReceiver { volume: Int -&gt;\n       \u6ce8\uff1a\u8bbe\u7f6e\u97f3\u91cf\u65f6setMusicVolume\u76d1\u542c\u4f1a\u56de\u8c03\uff0c\u6280\u5de7\u5c31\u662f\n    if (isUserSetVolume) {\n        isUserSetVolume = false\n        return@registerVolumeReceiver\n    } \n}\n\u4e3b\u52a8\u4fee\u6539\u65f6isUserSetVolume = true\n</code></pre> \u9500\u6bc1 <pre><code>MediaManager.destroy()\n</code></pre></p>"}, {"location": "android/system/volume/#_3", "title": "\u4e09\u65b9\u97f3\u4e50\u4fe1\u606f\u83b7\u53d6", "text": "<pre><code>class NativeExt(context: Context) {\n    private val TAG = \"NativeExt\"\n    private val handler = Handler(Looper.getMainLooper())\n    private val mainScope = MainScope()\n    var currentMusicPkg: String = \"\"\n\n    init {\n        MediaManager.init(context)\n    }\n    private val mediaSessionManager: MediaSessionManager = context.getSystemService(Context.MEDIA_SESSION_SERVICE) as MediaSessionManager\n\n    fun startListening() {\n        MediaManager.registerMusicStatus {\n            handler.postDelayed({\n                mediaSessionManager.getActiveSessions(\n                    null\n                ).also { cs -&gt;\n                    if (cs.isNotEmpty()) {\n                        cs.filter { controller -&gt;\n                            Log.i(\n                                TAG,\n                                \"filter: ${controller.packageName}-${controller.playbackState?.state}\"\n                            )\n                            controller.playbackState?.state == PlaybackState.STATE_PLAYING\n                        }\n\n                        cs[0].let { mc -&gt;\n                            if (mc.playbackState?.state == PlaybackState.STATE_PLAYING || mc.playbackState?.state == PlaybackState.STATE_BUFFERING) {\n                                if (currentMusicPkg == mc.packageName) {\n                                    Log.i(\n                                        TAG,\n                                        \"repeat-------------------\"\n                                    )\n                                    return@also\n                                }\n                                currentMusicPkg = mc.packageName\n                                Log.e(\n                                    TAG,\n                                    \"current play Pkg: ${mc.packageName}/$currentMusicPkg\"\n                                )\n                                mc.metadata?.let { data -&gt;\n                                    FlowBus.with&lt;MediaMetadata&gt;(EVENT_MEDIA_METADATA_UPDATE).post(mainScope, data)\n                                }\n                            } else {\n                                currentMusicPkg = \"\"\n                                Log.e(\n                                    TAG,\n                                    \"current pause Pkg: ${mc.packageName}/$currentMusicPkg\"\n                                )\n                            }\n                        }\n                    }\n                }\n            }, 100)\n        }\n    }\n\n    fun stopListening() {\n        MediaManager.unRegisterMusicStatus()\n    }\n}\n</code></pre>"}, {"location": "android/ui/progressbar/", "title": "ProgressBar", "text": ""}, {"location": "android/ui/progressbar/#progressbar", "title": "ProgressBar", "text": "<p>\u767d\u8272\u6c34\u5e73\u5706\u89d2\u6837\u5f0f <pre><code>&lt;ProgressBar\n    style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\n    android:layout_width=\"180dp\"\n    android:layout_height=\"8dp\"\n    android:max=\"100\"\n    android:progress=\"0\"\n    android:progressDrawable=\"@drawable/progress_bar\" /&gt;\n</code></pre> \u8d44\u6e90\u6587\u4ef6progress_bar.xml <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;item android:id=\"@android:id/background\" android:height=\"@dimen/dp8\"&gt;\n        &lt;shape&gt;\n            &lt;corners android:radius=\"@dimen/dp8\" /&gt;\n            &lt;solid android:color=\"#66FFFFFF\" /&gt;\n        &lt;/shape&gt;\n    &lt;/item&gt;\n\n    &lt;item android:id=\"@android:id/progress\" android:height=\"@dimen/dp8\"&gt;\n        &lt;scale\n            android:drawable=\"@drawable/progress_current\"\n            android:scaleWidth=\"100%\" /&gt;\n    &lt;/item&gt;\n&lt;/layer-list&gt;\n</code></pre> \u8d44\u6e90\u6587\u4ef6progress_current.xml <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"rectangle\"&gt;\n    &lt;solid android:color=\"#FFFFFFFF\" /&gt;\n    &lt;corners android:radius=\"@dimen/dp8\" /&gt;\n&lt;/shape&gt;\n</code></pre></p>"}, {"location": "android/ui/seekbar/", "title": "SeekBar", "text": ""}, {"location": "android/ui/seekbar/#appcompatseekbar", "title": "AppCompatSeekBar", "text": ""}, {"location": "android/ui/seekbar/#_1", "title": "\u5e38\u89c1\u5c5e\u6027", "text": "<p><pre><code>android:duplicateParentState=\"true\"\n</code></pre> \u7528\u6765\u63a7\u5236\u6309\u4e0b\u6548\u679c\u663e\u793a\u9690\u85cf\uff0ctrue\u4e3a\u9690\u85cf</p> <p><pre><code>android:splitTrack=\"false\"\n</code></pre> \u7528\u6765\u89e3\u51b3thumb\u80cc\u666f\u900f\u660e\u95ee\u9898\uff0cfalse\u4e3a\u4e0d\u900f\u660e\uff0c\u9ed8\u8ba4true</p>"}, {"location": "android/ui/seekbar/#seekbar", "title": "\u7ad6\u5411SeekBar", "text": "<p>\u81ea\u5b9a\u4e49\u5c5e\u6027\uff1a <pre><code>&lt;declare-styleable name=\"VerticalSeekBar\"&gt;\n    &lt;attr name=\"barRotation\" format=\"enum\" &gt;\n        &lt;enum name=\"top\" value=\"90\" /&gt;\n        &lt;enum name=\"bottom\" value=\"-90\" /&gt;\n    &lt;/attr&gt;\n&lt;/declare-styleable&gt;\n</code></pre> \u6e90\u7801\uff1a <pre><code>class VerticalSeekBar(context: Context, attrs: AttributeSet?) : AppCompatSeekBar(\n    context, attrs\n), OnSeekBarChangeListener {\n    private var barRotation: Int = 90\n    private var startAndStopListener: StartAndStopListener? = null\n    private var touchListener: ((isTouch: Boolean)-&gt;Unit)? = null\n\n    init {\n        val obtainStyledAttributes =\n            context.obtainStyledAttributes(attrs, R.styleable.VerticalSeekBar)\n        barRotation = obtainStyledAttributes.getInt(R.styleable.VerticalSeekBar_barRotation, 90)\n        obtainStyledAttributes.recycle()\n        setOnSeekBarChangeListener(this)\n    }\n\n    override fun onSizeChanged(w: Int, h: Int, oldW: Int, oldH: Int) {\n        super.onSizeChanged(h, w, oldW, oldH)\n    }\n\n    @Synchronized\n    override fun onMeasure(widthMeasureSpec: Int, heightMeasureSpec: Int) {\n        super.onMeasure(heightMeasureSpec, widthMeasureSpec)\n        setMeasuredDimension(measuredHeight, measuredWidth)\n    }\n\n    override fun onDraw(c: Canvas) {\n        when (barRotation) {\n            90 -&gt; {\n                c.rotate(90f)\n                c.translate(0f, -width.toFloat())\n            }\n\n            -90 -&gt; {\n                c.rotate(-90f)\n                c.translate(-height.toFloat(), 0f)\n            }\n        }\n        super.onDraw(c)\n    }\n\n    @Synchronized\n    override fun setProgress(progress: Int) {\n        super.setProgress(progress)\n        onSizeChanged(width, height, 0, 0)\n    }\n\n    private fun calculateRotationProgress(y: Float) {\n        if (barRotation == -90) {\n            progress = max - (max * y / height).toInt()\n        } else if (barRotation == 90) {\n            progress = (max * y / height).toInt()\n        }\n    }\n\n    override fun onTouchEvent(event: MotionEvent): Boolean {\n        when (event.action) {\n            MotionEvent.ACTION_DOWN -&gt; {\n                startAndStopListener?.startChange(this)\n                calculateRotationProgress(event.y)\n                this.touchListener?.invoke(true)\n            }\n\n            MotionEvent.ACTION_MOVE -&gt; {\n                calculateRotationProgress(event.y)\n            }\n\n            MotionEvent.ACTION_UP, MotionEvent.ACTION_CANCEL -&gt; {\n                startAndStopListener?.stopChange(this, progress)\n                this.touchListener?.invoke(false)\n            }\n\n            else -&gt; return super.onTouchEvent(event)\n        }\n        return true\n    }\n\n    fun setStartAndStopListener(startAndStopListener: StartAndStopListener?) {\n        this.startAndStopListener = startAndStopListener\n    }\n\n    fun setTouchListener(block: (isTouch: Boolean) -&gt; Unit) {\n        this.touchListener = block\n    }\n\n    interface StartAndStopListener {\n        fun startChange(seekBar: VerticalSeekBar)\n        fun onChange(seekBar: VerticalSeekBar, progress: Int, fromUser: Boolean)\n        fun stopChange(seekBar: VerticalSeekBar, progress: Int)\n    }\n\n    override fun onProgressChanged(seekBar: SeekBar?, progress: Int, fromUser: Boolean) {\n        startAndStopListener?.onChange(this@VerticalSeekBar, progress, fromUser)\n    }\n\n    override fun onStartTrackingTouch(seekBar: SeekBar?) {\n    }\n\n    override fun onStopTrackingTouch(seekBar: SeekBar?) {\n    }\n}\n</code></pre></p>"}, {"location": "android/ui/textview/", "title": "TextView", "text": ""}, {"location": "android/ui/textview/#_1", "title": "\u81ea\u5b9a\u4e49\u56fe\u6807\u5bbd\u9ad8", "text": "<p>\u81ea\u5b9a\u4e49\u5c5e\u6027\uff0c\u63a7\u5236\u56fe\u6807\u7684\u5bbd\u9ad8 <pre><code>&lt;declare-styleable name=\"ImageTextView\"&gt;\n    &lt;attr name=\"drawableWidth_left\" format=\"dimension\" /&gt;\n    &lt;attr name=\"drawableHeight_left\" format=\"dimension\" /&gt;\n    &lt;attr name=\"drawableWidth_top\" format=\"dimension\" /&gt;\n    &lt;attr name=\"drawableHeight_top\" format=\"dimension\" /&gt;\n    &lt;attr name=\"drawableWidth_right\" format=\"dimension\" /&gt;\n    &lt;attr name=\"drawableHeight_right\" format=\"dimension\" /&gt;\n    &lt;attr name=\"drawableWidth_bottom\" format=\"dimension\" /&gt;\n    &lt;attr name=\"drawableHeight_bottom\" format=\"dimension\" /&gt;\n&lt;/declare-styleable&gt;\n</code></pre> \u6e90\u7801 <pre><code>class ImageTextView(context: Context, attrs: AttributeSet?\n): AppCompatTextView(context, attrs) {\n    private val POSITION_LEFT: Int = 0\n    private val POSITION_TOP: Int = 1\n    private val POSITION_RIGHT: Int = 2\n    private val POSITION_BOTTOM: Int = 3\n\n    private var leftDrawableWidth = 0\n    private var leftDrawableHeight = 0\n    private var topDrawableWidth = 0\n    private var topDrawableHeight = 0\n    private var rightDrawableWidth = 0\n    private var rightDrawableHeight = 0\n    private var bottomDrawableWidth = 0\n    private var bottomDrawableHeight = 0\n    private var left: Drawable? = null\n    private var top: Drawable? = null\n    private var right: Drawable? = null\n    private var bottom: Drawable? = null\n\n    init {\n        getAttributes(context, attrs, 0)\n        includeFontPadding = false\n    }\n\n    private fun getAttributes(context: Context, attrs: AttributeSet?, defStyleAttr: Int) {\n        /**\n         * \u83b7\u5f97\u6211\u4eec\u6240\u5b9a\u4e49\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u5c5e\u6027\n         */\n        val a =\n            context.theme.obtainStyledAttributes(attrs, R.styleable.ImageTextView, defStyleAttr, 0)\n        val n = a.indexCount\n        for (i in 0 until n) {\n            when (val attr = a.getIndex(i)) {\n                R.styleable.ImageTextView_drawableWidth_left -&gt; leftDrawableWidth =\n                    a.getDimensionPixelSize(attr, 0)\n\n                R.styleable.ImageTextView_drawableHeight_left -&gt; leftDrawableHeight =\n                    a.getDimensionPixelSize(attr, 0)\n\n                R.styleable.ImageTextView_drawableWidth_top -&gt; topDrawableWidth =\n                    a.getDimensionPixelSize(attr, 0)\n\n                R.styleable.ImageTextView_drawableHeight_top -&gt; topDrawableHeight =\n                    a.getDimensionPixelSize(attr, 0)\n\n                R.styleable.ImageTextView_drawableWidth_right -&gt; rightDrawableWidth =\n                    a.getDimensionPixelSize(attr, 0)\n\n                R.styleable.ImageTextView_drawableHeight_right -&gt; rightDrawableHeight =\n                    a.getDimensionPixelSize(attr, 0)\n\n                R.styleable.ImageTextView_drawableWidth_bottom -&gt; bottomDrawableWidth =\n                    a.getDimensionPixelSize(attr, 0)\n\n                R.styleable.ImageTextView_drawableHeight_bottom -&gt; bottomDrawableHeight =\n                    a.getDimensionPixelSize(attr, 0)\n            }\n        }\n        a.recycle()\n\n        /*\n         * setCompoundDrawablesWithIntrinsicBounds\u65b9\u6cd5\u4f1a\u9996\u5148\u5728\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u6267\u884c\uff0c\n         * \u5f7c\u65f6\u6267\u884c\u65f6drawable\u7684\u5927\u5c0f\u8fd8\u90fd\u6ca1\u6709\u5f00\u59cb\u83b7\u53d6\uff0c\u90fd\u662f0,\n         * \u8fd9\u91cc\u83b7\u53d6\u5b8c\u81ea\u5b9a\u4e49\u7684\u5bbd\u9ad8\u5c5e\u6027\u540e\u518d\u6b21\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u63d2\u5165drawable\u7684\u5927\u5c0f\n         * */\n        setCompoundDrawablesWithIntrinsicBounds(\n            left, top, right, bottom\n        )\n    }\n\n\n    /**\n     * Sets the Drawables (if any) to appear to the left of, above, to the\n     * right of, and below the text. Use `null` if you do not want a\n     * Drawable there. The Drawables' bounds will be set to their intrinsic\n     * bounds.\n     *\n     *\n     * Calling this method will overwrite any Drawables previously set using\n     * [.setCompoundDrawablesRelative] or related methods.\n     * \u8fd9\u91cc\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6765\u8bbe\u7f6e\u4e0a\u4e0b\u5de6\u53f3\u7684drawable\u7684\u5927\u5c0f\n     *\n     * @attr ref android.R.styleable#TextView_drawableLeft\n     * @attr ref android.R.styleable#TextView_drawableTop\n     * @attr ref android.R.styleable#TextView_drawableRight\n     * @attr ref android.R.styleable#TextView_drawableBottom\n     */\n    override fun setCompoundDrawablesWithIntrinsicBounds(\n        @Nullable left: Drawable?,\n        @Nullable top: Drawable?,\n        @Nullable right: Drawable?,\n        @Nullable bottom: Drawable?\n    ) {\n        this.left = left\n        this.top = top\n        this.right = right\n        this.bottom = bottom\n\n        left?.setBounds(0, 0, leftDrawableWidth, leftDrawableHeight)\n        right?.setBounds(0, 0, rightDrawableWidth, rightDrawableHeight)\n        top?.setBounds(0, 0, topDrawableWidth, topDrawableHeight)\n        bottom?.setBounds(0, 0, bottomDrawableWidth, bottomDrawableHeight)\n\n        setCompoundDrawables(left, top, right, bottom)\n    }\n\n    /*\n     * \u4ee3\u7801\u4e2d\u52a8\u6001\u8bbe\u7f6edrawable\u7684\u5bbd\u9ad8\u5ea6\n     * */\n    fun setDrawableSize(width: Int, height: Int, position: Int) {\n        if (position == POSITION_LEFT) {\n            leftDrawableWidth = width\n            leftDrawableHeight = height\n        }\n        if (position == POSITION_TOP) {\n            topDrawableWidth = width\n            topDrawableHeight = height\n        }\n        if (position == POSITION_RIGHT) {\n            rightDrawableWidth = width\n            rightDrawableHeight = height\n        }\n        if (position == POSITION_BOTTOM) {\n            bottomDrawableWidth = width\n            bottomDrawableHeight = height\n        }\n\n        setCompoundDrawablesWithIntrinsicBounds(\n            left, top, right, bottom\n        )\n    }\n}\n</code></pre></p>"}, {"location": "android/ui/textview/#_2", "title": "\u5b57\u4f53\u8bbe\u7f6e", "text": "<p>\u7cfb\u7edf\u5b57\u4f53\u659c\u4f53 <pre><code>android:textStyle=\"italic\"\n</code></pre> \u4f7f\u7528\u5b57\u4f53 <pre><code>val typeface =\n    Typeface.createFromAsset(requireActivity().assets, \"Helvetica-BoldOblique.ttf\")\nbinding.xxx.setTypeface(typeface, Typeface.ITALIC)\n</code></pre> \u5b57\u4f53\u4e0b\u8f7d: \u8c37\u6b4c\u5b57\u4f53</p>"}, {"location": "android/ui/textview/#_3", "title": "\u659c\u4f53\u4fee\u590d", "text": "<pre><code>class FixTextView(\n    context: Context, \n    attrs: AttributeSet?\n) : AppCompatTextView(context, attrs) {\n    private val minRect by lazy { Rect() }\n\n    override fun onMeasure(widthMeasureSpec: Int, heightMeasureSpec: Int) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec)\n        paint.getTextBounds(text.toString(), 0, text.length, minRect)\n        val width = minRect.width()\n        setMeasuredDimension(width, measuredHeight)\n    }\n\n    override fun onDraw(canvas: Canvas) {\n        val text = text.toString()\n        val left = minRect.left\n        val top = measuredHeight / 2 - minRect.top / 2\n        paint.color = currentTextColor\n        canvas.drawText(text, -left.toFloat(), top.toFloat(), paint)\n    }\n}\n</code></pre>"}, {"location": "android/ui/ui_anim/", "title": "\u57fa\u7840", "text": ""}, {"location": "android/ui/ui_anim/#renderthread", "title": "RenderThread", "text": "<p>\u6e32\u67d3\u7ebf\u7a0b\uff0cAndroid5.0\u4e4b\u540e\u5c06Open GL\u7ebf\u7a0b\u72ec\u7acb\u51fa\u6765\u7684\u7ebf\u7a0b</p> <p>\u786c\u4ef6\u52a0\u901f\uff1a\u901a\u8fc7GPU\u6e32\u67d3\uff0cAndroid4.0\u9ed8\u8ba4\u5f00\u542f\uff0c</p> <p>GPU\uff1a\u786c\u4ef6\uff0c\u7531GPU\u5382\u5546\u6309\u7167Open GL\u89c4\u8303\u5b9e\u73b0\u7684\u9a71\u52a8</p> <p>Open GL\u7ebf\u7a0b\uff1a\u5904\u7406\u786c\u4ef6\u52a0\u901f\u7ed8\u5236\u7684\u7ebf\u7a0b</p>"}, {"location": "android/ui/ui_anim/#android", "title": "Android\u7ed8\u5236\u6d41\u7a0b", "text": "<p>\u8f6f\u4ef6\u7ed8\u5236</p> <p>CPU\u4e3b\u5bfc\uff0c\u6bcf\u4e2a\u7a97\u53e3\u5173\u8054\u4e00\u4e2aSurface\uff0clockCanvas\u65b9\u6cd5\u83b7\u53d6\u4e00\u4e2aCanvas\uff0cSurfaceFlinger\uff0cGraphicBuffer</p> <p>\u786c\u4ef6\u7ed8\u5236</p> <p>GPU\u4e3b\u5bfc</p>"}, {"location": "android/ui/ui_anim/#_1", "title": "\u8f6c\u573a\u52a8\u753b", "text": "<p>https://blog.csdn.net/chennai1101/article/details/81984104</p> <p>z\u8f74\u4fee\u6539\u95ee\u9898\uff1a\u53ea\u80fd\u5faa\u73af\u4fee\u6539ViewGroup\u7684clipChildren\u5c5e\u6027 <pre><code> private fun clipAllViewGroup(v: View, clipChild: Boolean) {\n    if (v.parent == null || v.parent !is ViewGroup) return\n    (v.parent as ViewGroup).clipChildren = clipChild\n    clipAllViewGroup(v.parent as ViewGroup, clipChild)\n}\n</code></pre></p>"}, {"location": "android/ui/ui_anim/#_2", "title": "\u5c5e\u6027\u52a8\u753b", "text": "<p>\u65cb\u8f6c\u52a8\u753b</p>"}, {"location": "android/ui/ui_camera/", "title": "Camera", "text": ""}, {"location": "android/ui/ui_camera/#camerax", "title": "CameraX", "text": ""}, {"location": "android/ui/ui_camera/#_1", "title": "\u57fa\u672c\u914d\u7f6e", "text": "<p>\u6dfb\u52a0\u6743\u9650 <pre><code>&lt;uses-feature\n        android:name=\"android.hardware.camera\"\n        android:required=\"false\" /&gt;\n\n&lt;uses-permission android:name=\"android.permission.CAMERA\" /&gt;\n&lt;uses-permission android:name=\"android.permission.RECORD_AUDIO\" /&gt;\n&lt;uses-permission\n    android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\n    android:maxSdkVersion=\"28\" /&gt;\n</code></pre> \u6dfb\u52a0\u4f9d\u8d56 <pre><code>def cameraxVersion = \"1.3.0\"\nimplementation(\"androidx.camera:camera-core:${cameraxVersion}\")\nimplementation(\"androidx.camera:camera-camera2:${cameraxVersion}\")\nimplementation(\"androidx.camera:camera-lifecycle:${cameraxVersion}\")\nimplementation(\"androidx.camera:camera-video:${cameraxVersion}\")\nimplementation(\"androidx.camera:camera-view:${cameraxVersion}\")\nimplementation(\"androidx.camera:camera-extensions:${cameraxVersion}\")\n</code></pre> \u6dfb\u52a0\u9884\u89c8view <pre><code>&lt;androidx.camera.view.PreviewView\n    android:id=\"@+id/cameraPreView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" /&gt;\n</code></pre></p>"}, {"location": "android/ui/ui_camera/#_2", "title": "\u6743\u9650\u7533\u8bf7", "text": "<p><pre><code>companion object {\n    private const val TAG: String = \"CameraXActivity\"\n    private const val REQUEST_CODE_PERMISSIONS = 10\n    private val REQUIRED_PERMISSIONS = mutableListOf(\n        Manifest.permission.CAMERA,\n        Manifest.permission.RECORD_AUDIO\n    ).toTypedArray()\n}\n</code></pre> \u70b9\u51fb\u9884\u89c8\u65f6\u7533\u8bf7\u6743\u9650 <pre><code>getBinding().btnCamera.click {\n    if (checkPermission())\n        startCamera()\n    else ActivityCompat.requestPermissions(\n        this,\n        REQUIRED_PERMISSIONS,\n        REQUEST_CODE_PERMISSIONS\n    )\n}\n\nprivate fun checkPermission() = REQUIRED_PERMISSIONS.all {\n    ContextCompat.checkSelfPermission(\n        baseContext,\n        it\n    ) == PackageManager.PERMISSION_GRANTED\n}\n\noverride fun onRequestPermissionsResult(\n    requestCode: Int,\n    permissions: Array&lt;out String&gt;,\n    grantResults: IntArray\n) {\n    super.onRequestPermissionsResult(requestCode, permissions, grantResults)\n    if (requestCode == REQUEST_CODE_PERMISSIONS) {\n        if (checkPermission())\n            startCamera()\n    }\n}\n</code></pre></p>"}, {"location": "android/ui/ui_camera/#_3", "title": "\u5f00\u542f\u9884\u89c8", "text": "<pre><code>private val imageCapture: ImageCapture by lazy {\n    ImageCapture.Builder()\n        .setCaptureMode(ImageCapture.CAPTURE_MODE_MINIMIZE_LATENCY)\n        .setTargetResolution(Size(1200, 2652)) // \u65b9\u6cd5\u8fc7\u65f6\u4f46\u4e0d\u8bbe\u7f6e\u6700\u7ec8\u7167\u7247\u548c\u9884\u89c8\u5927\u5c0f\u4e0d\u4e00\u81f4\n        .setFlashMode(ImageCapture.FLASH_MODE_AUTO)\n        .build()\n}\nprivate var cameraSelector: CameraSelector = CameraSelector.DEFAULT_BACK_CAMERA\nprivate var cameraProvider: ProcessCameraProvider? = null\nprivate fun startCamera() {\n    // \u83b7\u53d6\u76f8\u673a\u5355\u4f8b\n    ProcessCameraProvider.getInstance(this).apply {\n        // \u6dfb\u52a0\u76d1\u542c\n        addListener(\n            {\n                cameraProvider = get() // \u83b7\u53d6\u76f8\u673a\n                // \u6307\u5b9a\u9884\u89c8\u7684\u76f8\u673a\n                bindPreview(cameraProvider!!, imageCapture, cameraSelector)\n            }, ContextCompat.getMainExecutor(this@CameraXActivity)\n        )\n    }\n}\n</code></pre>"}, {"location": "android/ui/ui_camera/#_4", "title": "\u63a7\u5236\u95ea\u5149\u706f", "text": "<pre><code>private var flashCount: Int = 0\nprivate fun changeFlash() {\n    val imageCapture = imageCapture ?: return\n    if (!turnCamera) return\n    flashCount++\n    val flashMode = when (flashCount % 3) {\n        0 -&gt; {\n            getBinding().btnFlash.text = \"\u95ea\u5149\u706f(\u5173\u95ed)\"\n            ImageCapture.FLASH_MODE_OFF\n        }\n        1 -&gt; {\n            getBinding().btnFlash.text = \"\u95ea\u5149\u706f(\u6253\u5f00)\"\n            ImageCapture.FLASH_MODE_ON\n        }\n        else -&gt; {\n            getBinding().btnFlash.text = \"\u95ea\u5149\u706f(\u81ea\u52a8)\"\n            ImageCapture.FLASH_MODE_AUTO\n        }\n    }\n    imageCapture.flashMode = flashMode\n}\n</code></pre>"}, {"location": "android/ui/ui_camera/#_5", "title": "\u5207\u6362\u6444\u50cf\u5934", "text": "<pre><code>private fun turnCamera() {\n    val cameraProvider = cameraProvider ?: return\n    cameraSelector = if (turnCamera) {\n        getBinding().btnTurnCamera.text = \"\u6444\u50cf\u5934(\u524d\u7f6e)\"\n        turnCamera = false\n        CameraSelector.DEFAULT_FRONT_CAMERA\n    } else {\n        getBinding().btnTurnCamera.text = \"\u6444\u50cf\u5934(\u540e\u7f6e)\"\n        turnCamera = true\n        CameraSelector.DEFAULT_BACK_CAMERA\n    }\n    bindPreview(cameraProvider, imageCapture, cameraSelector)\n}\n\nprivate fun bindPreview(\n    cameraProvider: ProcessCameraProvider,\n    imageCapture: ImageCapture,\n    cameraSelector: CameraSelector\n) {\n    try {\n        cameraProvider.unbindAll() // \u7ed1\u5b9a\u4e4b\u524d\u5148\u89e3\u7ed1\n        // \u521b\u5efa\u5e76\u8bbe\u7f6e\u76f8\u673a\u9884\u89c8\u7a97\u53e3\n        val preview = Preview.Builder().build().also {\n            // \u7ed1\u5b9a\u5e03\u5c40\u4e2d\u7684Preview\u8fdb\u884c\u9884\u89c8\n            it.setSurfaceProvider(getBinding().cameraPreView.surfaceProvider)\n        }\n        // \u591a\u4e2a\u6444\u50cf\u5934\u540c\u65f6\u4f7f\u7528\n//            val viewPort = ViewPort.Builder(Rational(1080, 1920), display!!.rotation).build()\n//            val useCaseGroup = UseCaseGroup.Builder()\n//                .addUseCase(preview)\n//                .addUseCase(imageCapture)\n//                .setViewPort(viewPort)\n//                .build()\n//            val selectors = cameraSelector.map {\n//                ConcurrentCamera.SingleCameraConfig(it, useCaseGroup, this)\n//            }\n        val camera = cameraProvider.bindToLifecycle(this, cameraSelector, preview, imageCapture)\n    } catch (e: Exception) {\n        Log.e(\"tag\", \"startCamera: ${e.message}\")\n    }\n}\n</code></pre>"}, {"location": "android/ui/ui_camera/#_6", "title": "\u62cd\u7167\u5e76\u4fdd\u5b58\u5230\u76f8\u518c", "text": "<p><pre><code>private fun takePhoto() {\n    val name = SimpleDateFormat(\"yyyy-MM-dd-HH-mm-ss-SSS\", Locale.US)\n        .format(System.currentTimeMillis())\n    val contentValues = ContentValues().apply {\n        put(MediaStore.MediaColumns.DISPLAY_NAME, name)\n        put(MediaStore.MediaColumns.MIME_TYPE, \"image/jpeg\")\n        if (Build.VERSION.SDK_INT &gt; Build.VERSION_CODES.P) {\n            put(MediaStore.Images.Media.RELATIVE_PATH, \"Pictures/CameraX-Image\")\n        }\n    }\n    val outputOptions = ImageCapture.OutputFileOptions\n        .Builder(\n            contentResolver,\n            MediaStore.Images.Media.EXTERNAL_CONTENT_URI,\n            contentValues\n        )\n        .setMetadata(ImageCapture.Metadata().also {\n            it.isReversedHorizontal = !turnCamera\n        })\n        .build()\n\n    imageCapture.takePicture(\n        outputOptions,\n        ContextCompat.getMainExecutor(this),\n        object : ImageCapture.OnImageSavedCallback {\n            override fun onError(exc: ImageCaptureException) {\n                Log.e(TAG, \"Photo capture failed: ${exc.message}\", exc)\n            }\n\n            override fun\n                    onImageSaved(output: ImageCapture.OutputFileResults) {\n                lifecycleScope.launch {\n                    it.transformRotation(contentResolver, !turnCamera)\n                }\n            }\n        }\n    )\n}\n</code></pre> \u7531\u4e8e\u524d\u7f6e\u6444\u50cf\u5934\u62cd\u6444\u7684\u7167\u7247\u4f1a\u5de6\u53f3\u76f8\u53cd\uff0c\u9700\u8981\u624b\u52a8\u8f6c\u6362\u540e\u518d\u91cd\u65b0\u4fdd\u5b58 <pre><code>suspend fun Uri.transformRotation(\n    contentResolver: ContentResolver,\n    isReversedHorizontal: Boolean\n) {\n    if (!isReversedHorizontal) return\n    withContext(Dispatchers.IO) {\n        contentResolver.openInputStream(this@transformRotation)?.use { input -&gt;\n            val originalBitmap = BitmapFactory.decodeStream(input)\n            val preMatrix = Matrix().apply { preScale(-1f, 1f) }\n            val flippedBitmap = Bitmap.createBitmap(\n                originalBitmap, 0, 0, originalBitmap.width,\n                originalBitmap.height, preMatrix, true\n            )\n            contentResolver.openOutputStream(this@transformRotation)?.let { output -&gt;\n                output.use { useOutput -&gt;\n                    flippedBitmap.compress(Bitmap.CompressFormat.JPEG, 100, useOutput)\n                }\n            }\n        }\n    }\n}\n</code></pre></p>"}, {"location": "android/ui/ui_camera/#_7", "title": "\u83b7\u53d6\u7167\u7247\u771f\u5b9e\u8def\u5f84", "text": "<p><pre><code>suspend fun Uri.getFilePath(context: Context): String? {\n    return withContext(Dispatchers.IO) {\n        var filePath: String? = null\n        val cursor = context.contentResolver.query(this@getFilePath, null, null, null, null)\n        cursor?.use {\n            if (it.moveToFirst()) {\n                val index = it.getColumnIndex(MediaStore.Images.Media.DATA)\n                filePath = it.getString(index)\n            }\n        }\n        if (filePath.isNullOrEmpty()) {\n            filePath = if (DocumentsContract.isDocumentUri(context, this@getFilePath)) {\n                // \u5904\u7406 Document \u7c7b\u578b\u7684 URI\n                val docId = DocumentsContract.getDocumentId(this@getFilePath)\n                val split = docId.split(\":\").toTypedArray()\n                if (split.size &gt; 1 &amp;&amp; \"primary\".equals(split[0], ignoreCase = true)) {\n                    \"${context.getExternalFilesDir(null)}/${split[1]}\"\n                } else {\n                    null\n                }\n            } else if (\"content\".equals(this@getFilePath.scheme, ignoreCase = true)) {\n                // \u5904\u7406 Content \u7c7b\u578b\u7684 URI\n                val projection = arrayOf(MediaStore.Images.Media.DATA)\n                context.contentResolver.query(this@getFilePath, projection, null, null, null)?.use { cursor -&gt;\n                    if (cursor.moveToFirst()) {\n                        val columnIndex = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA)\n                        cursor.getString(columnIndex)\n                    } else {\n                        null\n                    }\n                }\n            } else if (\"file\".equals(this@getFilePath.scheme, ignoreCase = true)) {\n                // \u5904\u7406 File \u7c7b\u578b\u7684 URI\n                this@getFilePath.path\n            } else {\n                null\n            }\n        }\n        filePath\n    }\n}\n</code></pre> \u8c03\u7528 <pre><code>lifecycleScope.launch {\n    it.transformRotation(contentResolver, !turnCamera)\n    val path = it.getFilePath(this@CameraXActivity)\n    Toast.makeText(\n        this@CameraXActivity,\n        \"\u4fdd\u5b58\u5b8c\u6bd5:$path\",\n        Toast.LENGTH_LONG\n    ).show()\n}\n</code></pre></p>"}, {"location": "android/ui/ui_camera/#_8", "title": "\u56fe\u7247\u76f8\u5173\u51fd\u6570", "text": "<p>\u83b7\u53d6\u56fe\u7247\u65cb\u8f6c\u5ea6\u6570 <pre><code>fun Uri.getPictureRotation(contentResolver: ContentResolver): Int {\n    return contentResolver.openInputStream(this)?.use { input -&gt;\n        val exifInterface = if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) {\n            ExifInterface(input)\n        } else {\n            ExifInterface(this.path!!)\n        }\n        val rotationFlag = exifInterface.getAttributeInt(\n            ExifInterface.TAG_ORIENTATION,\n            ExifInterface.ORIENTATION_NORMAL\n        )\n        when (rotationFlag) {\n            ExifInterface.ORIENTATION_ROTATE_90 -&gt; 90\n            ExifInterface.ORIENTATION_ROTATE_180 -&gt; 180\n            ExifInterface.ORIENTATION_ROTATE_270 -&gt; 270\n            else -&gt; 0\n        }\n    } ?: 0\n}\n</code></pre></p>"}, {"location": "android/ui/ui_constraintLayout/", "title": "ConstraintLayout", "text": ""}, {"location": "android/ui/ui_constraintLayout/#_1", "title": "\u4f7f\u7528\u767e\u5206\u6bd4", "text": "<p>\u767e\u5206\u6bd4\u63a7\u5236\u7ec4\u4ef6\u5927\u5c0f <pre><code>&lt;style name=\"ParentDefaultStyle\"&gt;\n    &lt;item name=\"android:layout_width\"&gt;0dp&lt;/item&gt;\n    &lt;item name=\"android:layout_height\"&gt;0dp&lt;/item&gt;\n    &lt;item name=\"layout_constraintWidth_default\"&gt;percent&lt;/item&gt;\n    &lt;item name=\"layout_constraintHeight_default\"&gt;percent&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> \u8bbe\u7f6e\u7ec4\u4ef6\u5bbd\u9ad81\uff1a1 <pre><code>&lt;androidx.constraintlayout.widget.Guideline\n    android:id=\"@+id/albumGuidelineL\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    app:layout_constraintGuide_percent=\"0.097\" /&gt;\n\n&lt;androidx.constraintlayout.widget.Guideline\n    android:id=\"@+id/albumGuidelineR\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"\n    app:layout_constraintGuide_percent=\"0.321\" /&gt;\n\n&lt;androidx.appcompat.widget.AppCompatImageView\n    android:id=\"@+id/album\"\n    style=\"@style/ParentDefaultStyle\"\n    android:src=\"@mipmap/default_album\"\n    app:layout_constraintBottom_toBottomOf=\"parent\"\n    app:layout_constraintDimensionRatio=\"1:1\"\n    app:layout_constraintEnd_toStartOf=\"@id/albumGuidelineR\"\n    app:layout_constraintStart_toEndOf=\"@+id/albumGuidelineL\"\n    app:layout_constraintTop_toTopOf=\"parent\" /&gt; \n</code></pre></p>"}, {"location": "android/ui/ui_constraintLayout/#group", "title": "Group", "text": "<p>\u63a7\u5236\u591a\u4e2a\u7ec4\u4ef6\u663e\u793a\u548c\u9690\u85cf <pre><code>&lt;androidx.constraintlayout.widget.Group\n    android:id=\"@+id/groupLayout\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:visibility=\"gone\"\n    app:constraint_referenced_ids=\"id1,id2,id3\" /&gt;\n</code></pre> \u4f7f\u7528\uff1a</p> <p>bindng.groupLayout.isVisible = true/false</p>"}, {"location": "android/ui/ui_split/", "title": "\u5206\u5c4f\u9002\u914d", "text": "<p>\u5b98\u65b9\u6848\u4f8b\uff1a</p> <p>https://developer.android.google.cn/guide/topics/large-screens/large-screen-canonical-layouts?hl=zh-cn&amp;authuser=2</p>"}, {"location": "android/ui/ui_split/#xml", "title": "xml\u9002\u914d", "text": "<p>\u65b0\u5efalayout\u76ee\u5f55\uff0c\u4f1a\u6839\u636e\u663e\u793a\u5927\u5c0f\u627e\u5bf9\u5e94\u7684layout\u76ee\u5f55 <pre><code>layout default\nlayout-w100dp 1/3\nlayout-w600dp 1/2\nlayout-w840dp 2/3\nlayout-w960dp full\n</code></pre></p>"}, {"location": "android/ui/ui_split/#_1", "title": "\u6570\u636e\u4fdd\u5b58/\u6062\u590d", "text": ""}, {"location": "android/ui/ui_split/#activity", "title": "Activity", "text": "<p>\u4f20\u7edf\u65b9\u6848\uff1a <pre><code>override fun onSaveInstanceState(outState: Bundle) {\n    super.onSaveInstanceState(outState, outPersistentState)\n    outState.putString(\"xxx\",xxx)\n}\n\noverride fun onRestoreInstanceState(savedInstanceState: Bundle) {\n    super.onRestoreInstanceState(savedInstanceState, persistentState)\n    val str = savedInstanceState.getString(\"xxx\")\n}\n</code></pre> ViewModel\u65b9\u6848</p>"}, {"location": "android/ui/ui_split/#fragment", "title": "Fragment", "text": "<p>\u4f20\u7edf\u65b9\u6848\uff1a <pre><code>override fun onSaveInstanceState(outState: Bundle) {\n    super.onSaveInstanceState(outState, outPersistentState)\n    outState.putString(\"xxx\",xxx)\n}\n\noverride fun onViewStateRestored(savedInstanceState: Bundle?) {\n    super.onRestoreInstanceState(savedInstanceState, persistentState)\n    val str = savedInstanceState?.getString(\"xxx\")\n}\n</code></pre> ViewModel\u65b9\u6848 <pre><code>#### View\n\u4ee5\u81ea\u5b9a\u4e49SeekBar\u4e3a\u4f8b(\u7cfb\u7edf\u81ea\u5e26\u7684SeekBar\u4e0d\u4f1a\u4fdd\u5b58max\u5c5e\u6027)\n```kotlin\noverride fun onSaveInstanceState(): Parcelable {\n    val superState = super.onSaveInstanceState()\n    val ss = SavedState(superState)\n    ss.progress = progress\n    ss.secondaryProgress = secondaryProgress\n    ss.max = max\n    return ss\n}\n\noverride fun onRestoreInstanceState(state: Parcelable?) {\n    val ss = state as SavedState\n    super.onRestoreInstanceState(ss.superState)\n    max = ss.max\n    progress = ss.progress\n    secondaryProgress = ss.secondaryProgress\n}\n\nclass SavedState : BaseSavedState {\n    var progress: Int = 0\n    var secondaryProgress: Int = 0\n    var max: Int = 0\n\n    internal constructor(superState: Parcelable?) : super(superState)\n    private constructor(parcel: Parcel) : super(parcel) {\n        progress = parcel.readInt()\n        secondaryProgress = parcel.readInt()\n        max = parcel.readInt()\n    }\n\n    override fun writeToParcel(out: Parcel, flags: Int) {\n        super.writeToParcel(out, flags)\n        out.writeInt(progress)\n        out.writeInt(secondaryProgress)\n        out.writeInt(max)\n    }\n\n    companion object {\n        @JvmField\n        val CREATOR: Parcelable.Creator&lt;SavedState&gt; = object : Parcelable.Creator&lt;SavedState&gt; {\n            override fun createFromParcel(source: Parcel): SavedState {\n                return SavedState(source)\n            }\n\n            override fun newArray(size: Int): Array&lt;SavedState?&gt; {\n                return arrayOfNulls(size)\n            }\n        }\n    }\n\n    override fun describeContents(): Int {\n        return 0\n    }\n}\n</code></pre></p>"}, {"location": "android/ui/ui_view/", "title": "View\u5b9a\u5236", "text": ""}, {"location": "android/ui/ui_view/#viewlifecycle", "title": "\u81ea\u5b9a\u4e49view\u4e4blifecycle", "text": "<pre><code>abstract class BaseConstraintLayout @JvmOverloads constructor(\n    context: Context, attrs: AttributeSet? = null,\n    defStyleAttr: Int = 0\n) : ConstraintLayout(context, attrs, defStyleAttr), LifecycleOwner {\n\n    private val lifecycleRegistry by lazy { LifecycleRegistry(this) }\n\n    init {\n        lifecycleRegistry.currentState = Lifecycle.State.CREATED\n    }\n\n    override fun onAttachedToWindow() {\n        super.onAttachedToWindow()\n        lifecycleRegistry.currentState = Lifecycle.State.STARTED\n    }\n\n    override fun onDetachedFromWindow() {\n        super.onDetachedFromWindow()\n        lifecycleRegistry.currentState = Lifecycle.State.DESTROYED\n    }\n\n    override val lifecycle: Lifecycle\n        get() = lifecycleRegistry\n}\n</code></pre>"}, {"location": "android/ui/ui_view/#view", "title": "\u81ea\u5b9a\u4e49view\u4e4b\u88c1\u526a\u533a\u57df", "text": "<p>\u81ea\u5b9a\u4e49\u5c5e\u6027\uff1a <pre><code>&lt;declare-styleable name=\"CutStatusBarView\"&gt;\n    // \u5e03\u5c40\u4e2d\u662f\u5426\u6392\u9664\u72b6\u6001\u680f\n    &lt;attr name=\"statusBarAdapter\" format=\"boolean\" /&gt;\n    // \u5e03\u5c40\u4e2d\u662f\u5426\u6392\u9664\u5bfc\u822a\u680f\n    &lt;attr name=\"navigationBarAdapter\" format=\"boolean\" /&gt;\n    // \u5e03\u5c40\u4e2d\u662f\u5426\u6392\u9664\u5218\u6d77\u533a\n    &lt;attr name=\"cutoutAdapter\" format=\"boolean\" /&gt;\n&lt;/declare-styleable&gt;\n</code></pre> \u6e90\u7801\uff1a <pre><code>open class CutStatusBarView(\n    context: Context,\n    attrs: AttributeSet? = null,\n) : ConstraintLayout(context, attrs, 0) {\n    private var statusBarAdapter: Boolean = true\n    private var navigationBarAdapter: Boolean = true\n    private var cutoutAdapter: Boolean = true\n    private val windowManager by lazy { context.getSystemService(Context.WINDOW_SERVICE) as WindowManager }\n\n    init {\n        val obtainStyledAttributes =\n            context.obtainStyledAttributes(attrs, R.styleable.CutStatusBarView)\n        statusBarAdapter =\n            obtainStyledAttributes.getBoolean(R.styleable.CutStatusBarView_statusBarAdapter, true)\n        navigationBarAdapter = obtainStyledAttributes.getBoolean(\n            R.styleable.CutStatusBarView_navigationBarAdapter,\n            true\n        )\n        cutoutAdapter =\n            obtainStyledAttributes.getBoolean(R.styleable.CutStatusBarView_cutoutAdapter, true)\n        obtainStyledAttributes.recycle()\n    }\n\n    override fun onApplyWindowInsets(insets: WindowInsets?): WindowInsets {\n        Log.d(\"CutStatusBarView\", \"onApplyWindowInsets() called with: insets = $insets\")\n        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R) {\n            insets?.let {\n                setPadding(\n                    if (cutoutAdapter) it.getInsets(WindowInsets.Type.displayCutout()).left else 0,\n                    if (statusBarAdapter) it.getInsets(WindowInsets.Type.statusBars()).top else 0,\n                    if (cutoutAdapter) it.getInsets(WindowInsets.Type.displayCutout()).right else 0,\n                    if (navigationBarAdapter) it.getInsets(WindowInsets.Type.navigationBars()).bottom else 0\n                )\n            }\n        } else {\n            val rotation = windowManager.defaultDisplay.rotation\n            setPadding(\n                if (cutoutAdapter &amp;&amp; context is Activity &amp;&amp; rotation == Surface.ROTATION_90) ImmersionBar.getNotchHeight(\n                    context as Activity\n                ) else 0,\n                if (statusBarAdapter) ImmersionBar.getStatusBarHeight(context) else 0,\n                if (cutoutAdapter &amp;&amp; context is Activity &amp;&amp; rotation == Surface.ROTATION_270) ImmersionBar.getNotchHeight(\n                    context as Activity\n                ) else 0,\n                if (navigationBarAdapter) ImmersionBar.getNavigationBarHeight(context) else 0\n            )\n        }\n        return super.onApplyWindowInsets(insets)\n    }\n}\n</code></pre> \u517c\u5bb9\u4f4e\u7248\u672c\u9700\u8981\u6dfb\u52a0\u72b6\u6001\u680fimmersionbar\u5904\u7406\u5e93</p>"}, {"location": "android/ui/ui_view/#viewbindng", "title": "Viewbindng\u4f7f\u7528", "text": "<p>\u5f00\u542fviewbinding</p> <p>\u5982\u679cXXXBinding\u662fmerge\u4f5c\u4e3a\u6839\u5e03\u5c40 <pre><code>private val binding: XXXBinding =\n    XXXBinding.inflate(LayoutInflater.from(context), this)\n</code></pre></p> <p>\u5982\u679cXXXBinding\u662f\u975emerge\u4f5c\u4e3a\u6839\u5e03\u5c40 <pre><code>private val binding: XXXBinding =\n    XXXBinding.inflate(LayoutInflater.from(context), this, true)\n</code></pre></p>"}, {"location": "android/ui/ui_view/#activityfragmentinclude", "title": "Activity/Fragment\u4e2dinclude\u7684\u4f7f\u7528", "text": "<p>IncludeXXXBinding\u6839\u5e03\u5c40\u662f\u975emerge <pre><code>&lt;include\n    android:id=\"@+id/includeLayout\"\n    layout=\"@layout/include_xxx_device\" /&gt;\n</code></pre> \u53ef\u4ee5\u4f7f\u7528binding.includeLayout.xxx\u6765\u8c03\u7528include_xxx_device\u4e2d\u7684\u7ec4\u4ef6</p> <p>IncludeXXXBinding\u6839\u5e03\u5c40\u662fmerge\u60c5\u51b5\u4e0b\u53ea\u80fd\u4ee5\u4e0b\u65b9\u5f0f <pre><code>private val binding by lazy { ActivityMainBinding.inflate(layoutInflater) }\nprivate lateinit var includeXXXBinding: IncludeXXXBinding\nincludeNXXXBinding = IncludeXXXBinding.bind(binding.root)\n</code></pre> include_xxx_device\u4e0d\u9700\u8981\u7533\u660eid\uff0c\u4f7f\u7528includeNXXXBinding.xxx\u6765\u8c03\u7528include_xxx_device\u4e2d\u7684\u7ec4\u4ef6\uff0c\u4e5f\u4f7f\u7528\u4e8e\u975emerge</p>"}, {"location": "android/ui/ui_view/#_1", "title": "\u5e38\u89c1\u62d3\u5c55", "text": "<p>\u7981\u6b62\u5feb\u901f\u70b9\u51fb <pre><code>fun View.click(listener: (view: View) -&gt; Unit) {\n    val minTime = 500L\n    var lastTime = 0L\n    this.setOnClickListener {\n        val tmpTime = System.currentTimeMillis()\n        if (tmpTime - lastTime &gt; minTime) {\n            lastTime = tmpTime\n            listener.invoke(this)\n        } else {\n            Log.d(\"UI\", \"\u70b9\u51fb\u8fc7\u5feb\uff0c\u53d6\u6d88\u89e6\u53d1\")\n        }\n    }\n}\n</code></pre> \u5355\u4f4d\u8f6c\u5316 <pre><code>fun View.dp2px(dpValue: Float): Int = context.dp2px(dpValue)\n\nfun View.px2dp(dpValue: Float): Int = context.px2dp(dpValue)\n\nfun Context.dp2px(dipValue: Float): Int {\n    return TypedValue.applyDimension(\n        TypedValue.COMPLEX_UNIT_DIP,\n        dipValue, resources.displayMetrics\n    ).toInt()\n}\n\nfun Context.px2dp(pxValue: Float): Int {\n    return if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.UPSIDE_DOWN_CAKE)\n        TypedValue.deriveDimension(\n            TypedValue.COMPLEX_UNIT_DIP,\n            pxValue, resources.displayMetrics\n        ).toInt() else (pxValue / resources.displayMetrics.density).toInt()\n}\n</code></pre></p>"}, {"location": "android/ui/ui_view/#api", "title": "API\u63a5\u53e3", "text": "<p>setWillNotDraw(Boolean)</p> <p>ViewGroup\u9ed8\u8ba4\u4e0d\u4f1a\u8c03\u7528onDraw\uff0c\u662f\u56e0\u4e3a\u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86setFlags(WILL_NOT_DRAW, DRAW_MASK);</p> <p>\u60f3\u8981\u8c03\u7528onDraw\u53ef\u4ee5\u8c03\u7528setWillNotDraw(false)</p> <p>\u63a5\u53e3\u4f5c\u7528\uff1a\u6027\u80fd\u4f18\u5316\uff0c\u81ea\u5b9a\u4e49View\u65f6\u5982\u679c\u6ca1\u6709\u80cc\u666f\u4e14\u4e0d\u9700\u8981\u7ed8\u5236\u65f6\u53ef\u8c03\u7528setWillNotDraw(true)\uff0cViewGroup\u9ed8\u8ba4\u5f00\u542f</p>"}, {"location": "android/ui/ui_webview/", "title": "WebView", "text": ""}, {"location": "android/ui/ui_webview/#_1", "title": "\u5e38\u89c1\u914d\u7f6e\u95ee\u9898", "text": "<p>\u7f51\u9875\u4e0d\u663e\u793a\uff0c\u8bf4\u660e\u6ca1\u6709\u5f00\u542fJavaScript <pre><code>webview.settings.javaScriptEnabled = true\n</code></pre> \u7f51\u9875\u52a0\u8f7d\u540e\u62a5\u9519\uff0c\u8bf4\u660e\u8bbe\u7f6e\u4e86WebViewClient\uff0c\u9700\u5728AndroidManifest\u4e2d\u6dfb\u52a0usesCleartextTraffic <pre><code>&lt;application android:usesCleartextTraffic=\"true\"&gt;\n</code></pre></p>"}, {"location": "android/ui/ui_webview/#androidh5", "title": "Android\u8c03\u7528H5", "text": ""}, {"location": "android/ui/ui_webview/#1", "title": "\u65b9\u5f0f1", "text": "<p><pre><code>webview.loadUrl(\"javascript:funName()\")\n</code></pre> \u4e0d\u80fd\u83b7\u53d6\u8fd4\u56de\u503c</p>"}, {"location": "android/ui/ui_webview/#2", "title": "\u65b9\u5f0f2", "text": "<pre><code>evaluateJavascript(\"funName()\") { returnStr-&gt; \n\n}\n</code></pre>"}, {"location": "android/ui/ui_webview/#h5android", "title": "H5\u8c03\u7528Android", "text": ""}, {"location": "android/ui/ui_webview/#1_1", "title": "\u65b9\u5f0f1", "text": "<pre><code>addJavascriptInterface(JsInterface(), \"android\")\n\nprivate inner class JsInterface {\n    @JavascriptInterface\n    fun jsCallback(content: String) {\n\n    }\n}\n</code></pre>"}, {"location": "android/ui/ui_webview/#2_1", "title": "\u65b9\u5f0f2", "text": "<p>WebViewClient\u4e2d\u91cd\u5199\u65b9\u6cd5 <pre><code>override fun shouldOverrideUrlLoading(view: WebView?, request: WebResourceRequest?): Boolean {\n        return super.shouldOverrideUrlLoading(view, request)\n    }\n</code></pre> \u4e00\u822c\u7528\u4e8e\u62e6\u622a\u94fe\u63a5\uff0c\u8fd4\u56detrue\u8868\u793a\u62e6\u622a</p>"}, {"location": "android/ui/ui_webview/#3", "title": "\u65b9\u5f0f3", "text": "<p>WebViewChromeClient\u4ece\u91cd\u5199\u65b9\u6cd5onJsAlert\u3001onJsConfirm\u3001onJsPrompt</p>"}, {"location": "android/ui/ui_webview/#_2", "title": "\u4f18\u5316\u65b9\u6848", "text": "<ol> <li>WebView \u52a8\u6001\u52a0\u8f7d\u548c\u9500\u6bc1</li> <li>\u72ec\u7acb\u7684web\u8fdb\u7a0b\uff0c\u4e0e\u4e3b\u8fdb\u7a0b\u9694\u5f00\uff0c\u89e3\u51b3\u4efb\u4f55webview\u5185\u5b58\u6cc4\u6f0f\u4e4b\u7c7b\u7684\u95ee\u9898</li> <li>\u5b9e\u73b0WebView\u590d\u7528</li> <li>DNS\u89e3\u6790\u4f18\u5316\uff08\u63a5\u53e3\u4e0e\u7f51\u9875\u4e3b\u57df\u540d\u4e00\u81f4\uff09</li> <li>\u79bb\u7ebf\u9884\u63a8\uff0c\u4e0b\u53d1\u79bb\u7ebf\u5305\uff0c\u5e76\u589e\u91cf\u66f4\u65b0</li> <li>\u7f51\u9875\u6309\u8282\u70b9\u5c40\u90e8\u5237\u65b0</li> <li>\u81ea\u5b9a\u4e49\u5b9e\u73b0\u56fe\u7247\u8d44\u6e90\u7f13\u5b58</li> <li>\u52a0\u8f7d\u672c\u5730\u7f51\u9875</li> </ol>"}, {"location": "android/ui/ui_webview/#_3", "title": "\u72ec\u7acb\u8fdb\u7a0b\u601d\u8def", "text": "<p>Manifest\u4e2d\u7533\u660eWebViewActivity\u5728\u5176\u4ed6\u8fdb\u7a0b\uff0c\u518d\u58f0\u660e\u4e00\u4e2aService <pre><code>&lt;activity\n    android:name=\".YWebViewActivity\"\n    android:exported=\"false\"\n    android:process=\":ywebview\" /&gt;\n&lt;service\n    android:name=\".mainprocess.MainProcessCommandService\"\n    android:exported=\"false\"\n    android:process=\":ywebview\" /&gt;\n</code></pre> Application\u4e2d\u7ed1\u5b9aService\uff0c\u76f8\u5f53\u4e8e\u542f\u52a8\u4e86ywebview\u8fdb\u7a0b <pre><code>Looper.myQueue().addIdleHandler {\n    WebViewCommandsDispatcher.prepareWebViewConfig()\n    false\n}\n// \u7ed1\u5b9aService\nval intent = Intent(BaseApplication.instance, MainProcessCommandService::class.java)\n        BaseApplication.instance.bindService(intent, this, Context.BIND_AUTO_CREATE)\n\nclass MainProcessCommandService: Service() {\n    override fun onBind(intent: Intent): IBinder? {\n        return MainProcessCommandsManager.asBinder()\n    }\n}\n</code></pre> WebView\u8fdb\u7a0b\u9884\u52a0\u8f7d\u80fd\u4f18\u5316\u542f\u52a8\u65f6\u95f4100ms+\uff0c\u4f46\u5728\u51b7\u542f\u52a8\u65f6\u76f4\u63a5\u542f\u52a8WebViewActivity\u4f1a\u5f88\u6162(webview\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u52a0\u8f7d\u5b8c\u6210\uff0c\u8fd8\u4e0d\u5982\u76f4\u63a5\u542f\u52a8\u5feb)</p>"}, {"location": "android/ui/ui_webview/#webview", "title": "WebView\u590d\u7528", "text": "<p>\u5b9e\u73b0\u601d\u8def\u662f\u4f7f\u7528\u96c6\u5408\u6765\u4fdd\u5b58WebView\uff0c\u53ef\u4ee5\u6700\u5927\u4fdd\u5b58\u51e0\u4e2a\uff0c\u5982\u4f7f\u7528Stack\u3001List\u7b49\uff0c\u53ef\u968f\u8fdb\u7a0b\u542f\u52a8\u65f6\u521b\u5efaWebView <pre><code>private val cache: Stack&lt;YWebView&gt; = Stack()\nfun prepareWebView() {\n    if (cache.size &lt; MAX_CACHE) {\n        cache.push(createWebView())\n    }\n}\nprivate fun createWebView(): YWebView =\n    YWebView(MutableContextWrapper(BaseApplication.instance))\n</code></pre> \u83b7\u53d6WebView\u65f6\u9700\u8981\u66ff\u6362context\uff0c\u7531\u4e8e\u521b\u5efa\u7684\u65f6\u5019\u91c7\u7528applicationContext <pre><code>cache.pop().also { yWebView -&gt;\n    (yWebView.context as MutableContextWrapper).baseContext = context\n}\n</code></pre> \u5728Activity\u9500\u6bc1\u65f6\u56de\u6536WebView(\u53ef\u80fd\u5b58\u5728\u95ee\u9898) <pre><code>fun destroy(webView: YWebView, isCache: Boolean = true) {\n    webView.stopLoading()\n    webView.clearCache(true)\n    webView.clearHistory()\n    webView.clearFormData()\n    webView.clearSslPreferences()\n    if (webView.parent != null)\n        (webView.parent as ViewGroup).removeView(webView)\n    (webView.context as MutableContextWrapper).baseContext = webView.context.applicationContext\n    if (isCache &amp;&amp; cache.size &lt; MAX_CACHE) {\n        cache.push(webView)\n    }\n}\n</code></pre> \u5f85\u89e3\u51b3\u95ee\u9898\uff1a</p> <p>WebView\u590d\u7528\uff1a\u5b58\u5728\u95ee\u9898\u754c\u9762goBack\u65f6\u6df7\u4e71</p> <p>goBack\u65f6\u4f1a\u81ea\u52a8\u5237\u65b0\u754c\u9762</p> <p>\u7f51\u9875\u4e2d\u6253\u5f00\u5e94\u7528\u672a\u5b9e\u73b0</p>"}, {"location": "android/ui/ui_webview/#x5", "title": "X5\u5185\u6838", "text": "<p>https://x5.tencent.com/docs/index.html</p>"}, {"location": "android/ui/ui_webview/#agentweb", "title": "AgentWeb", "text": "<p>https://github.com/Justson/AgentWeb</p> <p>\u57fa\u4e8eX5\u5185\u6838\u7684WebView\u5c01\u88c5</p>"}, {"location": "android/ui/anim/anim/", "title": "\u52a8\u753b\u65b9\u6848", "text": ""}, {"location": "android/ui/anim/anim/#_1", "title": "\u52a8\u753b\u65b9\u6848", "text": "<p>https://www.jianshu.com/p/9e43d8636c5d</p>"}, {"location": "android/ui/anim/anim/#gif", "title": "gif", "text": "<p>https://github.com/penfeizhou/APNG4Android</p> <p>glide</p>"}, {"location": "android/ui/anim/anim/#mp4", "title": "mp4", "text": "<p>glide</p>"}, {"location": "android/ui/anim/anim/#apng", "title": "apng", "text": "<p>https://github.com/penfeizhou/APNG4Android</p> <p>\u76f4\u64ad\u95f4\u5927\u793c\u7269\u7279\u6548</p>"}, {"location": "android/ui/anim/anim/#webp", "title": "webp", "text": "<p>https://github.com/penfeizhou/APNG4Android</p> <p>\u76f4\u64ad\u95f4\u5927\u793c\u7269\u7279\u6548</p> <p>glide</p>"}, {"location": "android/ui/anim/anim/#lottie", "title": "lottie", "text": "<p>https://github.com/airbnb/lottie-android</p> <p>\u9002\u5408\u590d\u6742\u7684\u52a8\u753b\u3001\u6bd4\u5982\u590d\u6742\u7684\u52a0\u8f7d\u52a8\u753b\u3001\u5f15\u5bfc\u52a8\u753b\u7b49</p>"}, {"location": "android/ui/anim/anim/#svga", "title": "svga", "text": "<p>https://github.com/svga/SVGAPlayer-Android</p> <p>\u76f4\u64ad\u95f4\u5927\u793c\u7269\u7279\u6548</p>"}, {"location": "android/ui/anim/anim/#_2", "title": "\u6027\u80fd\u5bf9\u6bd4", "text": ""}, {"location": "android/ui/anim/anim/#_3", "title": "\u5360\u7528\u5185\u5b58", "text": "<p>\u4ece\u5927\u5230\u5c0f</p> <p>\u89c6\u9891\uff1e\u5e8f\u5217\u5e27\uff1eGIF\uff1eAPNG/WEBP\uff1eLOTTIE/SVGA</p>"}, {"location": "android/ui/anim/anim/#_4", "title": "\u8d28\u91cf\u7a33\u5b9a", "text": "<p>\u4ece\u5dee\u5230\u597d</p> <p>\u89c6\u9891\uff1cGIF\uff1c\u5e8f\u5217\u5e27\uff1cAPNG/WEBP\uff1cLOTTIE/SVGA</p>"}, {"location": "android/ui/anim/anim/#ae", "title": "\u652f\u6301AE\u52a8\u6548", "text": "<p>\u4ece\u591a\u5230\u5c11</p> <p>\u89c6\u9891\uff1eGIF\uff1e\u5e8f\u5217\u5e27\uff1eAPNG/WEBP\uff1eLOTTIE/SVGA</p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/", "title": "\u57fa\u672c\u4f7f\u7528", "text": ""}, {"location": "android/ui/recyclerview/ui_recyclerview/#recyclerview", "title": "RecyclerView\u57fa\u672c\u4f7f\u7528", "text": ""}, {"location": "android/ui/recyclerview/ui_recyclerview/#adapter", "title": "\u5b9a\u4e49adapter", "text": "<p>1)\u5148\u5b9a\u4e49ViewHolder</p> <p>xml\u5e03\u5c40\uff1aitem.rv.xml <pre><code>class MyViewHolder(val binding: ItemRvBinding) : RecyclerView.ViewHolder(binding.root)\n</code></pre> 2)\u518d\u5b9e\u73b0adapter <pre><code>class MyAdapter(val list: MutableList&lt;String&gt;): RecyclerView.Adapter&lt;MyViewHolder&gt;() {\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyViewHolder = MyViewHolder(\n        ItemRvBinding.inflate(LayoutInflater.from(parent.context), parent, false)\n\n    override fun getItemCount(): Int = list.size\n\n    override fun onBindViewHolder(holder: MyViewHolder, position: Int) {\n        holder.binding.itemTv.text = list[position]\n    }\n}\n</code></pre> 3)\u6dfb\u52a0\u76d1\u542c <pre><code>var onItemClickListener: ((pos: Int) -&gt; Unit)? = null\nvar onItemLongClickListener: ((pos: Int) -&gt; Unit)? = null\nholder.itemView.setOnClickListener {\n    onItemClickListener?.invoke(position)\n}\nholder.itemView.setOnLongClickListener {\n    onItemLongClickListener?.invoke(position)\n    true\n}\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#_1", "title": "\u57fa\u672c\u4f7f\u7528", "text": "<pre><code>getBinding().rv.apply {\n    layoutManager =\n        LinearLayoutManager(this@RVActivity, LinearLayoutManager.VERTICAL, false)//\u4f7f\u7528ListView\u5f62\u5f0f\n    layoutManager =\n        GridLayoutManager(this@RVActivity, 2,\nGridLayoutManager.VERTICAL, false)////\u4f7f\u7528GridView\u5f62\u5f0f\n    layoutManager =\n        StaggeredGridLayoutManager(3,\nStaggeredGridLayoutManager.VERTICAL)//\u7011\u5e03\u6d41\n    val myAdapter = MyAdapter(mutableListOf(\"1\", \"2\", \"3\"))\n    adapter = myAdapter\n    myAdapter.onItemClickListener = {\n\n    }\n    myAdapter.onItemLongClickListener = {\n\n    }\n    itemAnimator = DefaultItemAnimator() //\u5176\u4ed6\u52a8\u753b\u9700\u81ea\u5b9a\u4e49\n\n    (itemAnimator as SimpleItemAnimator).supportsChangeAnimations = false //\u5173\u95ed\u52a8\u753b\n\n    //\u7ed9Item\u6dfb\u52a0\u5206\u5272\u7ebf\n    addItemDecoration(DividerItemDecoration(this@RVActivity, DividerItemDecoration.VERTICAL))))//\u5782\u76f4\u65b9\u5411\n    addItemDecoration(DividerItemDecoration(this@RVActivity, DividerItemDecoration.HORIZONTAL))//\u6c34\u5e73\u65b9\u5411\n    scrollToPosition(0)//\u6eda\u52a8\u5230\u7b2c0\u4e2a\n}\n</code></pre>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#_2", "title": "\u4fee\u6539\u5206\u5272\u7ebf\u6837\u5f0f", "text": "<pre><code>&lt;item name=\"android:listDivider\"&gt;@drawable/bg_recyclerview_divider&lt;/item&gt;\n\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       android:shape=\"rectangle\"&gt;\n\n    &lt;gradient\n        android:centerColor=\"#ff00ff00\"\n        android:endColor=\"#ff0000ff\"\n        android:startColor=\"#ffff0000\"\n        android:type=\"linear\"/&gt;\n\n    &lt;size\n        android:width=\"10dp\"\n        android:height=\"10dp\"/&gt;\n\n&lt;/shape&gt;\n</code></pre>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#_3", "title": "\u81ea\u5b9a\u4e49\u5206\u5272\u7ebf", "text": "<p><pre><code>class MyDecoration: RecyclerView.ItemDecoration() {\n    override fun getItemOffsets(\n        outRect: Rect,\n        view: View,\n        parent: RecyclerView,\n        state: RecyclerView.State\n    ) {\n        super.getItemOffsets(outRect, view, parent, state)\n    }\n\n    override fun onDraw(c: Canvas, parent: RecyclerView, state: RecyclerView.State) {\n        super.onDraw(c, parent, state)\n    }\n\n    override fun onDrawOver(c: Canvas, parent: RecyclerView, state: RecyclerView.State) {\n        super.onDrawOver(c, parent, state)\n    }\n}\n</code></pre> GridLayoutManager\u8bbe\u7f6e\u5206\u5272\u7ebf <pre><code>class GridSpacingItemDecoration(//\u5217\u6570\n    private val column: Int, private val leftSpace: Int, //\u5de6\u95f4\u8ddd\n    private val topSpace: Int, //\u9876\u90e8\u95f4\u8ddd\n    private val rightSpace: Int, //\u53f3\u95f4\u8ddd\n    private val bottomSpace: Int, //\u5e95\u90e8\u95f4\u8ddd\n    private val centerLeftSpace: Int, //item\u4e4b\u95f4\u5de6\u95f4\u8ddd\n    private val centerTopSpace: Int //item\u4e4b\u95f4\u9876\u90e8\u95f4\u8ddd\n) : RecyclerView.ItemDecoration() {\n\n    fun getItemOffsets(\n        outRect: Rect, view: View?,\n        parent: RecyclerView, state: RecyclerView.State?\n    ) {\n        val pos = parent.getChildAdapterPosition(view!!)\n        if (pos % column == 0) {\n            outRect.left = leftSpace\n        } else {\n            outRect.left = centerLeftSpace\n        }\n        if (pos &lt; column) {\n            outRect.top = topSpace\n        } else {\n            outRect.top = centerTopSpace\n        }\n        if (pos % column == column - 1) {\n            outRect.right = rightSpace\n        } else {\n            outRect.right = 0\n        }\n        outRect.bottom = bottomSpace\n    }\n}\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#_4", "title": "\u5206\u5272\u7ebf\u7ed8\u5236\u6e90\u7801\u5206\u6790", "text": "<p><pre><code>@Override\npublic void draw(Canvas c) {\n    super.draw(c);\n\n    final int count = mItemDecorations.size();\n    for (int i = 0; i &lt; count; i++) {\n        mItemDecorations.get(i).onDrawOver(c, this, mState);\n    }\n    //...\n}\n\n@Override\npublic void onDraw(Canvas c) {\n    super.onDraw(c);\n\n    final int count = mItemDecorations.size();\n    for (int i = 0; i &lt; count; i++) {\n        mItemDecorations.get(i).onDraw(c, this, mState);\n    }\n}\n</code></pre> draw\u4f1a\u8c03\u7528\u7236\u7c7bView\u7684draw\uff0c\u63a5\u7740\u8c03\u7528onDraw\u65b9\u6cd5\uff0c\u5373\u8c03\u7528\u5230\u5206\u5272\u7ebf\u7684onDraw\uff0c\u6700\u540e\u8c03\u7528onDrawOver\u65b9\u6cd5\uff0c\u6240\u4ee5onDrawOver\u53ef\u4ee5\u7528\u6765\u7ed8\u5236\u8986\u76d6\u573a\u666f\u4f7f\u7528\uff0c\u5217\u5982\u5438\u9876</p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#_5", "title": "\u5206\u5272\u7ebf\u4e8b\u4ef6\u95ee\u9898", "text": "<p>\u5206\u5272\u7ebf\u662f\u65e0\u6cd5\u89e6\u53d1\u4efb\u4f55\u4e8b\u4ef6\uff0c\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u624b\u52bf\u89e3\u51b3 <pre><code>val gestureDetector =\n    GestureDetector(parent.context, object : GestureDetector.SimpleOnGestureListener() {\n        override fun onSingleTapUp(e: MotionEvent): Boolean {\n            val pointX = e.x\n            val pointY = e.y\n            //\u5224\u65ad\u8fb9\u8ddd\u518d\u5904\u7406\u4e8b\u4ef6\n            return super.onSingleTapUp(e)\n        }\n    })\nparent.addOnItemTouchListener(object : RecyclerView.OnItemTouchListener {\n    override fun onInterceptTouchEvent(rv: RecyclerView, e: MotionEvent): Boolean =\n        gestureDetector.onTouchEvent(e)\n\n    override fun onTouchEvent(rv: RecyclerView, e: MotionEvent) {\n        gestureDetector.onTouchEvent(e)\n    }\n\n    override fun onRequestDisallowInterceptTouchEvent(disallowIntercept: Boolean) {\n\n    }\n})\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#_6", "title": "\u5b9e\u7528\u65b9\u6cd5", "text": ""}, {"location": "android/ui/recyclerview/ui_recyclerview/#getchildcount", "title": "getChildCount()", "text": "<p>\u5b9e\u9645\u8fd4\u56de\u7684\u662f\u6574\u6570\u7684\u53ef\u89c1\u7684item\u6570\u91cf</p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#getchildatint-index", "title": "getChildAt(int index)", "text": "<p>\u83b7\u53d6\u662f\u53ef\u89c1\u7684\u7b2cindex\u4e2a\u4f4d\u7f6e\u7684item</p> <p>\u6240\u4ee5\u5f53item\u53ea\u663e\u793a\u4e00\u9879\u65f6\u4ee5\u4e0b\u83b7\u53d6\u7684\u6548\u679c\u4e00\u81f4(\u6848\u4f8b\u6296\u97f3) <pre><code>val itemView: View? = layoutmanager.findViewByPosition(0)\nval itemView: View? = getChildAt(0)\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#_7", "title": "\u5173\u95ed\u52a8\u753b", "text": "<p>\u4e3b\u8981\u662f\u7528\u6765\u89e3\u51b3\u5237\u65b0\u51fa\u73b0\u95ea\u70c1\u95ee\u9898 <pre><code>(getBinding().rv.itemAnimator as SimpleItemAnimator).supportsChangeAnimations = false\n//\u6216\u8005\ngetBinding().rv.itemAnimator = null\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#sethastfixedsize", "title": "setHastFixedSize", "text": "<p><pre><code>rv.setHastFixedSize(true)\n</code></pre> item\u6539\u53d8\u65f6\u4e0d\u4f1a\u5f71\u54cdrv\u7684\u9ad8\u5ea6\u65f6\u4f7f\u7528</p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#sethasstableids", "title": "setHasStableIds", "text": "<p><pre><code>adapter.setHasStableIds(true)\n</code></pre> \u5e76\u9700\u8981\u91cd\u5199getItemId(int position)\u65b9\u6cd5\uff0c\u56fa\u5b9aid\u53ef\u4ee5\u51cf\u5c11\u5237\u65b0\uff0c\u53ef\u4ee5\u89e3\u51b3\u6570\u636e\u9519\u4e71\u89c1\u6e90\u7801\u5206\u6790\u4e00\u7ea7\u7f13\u5b58\u590d\u7528\u673a\u5236</p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#_8", "title": "\u4fee\u6539\u7f13\u5b58\u6c60\u5927\u5c0f", "text": "<p>\u9ed8\u8ba4\u662f5\u4e2a\uff0c\u89c1\u6e90\u7801\u5206\u6790RecyclerViewPool\u7f13\u5b58\u7684DEFAULT_MAX_SCRAP\u503c <pre><code>rv.recycledViewPool.setMaxRecycledViews(0, 5)\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#_9", "title": "\u590d\u7528(\u5171\u4eab)\u7f13\u5b58\u6c60", "text": "<pre><code>rv.setRecycledViewPool(recycledViewPool)\n</code></pre>"}, {"location": "android/ui/recyclerview/ui_recyclerview/#cache", "title": "\u4fee\u6539cache\u7f13\u5b58\u5927\u5c0f", "text": "<p>\u9ed8\u8ba4\u662f2\u4e2a\uff0c\u89c1\u6e90\u7801\u5206\u6790Cache\u7f13\u5b58\u7684DEFAULT_CACHE_SIZE\u503c <pre><code>rv.setItemViewCacheSize(3)\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_source_code/", "title": "\u6e90\u7801\u89e3\u6790", "text": ""}, {"location": "android/ui/recyclerview/ui_source_code/#_1", "title": "\u56db\u7ea7\u7f13\u5b58\u6e90\u7801\u5206\u6790", "text": "<p>onTouchEvent\u4f1a\u89e6\u53d1\u7f13\u5b58\u548c\u590d\u7528\u6d41\u7a0b <pre><code>@Override\npublic boolean onTouchEvent(MotionEvent e) {\n    //...\n    if (scrollByInternal(\n            canScrollHorizontally ? dx : 0,\n            canScrollVertically ? dy : 0,\n            vtev)) {\n        getParent().requestDisallowInterceptTouchEvent(true);\n    }\n    //...\n}\n\nboolean scrollByInternal(int x, int y, MotionEvent ev) {\n    //...\n    if (x != 0) {\n        consumedX = mLayout.scrollHorizontallyBy(x, mRecycler, mState);\n    }\n    if (y != 0) {\n        consumedY = mLayout.scrollVerticallyBy(y, mRecycler, mState);\n    }\n    //...\n}\n</code></pre> \u4ee5LinearLayoutManager\u4e3a\u4f8b <pre><code>@Override\npublic int scrollVerticallyBy(int dy, RecyclerView.Recycler recycler,\n        RecyclerView.State state) {\n    if (mOrientation == HORIZONTAL) {\n        return 0;\n    }\n    return scrollBy(dy, recycler, state);\n}\n</code></pre> scrollBy\u4e3b\u8981\u770bfill\u65b9\u6cd5 <pre><code>recycleByLayoutState(recycler, layoutState);\nlayoutChunk(recycler, state, layoutState, layoutChunkResult);\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_source_code/#_2", "title": "\u7f13\u5b58", "text": "<p>recycleByLayoutState\u4e3b\u8981\u662f\u7f13\u5b58\u76f8\u5173</p> <p>\u7f13\u5b58\u6700\u7ec8\u8c03\u7528recycleChildren\u65b9\u6cd5\uff0c\u63a5\u7740\u8c03\u7528recycleView <pre><code>public void removeAndRecycleViewAt(int index, Recycler recycler) {\n    final View view = getChildAt(index);\n    removeViewAt(index);\n    recycler.recycleView(view);\n}\n</code></pre> recycleView\u4e3b\u8981\u770brecycleViewHolderInternal\u65b9\u6cd5</p>"}, {"location": "android/ui/recyclerview/ui_source_code/#mcachedviewsrecycledviewpool", "title": "mCachedViews\u548cRecycledViewPool\u76f8\u5173", "text": "<p><pre><code>final ArrayList&lt;ViewHolder&gt; mCachedViews = new ArrayList&lt;ViewHolder&gt;();\nint mViewCacheMax = DEFAULT_CACHE_SIZE;\nstatic final int DEFAULT_CACHE_SIZE = 2;\nvoid recycleViewHolderInternal(ViewHolder holder) {\n    //...\n    if (xxx)) {\n        int cachedViewSize = mCachedViews.size();\n        if (cachedViewSize &gt;= mViewCacheMax &amp;&amp; cachedViewSize &gt; 0) {\n            recycleCachedViewAt(0); // \u8d85\u8fc72\u4e2a\u540e\u4f1a\u79fb\u9664\u7b2c0\u4e2a\n            cachedViewSize--;\n        }\n        int targetCacheIndex = cachedViewSize;\n        //...\n        mCachedViews.add(targetCacheIndex, holder);//\u6dfb\u52a0\u5230\u7f13\u5b58\u4e2d\n        cached = true;\n    }\n    //...\n    if (!cached) {\n        addViewHolderToRecycledViewPool(holder, true);\n        recycled = true;\n    }\n    //...\n}\nmCachedViews\u9ed8\u8ba4\u6700\u5927\u53ea\u67092\u4e2a\u7f13\u5b58\u5927\u5c0f\uff0c\u8d85\u8fc7\u540e\u4f1a\u5c06\u7b2c0\u4e2a\u79fb\u9664\n```java\nvoid recycleCachedViewAt(int cachedViewIndex) {\n    ViewHolder viewHolder = mCachedViews.get(cachedViewIndex);\n    addViewHolderToRecycledViewPool(viewHolder, true);\n    mCachedViews.remove(cachedViewIndex);\n}\n</code></pre> \u7f13\u5b58\u5230\u7f13\u5b58\u6c60\u4e2d <pre><code>void addViewHolderToRecycledViewPool(ViewHolder holder, boolean dispatchRecycled) {\n    //...\n    getRecycledViewPool().putRecycledView(holder);\n}\nprivate static final int DEFAULT_MAX_SCRAP = 5;\nint mMaxScrap = DEFAULT_MAX_SCRAP;\nSparseArray&lt;ScrapData&gt; mScrap = new SparseArray&lt;&gt;();//key\u662fitemViewType\npublic void putRecycledView(ViewHolder scrap) {\n    final int viewType = scrap.getItemViewType();//\u6839\u636e\u4e0d\u540ctpye\u7c7b\u578b\u7f13\u5b58ViewHolder\n    final ArrayList scrapHeap = getScrapDataForType(viewType).mScrapHeap;\n    if (mScrap.get(viewType).mMaxScrap &lt;= scrapHeap.size()) {\n        return;\n    }\n    //...\n    scrap.resetInternal();//\u6e05\u7a7aViewHolder\u6570\u636e\n    scrapHeap.add(scrap);\n}\nprivate ScrapData getScrapDataForType(int viewType) {\n    ScrapData scrapData = mScrap.get(viewType);\n    if (scrapData == null) {\n        scrapData = new ScrapData();\n        mScrap.put(viewType, scrapData);\n    }\n    return scrapData;\n}\n</code></pre> \u7f13\u5b58\u6c60\u4e2d\u6bcf\u4e2aitemViewType\u6700\u591a\u7f13\u5b585\u4e2a\uff0c\u4e14\u6570\u636e\u4f1a\u6e05\u7a7a</p>"}, {"location": "android/ui/recyclerview/ui_source_code/#mattachedscrapmchangedscrap", "title": "mAttachedScrap\u548cmChangedScrap\u76f8\u5173", "text": "<p><pre><code>onMeasure\ndispatchLayoutStep1();//PreLayout \u52a8\u753b\u524d\u5e03\u5c40 \u52a8\u753b\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u5b58\u50a8\u4e00\u4e0b\u73b0\u6709item\u7684\u4fe1\u606f\ndispatchLayoutStep2();//\u771f\u6b63\u6d4b\u91cf\u548c\u5e03\u5c40\n\nonLayout\ndispatchLayoutStep1();\ndispatchLayoutStep2();\ndispatchLayoutStep3();//PostLayout \u52a8\u753b\u540e\u5e03\u5c40 \u6267\u884c\u52a8\u753b\uff0c\u6e05\u9664\u4e00\u4e9b\u6570\u636e\n</code></pre> \u53ea\u4f1a\u6267\u884c\u4e00\u6b21</p> <p>dispatchLayoutStep2-&gt;onLayoutChildren-&gt;detachAndScrapAttachedViews <pre><code>public void detachAndScrapAttachedViews(Recycler recycler) {\n    final int childCount = getChildCount();\n    for (int i = childCount - 1; i &gt;= 0; i--) {\n        final View v = getChildAt(i);\n        scrapOrRecycleView(recycler, i, v);\n    }\n}\nprivate void scrapOrRecycleView(Recycler recycler, int index, View view) {\n    final ViewHolder viewHolder = getChildViewHolderInt(view);\n    //...\n    if (viewHolder.isInvalid() &amp;&amp; !viewHolder.isRemoved()\n            &amp;&amp; !mRecyclerView.mAdapter.hasStableIds()) {\n        removeViewAt(index);\n        recycler.recycleViewHolderInternal(viewHolder);\n    } else {\n        detachViewAt(index);\n        recycler.scrapView(view);\n        mRecyclerView.mViewInfoStore.onViewDetached(viewHolder);\n    }\n}\n</code></pre> recycleViewHolderInternal\u5c31\u662f\u4e0a\u9762\u7684mCachedViews\u548cRecycledViewPool\u7f13\u5b58\u903b\u8f91</p> <p>scrapView\u5c31\u662fmAttachedScrap\u548cmChangedScrap\u7f13\u5b58\u903b\u8f91\uff0c\u4e0d\u9650\u5236\u5bb9\u91cf\u6ee1\u8db3\u6761\u4ef6\u76f4\u63a5\u7f13\u5b58 <pre><code>void scrapView(View view) {\n    final ViewHolder holder = getChildViewHolderInt(view);\n    if (holder.hasAnyOfTheFlags(ViewHolder.FLAG_REMOVED | ViewHolder.FLAG_INVALID)\n            || !holder.isUpdated() || canReuseUpdatedViewHolder(holder)) {\n        //...\n        holder.setScrapContainer(this, false);\n        mAttachedScrap.add(holder);\n    } else {\n        if (mChangedScrap == null) {\n            mChangedScrap = new ArrayList&lt;ViewHolder&gt;();\n        }\n        holder.setScrapContainer(this, true);\n        mChangedScrap.add(holder);\n    }\n}\n</code></pre> onLayoutChildren-&gt;fill\u8d70onTouchEvent\u5206\u6790\u7684\u6d41\u7a0b</p>"}, {"location": "android/ui/recyclerview/ui_source_code/#_3", "title": "\u603b\u7ed3", "text": "\u7f13\u5b58\u7ed3\u6784 \u5bb9\u5668\u7c7b\u578b \u5bb9\u91cf\u9650\u5236 \u7f13\u5b58\u7528\u9014 \u662f\u5426\u56de\u8c03createView \u662f\u5426\u56de\u8c03bindView mChangedScrap/mAttachedScrap ArrayList \u65e0\uff0c\u4e00\u822c\u4e3a\u5c4f\u5e55\u5185\u603b\u7684\u53ef\u89c1\u5217\u8868\u9879\u6570 \u4e34\u65f6\u5b58\u653e\u4ecd\u5728\u5f53\u524d\u5c4f\u5e55\u53ef\u89c1\u3001\u4f46\u88ab\u6807\u8bb0\u4e3a\u300c\u79fb\u9664\u300d\u6216\u300c\u91cd\u7528\u300d\u7684\u5217\u8868\u9879 \u5426 \u5426 mCachedViews ArrayList \u9ed8\u8ba4\u4e3a2 \u5b58\u653e\u5df2\u88ab\u79fb\u51fa\u5c4f\u5e55\u3001\u4f46\u6709\u53ef\u80fd\u5f88\u5feb\u91cd\u65b0\u8fdb\u5165\u5c4f\u5e55\u7684\u5217\u8868\u9879 \u5426 \u5426 mViewCacheExtension \u5f00\u53d1\u8005\u81ea\u5df1\u5b9a\u4e49 \u65e0 \u63d0\u4f9b\u989d\u5916\u7684\u53ef\u7531\u5f00\u53d1\u4eba\u5458\u81ea\u7531\u63a7\u5236\u7684\u7f13\u5b58\u5c42\u7ea7 \u5426 \u5426 RecycledViewPool(mScrap) SparseArray \u6bcf\u79cditemType\u9ed8\u8ba4\u4e3a5 \u6309\u4e0d\u540c\u7684itemType\u5206\u522b\u5b58\u653e\u8d85\u51famCachedViews\u9650\u5236\u7684\u3001\u88ab\u79fb\u51fa\u5c4f\u5e55\u7684\u5217\u8868\u9879 \u5426 \u662f <ol> <li>mChangedScrap \u8868\u793a\u6570\u636e\u5df2\u7ecf\u6539\u53d8\u7684ViewHolder\u5217\u8868\uff0c\u9700\u8981\u91cd\u65b0\u7ed1\u5b9a\u6570\u636e\uff08\u8c03\u7528onBindViewHolder\uff09<ul> <li>\u5f00\u542f\u4e86\u5217\u8868\u9879\u52a8\u753b(itemAnimator)\uff0c\u5e76\u4e14\u5217\u8868\u9879\u52a8\u753b\u7684canReuseUpdatedViewHolder(ViewHolder viewHolder)\u65b9\u6cd5\u8fd4\u56defalse\u7684\u524d\u63d0\u4e0b\uff1b</li> <li>\u8c03\u7528\u4e86notifyItemChanged\u3001notifyItemRangeChanged\u8fd9\u4e00\u7c7b\u65b9\u6cd5\uff0c\u901a\u77e5\u5217\u8868\u9879\u6570\u636e\u53d1\u751f\u53d8\u5316\uff1b</li> </ul> </li> <li>mAttachedScrap \u5e94\u5bf9\u7684\u5219\u662f\u5269\u4e0b\u7684\u7edd\u5927\u90e8\u5206\u573a\u666f<ul> <li>\u50cfnotifyItemMoved\u3001notifyItemRemoved\u8fd9\u79cd\u5217\u8868\u9879\u53d1\u751f\u79fb\u52a8\uff0c\u4f46\u5217\u8868\u9879\u6570\u636e\u672c\u8eab\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u7684\u573a\u666f\u3002</li> <li>\u5173\u95ed\u4e86\u5217\u8868\u9879\u52a8\u753b\uff0c\u6216\u8005\u5217\u8868\u9879\u52a8\u753b\u7684canReuseUpdatedViewHolder\u65b9\u6cd5\u8fd4\u56detrue\uff0c\u5373\u5141\u8bb8\u91cd\u7528\u539f\u5148\u7684ViewHolder\u5bf9\u8c61\u7684\u573a\u666f</li> </ul> </li> <li>\u56de\u8c03bindView\u901a\u8fc7mFlags\u51b3\u5b9a\uff0c\u4eceRecycledViewPool\u53d6\u51fa\u7684\u7f13\u5b58\u4f1a\u8c03\u7528resetInternal\u65b9\u6cd5\u4f7f\u5f97mFlags\u53d8\u62100</li> </ol>"}, {"location": "android/ui/recyclerview/ui_source_code/#_4", "title": "\u590d\u7528", "text": "<p>\u56de\u5230fill\u65b9\u6cd5\u4e2dlayoutChunk\u65b9\u6cd5\u4e3b\u8981\u662f\u590d\u7528\u76f8\u5173 <pre><code>void layoutChunk(RecyclerView.Recycler recycler, RecyclerView.State state,LayoutState layoutState, LayoutChunkResult result) {\n    View view = layoutState.next(recycler);\n    //...\n}\nView next(RecyclerView.Recycler recycler) {\n    //...\n    final View view = recycler.getViewForPosition(mCurrentPosition);\n    //...\n    return view;\n}\n</code></pre> \u6700\u7ec8\u8c03\u5230tryGetViewHolderForPositionByDeadline\u65b9\u6cd5 <pre><code>ViewHolder tryGetViewHolderForPositionByDeadline(int position,\n                boolean dryRun, long deadlineNs) {\n    ViewHolder holder = null;\n    // 0) If there is a changed scrap, try to find from there\n    if (mState.isPreLayout()) {\n        holder = getChangedScrapViewForPosition(position);\n        fromScrapOrHiddenOrCache = holder != null;\n    }\n    // 1) Find by position from scrap/hidden list/cache\n    if (holder == null) {\n        holder = getScrapOrHiddenOrCachedHolderForPosition(position, dryRun);\n        if (holder != null) {\n            if (!validateViewHolderForOffsetPosition(holder)) {\n                if (!dryRun) {\n                    //...\n                    recycleViewHolderInternal(holder);\n                }\n                holder = null;\n            } else {\n                fromScrapOrHiddenOrCache = true;\n            }\n        }\n    }\n    if (holder == null) {\n        final int offsetPosition = mAdapterHelper.findPositionOffset(position);\n        //...\n\n        final int type = mAdapter.getItemViewType(offsetPosition);\n        // 2) Find from scrap/cache via stable ids, if exists\n        if (mAdapter.hasStableIds()) {\n            holder = getScrapOrCachedViewForId(mAdapter.getItemId(offsetPosition),type, dryRun);\n            //...\n        }\n        if (holder == null &amp;&amp; mViewCacheExtension != null) {\n            final View view = mViewCacheExtension\n                    .getViewForPositionAndType(this, position, type);\n            if (view != null) {\n                holder = getChildViewHolder(view);\n                //...\n            }\n        }\n        if (holder == null) { // fallback to pool\n            //...\n            holder = getRecycledViewPool().getRecycledView(type);\n            //...\n        }\n        if (holder == null) {\n            //...\n            holder = mAdapter.createViewHolder(RecyclerView.this, type);\n            //...\n        }\n    }\n    boolean bound = false;\n    if (xxx) {\n    } else if (xxx)) {\n        //...\n        bound = tryBindViewHolderByDeadline(holder, offsetPosition, position, deadlineNs);\n    }\n    //...\n}\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_source_code/#mchangedscrap", "title": "\u7b2c\u4e00\u7ea7\u7f13\u5b58mChangedScrap", "text": "<p>getChangedScrapViewForPosition(position) <pre><code>ArrayList&lt;ViewHolder&gt; mChangedScrap = null;\nViewHolder getChangedScrapViewForPosition(int position) {\n    //...\n    // find by position\n    for (int i = 0; i &lt; changedScrapSize; i++) {\n        final ViewHolder holder = mChangedScrap.get(i);\n        if (!holder.wasReturnedFromScrap() &amp;&amp; holder.getLayoutPosition() == position) {\n            //...\n            return holder;\n        }\n    }\n    // find by id\n    if (mAdapter.hasStableIds()) {\n        //...\n        if (xxx) {\n            final long id = mAdapter.getItemId(offsetPosition);\n            for (int i = 0; i &lt; changedScrapSize; i++) {\n                final ViewHolder holder = mChangedScrap.get(i);\n                if (xxx &amp;&amp; holder.getItemId() == id) {\n                    //...\n                    return holder;\n                }\n            }\n        }\n    }\n    return null;\n}\n</code></pre> \u901a\u8fc7position\u6765\u83b7\u53d6\u7f13\u5b58\uff0c\u6ee1\u8db3\u6761\u4ef6\u8fd8\u4f1a\u901a\u8fc7id\u6765\u83b7\u53d6(\u89e3\u51b3\u6570\u636e\u9519\u4e71\uff0c\u539f\u56e0\uff1a\u91cd\u65b0\u4ece\u7f51\u7edc\u83b7\u53d6\u6570\u636e\u65f6\u540c\u4e00\u4e2aposition\u6570\u636e\u53d8\u4e86\uff0c\u6b64\u7f13\u5b58\u4e0d\u4f1a\u91cd\u65b0\u89e6\u53d1onBindViewHolder)</p>"}, {"location": "android/ui/recyclerview/ui_source_code/#id", "title": "\u5f00\u542f\u901a\u8fc7id\u83b7\u53d6\u7f13\u5b58", "text": "<pre><code>myAdapter.setHasStableIds(true)\n//\u91cd\u5199Adapter\u4e2d\u7684getItemId\u65b9\u6cd5\uff0c\u6307\u5b9a\u4e0d\u540c\u7684id\noverride fun getItemId(position: Int): Long {\n    return super.getItemId(position)\n}\n</code></pre>"}, {"location": "android/ui/recyclerview/ui_source_code/#mattachedscrapmcachedviews", "title": "\u7b2c\u4e8c\u7ea7\u7f13\u5b58mAttachedScrap\u548cmCachedViews", "text": "<p>getScrapOrHiddenOrCachedHolderForPosition <pre><code>final ArrayList&lt;ViewHolder&gt; mAttachedScrap = new ArrayList&lt;&gt;();\nfinal ArrayList&lt;ViewHolder&gt; mCachedViews = new ArrayList&lt;ViewHolder&gt;();\nViewHolder getScrapOrHiddenOrCachedHolderForPosition(int position, boolean dryRun) {\n    final int scrapCount = mAttachedScrap.size();\n\n    // Try first for an exact, non-invalid match from scrap.\n    for (int i = 0; i &lt; scrapCount; i++) {\n        final ViewHolder holder = mAttachedScrap.get(i);\n        if (xxx) {\n            //...\n            return holder;\n        }\n    }\n\n    //....\n\n    // Search in our first-level recycled view cache.\n    final int cacheSize = mCachedViews.size();\n    for (int i = 0; i &lt; cacheSize; i++) {\n        final ViewHolder holder = mCachedViews.get(i);\n        //...\n        if (xxx) {\n            if (!dryRun) {\n                mCachedViews.remove(i);\n            }\n            //...\n            return holder;\n        }\n    }\n    return null;\n}\n</code></pre> getScrapOrCachedViewForId\u4e5f\u662f\u4ecemAttachedScrap\u83b7\u53d6\u7f13\u5b58</p>"}, {"location": "android/ui/recyclerview/ui_source_code/#mviewcacheextension", "title": "\u7b2c\u4e09\u7ea7\u7f13\u5b58mViewCacheExtension", "text": "<p>\u81ea\u5b9a\u4e49\u7f13\u5b58 <pre><code>setViewCacheExtension(object : RecyclerView.ViewCacheExtension(){\n    override fun getViewForPositionAndType(\n        recycler: RecyclerView.Recycler,\n        position: Int,\n        type: Int\n    ): View? {\n        return null\n    }\n})\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_source_code/#recycledviewpool", "title": "\u7b2c\u56db\u7ea7\u7f13\u5b58RecycledViewPool", "text": "<p>getRecycledViewPool().getRecycledView(type)\u901a\u8fc7\u7f13\u5b58\u6c60\u83b7\u53d6 <pre><code>SparseArray&lt;ScrapData&gt; mScrap = new SparseArray&lt;&gt;()\npublic ViewHolder getRecycledView(int viewType) {\n    final ScrapData scrapData = mScrap.get(viewType);\n    if (scrapData != null &amp;&amp; !scrapData.mScrapHeap.isEmpty()) {\n        final ArrayList&lt;ViewHolder&gt; scrapHeap = scrapData.mScrapHeap;\n        return scrapHeap.remove(scrapHeap.size() - 1);\n    }\n    return null;\n}\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_stagger/", "title": "\u591a\u9009\u6848\u4f8b", "text": ""}, {"location": "android/ui/recyclerview/ui_stagger/#_1", "title": "\u591a\u9009\u6848\u4f8b", "text": ""}, {"location": "android/ui/recyclerview/ui_stagger/#_2", "title": "\u4f7f\u7528\u573a\u666f", "text": "<p>\u4e00\u822c\u4f7f\u7528\u7ebf\u6027\u5e03\u5c40(\u8d2d\u7269\u8f66)\u6216\u8005\u683c\u5b50\u5e03\u5c40(\u76f8\u518c)</p>"}, {"location": "android/ui/recyclerview/ui_stagger/#_3", "title": "\u5b9e\u73b0\u6b65\u9aa4", "text": ""}, {"location": "android/ui/recyclerview/ui_stagger/#_4", "title": "\u5e03\u5c40\u9009\u62e9", "text": "<pre><code>private val linear by lazy { LinearLayoutManager(this) }\nprivate val grid by lazy { GridLayoutManager(this, 3) }\nprivate fun changeManager(flag: Int) {\n    when (flag) {\n        0 -&gt; {\n            getBinding().adRv.layoutManager = linear\n        }\n\n        1 -&gt; {\n            getBinding().adRv.layoutManager = grid\n        }\n}\n</code></pre>"}, {"location": "android/ui/recyclerview/ui_stagger/#adapter", "title": "\u7ed1\u5b9aadapter", "text": "<pre><code>getBinding().adRv.apply {\n    itemAnimator = null\n    adapter = helper.adapter\n}\n</code></pre>"}, {"location": "android/ui/recyclerview/ui_stagger/#_5", "title": "\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a", "text": "<p>(\u4f7f\u7528BaseRecyclerViewAdapterHelper) <pre><code>val helperBuilder = QuickAdapterHelper.Builder(rvAdapter)\n    .setTrailingLoadStateAdapter(object : TrailingLoadStateAdapter.OnTrailingListener {\n        override fun onLoad() {\n            rvAdapter.addAll(mutableListOf&lt;Media&gt;().also { it.addAll(loadMoreUrls) })\n            _helper?.trailingLoadState = LoadState.NotLoading(true)\n        }\n\n        override fun onFailRetry() {\n        }\n\n        override fun isAllowLoading(): Boolean {\n            return !getBinding().smartRefresh.isRefreshing\n        }\n    })\n_helper = helperBuilder.build()\nval helper = _helper!!\nhelper.trailingLoadState = LoadState.NotLoading(false)\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_stagger/#_6", "title": "\u4e0b\u62c9\u5237\u65b0", "text": "<p>(\u4f7f\u7528SmartRefreshLayout) <pre><code>getBinding().smartRefresh.setOnRefreshListener {\n    rvAdapter.submitList(mutableListOf&lt;Media&gt;().also { it.addAll(imgUrls) })\n    getBinding().smartRefresh.finishRefresh()\n    helper.trailingLoadState = LoadState.NotLoading(false)\n}\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_stagger/#_7", "title": "\u9002\u914d\u5668\u5b9e\u73b0", "text": "<p><pre><code>var isSelectMode: Boolean = false//\u662f\u5426\u8fdb\u5165\u591a\u9009\u6a21\u5f0f\nprivate val cacheSelect = LinkedHashMap&lt;String, Media&gt;()// \u7f13\u5b58\u9009\u4e2d\u7684\u6570\u636e\n</code></pre> onBindViewHolder <pre><code>if (isSelectMode) { // \u590d\u9009\u6846\u72b6\u6001\u8bbe\u7f6e\n    holder.binding.btnCheck.visibility = View.VISIBLE\n    holder.binding.btnCheck.isSelected = cacheSelect.containsKey(media.url)\n} else {\n    holder.binding.btnCheck.visibility = View.GONE\n}\n</code></pre> item\u70b9\u51fb\u5904\u7406\u590d\u9009\u6846\u72b6\u6001 <pre><code>holder.itemView.clickNormal {\n    if (isSelectMode) {\n        if (cacheSelect.containsKey(media.url)) {\n            cacheSelect.remove(media.url)\n            notifyItemChanged(position)\n        } else {\n            cacheSelect[media.url] = media\n            notifyItemChanged(position)\n        }\n    } else {\n        // \u8df3\u8f6c\u7b49\u5176\u4ed6\u5904\u7406\n    }\n}\n</code></pre> \u8fdb\u5165/\u9000\u51fa\u591a\u9009\u6a21\u5f0f <pre><code>fun enterSelectMode() {\n    isSelectMode = !isSelectMode\n    cacheSelect.clear()\n    notifyItemRangeChanged(0, itemCount)\n}\n</code></pre> \u83b7\u53d6\u9009\u4e2d\u9879 <pre><code>fun getSelectItem() = cacheSelect.values\n</code></pre></p>"}, {"location": "android/ui/recyclerview/ui_stagger/#_8", "title": "\u7011\u5e03\u6d41\u76f8\u5173", "text": ""}, {"location": "android/ui/recyclerview/ui_stagger/#_9", "title": "\u5e38\u89c1\u95ee\u9898", "text": "<p>\u754c\u9762\u5237\u65b0\u6216\u8005\u6dfb\u52a0\u89c6\u56fe\u65f6\u51fa\u73b0\u4f4d\u7f6e\u4ea4\u6362\u3001\u9876\u90e8\u7a7a\u767d\u7b49\u95ee\u9898</p>"}, {"location": "android/ui/recyclerview/ui_stagger/#_10", "title": "\u89e3\u51b3\u65b9\u6848", "text": "<p>\u5bf9\u5e03\u5c40\u5c5e\u6027\u8fdb\u884c\u8c03\u6574 <pre><code>private val stagger by lazy {\n    StaggeredGridLayoutManager(\n        3,\n        StaggeredGridLayoutManager.VERTICAL\n    ).apply {\n        gapStrategy = StaggeredGridLayoutManager.GAP_HANDLING_NONE//\u9632\u6b62\u4e00\u4e9b\u573a\u666f\u7684\u4f4d\u7f6e\u4ea4\u6362\n        isItemPrefetchEnabled = false//\u9884\u52a0\u8f7d\u7684\u89c6\u56fe\u662f\u4e0d\u53ef\u89c1\u7684\u4e0d\u5229\u4e8e\u5904\u7406\u590d\u9009\u6846\u903b\u8f91\n    }\n}\n</code></pre> \u5173\u95edRecyclerView\u5c4f\u5e55\u5916\u7f13\u5b58\uff0c\u5f71\u54cd\u590d\u9009\u6846\u663e\u793a\u9690\u85cf\u5904\u7406 <pre><code>getBinding().adRv.setItemViewCacheSize(0)\n</code></pre> \u8fdb\u5165/\u9000\u51fa\u591a\u9009\u6a21\u5f0f\u65f6\u4e0d\u8981\u8c03\u7528notifyItemRangeChanged\u5237\u65b0\uff0c\u624b\u52a8\u5904\u7406\u590d\u9009\u6846\u903b\u8f91 <pre><code>val manager = getBinding().adRv.layoutManager as StaggeredGridLayoutManager\nval startPos = manager.findFirstVisibleItemPositions(null).apply {\n    Arrays.sort(this)//\u4f1a\u51fa\u73b0\u7c7b\u4f3c[3,1,2]\u8868\u793a\u6700\u4e0a\u9762\u53ef\u89c1\u7684\u89c6\u56fe\u4e0b\u6807\u4e3a1\uff0c2\uff0c3\uff0c\u9700\u8981\u6392\u4e00\u4e0b\u987a\u5e8f\n}\nval endPos = manager.findLastVisibleItemPositions(null).apply {\n    Arrays.sort(this)//\u6700\u4e0b\u9762\u53ef\u89c1\u89c6\u56fe\u4e0b\u6807\n}\nfor (i in startPos[0]..endPos[endPos.size - 1]) {//\u904d\u5386\u53ef\u89c1\u89c6\u56fe\u5c06\u590d\u9009\u6846\u663e\u793a/\u9690\u85cf\u5904\u7406\n    manager.findViewByPosition(i)?.let { itemView -&gt;\n        itemView.findViewById&lt;AppCompatImageView&gt;(R.id.btnCheck)?.let {\n            it.isVisible = rvAdapter.isSelectMode\n            it.isSelected = false\n        }\n    }\n}\n</code></pre> \u5176\u4ed6\u4e0d\u53ef\u89c1\u7684\u590d\u9009\u6846\u4f1a\u5728onBindViewHolder\u65f6\u5904\u7406\uff0c\u524d\u63d0\u662fonBindViewHolder\u4f1a\u8c03\u7528\uff0c\u56e0\u6b64\u4e0a\u9762\u9700\u8981\u5173\u95ed\u9884\u52a0\u8f7d\u548c\u5c4f\u5e55\u5916\u7f13\u5b58</p> <p>\u70b9\u51fb\u4e8b\u4ef6\u4fee\u6539\uff0c\u4e0d\u80fd\u8c03\u7528notifyItemChanged\u53bb\u5237\u65b0\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4f4d\u7f6e\u4ea4\u6362 <pre><code>holder.itemView.clickNormal {\n    if (isSelectMode) {\n        if (cacheSelect.containsKey(media.url)) {\n            cacheSelect.remove(media.url)\n            holder.binding.btnCheck.isSelected = false\n        } else {\n            cacheSelect[media.url] = media\n            holder.binding.btnCheck.isSelected = true\n        }\n    } else {\n        // \u8df3\u8f6c\u7b49\u5176\u4ed6\u5904\u7406\n    }\n}\n</code></pre></p> <p>itemView\u6216\u8005ImageView\u9700\u8981\u56fa\u5b9a\u5bbd\u9ad8\uff0c\u7f51\u7edc\u56fe\u7247\u53ef\u8ba9\u540e\u53f0\u544a\u8bc9\u56fe\u7247\u5bbd\u9ad8\uff0c\u672c\u5730\u56fe\u7247\u53ef\u4ee5\u901a\u8fc7MediaStore\u7684WIDTH/HEIGHT\u5b57\u6bb5\u83b7\u53d6\uff0c\u6216\u8005\u5176\u4ed6\u573a\u666f(\u5982\u62cd\u7167)\u901a\u8fc7bitmap\u83b7\u53d6 <pre><code>holder.binding.imgContent.apply {//ImageView\n    //\u6309\u7167\u56fe\u7247\u5bbd\u9ad8\u6bd4\u4f8b\u6362\u7b97ImageView\u9ad8\u5ea6\n    val imageHeight = (media.height * imageWidth).div(media.width)\n\n    layoutParams.apply {\n        width = imageWidth\n        height = imageHeight\n    }\n}.load(media.url)\n</code></pre> \u56fe\u7247\u52a0\u8f7d\u4f7f\u7528coil\u5e93</p> <p>scrollToPosition\u4f1a\u89e6\u53d1\u4f4d\u7f6e\u8ba1\u7b97\uff0c\u5728\u5217\u8868\u4e2d\u95f4\u65f6\u5f80\u9876\u90e8\u6dfb\u52a0\u6570\u636e\u65e0\u5f71\u54cd\uff0c\u5f80\u5e95\u90e8\u6dfb\u52a0\u6570\u636e\u5b58\u5728\u95ee\u9898 <pre><code>rvAdapter.add()\ngetBinding().adRv.layoutManager?.scrollToPosition(0)\ngetBinding().adRv.layoutManager?.scrollToPosition(rvAdapter.itemCount - 1) //\u4f1a\u5bfc\u81f4\u9876\u90e8\u7a7a\u767d\ngetBinding().adRv.scrollBy(0,2300) // \u6b63\u5e38 \u4f46\u9700\u8981\u8ba1\u7b97y\u503c\n</code></pre></p>"}, {"location": "img/fws/sensor/", "title": "Index", "text": ""}, {"location": "img/fws/sensor/#_1", "title": "\u9879\u76ee\u7b80\u4ecb", "text": "<p>\u81ea\u5b9a\u4e49\u670d\u52a1\uff0c\u7528\u6765\u4f20\u8f93\u8f66\u673a\u548c\u624b\u673a\u4e4b\u95f4\u6570\u636e</p>"}, {"location": "img/fws/sensor/#_2", "title": "\u9879\u76ee\u7ed3\u6784", "text": ""}, {"location": "img/fws/sensor/#localsocket", "title": "localsocket", "text": "<p>\u6a21\u5757(library)\u7c7b\u578b\uff0c\u5c01\u88c5LocalSocket\u7684\u4f7f\u7528\uff0c\u5f53\u524d\u4f7f\u7528\u5728proxy\u9879\u76ee\u4ee5\u53caframework\u4e2d</p> <p>\u6ce8\uff1aframework\u5e76\u4e0d\u76f4\u63a5\u4f9d\u8d56\u6b64\u9879\u76ee\uff0c\u800c\u662f\u590d\u5236\u4e86LocalSocketClientHandle.java\u6587\u4ef6\u5230frameworks/base/core/java/android/hardware/\u76ee\u5f55</p> <p>\u4f7f\u7528\u65b9\u5f0f</p> <p>\u670d\u52a1\u7aef</p> <p>\u521b\u5efa\u670d\u52a1\u7aef\u5bf9\u8c61 <pre><code>private val localSocketServerHandler by lazy { LocalSocketServerHandler() }\n</code></pre> \u542f\u52a8\u670d\u52a1\u7aef <pre><code>localSocketServerHandler.start(\"xxx\")\n</code></pre> \u53d1\u9001\u6d88\u606f <pre><code>localSocketServerHandler.send(\"xxx\")\n</code></pre> \u8bbe\u7f6e\u76d1\u542c <pre><code>localSocketServerHandler.setMsgListener(object : MsgListener {\n    override fun onMsgReceive(msg: String, client: LocalSocket) {\n        //TODO\uff1a\u5904\u7406\u63a5\u6536\u5230\u6d88\u606f\n    }\n\n    override fun onConnect(client: LocalSocket) {\n        //TODO\uff1a\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\n    }\n\n    override fun onClose(client: LocalSocket) {\n        //TODO\uff1a\u6709\u5ba2\u6237\u7aef\u5173\u95ed\n    }\n})\n</code></pre> \u5173\u95ed\u670d\u52a1\u7aef <pre><code>localSocketServerHandler.closeServer()\n</code></pre> \u5ba2\u6237\u7aef</p> <p>\u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61 <pre><code>private val clientHandler by lazy { LocalSocketClientHandler() }\n</code></pre> \u542f\u52a8\u5ba2\u6237\u7aef <pre><code>clientHandler.start(\"xxx\")//\u548c\u670d\u52a1\u7aef\u4fdd\u6301\u76f8\u540c\u540d\u5b57\n</code></pre> \u53d1\u9001\u6d88\u606f <pre><code>clientHandler.send(\"xxx\")\n</code></pre> \u8bbe\u7f6e\u76d1\u542c <pre><code>localSocketServerHandler.setMsgListener(object : MsgListener {\n    override fun onMsgReceive(msg: String, client: LocalSocket) {\n        //TODO\uff1a\u5904\u7406\u63a5\u6536\u5230\u6d88\u606f\n    }\n\n    override fun onConnect(client: LocalSocket) {\n        //TODO\uff1a\u8fde\u63a5\u6210\u529f\n    }\n\n    override fun onClose(client: LocalSocket) {\n        //TODO\uff1a\u5ba2\u6237\u7aef\u5173\u95ed\n    }\n})\n</code></pre> \u5173\u95ed\u5ba2\u6237\u7aef <pre><code>clientHandler.closeClient()\n</code></pre></p>"}, {"location": "img/fws/sensor/#netty", "title": "netty", "text": "<p>\u6a21\u5757(library)\u7c7b\u578b\uff0c\u5c01\u88c5Netty\u7684\u901a\u7528\u7c7b\uff0c\u5177\u4f53\u4f7f\u7528\u89c1proxy\u9879\u76ee</p>"}, {"location": "img/fws/sensor/#netty_clientnetty_server", "title": "netty_client\u548cnetty_server", "text": "<p>\u5e94\u7528(application)\u7c7b\u578b\uff0c\u7528\u6765\u6d4b\u8bd5localsocket\u548cnetty\u7684\u57fa\u672c\u4f7f\u7528</p>"}, {"location": "img/fws/sensor/#proxy", "title": "proxy", "text": "<p>\u6a21\u5757\u3001\u5e94\u7528\u7c7b\u578b\uff0c\u5c06build.gradle_d.kts\u4e3a\u6a21\u5757\uff0cbuild.gradle.kts\u4e3a\u5e94\u7528(\u9ed8\u8ba4)\uff0c\u6682\u5b9a\u65b9\u6848\u662f\u6539\u6587\u4ef6\u540d\u7684\u5f62\u5f0f\u5207\u6362</p> <p>\u6b64\u6a21\u5757\u6b63\u5f0f\u4f7f\u7528\u4f1a\u7f16\u8bd1\u6210\u7cfb\u7edfapp\uff0c\u5177\u4f53\u89c1Android.mk\u6587\u4ef6</p> <p>\u5bf9netty\u7684\u6269\u5c55\u4f7f\u7528SensorClientHandler\u548cSensorServerHandler</p> <p>## \u4f20\u611f\u5668\u5b9e\u73b0\u65b9\u68481(\u666e\u901a\u5e94\u7528\u751f\u6548\uff0c\u6e38\u620f\u65e0\u6548\uff0c\u5e9f\u9664)</p>"}, {"location": "img/fws/sensor/#_3", "title": "\u6e90\u7801", "text": "<p>RK3588\u8f66\u673a\u7aef</p> <p>framework\u5c42\u4fee\u6539\u70b9</p> <p>frameworks/base/core/java/android/hardware/SystemSensorManager.java</p> <p>\u4e3b\u8981\u4fee\u6539\u5bf9\u4f20\u611f\u5668\u76d1\u542c\u6570\u636e\u548c\u53cd\u76d1\u542c\u6570\u636e\u63a5\u53e3\u8fdb\u884c\u62e6\u622a\u5904\u7406\uff0c\u4f5c\u4e3a\u5f00\u542f\u548c\u5173\u95ed\u624b\u673a\u7aef\u4f20\u611f\u5668\u7684\u5165\u53e3</p> <p>frameworks/base/core/java/android/hardware/LocalSocketClientHandle.java</p> <p>\u4e3b\u8981\u662f\u5c01\u88c5LocalSocket\u7684api\u4f5c\u4e3aclient\u7aef\u4f7f\u7528\uff0c\u5177\u4f53\u8c03\u7528\u5728SystemSensorManager\u4e2d</p> <p>\u7cfb\u7edfapp\u5c42\uff1aproxy\u9879\u76ee(CariadProxy)\uff0c\u6b64\u9879\u76ee\u6ca1\u6709\u754c\u9762\uff0c\u662f\u4e00\u4e2a\u670d\u52a1\uff0c\u4f5c\u4e3a\u8fde\u901a\u8f66\u673aframework\u548c\u624b\u673a\u7aef\u6570\u636e\u6865\u6881</p> <p>\u624b\u673a\u7aef</p> <p>app\u5c42: netty_client\u9879\u76ee\uff0c\u4e3b\u8981\u662f\u901a\u8fc7netty\u5c06\u4f20\u611f\u5668\u6570\u636e\u4f20\u9012\u5230proxy\u9879\u76ee\u4e2d</p>"}, {"location": "img/fws/sensor/#_4", "title": "\u6574\u4f53\u6d41\u7a0b", "text": "<ol> <li>RK\u5f00\u673a\u542f\u52a8proxy\u4e2dLocalSocket\u670d\u52a1\u7aef\u4ee5\u53caNetty\u670d\u52a1\u7aef</li> <li>\u624b\u673a\u7aef\u542f\u52a8Netty\u5ba2\u6237\u7aef\u5e76\u8fde\u63a5</li> <li>RK\u4e09\u65b9app\u76d1\u542c\u4f20\u611f\u5668</li> <li>RK fw(SystemSensorManager)\u88ab\u521b\u5efa</li> <li>RK SystemSensorManager\u521b\u5efaLocalSocket\u5ba2\u6237\u7aef\u5e76\u8fde\u63a5</li> <li>RK\u4e09\u65b9app\u8c03\u7528registerListenerImpl</li> <li>RK LocalSocket\u5ba2\u6237\u7aef\u53d1\u9001enable\u6d88\u606f\uff0c\u643a\u5e26\u4f20\u611f\u5668\u7c7b\u578b</li> <li>\u624b\u673a\u7aef\u6536\u5230\u6d88\u606f\u5f00\u542f\u5bf9\u5e94\u4f20\u611f\u5668\u76d1\u542c\u5e76\u5c06\u6570\u636e\u901a\u8fc7Netty\u5ba2\u6237\u7aef\u53d1\u9001\u5230RK</li> <li>RK\u7aefNetty\u670d\u52a1\u7aef\u6536\u5230\u6d88\u606f\uff0c\u901a\u8fc7LocalSocket\u670d\u52a1\u7aef\u5206\u53d1\u6d88\u606f</li> <li>RK\u4e09\u65b9app\u6536\u5230\u6570\u636e</li> </ol> <p>SystemSensorManager\u6bcf\u4e2aapp\u8fdb\u7a0b\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\uff0c\u5373\u6709\u591a\u4e2aLocalSocket\u5ba2\u6237\u7aef</p> <p>\u6d41\u7a0b\u56fe</p> <p></p>"}, {"location": "img/fws/sensor/#2", "title": "\u4f20\u611f\u5668\u5b9e\u73b0\u65b9\u68482", "text": ""}, {"location": "img/fws/sensor/#_5", "title": "\u6e90\u7801", "text": ""}, {"location": "img/fws/sensor/#rk3588", "title": "RK3588\u8f66\u673a\u7aef", "text": ""}, {"location": "linux/deepin_install/", "title": "deepin", "text": ""}, {"location": "linux/deepin_install/#_1", "title": "\u5b98\u7f51", "text": "<p>https://www.deepin.org/index/zh</p>"}, {"location": "linux/deepin_install/#_2", "title": "\u5b89\u88c5\u6559\u7a0b", "text": "<p>https://www.deepin.org/zh/installation/</p>"}, {"location": "linux/deepin_install/#bcm4352", "title": "\u535a\u901a\u65e0\u7ebf\u82af\u7247bcm4352\u89e3\u51b3\u65e0\u7ebf\u65ad\u5f00\u641c\u7d22\u4e0d\u5230\u4fe1\u53f7", "text": "<p>1.\u5378\u8f7d <pre><code>sudo apt autopurge bcmwl-kernel-source\nsudo apt autoremove bcmwl-kernel-source\n</code></pre> \u5728https://packages.debian.org/search\u4e2d\u641c\u7d22broadcom-sta</p> <p>buster-backports\u7248\u672c\u4e2d\u4e0b\u8f7d\u5bf9\u5e94\u7684\u4e09\u4e2a\u8f6f\u4ef6\u5305\uff1a</p> <p>broadcom-sta-common\u3001broadcom-sta-dkms\u3001broadcom-sta-source\u8fdb\u884c\u5b89\u88c5</p> <p>\u53ef\u80fd\u9047\u5230\u4f9d\u8d56\u51b2\u7a81 <pre><code>sudo aptitude install -f\n</code></pre> \u9009\u62e9\u67d0\u4e2a\u89e3\u51b3\u65b9\u6848\u540e\u91cd\u65b0\u5b89\u88c5\u4e0a\u9762\u7684\u8f6f\u4ef6</p>"}, {"location": "linux/linux_command/", "title": "\u5e38\u7528\u547d\u4ee4", "text": ""}, {"location": "linux/linux_command/#ip", "title": "\u67e5\u770b\u672c\u5730ip", "text": "<pre><code>ifconfig\n</code></pre>"}, {"location": "linux/linux_command/#ubuntu", "title": "\u67e5\u770bubuntu\u7248\u672c\u4fe1\u606f", "text": "<pre><code>lsb_release -a\n</code></pre>"}, {"location": "linux/linux_command/#_1", "title": "\u6587\u4ef6\u5939\u53bb\u9664\u5c0f\u9501", "text": "<pre><code>sudo chmod -R 777 \u8def\u5f84(\u6587\u4ef6\u5939\u6216\u6587\u4ef6)\n</code></pre>"}, {"location": "linux/linux_command/#_2", "title": "\u663e\u793a\u9690\u85cf\u6587\u4ef6", "text": "<pre><code>ctrl+H\n</code></pre>"}, {"location": "linux/linux_command/#_3", "title": "\u67e5\u770b\u5185\u6838\u7248\u672c", "text": "<pre><code>uname -a\n\u53ef\u4ee5\u533a\u5206\u662fx68,x86_64,arm64\u7b49\n</code></pre>"}, {"location": "linux/linux_command/#_4", "title": "\u5378\u8f7d\u65e7\u7248\u672c\u5185\u6838", "text": "<p><pre><code>sudo apt-get remove linux-image- \u63a5\u7740\u6309\u4e24\u4e0btab\u952e\n</code></pre> \u5378\u8f7d\u5b8c\u540e\u6267\u884c <pre><code>sudo update-grub\n</code></pre></p>"}, {"location": "linux/linux_command/#_5", "title": "\u67e5\u770b\u5206\u533a\u5360\u7528\u60c5\u51b5", "text": "<pre><code>df -h\n</code></pre>"}, {"location": "linux/linux_command/#_6", "title": "\u6740\u6b7b\u8fdb\u7a0b", "text": "<p>\u4ee5\u6587\u4ef6\u7ba1\u7406\u5668nautilus\u4e3a\u4f8b \u65b9\u5f0f\u4e00\uff1a <pre><code>killall nautilus\n</code></pre> \u65b9\u5f0f\u4e8c\uff1a <pre><code>ps -A | grep nautilus\u5f97\u5230pid\nsudo kill pid\n</code></pre></p>"}, {"location": "linux/linux_command/#as", "title": "as\u672a\u54cd\u5e94", "text": "<pre><code>pkill java\n</code></pre>"}, {"location": "linux/linux_command/#vi", "title": "vi\u4f7f\u7528", "text": "<pre><code>\u63d2\u5165 \u6309insert\n\u4fdd\u5b58\u5e76\u9000\u51fa \u5148\u6309esc \u518d\u6309 : \u8f93\u5165wq\n\u67e5\u627e\uff1a/\u5185\u5bb9 \u6309n\u641c\u7d22\u4e0b\u4e00\u4e2a N\u4e0a\u4e00\u4e2a\n\u7f16\u8f91\uff1aa\n\u663e\u793a\u884c\u53f7\uff1aset nu \u4e0d\u663e\u793aset nonu\n</code></pre>"}, {"location": "linux/linux_command/#filezillaftp", "title": "\u5b89\u88c5filezilla\u7528\u4e8e\u7ba1\u7406ftp", "text": "<pre><code>sudo apt-get install filezilla\n</code></pre>"}, {"location": "linux/linux_command/#_7", "title": "\u547d\u4ee4\u5b89\u88c5", "text": "<p>1)apt-get</p> <p>sudo apt-get install package \u5b89\u88c5\u5305 sudo apt-get install package - - reinstall \u91cd\u65b0\u5b89\u88c5\u5305 sudo apt-get -f install \u4fee\u590d\u5b89\u88c5\"-f = \u2014\u2014fix-missing\" sudo apt-get remove package \u5220\u9664\u5305 sudo apt-get remove package - - purge \u5220\u9664\u5305\uff0c\u5305\u62ec\u5220\u9664\u914d\u7f6e\u6587\u4ef6\u7b49 sudo apt-get autoremove package  \u5220\u9664\u5305\u53ca\u5176\u4f9d\u8d56\u7684\u8f6f\u4ef6\u5305 sudo apt-get update \u66f4\u65b0\u6e90 sudo apt-get upgrade \u66f4\u65b0\u5df2\u5b89\u88c5\u7684\u5305 sudo apt-get dist-upgrade \u5347\u7ea7\u7cfb\u7edf sudo apt-get dselect-upgrade \u4f7f\u7528 dselect \u5347\u7ea7 sudo apt-get build-dep package \u5b89\u88c5\u76f8\u5173\u7684\u7f16\u8bd1\u73af\u5883 sudo apt-get source package \u4e0b\u8f7d\u8be5\u5305\u7684\u6e90\u4ee3\u7801 sudo apt-get clean &amp;&amp; sudo apt-get autoclean \u6e05\u7406\u65e0\u7528\u7684\u5305 sudo apt-get check \u68c0\u67e5\u662f\u5426\u6709\u635f\u574f\u7684\u4f9d\u8d56</p> <p>2)dpkg</p> <p>dpkg \u2013l | grep package \u67e5\u8be2deb\u5305\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6ca1\u6709\u6307\u5b9a\u5305\u5219\u663e\u793a\u5168\u90e8\u5df2\u5b89\u88c5\u5305,\u5176\u4e2d-l\u7b49\u4ef7\u4e8e--list dpkg -s package \u67e5\u770b\u5df2\u7ecf\u5b89\u88c5\u7684\u6307\u5b9a\u8f6f\u4ef6\u5305\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5176\u4e2d-s\u7b49\u4ef7\u4e8e--status dpkg -L package \u5217\u51fa\u4e00\u4e2a\u5305\u5b89\u88c5\u7684\u6240\u6709\u6587\u4ef6\u6e05\u5355\uff0c\u5176\u4e2d-L\u7b49\u4ef7\u4e8e--listfiles dpkg -S file \u67e5\u770b\u7cfb\u7edf\u4e2d\u7684\u67d0\u4e2a\u6587\u4ef6\u5c5e\u4e8e\u54ea\u4e2a\u8f6f\u4ef6\u5305 dpkg -i \u6240\u6709deb\u6587\u4ef6\u7684\u5b89\u88c5,\u5176\u4e2d-i\u7b49\u4ef7\u4e8e--install dpkg -r \u6240\u6709deb\u6587\u4ef6\u7684\u5378\u8f7d\uff0c\u5176\u4e2d-r\u7b49\u4ef7\u4e8e--remove dpkg -P \u5f7b\u5e95\u7684\u5378\u8f7d\uff0c\u5305\u62ec\u8f6f\u4ef6\u7684\u914d\u7f6e\u6587\u4ef6 dpkg -c \u67e5\u8be2deb\u5305\u6587\u4ef6\u4e2d\u6240\u5305\u542b\u7684\u6587\u4ef6,\u5176\u4e2d-c\u7b49\u4ef7\u4e8e--contents dpkg -L \u67e5\u770b\u7cfb\u7edf\u4e2d\u5b89\u88c5\u5305\u7684\u7684\u8be6\u7ec6\u6e05\u5355\uff0c\u540c\u65f6\u6267\u884c -c  sudo dpkg -I iptux.deb#\u67e5\u770biptux.deb\u8f6f\u4ef6\u5305\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u8f6f\u4ef6\u540d\u79f0\u3001\u7248\u672c\u4ee5\u53ca\u5927\u5c0f\u7b49\uff08\u5176\u4e2d-I\u7b49\u4ef7\u4e8e--info\uff09 \u6ce8\uff1adpkg\u547d\u4ee4\u65e0\u6cd5\u81ea\u52a8\u89e3\u51b3\u4f9d\u8d56\u5173\u7cfb\u3002\u5982\u679c\u5b89\u88c5\u7684deb\u5305\u5b58\u5728\u4f9d\u8d56\u5305\uff0c\u5219\u5e94\u907f\u514d\u4f7f\u7528\u6b64\u547d\u4ee4\uff0c\u6216\u8005\u6309\u7167\u4f9d\u8d56\u5173\u7cfb\u987a\u5e8f\u5b89\u88c5\u4f9d\u8d56\u5305\u3002</p>"}, {"location": "linux/linux_command/#_8", "title": "\u66f4\u65b0\u76f8\u5173", "text": "<pre><code>sudo apt-get update\nsudo apt-get autoremove\nsudo apt-get upgrade\n</code></pre>"}, {"location": "linux/linux_command/#_9", "title": "\u641c\u7d22\u547d\u4ee4", "text": "<p>grep\uff1a <pre><code>grep \u5185\u5bb9 ./ -R\n</code></pre> find: <pre><code>find . -name \"xxx\"\u5728\u5f53\u524d\u76ee\u5f55\u53ca\u5b50\u76ee\u5f55\u4e0b\u67e5\u8be2\u53ef\u4ee5\u7528or\u8fde\u63a5\nfind . -name \"xxx\" or -name \"xxx\"\nfind . -regex \"xxx\"\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\nfind . -iregex \"xxx\"\u5ffd\u7565\u5927\u5c0f\u5199\nfind . -name \"*\" -type f | xargs grep \"xxx\"\n</code></pre></p>"}, {"location": "linux/linux_command/#_10", "title": "\u914d\u7f6e\u542f\u52a8\u6302\u8f7d", "text": "<p>\u4f4d\u7f6e\uff1a/etc/fstab</p> <p>\u67e5\u770buuid\uff1a <pre><code>sudo blkid\n</code></pre></p>"}, {"location": "linux/linux_command/#_11", "title": "\u67e5\u770b\u6587\u4ef6\u5939\u5927\u5c0f", "text": "<pre><code>du -h --max-depth=1 \u76ee\u5f55 --max-depth=1\u9650\u5236\u76ee\u5f55\u5c42\u6570\n</code></pre>"}, {"location": "linux/linux_command/#_12", "title": "\u7ec8\u7aef\u6e05\u5c4f", "text": "<pre><code>clear\u6216reset\n</code></pre>"}, {"location": "linux/linux_command/#pid", "title": "\u67e5\u770bpid", "text": "<p>\u9664\u4e86\u4f7f\u7528ps\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528lsof</p> <p>\u5982\u65e0\u6cd5\u5220\u9664.fuse_hiddenxxx <pre><code>lsof .fuse_hiddenxxx\n</code></pre> \u67e5\u770b\u8fdb\u7a0b\u6240\u6709\u8005\u7684PID <pre><code>kill -9 pid\u6216\u8005\u76f4\u63a5\u8fdb\u4efb\u52a1\u7ba1\u7406\u5668\u6740\u6b7b\u8fdb\u7a0b\n</code></pre></p>"}, {"location": "linux/linux_command/#_13", "title": "\u8ba1\u7b97\u6587\u4ef6\u5939\u5927\u5c0f", "text": "<pre><code>du -sh \u6587\u4ef6\u5939\n</code></pre>"}, {"location": "linux/linux_command/#ssd", "title": "\u6d4b\u8bd5ssd\u901f\u5ea6", "text": "<pre><code>sudo apt-get install hdparm\nsudo hdparm -Tt /dev/sda\n</code></pre>"}, {"location": "linux/linux_command/#apt-update", "title": "apt update\u62a5\u9519", "text": "<p>\u5728ubuntu22.10\u4e0a</p> <p>E: The repository 'https://mirrors.tuna.tsinghua.edu.cn/ubuntu kinetic Release' does not have a Release file.</p> <p>\u89e3\u51b3\uff1a</p> <p>\u7f16\u8bd1/etc/apt/sources.list</p> <p>\u590d\u5236\u5185\u5bb9 <pre><code># \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca\ndeb http://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu kinetic main restricted universe multiverse\n#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ kinetic main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu kinetic-updates main restricted universe multiverse\n#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ kinetic-updates main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu kinetic-backports main restricted universe multiverse\n#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ kinetic-backports main restricted universe multiverse\n\ndeb http://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu kinetic-security main restricted universe multiverse\n#deb-src http://security.ubuntu.com/ubuntu/ kinetic-security main restricted universe multiverse\n\n# \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\n# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ kinetic-proposed main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ kinetic-proposed main restricted universe mul\n</code></pre></p> <p>https://mirrors.ustc.edu.cn/help/ubuntu-old-releases.html</p>"}, {"location": "linux/linux_command/#rar", "title": "rar\u89e3\u538b", "text": "<pre><code>sudo apt-get install unrar\n\nunrar x -p\u5bc6\u7801 \u6587\u4ef6\n</code></pre>"}, {"location": "linux/linux_software/", "title": "\u5e38\u89c1\u8f6f\u4ef6", "text": "<p>\u661f\u706b\u5546\u5e97\uff1ahttps://spark-app.store/</p> <p>QQ\uff1ahttps://im.qq.com/linuxqq/index.shtml</p> <p>\u641c\u72d7\u8f93\u5165\u6cd5\uff1ahttps://shurufa.sogou.com/</p> <p>\u706b\u7130\u622a\u56fe\uff1a\u5b98\u65b9\u5e94\u7528\u5546\u5e97/\u661f\u706b\u5546\u5e97</p> <ul> <li>\u7cfb\u7edf-\u952e\u76d8-\u952e\u76d8\u5feb\u6377\u952e-\u81ea\u5b9a\u4e49\u5feb\u6377\u952e-(\u6dfb\u52a0\u540d\u79f0\u706b\u7130\u622a\u56fe\uff0c\u547d\u4ee4flameshot gui\uff0c\u5feb\u6377\u952e\u5982Alt+A)</li> <li>\u622a\u56fe\u9ed1\u5c4f\u95ee\u9898\uff1a\u8bbe\u7f6e-\u5173\u4e8e-\u7cfb\u7edf\u7a97\u53e3\uff0c\u5982\u679c\u662fWayLand\u9700\u4fee\u6539\u6210x11\uff0csudo vi /etc/gdm3/custom.conf\uff0cWaylandEnable=false\u53bb\u6389#\uff0c\u4fdd\u5b58\u5e76\u91cd\u542f\u7535\u8111</li> </ul> <p>Clash\uff1ahttps://ikuuu.one</p> <p>\u5efa\u8bae\u76f4\u63a5\u5728\u661f\u706b\u5546\u5e97\u4e2d\u4e0b\u8f7dwindow\u7248\u672c\uff0c\u5bfc\u5165yaml\u5373\u53ef</p> <p>ubuntu\u4e2d\u9700\u8981\u5728\u8bbe\u7f6e\u4e2d\u914d\u7f6e\uff0c\u8bbe\u7f6e-\u7f51\u7edc-\u7f51\u7edc\u4ee3\u7406\uff0c\u5982\u56fe\u914d\u7f6e</p> <p></p> <p>127.0.0.1 7890</p> <p>localhost, 127.0.0.0/8, ::1</p> <p>\u7ec8\u7aef\u4e2d\u4e0d\u8d77\u4f5c\u7528\u89e3\u51b3</p> <p>\u914d\u7f6egit\u4ee3\u7406 <pre><code>git config --global http.proxy http://127.0.0.1:7890\ngit config --global https.proxy http://127.0.0.1:7890\n</code></pre> \u6216\u8005git config --local</p> <p>\u53d6\u6d88\u4ee3\u7406 <pre><code>git config --global --unset http.proxy\ngit config --global --unset https.proxy\n</code></pre></p> <p>\u6d4f\u89c8\u5668\u67d0\u4e9b\u7f51\u7ad9\u6253\u4e0d\u5f00\u89e3\u51b3\uff1aclash\u9009\u62e9\u89c4\u5219\u6a21\u5f0f</p> <p>clash-verge: clash for linux\u66ff\u4ee3\u54c1</p> <p>https://github.com/clash-verge-rev/clash-verge-rev/releases</p>"}, {"location": "linux/ubuntu_install/", "title": "ubuntu", "text": ""}, {"location": "linux/ubuntu_install/#windows11ubuntu", "title": "Windows11\u5b89\u88c5Ubuntu\u53cc\u7cfb\u7edf", "text": ""}, {"location": "linux/ubuntu_install/#ubuntuiso", "title": "\u4e0b\u8f7dUbuntu\u955c\u50cfiso\u6587\u4ef6", "text": "<ul> <li>\u5b98\u7f51\uff1a https://ubuntu.com/download/desktop</li> <li>\u963f\u91cc\uff1a https://developer.aliyun.com/mirror/?spm=a2c6h.25603864.0.0.94936c65ILrxWy</li> <li>\u6e05\u534e\uff1a https://mirrors.tuna.tsinghua.edu.cn/</li> </ul>"}, {"location": "linux/ubuntu_install/#u", "title": "U\u76d8\u542f\u52a8\u5236\u4f5c\u5de5\u5177", "text": "<p>\u5b98\u7f51\u63a8\u8350https://rufus.ie/</p> <p>\u8fd0\u884c rufus-3.10.exe\uff0c\u6309\u7167\u4e0b\u56fe\u9009\u62e9\uff0c\u70b9\u51fb\u5f00\u59cb\u2013OK\u2013\u786e\u5b9a\uff0c\u7b49\u5f85\u8fdb\u5ea6\u6761\u8d70\u5b8c\u2013\u5173\u95ed</p> <p> </p>"}, {"location": "linux/ubuntu_install/#u_1", "title": "U\u76d8\u542f\u52a8\u5b89\u88c5\u7cfb\u7edf", "text": "<p>\u6309\u7167\u63d0\u793a</p>"}, {"location": "linux/ubuntu_install/#_1", "title": "\u53cc\u7cfb\u7edf\u5f15\u5bfc\u754c\u9762\u7f8e\u5316+\u4fee\u6539\u9ed8\u8ba4\u542f\u52a8\u9879", "text": "<p>\u4e3b\u9898\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.gnome-look.org/p/1009236/</p> <p>\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1-mOl3_mHZZVh_PVMq9oQ1w \u63d0\u53d6\u7801\uff1a2pbn</p> <p>\u542f\u52a8Ubuntu\u7cfb\u7edf\u8fdb\u884c\u64cd\u4f5c <pre><code>\u89e3\u538b\ntar xvJf Vimix-1080p.tar.xz\n\u8fdb\u5165\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\ncd Vimix-1080p\n\u5b89\u88c5\nsudo ./install.sh\n\u4fee\u6539\u542f\u52a8\u8bbe\u7f6e\nsudo gedit /etc/default/grub\n</code></pre> GRUB_DEFAULT\uff08\u9ed8\u8ba4\u542f\u52a8\u9879\uff1a\u7f16\u53f7\u662f\u4ece0\u5f00\u59cb\u7684\uff09</p> <p>GRUB_TIMEOUT_STYLE\uff08\u662f\u5426\u663e\u793a\u5012\u8ba1\u65f6\uff0chidden\u7684\u5c5e\u6027\u8868\u793a\u4e0d\u4f1a\u663e\u793a\u5012\u8ba1\u65f6\uff0c\u6ce8\u91ca\u6389\u8be5\u884c\u5219\u663e\u793a\u5012\u8ba1\u65f6\uff09</p> <p>GRUB_TIMEOUT\uff08\u7b49\u5f85\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u79d2\uff09 \u6309\u81ea\u8eab\u9700\u6c42\u66f4\u6539\u540e\uff0c\u4fdd\u5b58\u5373\u53ef</p> <p>\u5728\u547d\u4ee4\u884c\u8f93\u5165 <pre><code>sudo update-grub\n</code></pre> \u91cd\u542f\u751f\u6548</p>"}, {"location": "linux/ubuntu_install/#_2", "title": "\u89e3\u51b3\u53cc\u7cfb\u7edf\u4e0b\u65f6\u95f4\u4e0d\u540c\u6b65\u95ee\u9898", "text": "<p>\u8fdb\u5165Ubuntu\u7cfb\u7edf\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4 <pre><code>sudo apt-get install ntpdate //\u5728Ubuntu\u4e0b\u66f4\u65b0\u672c\u5730\u65f6\u95f4\nsudo ntpdate time.windows.com\nsudo hwclock --localtime --systohc //\u5c06\u672c\u5730\u65f6\u95f4\u66f4\u65b0\u5230\u786c\u4ef6\u4e0a\n</code></pre> \u7136\u540e\u91cd\u542f\u8fdb\u5165Windows\uff0c\u521d\u6b21\u91cd\u542f\u53ef\u80fd\u65f6\u95f4\u4f9d\u7136\u4e0d\u540c\uff0c\u4f46\u662f\u5728Windows\u81ea\u52a8\u8c03\u6574\u4e00\u904d\u540e\uff0c\u65f6\u95f4\u5c31\u540c\u6b65\u4e86\u3002</p>"}, {"location": "linux/ubuntu_install/#vi", "title": "vi\u7f16\u8f91\u5668\u952e\u76d8\u9519\u4e71\u7684\u95ee\u9898", "text": "<p>\u5b89\u88c5vim full\u7248\u672c \u9996\u5148\uff0c\u8981\u5148\u5378\u6389\u65e7\u7248\u7684vi\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a <pre><code>sudo apt-get remove vim-common\nsudo apt-get install vim\n</code></pre></p>"}, {"location": "linux/ubuntu_install/#root", "title": "\u8bbe\u7f6eroot\u5bc6\u7801", "text": "<pre><code>sudo passwd root\n</code></pre>"}, {"location": "linux/ubuntu_install/#_3", "title": "\u5b89\u88c5\u8f93\u5165\u6cd5", "text": "<p>\u5148\u5b89\u88c5\u661f\u706b\u5546\u5e97\uff0c\u5728\u529e\u516c\u4e2d\u9009\u4e2d\u76f8\u5e94\u7684\u8f93\u5165\u6cd5\uff0c\u4f8b\u5982\u767e\u5ea6\u8f93\u5165\u6cd5\uff0c\u5b89\u88c5\u4e2d\u4f1a\u51fa\u73b0\u62a5\u9519\uff0c\u6253\u5f00\u7ec8\u7aef\u6267\u884c <pre><code>sudo apt install -f\n</code></pre> \u6253\u5f00\u8bbe\u7f6e-\u533a\u57df\u4e0e\u8bed\u8a00-\u7ba1\u7406\u5df2\u5b89\u88c5\u7684\u8bed\u8a00\uff0c\u5728\u5f39\u51fa\u7684\u6846\u4e2d\u9009\u62e9\u952e\u76d8\u8f93\u5165\u6cd5\u7cfb\u7edf\u4e3aFcitx 4</p> <p>\u6ce8\u9500\u7535\u8111\uff0c\u91cd\u65b0\u6253\u5f00\u661f\u706b\u5546\u5e97\u91cd\u65b0\u5b89\u88c5\u8f93\u5165\u6cd5\u518d\u6ce8\u9500\u5373\u53ef</p>"}, {"location": "linux/ubuntu_install/#_4", "title": "\u7f8e\u5316\u4e3b\u9898", "text": "<p>\u6253\u5f00ubuntu software\uff0c\u641c\u7d22\u5e76\u5b89\u88c5GNOME Tweaks\u548c\u6269\u5c55</p> <p>\u62d3\u5c55\u7ba1\u7406\u5b89\u88c5\uff1a <pre><code>sudo apt install gnome-shell-extension-manager\n</code></pre> \u6253\u5f00\u62d3\u5c55\u7ba1\u7406\u5668\u9009\u62e9\u5b89\u88c5User Themes</p> <p>mac\u4e3b\u9898 <pre><code>git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1\n</code></pre> \u6267\u884c <pre><code>./install.sh\n</code></pre> mac\u56fe\u6807 <pre><code>git clone https://github.com/vinceliuice/WhiteSur-icon-theme.git --depth=1\n</code></pre> \u6267\u884c <pre><code>./install.sh\n</code></pre></p> <p>\u6253\u5f00\u4f18\u5316(GNOME Tweaks)\uff0c\u4e0b\u5b89\u88c5\u5916\u89c2\uff0c\u5bf9\u5e94\u7528\u7a0b\u5e8f\u3001\u5149\u6807\u3001\u56fe\u6807\u3001Shell\u8fdb\u884c\u4e3b\u9898\u914d\u7f6eWhite\u5f00\u5934</p> <p>\u7a97\u53e3\u6807\u9898\u680f\u4fee\u6539\u653e\u7f6e\u4e3a\u5de6</p>"}, {"location": "linux/ubuntu_install/#samba", "title": "\u914d\u7f6esamba\u5171\u4eab", "text": "<p>\u5b89\u88c5samba <pre><code>sudo apt-get install samba\n</code></pre> \u8bbe\u7f6e\u7528\u6237\u76ee\u5f55\u6743\u9650 <pre><code>sudo chmod 755 /home/username\n</code></pre> \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6 <pre><code>sudo vi /etc/samba/smb.conf\n</code></pre> \u6dfb\u52a0\u5185\u5bb9 <pre><code>[Share]  \n    Comment = Ubuntu File Share  \n    Path = /home/username  \n    Browseable = yes  \n    Writable = yes  \n    Valid Users = username\n</code></pre> \u8bbe\u7f6e\u8bbf\u95ee\u7528\u6237\u5e76\u8bbe\u7f6e\u8bbf\u95ee\u5bc6\u7801 <pre><code>sudo smbpasswd -a username\n</code></pre> \u91cd\u542fsamba\u670d\u52a1 <pre><code>sudo service smbd restart\n</code></pre> window\u7535\u8111\u76f4\u63a5\u5728\u6587\u4ef6\u7ba1\u7406\u5176\u4e2d\u8f93\u5165ubuntu\u7684ip\u5730\u5740\u5373\u53ef\u8bbf\u95ee\uff0c\u521b\u5efa\u78c1\u76d8\u6620\u5c04\u8def\u5f84\u4e3a\uff1a <pre><code>\\\\ip\\Share\n</code></pre></p>"}, {"location": "linux/ubuntu_install/#java", "title": "\u914d\u7f6ejava\u73af\u5883", "text": "<pre><code>PATH=~/bin:$PATH\nexport JAVA_HOME=/media/yuli/E/Software/android-studio-linux/jbr\nexport CLASSPATH=.:${JAVA_HOME}/bin\nexport PATH=${JAVA_HOME}/bin:/media/yuli/E/Software/AndroidSDKlinux/platform-tools:$PATH\n</code></pre>"}, {"location": "linux/ubuntu_install/#_5", "title": "\u8fc1\u79fb\u7cfb\u7edf", "text": "<ol> <li> <p>U\u76d8\u542f\u52a8\u9009try ubuntu</p> </li> <li> <p>\u6253\u5f00\u78c1\u76d8\u5de5\u5177</p> </li> </ol> <p>\u67e5\u770b\u7cfb\u7edf\u8def\u5f84\u4ee5\u53ca\u65b0\u786c\u76d8\u8def\u5f84\uff0c\u5982</p> <p>\u5f53\u524d\u7cfb\u7edf\u6240\u5728\u786c\u76d8\u4e3a/dev/nvme1n1p1</p> <p>\u65b0\u786c\u76d8\u8def\u5f84\u4e3a/dev/nvme0n1p1</p> <ol> <li>\u6253\u5f00\u7ec8\u7aef</li> </ol> <p>\u5206\u522b\u6267\u884c <pre><code>sudo -i\n\ndd if=dev/nvme1n1p1 of=/dev/nvme0n1p1\n</code></pre> \u67e5\u770b\u590d\u5236\u8fdb\u5ea6\uff0c\u5206\u522b\u6267\u884c <pre><code>sudo -i\n\nwatch -n 5 killall -USR1 dd\n</code></pre> 4. \u66f4\u65b0\u65b0\u786c\u76d8\u5206\u533a <pre><code>umount /dev/nvme0n1p1\ne2fsck -f /dev/nvme0n1p1\nresize2fs /dev/nvme0n1p1\n</code></pre> 5. \u66f4\u65b0uuid <pre><code>uuidgen | xargs tune2fs /dev/nvme0n1p1 -U\n</code></pre> 6. \u4fee\u590d\u5f15\u5bfc <pre><code>sudo add-apt-repository ppa:yannubuntu/boot-repair\n\nsudo apt update\n\nsudo apt install boot-repair -y\n</code></pre> update\u62a5\u9519</p> <p>\u62a5\u9519Unable to locate package boot-repair</p> <p><pre><code>cd /etc/apt/sources.list.d\n</code></pre> \u5c06kinetic(22.10\u7248\u672c\u4e0d\u7ef4\u62a4) <pre><code>deb http://ppa.launchpad.net/yannubuntu/boot-repair/ubuntu kinetic main\n</code></pre> \u6539\u6210jammy(22.04\u7248\u672c\u4e0d\u7ef4\u62a4) <pre><code>deb http://ppa.launchpad.net/yannubuntu/boot-repair/ubuntu jammy main\n</code></pre> \u5404\u7248\u672c\uff1ahttp://ppa.launchpad.net/yannubuntu/boot-repair/ubuntu/dists/</p> <p>\u542f\u52a8boot-repair <pre><code>sudo boot-repair\n</code></pre> \u5c55\u5f00\u9ad8\u7ea7\u9009\u9879</p> <p></p> <p>OS to boot by default\u9009\u62e9nvme0n1p1\uff0capply\u5373\u53ef</p> <ol> <li>\u4fee\u6539\u542f\u52a8\u9879 \u67e5\u770b\u6240\u6709\u5206\u533a\u7684uuid <pre><code>sudo blkid\n</code></pre> \u6253\u5f00/etc/fstab\uff0c\u5bf9\u6bd4\u786e\u8ba4uuid\u662f\u5426\u6b63\u786e \u6bd4\u5982EFI\u5206\u533a\uff0cfstab\u4e2d\u662f\u5426\u4e3aC45C-35DA <pre><code>/dev/nvme1n1p1: LABEL_FATBOOT=\"SYSTEM\" LABEL=\"SYSTEM\" UUID=\"C45C-35DA\" BLOCK_SIZE=\"512\" TYPE=\"vfat\" PARTLABEL=\"EFI system partition\" PARTUUID=\"ebce88d0-cf4e-49db-8f60-6d1782375532\"\n</code></pre> \u6216\u8005\u5728fstab\u4e2d\u7684\u5176\u4ed6\u5982\u521a\u590d\u5236\u5b8c\u7684\u786c\u76d8\uff0c\u786e\u8ba4blkid\u5217\u51fa\u7684uuid\u5b58\u5728 <pre><code>UUID=356ea4ad-399f-4ea7-a761-8f1465ef2472 /               ext4    errors=remount-ro 0       1\n</code></pre></li> </ol> <p>\u5982\u6709\u4e0d\u5b58\u5728\u73b0\u5728\u4f1a\u5bfc\u81f4\u5f00\u673a\u5931\u8d25\uff0c\u62a5failed to start remount root and kernel file system</p> <ol> <li>\u91cd\u542f\u9a8c\u8bc1</li> </ol> <p>\u5c06\u8001\u7684\u786c\u76d8\u62d4\u9664\uff0c\u5982\u679c\u91cd\u542f\u542f\u52a8\u5217\u8868\u9009\u62e9\u6709\u591a\u4e2aubuntu\uff0c\u5f00\u673a\u540e\u6267\u884c <pre><code>sudo update-grub\n</code></pre></p>"}, {"location": "mac/mac_install/", "title": "\u9ed1\u82f9\u679c", "text": ""}, {"location": "mac/mac_install/#_1", "title": "\u865a\u62df\u673a\u5f62\u5f0f", "text": "<p>\u865a\u62df\u673a\u5b89\u88c5</p>"}, {"location": "mac/mac_install/#_2", "title": "\u9ed1\u82f9\u679c\u5f62\u5f0f", "text": ""}, {"location": "mac/mac_install/#1", "title": "1.\u5b89\u88c5", "text": "<p>\u89c1\u9ed1\u82f9\u679c\u5b89\u88c5</p>"}, {"location": "mac/mac_install/#2", "title": "2.\u9a71\u52a8\u4fee\u590d", "text": ""}, {"location": "mac/mac_install/#1_1", "title": "1.\u4fee\u590d\u4eae\u5ea6\u4e4b\u6838\u663e\u6559\u7a0b", "text": "<p>1.\u5220\u9664\u4e07\u80fd\u9a71\u52a8 /EFI/CLOVER/kexts/other/IntelGraphicsFixup.kext\uff0c\u5f80\u91cc\u6dfb\u52a0FakePCIID_Intel_HD_Graphics.kext\uff0cAppleBacklightFixup.kext</p> <p>2.\u4f7f\u7528Clover Configurator</p> <p>\u6253\u5f00/EFI/CLOVER/config.plist 1\uff09\u52fe\u9009Acpi\u9879\u4e2d\u7684AddDTGP\u548cAddPNLF\uff0cPatches\u4e2d\u6dfb\u52a0AZAL to HDEF\u6216HDAS to HDEF</p> <p>2\uff09\u52fe\u9009Devices\u9879\u4e2d\u7684SetIntelBacklight\u548cSetIntelMacBacklight\uff1bSystem Paramenters\u53ef\u8bbe\u7f6e\u5f00\u673a\u9ed8\u8ba4\u4eae\u5ea6Backlight Level\u6700\u4eae0xFFFF,Inject Kexts\u9009\u62e9Detect</p> <p>3.\u67e5\u770bCPU\u578b\u53f7\uff0c\u9009\u62e9\u5408\u9002\u7684platform-id Intel HD Graphics 4400\u53ef\u4f7f\u75280x0a160000\uff0c0x0c160000\uff0c0x0a260006</p> <p>Intel\u6838\u663eplatform ID\u6574\u7406\u53casmbios\u901f\u67e5\u8868</p> <p>https://blog.daliansky.net/Intel-core-display-platformID-finishing.html</p> <p>4.\u5728Graphics\u9879\u4e2d\u586b\u5199ig-platform-id</p> <p>5.\u4fdd\u5b58\u540e\u91cd\u542f</p>"}, {"location": "mac/mac_install/#2_1", "title": "2.\u4fee\u590d\u58f0\u97f3\u4e4b\u4eff\u5192\u58f0\u5361\u6559\u7a0b", "text": "<p>1.\u5220\u9664\u4e07\u80fd\u9a71\u52a8</p> <p>/EFI/CLOVER/kexts/other/VoodooHDA.kext\uff0c\u5f80\u91cc\u6dfb\u52a0AppleALC.kext\u548cLilu.kext</p> <p>2.\u4f7f\u7528Clover Configurator</p> <p>\u6253\u5f00/EFI/CLOVER/config.plist,\u52fe\u9009Acpi\u9879\u4e2d\u7684FIXHPET</p> <p>3.\u67e5\u770b\u58f0\u5361\u578b\u53f7</p> <p>win\u4e0b\u53ef\u4f7f\u7528aida\u8f6f\u4ef6\u67e5\u770b\uff0cMac\u76f4\u63a5\u4f7f\u7528Hackintool\u67e5\u770b</p> <p>Realtek AppleALC283\u53ef\u4f7f\u7528layout-id\u5982\u4e0b\uff1a 1, 3, 11, 66(\u672c\u673a11)</p> <p>\u5176\u4ed6AppleALC\u652f\u6301\u7684Codecs\u5217\u8868</p> <p>https://blog.daliansky.net/AppleALC-Supported-codecs.html </p> <p>\u7b14\u8bb0\u672c\uff0c\u4ece\u5927\u6570\u5b57\u6539\u5230\u5c0f\u6570\u5b57\u5c1d\u8bd5</p> <p>4.\u5728Devices\u9879\u4e2dAudio Inject\u586b\u5199layout-id</p> <p>5.\u4fdd\u5b58\u540e\u91cd\u542f</p>"}, {"location": "mac/mac_install/#3ddst", "title": "3.ddst\u4fee\u6539\u6559\u7a0b", "text": "<p>1.Command+shift+G\uff0c\u524d\u5f80/usr/bin\u76ee\u5f55\uff0c\u5e76\u5c06iasl\u7f16\u8bd1\u5668\u62d6\u5165\u5230\u8be5\u76ee\u5f55</p> <p>2.aml\u8f6cdsl\uff1a <pre><code>iasl -da -dl *.aml\n</code></pre> 3.\u4f7f\u7528MaciASL\u6253\u5f00dsl\u8fdb\u884c\u4fee\u6539\u6216\u8005\u6253\u8865\u4e01</p> <p>4.dsl\u8f6caml\uff1a <pre><code>iasl *.dsl\n</code></pre> 5.\u590d\u5236\u5230EFI/Clover/ACPI/patched/</p>"}, {"location": "mac/mac_install/#3", "title": "3.\u4f18\u5316", "text": ""}, {"location": "mac/mac_install/#1_2", "title": "1.\u9690\u85cf\u76f8\u5173\u542f\u52a8\u76d8", "text": "<p>Clover Configurator\u4e2d\u9009\u62e9Gui\u9879\u53bb\u9664Scan\u4e2d\u7684Legacy\uff0cHide Volume\u4e2d\u6dfb\u52a0Preboot\uff0cRecovery\uff0cmacOS Install</p>"}, {"location": "mac/mac_install/#2_2", "title": "2.\u8bbe\u7f6e\u4e3b\u9898", "text": "<p>Gui\u4e2dTheme\u4fee\u6539\u540d\u79f0\uff0c\u540d\u79f0\u4e3aEFI/CLOVER/themes\u4e2d\u7684\u6587\u4ef6\u5939\u540d\u79f0</p>"}, {"location": "mac/mac_install/#3_1", "title": "3.\u8bbe\u7f6e\u9ed8\u8ba4\u542f\u52a8\u76d8", "text": "<p>Boot\u4e2dDefault Boot Volume\u586b\u5199\u76d8\u540d\u79f0</p>"}, {"location": "mac/mac_swift/", "title": "SwiftUI", "text": ""}, {"location": "mac/mac_swift/#_1", "title": "\u4ea7\u54c1\u5206\u7c7b\u7f16\u7801", "text": "<pre><code>#if os(iOS)\n//code\n#endif\n\n#if os(macOS)\n//code\n#endif\n</code></pre>"}, {"location": "mac/mac_swift/#_2", "title": "\u6253\u5305", "text": "<p>1.\u6253\u5f00\u83dc\u5355Product-Archive</p> <p>2.\u9009\u62e9Distribute App</p> <p>3.Copy App\uff0c\u9009\u4e2d\u684c\u9762\u5373\u53ef</p>"}, {"location": "mac/mac_swift/#_3", "title": "\u5e38\u89c1\u5751", "text": "<p>Mac\u7aef\u4f7f\u7528AsyncImage\u7ec4\u4ef6\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247\u62a5\u9519</p> <p>\u5f02\u5e38\uff1afinished with error [-1003] Error Domain=NSURLErrorDomain Code=-1003 \"\u672a\u80fd\u627e\u5230\u4f7f\u7528\u6307\u5b9a\u4e3b\u673a\u540d\u7684\u670d\u52a1\u5668\u3002\"</p> <p>\u89e3\u51b3\uff1a\u52fe\u9009\u7ea2\u6846\u9009\u9879</p> <p></p>"}, {"location": "ohos/arkts_base/", "title": "Arkts base", "text": "<p>TypeScript\u7684\u5b98\u65b9\u6559\u7a0b\uff08https://www.typescriptlang.org/docs/\uff09</p> <p>\u5728\u7ebfPlayground\u5e73\u53f0\uff08https://www.typescriptlang.org/play\uff09</p>"}, {"location": "ohos/arkts_base/#_1", "title": "\u8fed\u4ee3\u5668", "text": "<p>for of\u548cfor in <pre><code>let list = [4, 5, 6];\n\nfor (let i in list) {\n    console.log(i); // \"0\", \"1\", \"2\",\n}\n\nfor (let i of list) {\n    console.log(i); // \"4\", \"5\", \"6\"\n}\n</code></pre></p>"}, {"location": "ohos/ohos_build/", "title": "\u6e90\u7801\u7f16\u8bd1", "text": ""}, {"location": "ohos/ohos_build/#wsl2", "title": "WSL2\u914d\u7f6e", "text": "<p>1.\u6253\u5f00Microsoft store\u641c\u7d22ubuntu\uff0c\u63a8\u8350\u4f7f\u7528ubuntu-20.04\uff0c\u4e0b\u8f7d\u540e\u5982\u679c\u51fa\u73b0\u4e71\u7801\u5219\u5b89\u88c5update_x64.msi(wsl2\u4e2d)\uff0c\u5982\u679cwsl2\u8fd8\u672a\u914d\u7f6e\u5219\u5148wsl2\u73af\u5883\u914d\u7f6e</p> <p>2.\u8bbe\u7f6eroot\u5bc6\u7801 <pre><code>sudo passwd root\n</code></pre></p> <p>3.Ubuntu Shell\u73af\u5883\u4fee\u6539\u4e3abash</p> <p>\u6267\u884csudo dpkg-reconfigure dash\uff0c\u9009\u62e9No</p> <p>4.\u5207\u6362python\u7248\u672c <pre><code>sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150\n</code></pre></p> <p>5.\u5b89\u88c5pip3 <pre><code>sudo apt -y update\nsudo apt upgrade\nsudo apt install python3-pip\n</code></pre></p> <p>6.\u914d\u7f6egit\u76f8\u5173 <pre><code>sudo apt install git-all\nsu\ncurl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash\napt install git-lfs\ngit lfs install\nexit\ngit config --global user.name \"yuli\"\ngit config --global user.email \"1875287386@qq.com\"\ngit config --global credential.helper store\n</code></pre></p> <p>7.\u914d\u7f6erepo <pre><code>curl https://gitee.com/oschina/repo/raw/fork_flow/repo-py3 &gt; /usr/local/bin/repo\nchmod a+x /usr/local/bin/repo\npip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple requests\n</code></pre></p> <p>8.\u6309\u7167wsl\u8fc1\u79fb\u5230\u5176\u4ed6\u78c1\u76d8(\u53ef\u8df3\u8fc7)</p>"}, {"location": "ohos/ohos_build/#_1", "title": "\u5b98\u7f51\u76f8\u5173", "text": "<p>\u6e90\u7801\u6587\u6863\uff1a https://gitee.com/openharmony/docs</p> <p>\u5f00\u53d1\u8005\u6587\u6863\uff1a http://docs.openharmony.cn/pages/v4.0/zh-cn/OpenHarmony-Overview_zh.md/</p>"}, {"location": "ohos/ohos_build/#_2", "title": "\u6e90\u7801\u4e0b\u8f7d", "text": "<p>\u6ce8\u518cgitee\u4ee5\u53ca\u751f\u6210ssh <pre><code>ssh-keygen -t ed25519 -C \"ubuntu\"\n</code></pre> \u4e0b\u8f7d <pre><code>repo init -u git@gitee.com:openharmony/manifest.git -b master --no-repo-verify\nrepo sync -c\nrepo forall -c 'git lfs pull'\n</code></pre></p>"}, {"location": "ohos/ohos_build/#_3", "title": "\u7f16\u8bd1\u914d\u7f6e", "text": "<p>\u914d\u7f6e\u73af\u5883\uff1a <pre><code>./build/build_scripts/env_setup.sh\nsudo apt install libxinerama-dev libxcursor-dev libxrandr-dev libxi-dev\n</code></pre> \u5982\u679cenv_setup.sh\u6267\u884c\u6ca1\u6548\u679c\uff0c\u5219\u6253\u5f00\u6b64\u811a\u672c\u6587\u4ef6\u5220\u9664\u6216\u6ce8\u91ca\u6389\u8fd9\u53e5\u4ee3\u7801 result2=$(echo $SHELL | grep \"zsh\")</p> <p>\u9884\u7f16\u8bd1\u5de5\u5177\u4e0b\u8f7d\uff1a <pre><code>./build/prebuilts_download.sh\n</code></pre> 64\u4f4d\uff1a <pre><code>./build.sh --product-name rk3568 --target-cpu arm64 --ccache\n</code></pre> 32\u4f4d\uff1a <pre><code>./build.sh --product-name rk3568  --ccache\n</code></pre></p> <p>\u7f16\u8bd1\u5b8c\u6210\u955c\u50cf\u8def\u5f84\uff1a\\out\\rk3568\\packages\\phone\\images\\</p>"}, {"location": "ohos/ohos_build/#_4", "title": "\u53c2\u8003\u6559\u7a0b", "text": "<p>https://blog.csdn.net/nanzhanfei/article/details/121951919</p>"}, {"location": "ohos/ohos_build/#_5", "title": "\u5176\u4ed6\u4f7f\u7528\u7f51\u7ad9", "text": "<p>daily\u6784\u5efa\u7248\u672c</p> <p>http://ci.openharmony.cn</p>"}, {"location": "window/window_inner_android/", "title": "Android\u5b50\u7cfb\u7edf", "text": ""}, {"location": "window/window_inner_android/#1windows", "title": "1.\u5f00\u542fwindows\u529f\u80fd(\u9700\u8981\u91cd\u542f)", "text": "<p>\u6253\u5f00\u63a7\u5236\u9762\u677f-\u7a0b\u5e8f-\u542f\u52a8\u6216\u5173\u95edwindows\u529f\u80fd</p> <p>\u52fe\u9009Hyper-V\u548c\u865a\u62df\u673a\u5e73\u53f0</p> <p>\u5bf9\u4e8eWin11\u5bb6\u5ead\u7248</p> <p>\u65b0\u5efa\u6587\u4ef6\u540d\u4e3a\uff1a\u5f00\u542fHyper-V.cmd\uff0c\u5185\u5bb9\u5982\u4e0b\uff0c\u4fdd\u6301\u53cc\u51fb\u6267\u884c <pre><code>pushd \"%~dp0\"\ndir /b %SystemRoot%\\servicing\\Packages*Hyper-V*.mum &gt;hyper-v.txt\nfor /f %%i in ('findstr /i . hyper-v.txt 2^&gt;nul') do dism /online /norestart /add-package:\"%SystemRoot%\\servicing\\Packages%%i\"\ndel hyper-v.txt\nDism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL\n</code></pre></p>"}, {"location": "window/window_inner_android/#2", "title": "2.\u4e0b\u8f7d\u5b50\u7cfb\u7edf", "text": "<p>\u6253\u5f00\u8bbe\u7f6e-\u65f6\u95f4\u548c\u8bed\u8a00-\u8bed\u8a00\u548c\u533a\u57df</p> <p>\u5c06\u56fd\u5bb6\u548c\u5730\u533a\u4fee\u6539\u6210\u7f8e\u56fd\uff0c\u4e0b\u8f7d\u4ee5\u4e0b\u8f6f\u4ef6</p> <p>Windows Subsystem for Android\u4e0b\u8f7d\u94fe\u63a5\uff1a(\u6d4f\u89c8\u5668\u6253\u5f00\u70b9get in store app) https://www.microsoft.com/store/productId/9P3395VX91NR</p>"}, {"location": "window/window_inner_android/#3", "title": "3.\u8fde\u63a5\u8bbe\u5907", "text": "<p>\u5f00\u59cb\u4e2d\u6253\u5f00\u9002\u7528\u4e8eAndroid\u7684Windows\u5b50\u7cfb\u7edf\u8bbe\u7f6e\u8f6f\u4ef6\uff0c\u9009\u62e9\u5f00\u53d1\u4eba\u5458\uff0c\u5f00\u542f\u5f00\u53d1\u4eba\u5458\u6a21\u5f0f\uff0c\u8bb0\u4f4fadb\u7684ip\u8fde\u63a5\u6bd4\u5982 <pre><code>adb connect 127.0.0.1:58526\n</code></pre> \u8fde\u63a5\u540e\u4f7f\u7528 <pre><code>adb install xxx.apk\n</code></pre></p>"}, {"location": "window/window_install/", "title": "\u7cfb\u7edf\u5b89\u88c5", "text": ""}, {"location": "window/window_install/#_1", "title": "\u955c\u50cf\u4e0b\u8f7d", "text": "<p>https://msdn.itellyou.cn/</p>"}, {"location": "window/window_software/", "title": "\u5e38\u89c1\u8f6f\u4ef6", "text": "<p>Xshell</p> <p>Mobaxterm</p> <p>RAMMap\uff1a\u5185\u5b58\u6e05\u7406\u5de5\u5177</p> <p>WizTree: \u78c1\u76d8\u5206\u6790\u5de5\u5177</p> <p>scrcpy\uff1a\u5b89\u5353\u6295\u5c4f\u795e\u5668</p> <p>AI\u5de5\u5177\uff1agpt\u8f6f\u4ef6</p> <p>drawio\uff1a\u7ed8\u5236\u7c7b\u56fe\u3001\u6d41\u7a0b\u56fe\u7b49\u5de5\u5177</p> <p>charles\uff1a\u6293\u5305\u5de5\u5177</p> <p>IDA\uff1aso\u8c03\u8bd5\u5de5\u5177\uff0c\u53cd\u6c47\u7f16\u5de5\u5177</p>"}, {"location": "window/window_vmware/", "title": "VMWare\u5b89\u88c5", "text": ""}, {"location": "window/window_vmware/#1vmware", "title": "1.\u5b89\u88c5VMWare\u865a\u62df\u673a", "text": "<p>\u5b98\u65b9\u4e0b\u8f7d\u5730\u5740\uff1a</p> <p>https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</p> <p>VMware\u8bb8\u53ef\u8bc1</p> <p>17.x</p> <p>JU090-6039P-08409-8J0QH-2YR7F</p> <p>ZA5RU-6FYD5-48EPY-3XXEE-PAUGD</p> <p>ZF3R0-FHED2-M80TY-8QYGC-NPKYF</p> <p>FC7D0-D1YDL-M8DXZ-CYPZE-P2AY6</p> <p>ZC3TK-63GE6-481JY-WWW5T-Z7ATA</p> <p>1Z0G9-67285-FZG78-ZL3Q2-234JG</p> <p>4A4RR-813DK-M81A9-4U35H-06KND</p> <p>NZ4RR-FTK5H-H81C1-Q30QH-1V2LA</p> <p>JU090-6039P-08409-8J0QH-2YR7F</p> <p>4Y09U-AJK97-089Z0-A3054-83KLA</p> <p>4C21U-2KK9Q-M8130-4V2QH-CF810</p> <p>MC60H-DWHD5-H80U9-6V85M-8280D</p> <p>16.x</p> <p>ZF3R0-FHED2-M80TY-8QYGC-NPKYF</p> <p>Z1ZPR-EDGQN-M1JE9-HYFGX-YPGEX</p> <p>\u5185\u5b58\uff1a\u4e0d\u80fd\u8d85\u8fc7\u7269\u7406\u5185\u5b58 cpu\u6838\u6570\uff1a\u89c1\u4efb\u52a1\u7ba1\u7406\u5668-\u6027\u80fd\uff0ccpu\u4e2a\u6570\u548c\u5904\u7406\u5668\u76f8\u4e58\u4e0d\u80fd\u8d85\u8fc720</p> <p></p>"}, {"location": "window/window_vmware/#2ubuntu", "title": "2.\u5b89\u88c5\u7cfb\u7edf(\u4ee5ubuntu\u4e3a\u4f8b)", "text": "<p>iso\u955c\u50cf\u4e0b\u8f7d\u5730\u5740\uff1a \u963f\u91cc \u6e05\u534e</p>"}, {"location": "window/window_vmware/#3samba", "title": "3.\u5b89\u88c5samba\u5171\u4eab", "text": "<p>\u5728ubuntu\u7ec8\u7aef\u4e2d\u64cd\u4f5c <pre><code>sudo apt-get install samba\nsudo apt-get install cifs-utils\n</code></pre> \u4fee\u6539\u914d\u7f6e <pre><code>sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak\nsudo vi /etc/samba/smb.conf\n</code></pre> \u6700\u540e\u6dfb\u52a0\u4e00\u4e0b\u5185\u5bb9\uff0c/home/hfc/\u53ef\u4ee5\u66f4\u6539\u6210\u5176\u4ed6\u76ee\u5f55 <pre><code>[share]\n      path = /home/hfc/\n      available = yes\n      browseable = yes\n      public = yes\n      writable = yes\n</code></pre> \u521b\u5efa\u7528\u6237 <pre><code>sudo touch /etc/samba/smbpasswd\nsudo smbpasswd -a hfc(\u5f53\u524d\u7cfb\u7edf\u7528\u6237)\n</code></pre> \u91cd\u542f\u670d\u52a1 <pre><code>sudo /etc/init.d/smbd restart\n</code></pre> win10\u5f00\u542fsmb\u5171\u4eab\u670d\u52a1  Win+R\uff0c\u8f93\u5165gpedit.msc ,\u6253\u5f00\u7ec4\u7b56\u7565\uff0c\u4fee\u6539\u4ee5\u4e0b\u914d\u7f6e\u540e\u91cd\u542f\u7535\u8111  \u82e5\u5f00\u542fhyper-v\u9700\u8981\u5173\u95ed\uff0c\u5426\u5219\u5f71\u54cd\u6a21\u62df\u5668\u4f7f\u7528 \u5173\u95ed\u65b9\u5f0f\uff1a \u7ba1\u7406\u5458\u8fd0\u884c\u7ec8\u7aef\u8f93\u5165bcdedit /set  hypervisorlaunchtype OFF(\u6062\u590dAUTO) Win+R\u8f93\u5165services.msc\uff0c\u5c06HV\u4e3b\u673a\u670d\u52a1\u7981\u7528  \u91cd\u542f\u7535\u8111\u751f\u6548</p>"}, {"location": "window/window_win11/", "title": "Window11\u76f8\u5173", "text": ""}, {"location": "window/window_win11/#1win10", "title": "1.\u53f3\u952e\u83dc\u5355\u6062\u590dwin10", "text": "<p>1.win+r\u6253\u5f00\u8fd0\u884c\u7a97\u53e3\uff0c\u8f93\u5165regedit\uff0c\u6309\u4e0b\u56de\u8f66\u952e\u786e\u8ba4\u5373\u53ef\u6253\u5f00\u6ce8\u518c\u8868</p> <p>2.\u5728\u8def\u5f84\u4e2d\u8f93\u5165\uff1aHKEY_CURRENT_USER\\SOFTWARE\\CLASSES\\CLSID</p> <p></p> <p>3.\u53f3\u952e\u70b9\u51fbCLSID\u9879\uff0c\u70b9\u51fb\u65b0\u5efa\u4e00\u4e2a\u9879\uff0c\u547d\u540d\u4e3a{86ca1aa0-34aa-4e8b-a509-50c905bae2a2} </p> <p>4.\u53f3\u952e\u70b9\u51fb\u65b0\u5efa\u7684\u9879\uff0c\u7136\u540e\u518d\u65b0\u5efa\u4e00\u4e2a\u9879\uff0c\u547d\u540d\u4e3aInprocServer32 </p> <p>5.\u91cd\u542f\u8d44\u6e90\u7ba1\u7406\u5668 </p> <p>\u547d\u4ee4\u65b9\u5f0f <pre><code>reg.exe delete \"HKCUSoftwareClassesCLSID{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}InprocServer32\" /va /f\n</code></pre> \u6216\u8005 <pre><code>reg add HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\InprocServer32 /ve /d \"\" /f\n</code></pre> \u9700\u8981\u91cd\u542f\u7535\u8111</p>"}, {"location": "window/window_win11/#2", "title": "2.\u62d6\u62fd\u5220\u9664\u6587\u4ef6", "text": "<p>\u65b0\u5efabat\u6587\u4ef6\uff0c\u6dfb\u52a0\u4ee3\u7801 <pre><code>DEL /F /A /Q \\\\?\\%1\nRD /S /Q \\\\?\\%1\n</code></pre></p>"}, {"location": "window/window_win11/#37z00x", "title": "3.\u5408\u5e767z.00x", "text": "<p>\u6253\u5f00cmd <pre><code>copy /b xxx.7z.* xxx.7z\n</code></pre></p>"}, {"location": "window/window_wsl2/", "title": "WSL2", "text": ""}, {"location": "window/window_wsl2/#1windows", "title": "1.Windows\u529f\u80fd\u4e2d\u52fe\u9009", "text": "<p>\u63a7\u5236\u9762\u677f-\u7a0b\u5e8f-\u542f\u7528\u6216\u5173\u95ed</p> <p>Windows\u865a\u62df\u673a\u76d1\u63a7\u7a0b\u5e8f\u5e73\u53f0\u3001\u9002\u7528\u4e8eLinux\u7684Windows\u5b50\u7cfb\u7edf\u5e76\u91cd\u542f\u7535\u8111</p>"}, {"location": "window/window_wsl2/#2ubuntu", "title": "2.\u5b89\u88c5ubuntu", "text": "<p>\u6253\u5f00\u5e94\u7528\u5546\u5e97\u641c\u7d22ubuntu\u5e76\u83b7\u53d6\uff0c\u4f8b\u5982\u9009\u62e9ubuntu22.04</p>"}, {"location": "window/window_wsl2/#3", "title": "3.\u4e0b\u8f7d\u66f4\u65b0\u7a0b\u5e8f\u5e76\u5b89\u88c5", "text": "<p>https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</p>"}, {"location": "window/window_wsl2/#4ubuntu", "title": "4.\u542f\u52a8ubuntu", "text": "<p>window\u83dc\u5355\u4e2d\u6253\u5f00ubuntu\u4f1a\u81ea\u52a8\u8fdb\u884c\u5b89\u88c5\uff0c\u5b8c\u6210\u540e\u8f93\u5165\u7528\u6237\u540d\uff0c\u5bc6\u7801</p> <p>\u62a5\u9519\uff1aWslRegisterDistribution failed with error: 0x80370102</p> <p>\u786e\u4fddBIOS\u4e2dVirtualization(\u6216\u8005VT\u5173\u952e\u5b57\uff0c\u6bcf\u4e2a\u7535\u8111\u53ef\u80fd\u4e0d\u540c)\u529f\u80fd\u5df2\u7ecf\u5f00\u542f</p> <p>\u7ba1\u7406\u5458\u8eab\u4efd\u6253\u5f00\u7ec8\u7aef <pre><code>bcdedit /set hypervisorlaunchtype auto\n</code></pre> \u91cd\u542f\u7535\u8111</p>"}, {"location": "window/window_wsl2/#5", "title": "5.\u67e5\u770b\u914d\u7f6e", "text": "<p>\u6253\u5f00powershell\u8f93\u5165 <pre><code>wsl -l --all -v\n</code></pre> \u5982\u679cversion\u662f2\u8868\u793a\u5df2\u7ecf\u5b89\u88c5wsl2\uff0c\u5982\u679c\u662f1\u9700\u8981\u8fdb\u884c\u5347\u7ea7 <pre><code>wsl --set-version Ubuntu-22.04 2\n</code></pre></p>"}, {"location": "window/window_wsl2/#6c", "title": "6.\u8fc1\u79fb\u5230\u5176\u4ed6\u76d8\uff0c\u9ed8\u8ba4\u5b89\u88c5\u5728c\u76d8", "text": "<p><pre><code>wsl --shutdown\n</code></pre> \u901a\u8fc7wsl -l --all -v\u786e\u8ba4\u662fStopped\u72b6\u6001</p> <p>\u5bfc\u51fa\u538b\u7f29\u5305\uff1a <pre><code>wsl --export Ubuntu-22.04 D:\\ubuntuback\\ubuntu22.04.tar\n</code></pre> \u6ce8\u9500\u7cfb\u7edf\uff1a <pre><code>wsl --unregister Ubuntu-22.04\n</code></pre> \u5bfc\u5165\u7cfb\u7edf\uff1a <pre><code>wsl --import Ubuntu-22.04 D:\\ubuntu2204 D:ubuntuback\\ubuntu22.04.tar\n</code></pre> Ubuntu-22.04 Linux\u7cfb\u7edf\u540d\u79f0\u548c\u7248\u672c</p> <p>D:\\Ubuntu2204 \u5b89\u88c5\u8def\u5f84</p> <p>D:ubuntuback\\ubuntu22.04.tar \u955c\u50cf\u6240\u5728\u4f4d\u7f6e</p> <p>\u91cd\u65b0\u8bbe\u7f6e\u7528\u6237\uff1a <pre><code>ubuntu2204.exe config --default-user yuli\n</code></pre></p> <p>\u914d\u7f6e\u4ea4\u6362swap\u5185\u5b58</p> <p>1.\u771f\u6b63\u7684ubuntu\u4e2d <pre><code>sudo fallocate -l 10G /swapfile\nsudo chmod 600 /swapfile\nsudo mkswap /swapfile\nsudo swapon /swapfile\necho '/swapfile swap swap defaults 0 0' | sudo tee -a /etc/fstab\nfree -h\uff1a\u53ef\u67e5\u770b\n</code></pre> wsl\u5f62\u5f0f\u7684ubuntu\u4e2d</p> <p>\u6587\u4ef6\u7ba1\u7406\u5668\u5730\u5740\u8f93\u5165\uff1a%UserProfile%\uff0c\u56de\u8f66\u6253\u5f00.wslconfig(\u82e5\u65e0\u6b64\u6587\u4ef6\u5219\u65b0\u5efa)\uff0c\u914d\u7f6e\u9700\u8981\u7684\u53c2\u6570 <pre><code>[wsl2]\nmemory=16GB\nswap=10GB\nswapfile=D:\\\\ubuntu2004\\\\wsl-swap.vhdx\nnestedVirtualization=true\n</code></pre> \u66f4\u591a\u914d\u7f6e\u67e5\u770b\uff1a</p> <p>https://learn.microsoft.com/en-us/windows/wsl/wsl-config#wslconfig</p> <p>\u91ca\u653e\u7a7a\u95f4\uff1a <pre><code>wsl --shutdown\ndiskpart\nselect vdisk file=\"D:\\ubuntu2204\\ext4.vhdx\"\nattach vdisk readonly\ncompact vdisk\ndetach vdisk\nexit\n</code></pre> \u6620\u5c04window\u78c1\u76d8\uff0c\u6587\u4ef6\u7ba1\u7406\u5668\u8f93\u5165 <pre><code>\\\\wsl$\n</code></pre> \u540e\u56de\u8f66\uff0c\u53f3\u952e\u6dfb\u52a0\u6620\u5c04\u7f51\u7edc\u9a71\u52a8\u5668 </p>"}]}